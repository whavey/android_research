public final class androidx.print.PrintHelper extends java.lang.Object
{
    public static final int COLOR_MODE_COLOR;
    public static final int COLOR_MODE_MONOCHROME;
    static final boolean IS_MIN_MARGINS_HANDLING_CORRECT;
    private static final java.lang.String LOG_TAG;
    private static final int MAX_PRINT_SIZE;
    public static final int ORIENTATION_LANDSCAPE;
    public static final int ORIENTATION_PORTRAIT;
    static final boolean PRINT_ACTIVITY_RESPECTS_ORIENTATION;
    public static final int SCALE_MODE_FILL;
    public static final int SCALE_MODE_FIT;
    int mColorMode;
    final android.content.Context mContext;
    android.graphics.BitmapFactory$Options mDecodeOptions;
    final java.lang.Object mLock;
    int mOrientation;
    int mScaleMode;

    static void <clinit>()
    {
        int $i0;
        boolean $z0, $z1;

        <androidx.print.PrintHelper: int SCALE_MODE_FIT> = 1;

        <androidx.print.PrintHelper: int SCALE_MODE_FILL> = 2;

        <androidx.print.PrintHelper: int ORIENTATION_PORTRAIT> = 2;

        <androidx.print.PrintHelper: int ORIENTATION_LANDSCAPE> = 1;

        <androidx.print.PrintHelper: int MAX_PRINT_SIZE> = 3500;

        <androidx.print.PrintHelper: java.lang.String LOG_TAG> = "PrintHelper";

        <androidx.print.PrintHelper: int COLOR_MODE_MONOCHROME> = 1;

        <androidx.print.PrintHelper: int COLOR_MODE_COLOR> = 2;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        $z0 = 0;

        if $i0 < 20 goto label2;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 <= 23 goto label1;

        goto label2;

     label1:
        $z1 = 0;

        goto label3;

     label2:
        $z1 = 1;

     label3:
        <androidx.print.PrintHelper: boolean PRINT_ACTIVITY_RESPECTS_ORIENTATION> = $z1;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 == 23 goto label4;

        $z0 = 1;

     label4:
        <androidx.print.PrintHelper: boolean IS_MIN_MARGINS_HANDLING_CORRECT> = $z0;

        return;
    }

    public void <init>(android.content.Context)
    {
        androidx.print.PrintHelper $r0;
        android.content.Context $r1;
        java.lang.Object $r2;

        $r0 := @this: androidx.print.PrintHelper;

        $r1 := @parameter0: android.content.Context;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<androidx.print.PrintHelper: android.graphics.BitmapFactory$Options mDecodeOptions> = null;

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        $r0.<androidx.print.PrintHelper: java.lang.Object mLock> = $r2;

        $r0.<androidx.print.PrintHelper: int mScaleMode> = 2;

        $r0.<androidx.print.PrintHelper: int mColorMode> = 2;

        $r0.<androidx.print.PrintHelper: int mOrientation> = 1;

        $r0.<androidx.print.PrintHelper: android.content.Context mContext> = $r1;

        return;
    }

    static android.graphics.Bitmap convertBitmapForColorMode(android.graphics.Bitmap, int)
    {
        android.graphics.Bitmap $r0, $r4;
        int $i0, $i1;
        android.graphics.ColorMatrix $r1;
        android.graphics.ColorMatrixColorFilter $r2;
        android.graphics.Bitmap$Config $r3;
        android.graphics.Canvas $r5;
        android.graphics.Paint $r6;

        $r0 := @parameter0: android.graphics.Bitmap;

        $i0 := @parameter1: int;

        if $i0 == 1 goto label1;

        return $r0;

     label1:
        $i0 = virtualinvoke $r0.<android.graphics.Bitmap: int getWidth()>();

        $i1 = virtualinvoke $r0.<android.graphics.Bitmap: int getHeight()>();

        $r3 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        $r4 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>($i0, $i1, $r3);

        $r5 = new android.graphics.Canvas;

        specialinvoke $r5.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>($r4);

        $r6 = new android.graphics.Paint;

        specialinvoke $r6.<android.graphics.Paint: void <init>()>();

        $r1 = new android.graphics.ColorMatrix;

        specialinvoke $r1.<android.graphics.ColorMatrix: void <init>()>();

        virtualinvoke $r1.<android.graphics.ColorMatrix: void setSaturation(float)>(0.0F);

        $r2 = new android.graphics.ColorMatrixColorFilter;

        specialinvoke $r2.<android.graphics.ColorMatrixColorFilter: void <init>(android.graphics.ColorMatrix)>($r1);

        virtualinvoke $r6.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>($r2);

        virtualinvoke $r5.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>($r0, 0.0F, 0.0F, $r6);

        virtualinvoke $r5.<android.graphics.Canvas: void setBitmap(android.graphics.Bitmap)>(null);

        return $r4;
    }

    private static android.print.PrintAttributes$Builder copyAttributes(android.print.PrintAttributes)
    {
        android.print.PrintAttributes $r0;
        android.print.PrintAttributes$Builder $r1;
        android.print.PrintAttributes$MediaSize $r2;
        android.print.PrintAttributes$Resolution $r3;
        android.print.PrintAttributes$Margins $r4;
        int $i0;

        $r0 := @parameter0: android.print.PrintAttributes;

        $r1 = new android.print.PrintAttributes$Builder;

        specialinvoke $r1.<android.print.PrintAttributes$Builder: void <init>()>();

        $r2 = virtualinvoke $r0.<android.print.PrintAttributes: android.print.PrintAttributes$MediaSize getMediaSize()>();

        $r1 = virtualinvoke $r1.<android.print.PrintAttributes$Builder: android.print.PrintAttributes$Builder setMediaSize(android.print.PrintAttributes$MediaSize)>($r2);

        $r3 = virtualinvoke $r0.<android.print.PrintAttributes: android.print.PrintAttributes$Resolution getResolution()>();

        $r1 = virtualinvoke $r1.<android.print.PrintAttributes$Builder: android.print.PrintAttributes$Builder setResolution(android.print.PrintAttributes$Resolution)>($r3);

        $r4 = virtualinvoke $r0.<android.print.PrintAttributes: android.print.PrintAttributes$Margins getMinMargins()>();

        $r1 = virtualinvoke $r1.<android.print.PrintAttributes$Builder: android.print.PrintAttributes$Builder setMinMargins(android.print.PrintAttributes$Margins)>($r4);

        $i0 = virtualinvoke $r0.<android.print.PrintAttributes: int getColorMode()>();

        if $i0 == 0 goto label1;

        $i0 = virtualinvoke $r0.<android.print.PrintAttributes: int getColorMode()>();

        virtualinvoke $r1.<android.print.PrintAttributes$Builder: android.print.PrintAttributes$Builder setColorMode(int)>($i0);

     label1:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 23 goto label2;

        $i0 = virtualinvoke $r0.<android.print.PrintAttributes: int getDuplexMode()>();

        if $i0 == 0 goto label2;

        $i0 = virtualinvoke $r0.<android.print.PrintAttributes: int getDuplexMode()>();

        virtualinvoke $r1.<android.print.PrintAttributes$Builder: android.print.PrintAttributes$Builder setDuplexMode(int)>($i0);

     label2:
        return $r1;
    }

    static android.graphics.Matrix getMatrix(int, int, android.graphics.RectF, int)
    {
        int $i0, $i1, $i2;
        android.graphics.RectF $r0;
        android.graphics.Matrix $r1;
        float $f0, $f1, $f2, $f3;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r0 := @parameter2: android.graphics.RectF;

        $i2 := @parameter3: int;

        $r1 = new android.graphics.Matrix;

        specialinvoke $r1.<android.graphics.Matrix: void <init>()>();

        $f0 = virtualinvoke $r0.<android.graphics.RectF: float width()>();

        $f1 = (float) $i0;

        $f0 = $f0 / $f1;

        if $i2 != 2 goto label1;

        $f1 = virtualinvoke $r0.<android.graphics.RectF: float height()>();

        $f2 = (float) $i1;

        $f1 = $f1 / $f2;

        $f0 = staticinvoke <java.lang.Math: float max(float,float)>($f0, $f1);

        goto label2;

     label1:
        $f1 = virtualinvoke $r0.<android.graphics.RectF: float height()>();

        $f2 = (float) $i1;

        $f1 = $f1 / $f2;

        $f0 = staticinvoke <java.lang.Math: float min(float,float)>($f0, $f1);

     label2:
        virtualinvoke $r1.<android.graphics.Matrix: boolean postScale(float,float)>($f0, $f0);

        $f1 = virtualinvoke $r0.<android.graphics.RectF: float width()>();

        $f2 = (float) $i0;

        $f2 = $f2 * $f0;

        $f1 = $f1 - $f2;

        $f1 = $f1 / 2.0F;

        $f2 = virtualinvoke $r0.<android.graphics.RectF: float height()>();

        $f3 = (float) $i1;

        $f0 = $f3 * $f0;

        $f0 = $f2 - $f0;

        $f0 = $f0 / 2.0F;

        virtualinvoke $r1.<android.graphics.Matrix: boolean postTranslate(float,float)>($f1, $f0);

        return $r1;
    }

    static boolean isPortrait(android.graphics.Bitmap)
    {
        android.graphics.Bitmap $r0;
        int $i0, $i1;

        $r0 := @parameter0: android.graphics.Bitmap;

        $i0 = virtualinvoke $r0.<android.graphics.Bitmap: int getWidth()>();

        $i1 = virtualinvoke $r0.<android.graphics.Bitmap: int getHeight()>();

        if $i0 > $i1 goto label1;

        return 1;

     label1:
        return 0;
    }

    private android.graphics.Bitmap loadBitmap(android.net.Uri, android.graphics.BitmapFactory$Options) throws java.io.FileNotFoundException
    {
        androidx.print.PrintHelper $r0;
        android.net.Uri $r1;
        android.graphics.BitmapFactory$Options $r2;
        android.content.Context $r3;
        java.io.InputStream $r4, $r6;
        android.content.ContentResolver $r5;
        android.graphics.Bitmap $r7;
        java.lang.Throwable $r8, $r9, $r10;
        java.lang.IllegalArgumentException $r11;

        $r0 := @this: androidx.print.PrintHelper;

        $r1 := @parameter0: android.net.Uri;

        $r2 := @parameter1: android.graphics.BitmapFactory$Options;

        if $r1 == null goto label13;

        $r3 = $r0.<androidx.print.PrintHelper: android.content.Context mContext>;

        if $r3 == null goto label13;

        $r4 = null;

     label01:
        $r5 = virtualinvoke $r3.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r6 = virtualinvoke $r5.<android.content.ContentResolver: java.io.InputStream openInputStream(android.net.Uri)>($r1);

     label02:
        $r4 = $r6;

     label03:
        $r7 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>($r6, null, $r2);

     label04:
        if $r6 == null goto label14;

     label05:
        virtualinvoke $r6.<java.io.InputStream: void close()>();

     label06:
        return $r7;

     label07:
        $r8 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("PrintHelper", "close fail ", $r8);

        return $r7;

     label08:
        $r9 := @caughtexception;

        if $r4 == null goto label12;

     label09:
        virtualinvoke $r4.<java.io.InputStream: void close()>();

     label10:
        goto label12;

     label11:
        $r10 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("PrintHelper", "close fail ", $r10);

     label12:
        throw $r9;

     label13:
        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("bad argument to loadBitmap");

        throw $r11;

     label14:
        return $r7;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.io.IOException from label05 to label06 with label07;
        catch java.io.IOException from label09 to label10 with label11;
    }

    public static boolean systemSupportsPrint()
    {
        int $i0;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 19 goto label1;

        return 1;

     label1:
        return 0;
    }

    public int getColorMode()
    {
        androidx.print.PrintHelper $r0;
        int i0;

        $r0 := @this: androidx.print.PrintHelper;

        i0 = $r0.<androidx.print.PrintHelper: int mColorMode>;

        return i0;
    }

    public int getOrientation()
    {
        androidx.print.PrintHelper $r0;
        int $i0;

        $r0 := @this: androidx.print.PrintHelper;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 19 goto label1;

        $i0 = $r0.<androidx.print.PrintHelper: int mOrientation>;

        if $i0 != 0 goto label1;

        return 1;

     label1:
        $i0 = $r0.<androidx.print.PrintHelper: int mOrientation>;

        return $i0;
    }

    public int getScaleMode()
    {
        androidx.print.PrintHelper $r0;
        int i0;

        $r0 := @this: androidx.print.PrintHelper;

        i0 = $r0.<androidx.print.PrintHelper: int mScaleMode>;

        return i0;
    }

    android.graphics.Bitmap loadConstrainedBitmap(android.net.Uri) throws java.io.FileNotFoundException
    {
        androidx.print.PrintHelper $r0;
        android.net.Uri $r1;
        int $i0, $i1, $i2, $i3;
        android.content.Context $r2;
        android.graphics.BitmapFactory$Options $r3;
        java.lang.Object $r4;
        android.graphics.Bitmap $r5;
        java.lang.Throwable $r6, $r7, $r8, $r9, $r10;
        java.lang.IllegalArgumentException $r11;

        $r0 := @this: androidx.print.PrintHelper;

        $r1 := @parameter0: android.net.Uri;

        if $r1 == null goto label25;

        $r2 = $r0.<androidx.print.PrintHelper: android.content.Context mContext>;

        if $r2 == null goto label25;

        $r3 = new android.graphics.BitmapFactory$Options;

        specialinvoke $r3.<android.graphics.BitmapFactory$Options: void <init>()>();

        $r3.<android.graphics.BitmapFactory$Options: boolean inJustDecodeBounds> = 1;

        specialinvoke $r0.<androidx.print.PrintHelper: android.graphics.Bitmap loadBitmap(android.net.Uri,android.graphics.BitmapFactory$Options)>($r1, $r3);

        $i0 = $r3.<android.graphics.BitmapFactory$Options: int outWidth>;

        $i1 = $r3.<android.graphics.BitmapFactory$Options: int outHeight>;

        if $i0 <= 0 goto label24;

        if $i1 > 0 goto label01;

        return null;

     label01:
        $i3 = staticinvoke <java.lang.Math: int max(int,int)>($i0, $i1);

        $i2 = 1;

     label02:
        if $i3 <= 3500 goto label03;

        $i3 = $i3 >>> 1;

        $i2 = $i2 << 1;

        goto label02;

     label03:
        if $i2 <= 0 goto label24;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        $i0 = $i0 / $i2;

        if $i0 > 0 goto label04;

        return null;

     label04:
        $r4 = $r0.<androidx.print.PrintHelper: java.lang.Object mLock>;

        entermonitor $r4;

     label05:
        $r3 = new android.graphics.BitmapFactory$Options;

        specialinvoke $r3.<android.graphics.BitmapFactory$Options: void <init>()>();

        $r0.<androidx.print.PrintHelper: android.graphics.BitmapFactory$Options mDecodeOptions> = $r3;

        $r3 = $r0.<androidx.print.PrintHelper: android.graphics.BitmapFactory$Options mDecodeOptions>;

        $r3.<android.graphics.BitmapFactory$Options: boolean inMutable> = 1;

        $r3 = $r0.<androidx.print.PrintHelper: android.graphics.BitmapFactory$Options mDecodeOptions>;

        $r3.<android.graphics.BitmapFactory$Options: int inSampleSize> = $i2;

        $r3 = $r0.<androidx.print.PrintHelper: android.graphics.BitmapFactory$Options mDecodeOptions>;

     label06:
        exitmonitor $r4;

     label07:
        $r5 = specialinvoke $r0.<androidx.print.PrintHelper: android.graphics.Bitmap loadBitmap(android.net.Uri,android.graphics.BitmapFactory$Options)>($r1, $r3);

     label08:
        $r4 = $r0.<androidx.print.PrintHelper: java.lang.Object mLock>;

        entermonitor $r4;

     label09:
        $r0.<androidx.print.PrintHelper: android.graphics.BitmapFactory$Options mDecodeOptions> = null;

        exitmonitor $r4;

     label10:
        return $r5;

     label11:
        $r6 := @caughtexception;

        exitmonitor $r4;

     label12:
        throw $r6;

     label13:
        $r7 := @caughtexception;

        $r4 = $r0.<androidx.print.PrintHelper: java.lang.Object mLock>;

        entermonitor $r4;

     label14:
        $r0.<androidx.print.PrintHelper: android.graphics.BitmapFactory$Options mDecodeOptions> = null;

        exitmonitor $r4;

     label15:
        throw $r7;

     label16:
        $r8 := @caughtexception;

     label17:
        exitmonitor $r4;

     label18:
        throw $r8;

     label19:
        $r9 := @caughtexception;

        $r10 = $r9;

        goto label21;

     label20:
        $r10 := @caughtexception;

     label21:
        exitmonitor $r4;

     label22:
        throw $r10;

     label23:
        $r10 := @caughtexception;

        goto label21;

     label24:
        return null;

     label25:
        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("bad argument to getScaledBitmap");

        throw $r11;

        catch java.lang.Throwable from label05 to label06 with label20;
        catch java.lang.Throwable from label06 to label07 with label19;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label17 to label18 with label16;
        catch java.lang.Throwable from label21 to label22 with label23;
    }

    public void printBitmap(java.lang.String, android.graphics.Bitmap)
    {
        androidx.print.PrintHelper $r0;
        java.lang.String $r1;
        android.graphics.Bitmap $r2;

        $r0 := @this: androidx.print.PrintHelper;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.graphics.Bitmap;

        virtualinvoke $r0.<androidx.print.PrintHelper: void printBitmap(java.lang.String,android.graphics.Bitmap,androidx.print.PrintHelper$OnPrintFinishCallback)>($r1, $r2, null);

        return;
    }

    public void printBitmap(java.lang.String, android.graphics.Bitmap, androidx.print.PrintHelper$OnPrintFinishCallback)
    {
        androidx.print.PrintHelper $r0;
        java.lang.String $r1;
        android.graphics.Bitmap $r2;
        androidx.print.PrintHelper$OnPrintFinishCallback $r3;
        int $i0;
        androidx.print.PrintHelper$PrintBitmapAdapter $r4;
        android.content.Context $r5;
        java.lang.Object $r6;
        android.print.PrintManager $r7;
        boolean $z0;
        android.print.PrintAttributes$MediaSize $r8;
        android.print.PrintAttributes$Builder $r9;
        android.print.PrintAttributes $r10;

        $r0 := @this: androidx.print.PrintHelper;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.graphics.Bitmap;

        $r3 := @parameter2: androidx.print.PrintHelper$OnPrintFinishCallback;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 19 goto label4;

        if $r2 != null goto label1;

        return;

     label1:
        $r5 = $r0.<androidx.print.PrintHelper: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("print");

        $r7 = (android.print.PrintManager) $r6;

        $z0 = staticinvoke <androidx.print.PrintHelper: boolean isPortrait(android.graphics.Bitmap)>($r2);

        if $z0 == 0 goto label2;

        $r8 = <android.print.PrintAttributes$MediaSize: android.print.PrintAttributes$MediaSize UNKNOWN_PORTRAIT>;

        goto label3;

     label2:
        $r8 = <android.print.PrintAttributes$MediaSize: android.print.PrintAttributes$MediaSize UNKNOWN_LANDSCAPE>;

     label3:
        $r9 = new android.print.PrintAttributes$Builder;

        specialinvoke $r9.<android.print.PrintAttributes$Builder: void <init>()>();

        $r9 = virtualinvoke $r9.<android.print.PrintAttributes$Builder: android.print.PrintAttributes$Builder setMediaSize(android.print.PrintAttributes$MediaSize)>($r8);

        $i0 = $r0.<androidx.print.PrintHelper: int mColorMode>;

        $r9 = virtualinvoke $r9.<android.print.PrintAttributes$Builder: android.print.PrintAttributes$Builder setColorMode(int)>($i0);

        $r10 = virtualinvoke $r9.<android.print.PrintAttributes$Builder: android.print.PrintAttributes build()>();

        $r4 = new androidx.print.PrintHelper$PrintBitmapAdapter;

        $i0 = $r0.<androidx.print.PrintHelper: int mScaleMode>;

        specialinvoke $r4.<androidx.print.PrintHelper$PrintBitmapAdapter: void <init>(androidx.print.PrintHelper,java.lang.String,int,android.graphics.Bitmap,androidx.print.PrintHelper$OnPrintFinishCallback)>($r0, $r1, $i0, $r2, $r3);

        virtualinvoke $r7.<android.print.PrintManager: android.print.PrintJob print(java.lang.String,android.print.PrintDocumentAdapter,android.print.PrintAttributes)>($r1, $r4, $r10);

     label4:
        return;
    }

    public void printBitmap(java.lang.String, android.net.Uri) throws java.io.FileNotFoundException
    {
        androidx.print.PrintHelper $r0;
        java.lang.String $r1;
        android.net.Uri $r2;

        $r0 := @this: androidx.print.PrintHelper;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.net.Uri;

        virtualinvoke $r0.<androidx.print.PrintHelper: void printBitmap(java.lang.String,android.net.Uri,androidx.print.PrintHelper$OnPrintFinishCallback)>($r1, $r2, null);

        return;
    }

    public void printBitmap(java.lang.String, android.net.Uri, androidx.print.PrintHelper$OnPrintFinishCallback) throws java.io.FileNotFoundException
    {
        androidx.print.PrintHelper $r0;
        java.lang.String $r1;
        android.net.Uri $r2;
        androidx.print.PrintHelper$OnPrintFinishCallback $r3;
        int $i0;
        androidx.print.PrintHelper$PrintUriAdapter $r4;
        android.content.Context $r5;
        java.lang.Object $r6;
        android.print.PrintManager $r7;
        android.print.PrintAttributes$Builder $r8;
        android.print.PrintAttributes$MediaSize $r9;
        android.print.PrintAttributes $r10;

        $r0 := @this: androidx.print.PrintHelper;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.net.Uri;

        $r3 := @parameter2: androidx.print.PrintHelper$OnPrintFinishCallback;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 19 goto label1;

        return;

     label1:
        $r4 = new androidx.print.PrintHelper$PrintUriAdapter;

        $i0 = $r0.<androidx.print.PrintHelper: int mScaleMode>;

        specialinvoke $r4.<androidx.print.PrintHelper$PrintUriAdapter: void <init>(androidx.print.PrintHelper,java.lang.String,android.net.Uri,androidx.print.PrintHelper$OnPrintFinishCallback,int)>($r0, $r1, $r2, $r3, $i0);

        $r5 = $r0.<androidx.print.PrintHelper: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("print");

        $r7 = (android.print.PrintManager) $r6;

        $r8 = new android.print.PrintAttributes$Builder;

        specialinvoke $r8.<android.print.PrintAttributes$Builder: void <init>()>();

        $i0 = $r0.<androidx.print.PrintHelper: int mColorMode>;

        virtualinvoke $r8.<android.print.PrintAttributes$Builder: android.print.PrintAttributes$Builder setColorMode(int)>($i0);

        $i0 = $r0.<androidx.print.PrintHelper: int mOrientation>;

        if $i0 == 1 goto label3;

        if $i0 != 0 goto label2;

        goto label3;

     label2:
        if $i0 != 2 goto label4;

        $r9 = <android.print.PrintAttributes$MediaSize: android.print.PrintAttributes$MediaSize UNKNOWN_PORTRAIT>;

        virtualinvoke $r8.<android.print.PrintAttributes$Builder: android.print.PrintAttributes$Builder setMediaSize(android.print.PrintAttributes$MediaSize)>($r9);

        goto label4;

     label3:
        $r9 = <android.print.PrintAttributes$MediaSize: android.print.PrintAttributes$MediaSize UNKNOWN_LANDSCAPE>;

        virtualinvoke $r8.<android.print.PrintAttributes$Builder: android.print.PrintAttributes$Builder setMediaSize(android.print.PrintAttributes$MediaSize)>($r9);

     label4:
        $r10 = virtualinvoke $r8.<android.print.PrintAttributes$Builder: android.print.PrintAttributes build()>();

        virtualinvoke $r7.<android.print.PrintManager: android.print.PrintJob print(java.lang.String,android.print.PrintDocumentAdapter,android.print.PrintAttributes)>($r1, $r4, $r10);

        return;
    }

    public void setColorMode(int)
    {
        androidx.print.PrintHelper $r0;
        int $i0;

        $r0 := @this: androidx.print.PrintHelper;

        $i0 := @parameter0: int;

        $r0.<androidx.print.PrintHelper: int mColorMode> = $i0;

        return;
    }

    public void setOrientation(int)
    {
        androidx.print.PrintHelper $r0;
        int $i0;

        $r0 := @this: androidx.print.PrintHelper;

        $i0 := @parameter0: int;

        $r0.<androidx.print.PrintHelper: int mOrientation> = $i0;

        return;
    }

    public void setScaleMode(int)
    {
        androidx.print.PrintHelper $r0;
        int $i0;

        $r0 := @this: androidx.print.PrintHelper;

        $i0 := @parameter0: int;

        $r0.<androidx.print.PrintHelper: int mScaleMode> = $i0;

        return;
    }

    void writeBitmap(android.print.PrintAttributes, int, android.graphics.Bitmap, android.os.ParcelFileDescriptor, android.os.CancellationSignal, android.print.PrintDocumentAdapter$WriteResultCallback)
    {
        androidx.print.PrintHelper $r0;
        android.print.PrintAttributes $r1, $r7;
        int $i0;
        android.graphics.Bitmap $r2;
        android.os.ParcelFileDescriptor $r3;
        android.os.CancellationSignal $r4;
        android.print.PrintDocumentAdapter$WriteResultCallback $r5;
        androidx.print.PrintHelper$1 $r6;
        boolean $z0;
        android.print.PrintAttributes$Builder $r8;
        android.print.PrintAttributes$Margins $r9;
        java.lang.Void[] $r10;

        $r0 := @this: androidx.print.PrintHelper;

        $r1 := @parameter0: android.print.PrintAttributes;

        $i0 := @parameter1: int;

        $r2 := @parameter2: android.graphics.Bitmap;

        $r3 := @parameter3: android.os.ParcelFileDescriptor;

        $r4 := @parameter4: android.os.CancellationSignal;

        $r5 := @parameter5: android.print.PrintDocumentAdapter$WriteResultCallback;

        $z0 = <androidx.print.PrintHelper: boolean IS_MIN_MARGINS_HANDLING_CORRECT>;

        if $z0 == 0 goto label1;

        $r7 = $r1;

        goto label2;

     label1:
        $r8 = staticinvoke <androidx.print.PrintHelper: android.print.PrintAttributes$Builder copyAttributes(android.print.PrintAttributes)>($r1);

        $r9 = new android.print.PrintAttributes$Margins;

        specialinvoke $r9.<android.print.PrintAttributes$Margins: void <init>(int,int,int,int)>(0, 0, 0, 0);

        $r8 = virtualinvoke $r8.<android.print.PrintAttributes$Builder: android.print.PrintAttributes$Builder setMinMargins(android.print.PrintAttributes$Margins)>($r9);

        $r7 = virtualinvoke $r8.<android.print.PrintAttributes$Builder: android.print.PrintAttributes build()>();

     label2:
        $r6 = new androidx.print.PrintHelper$1;

        specialinvoke $r6.<androidx.print.PrintHelper$1: void <init>(androidx.print.PrintHelper,android.os.CancellationSignal,android.print.PrintAttributes,android.graphics.Bitmap,android.print.PrintAttributes,int,android.os.ParcelFileDescriptor,android.print.PrintDocumentAdapter$WriteResultCallback)>($r0, $r4, $r7, $r2, $r1, $i0, $r3, $r5);

        $r10 = newarray (java.lang.Void)[0];

        virtualinvoke $r6.<androidx.print.PrintHelper$1: android.os.AsyncTask execute(java.lang.Object[])>($r10);

        return;
    }
}
