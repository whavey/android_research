public class androidx.constraintlayout.solver.SolverVariable extends java.lang.Object
{
    private static final boolean INTERNAL_DEBUG;
    static final int MAX_STRENGTH;
    public static final int STRENGTH_BARRIER;
    public static final int STRENGTH_EQUALITY;
    public static final int STRENGTH_FIXED;
    public static final int STRENGTH_HIGH;
    public static final int STRENGTH_HIGHEST;
    public static final int STRENGTH_LOW;
    public static final int STRENGTH_MEDIUM;
    public static final int STRENGTH_NONE;
    private static int uniqueConstantId;
    private static int uniqueErrorId;
    private static int uniqueId;
    private static int uniqueSlackId;
    private static int uniqueUnrestrictedId;
    public float computedValue;
    int definitionId;
    public int id;
    androidx.constraintlayout.solver.ArrayRow[] mClientEquations;
    int mClientEquationsCount;
    private java.lang.String mName;
    androidx.constraintlayout.solver.SolverVariable$Type mType;
    public int strength;
    float[] strengthVector;
    public int usageInRowCount;

    static void <clinit>()
    {
        <androidx.constraintlayout.solver.SolverVariable: int STRENGTH_MEDIUM> = 2;

        <androidx.constraintlayout.solver.SolverVariable: int STRENGTH_LOW> = 1;

        <androidx.constraintlayout.solver.SolverVariable: int STRENGTH_HIGHEST> = 4;

        <androidx.constraintlayout.solver.SolverVariable: int STRENGTH_HIGH> = 3;

        <androidx.constraintlayout.solver.SolverVariable: int STRENGTH_FIXED> = 6;

        <androidx.constraintlayout.solver.SolverVariable: int STRENGTH_EQUALITY> = 5;

        <androidx.constraintlayout.solver.SolverVariable: int STRENGTH_BARRIER> = 7;

        <androidx.constraintlayout.solver.SolverVariable: int MAX_STRENGTH> = 7;

        <androidx.constraintlayout.solver.SolverVariable: boolean INTERNAL_DEBUG> = 0;

        <androidx.constraintlayout.solver.SolverVariable: int uniqueSlackId> = 1;

        <androidx.constraintlayout.solver.SolverVariable: int uniqueErrorId> = 1;

        <androidx.constraintlayout.solver.SolverVariable: int uniqueUnrestrictedId> = 1;

        <androidx.constraintlayout.solver.SolverVariable: int uniqueConstantId> = 1;

        <androidx.constraintlayout.solver.SolverVariable: int uniqueId> = 1;

        return;
    }

    public void <init>(androidx.constraintlayout.solver.SolverVariable$Type, java.lang.String)
    {
        androidx.constraintlayout.solver.SolverVariable $r0;
        androidx.constraintlayout.solver.SolverVariable$Type $r1;
        java.lang.String $r2;
        float[] $r3;
        androidx.constraintlayout.solver.ArrayRow[] $r4;

        $r0 := @this: androidx.constraintlayout.solver.SolverVariable;

        $r1 := @parameter0: androidx.constraintlayout.solver.SolverVariable$Type;

        $r2 := @parameter1: java.lang.String;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<androidx.constraintlayout.solver.SolverVariable: int id> = -1;

        $r0.<androidx.constraintlayout.solver.SolverVariable: int definitionId> = -1;

        $r0.<androidx.constraintlayout.solver.SolverVariable: int strength> = 0;

        $r3 = newarray (float)[7];

        $r0.<androidx.constraintlayout.solver.SolverVariable: float[] strengthVector> = $r3;

        $r4 = newarray (androidx.constraintlayout.solver.ArrayRow)[8];

        $r0.<androidx.constraintlayout.solver.SolverVariable: androidx.constraintlayout.solver.ArrayRow[] mClientEquations> = $r4;

        $r0.<androidx.constraintlayout.solver.SolverVariable: int mClientEquationsCount> = 0;

        $r0.<androidx.constraintlayout.solver.SolverVariable: int usageInRowCount> = 0;

        $r0.<androidx.constraintlayout.solver.SolverVariable: androidx.constraintlayout.solver.SolverVariable$Type mType> = $r1;

        return;
    }

    public void <init>(java.lang.String, androidx.constraintlayout.solver.SolverVariable$Type)
    {
        androidx.constraintlayout.solver.SolverVariable $r0;
        java.lang.String $r1;
        androidx.constraintlayout.solver.SolverVariable$Type $r2;
        float[] $r3;
        androidx.constraintlayout.solver.ArrayRow[] $r4;

        $r0 := @this: androidx.constraintlayout.solver.SolverVariable;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: androidx.constraintlayout.solver.SolverVariable$Type;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<androidx.constraintlayout.solver.SolverVariable: int id> = -1;

        $r0.<androidx.constraintlayout.solver.SolverVariable: int definitionId> = -1;

        $r0.<androidx.constraintlayout.solver.SolverVariable: int strength> = 0;

        $r3 = newarray (float)[7];

        $r0.<androidx.constraintlayout.solver.SolverVariable: float[] strengthVector> = $r3;

        $r4 = newarray (androidx.constraintlayout.solver.ArrayRow)[8];

        $r0.<androidx.constraintlayout.solver.SolverVariable: androidx.constraintlayout.solver.ArrayRow[] mClientEquations> = $r4;

        $r0.<androidx.constraintlayout.solver.SolverVariable: int mClientEquationsCount> = 0;

        $r0.<androidx.constraintlayout.solver.SolverVariable: int usageInRowCount> = 0;

        $r0.<androidx.constraintlayout.solver.SolverVariable: java.lang.String mName> = $r1;

        $r0.<androidx.constraintlayout.solver.SolverVariable: androidx.constraintlayout.solver.SolverVariable$Type mType> = $r2;

        return;
    }

    private static java.lang.String getUniqueName(androidx.constraintlayout.solver.SolverVariable$Type, java.lang.String)
    {
        androidx.constraintlayout.solver.SolverVariable$Type $r0;
        java.lang.String $r1;
        java.lang.StringBuilder $r2;
        int $i0;
        int[] $r3;
        java.lang.AssertionError $r4;

        $r0 := @parameter0: androidx.constraintlayout.solver.SolverVariable$Type;

        $r1 := @parameter1: java.lang.String;

        if $r1 == null goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $i0 = <androidx.constraintlayout.solver.SolverVariable: int uniqueErrorId>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;

     label1:
        $r3 = <androidx.constraintlayout.solver.SolverVariable$1: int[] $SwitchMap$androidx$constraintlayout$solver$SolverVariable$Type>;

        $i0 = virtualinvoke $r0.<androidx.constraintlayout.solver.SolverVariable$Type: int ordinal()>();

        $i0 = $r3[$i0];

        if $i0 == 1 goto label6;

        if $i0 == 2 goto label5;

        if $i0 == 3 goto label4;

        if $i0 == 4 goto label3;

        if $i0 != 5 goto label2;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("V");

        $i0 = <androidx.constraintlayout.solver.SolverVariable: int uniqueId>;

        $i0 = $i0 + 1;

        <androidx.constraintlayout.solver.SolverVariable: int uniqueId> = $i0;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;

     label2:
        $r4 = new java.lang.AssertionError;

        $r1 = virtualinvoke $r0.<androidx.constraintlayout.solver.SolverVariable$Type: java.lang.String name()>();

        specialinvoke $r4.<java.lang.AssertionError: void <init>(java.lang.Object)>($r1);

        throw $r4;

     label3:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("e");

        $i0 = <androidx.constraintlayout.solver.SolverVariable: int uniqueErrorId>;

        $i0 = $i0 + 1;

        <androidx.constraintlayout.solver.SolverVariable: int uniqueErrorId> = $i0;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;

     label4:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("S");

        $i0 = <androidx.constraintlayout.solver.SolverVariable: int uniqueSlackId>;

        $i0 = $i0 + 1;

        <androidx.constraintlayout.solver.SolverVariable: int uniqueSlackId> = $i0;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;

     label5:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("C");

        $i0 = <androidx.constraintlayout.solver.SolverVariable: int uniqueConstantId>;

        $i0 = $i0 + 1;

        <androidx.constraintlayout.solver.SolverVariable: int uniqueConstantId> = $i0;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;

     label6:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("U");

        $i0 = <androidx.constraintlayout.solver.SolverVariable: int uniqueUnrestrictedId>;

        $i0 = $i0 + 1;

        <androidx.constraintlayout.solver.SolverVariable: int uniqueUnrestrictedId> = $i0;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }

    static void increaseErrorId()
    {
        int $i0;

        $i0 = <androidx.constraintlayout.solver.SolverVariable: int uniqueErrorId>;

        $i0 = $i0 + 1;

        <androidx.constraintlayout.solver.SolverVariable: int uniqueErrorId> = $i0;

        return;
    }

    public final void addToRow(androidx.constraintlayout.solver.ArrayRow)
    {
        androidx.constraintlayout.solver.SolverVariable $r0;
        androidx.constraintlayout.solver.ArrayRow $r1, $r4;
        int $i0, $i1;
        java.lang.Object[] $r2;
        androidx.constraintlayout.solver.ArrayRow[] $r3;

        $r0 := @this: androidx.constraintlayout.solver.SolverVariable;

        $r1 := @parameter0: androidx.constraintlayout.solver.ArrayRow;

        $i0 = 0;

     label1:
        $i1 = $r0.<androidx.constraintlayout.solver.SolverVariable: int mClientEquationsCount>;

        if $i0 >= $i1 goto label3;

        $r3 = $r0.<androidx.constraintlayout.solver.SolverVariable: androidx.constraintlayout.solver.ArrayRow[] mClientEquations>;

        $r4 = $r3[$i0];

        if $r4 != $r1 goto label2;

        return;

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        $r3 = $r0.<androidx.constraintlayout.solver.SolverVariable: androidx.constraintlayout.solver.ArrayRow[] mClientEquations>;

        $i0 = lengthof $r3;

        if $i1 < $i0 goto label4;

        $i1 = lengthof $r3;

        $i1 = $i1 * 2;

        $r2 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>($r3, $i1);

        $r3 = (androidx.constraintlayout.solver.ArrayRow[]) $r2;

        $r0.<androidx.constraintlayout.solver.SolverVariable: androidx.constraintlayout.solver.ArrayRow[] mClientEquations> = $r3;

     label4:
        $r3 = $r0.<androidx.constraintlayout.solver.SolverVariable: androidx.constraintlayout.solver.ArrayRow[] mClientEquations>;

        $i1 = $r0.<androidx.constraintlayout.solver.SolverVariable: int mClientEquationsCount>;

        $r3[$i1] = $r1;

        $i1 = $i1 + 1;

        $r0.<androidx.constraintlayout.solver.SolverVariable: int mClientEquationsCount> = $i1;

        return;
    }

    void clearStrengths()
    {
        androidx.constraintlayout.solver.SolverVariable $r0;
        int $i0;
        float[] $r1;

        $r0 := @this: androidx.constraintlayout.solver.SolverVariable;

        $i0 = 0;

     label1:
        if $i0 >= 7 goto label2;

        $r1 = $r0.<androidx.constraintlayout.solver.SolverVariable: float[] strengthVector>;

        $r1[$i0] = 0.0F;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return;
    }

    public java.lang.String getName()
    {
        androidx.constraintlayout.solver.SolverVariable $r0;
        java.lang.String r1;

        $r0 := @this: androidx.constraintlayout.solver.SolverVariable;

        r1 = $r0.<androidx.constraintlayout.solver.SolverVariable: java.lang.String mName>;

        return r1;
    }

    public final void removeFromRow(androidx.constraintlayout.solver.ArrayRow)
    {
        androidx.constraintlayout.solver.SolverVariable $r0;
        androidx.constraintlayout.solver.ArrayRow $r1, $r3;
        int $i0, $i1, $i2, $i3, $i4;
        androidx.constraintlayout.solver.ArrayRow[] $r2;

        $r0 := @this: androidx.constraintlayout.solver.SolverVariable;

        $r1 := @parameter0: androidx.constraintlayout.solver.ArrayRow;

        $i0 = $r0.<androidx.constraintlayout.solver.SolverVariable: int mClientEquationsCount>;

        $i2 = 0;

     label1:
        if $i2 >= $i0 goto label5;

        $r2 = $r0.<androidx.constraintlayout.solver.SolverVariable: androidx.constraintlayout.solver.ArrayRow[] mClientEquations>;

        $r3 = $r2[$i2];

        if $r3 != $r1 goto label4;

        $i3 = 0;

     label2:
        $i1 = $i0 - $i2;

        $i1 = $i1 + -1;

        if $i3 >= $i1 goto label3;

        $r2 = $r0.<androidx.constraintlayout.solver.SolverVariable: androidx.constraintlayout.solver.ArrayRow[] mClientEquations>;

        $i1 = $i2 + $i3;

        $i4 = $i2 + $i3;

        $i4 = $i4 + 1;

        $r1 = $r2[$i4];

        $r2[$i1] = $r1;

        $i3 = $i3 + 1;

        goto label2;

     label3:
        $i0 = $r0.<androidx.constraintlayout.solver.SolverVariable: int mClientEquationsCount>;

        $i0 = $i0 + -1;

        $r0.<androidx.constraintlayout.solver.SolverVariable: int mClientEquationsCount> = $i0;

        return;

     label4:
        $i2 = $i2 + 1;

        goto label1;

     label5:
        return;
    }

    public void reset()
    {
        androidx.constraintlayout.solver.SolverVariable $r0;
        androidx.constraintlayout.solver.SolverVariable$Type $r1;

        $r0 := @this: androidx.constraintlayout.solver.SolverVariable;

        $r0.<androidx.constraintlayout.solver.SolverVariable: java.lang.String mName> = null;

        $r1 = <androidx.constraintlayout.solver.SolverVariable$Type: androidx.constraintlayout.solver.SolverVariable$Type UNKNOWN>;

        $r0.<androidx.constraintlayout.solver.SolverVariable: androidx.constraintlayout.solver.SolverVariable$Type mType> = $r1;

        $r0.<androidx.constraintlayout.solver.SolverVariable: int strength> = 0;

        $r0.<androidx.constraintlayout.solver.SolverVariable: int id> = -1;

        $r0.<androidx.constraintlayout.solver.SolverVariable: int definitionId> = -1;

        $r0.<androidx.constraintlayout.solver.SolverVariable: float computedValue> = 0.0F;

        $r0.<androidx.constraintlayout.solver.SolverVariable: int mClientEquationsCount> = 0;

        $r0.<androidx.constraintlayout.solver.SolverVariable: int usageInRowCount> = 0;

        return;
    }

    public void setName(java.lang.String)
    {
        androidx.constraintlayout.solver.SolverVariable $r0;
        java.lang.String $r1;

        $r0 := @this: androidx.constraintlayout.solver.SolverVariable;

        $r1 := @parameter0: java.lang.String;

        $r0.<androidx.constraintlayout.solver.SolverVariable: java.lang.String mName> = $r1;

        return;
    }

    public void setType(androidx.constraintlayout.solver.SolverVariable$Type, java.lang.String)
    {
        androidx.constraintlayout.solver.SolverVariable $r0;
        androidx.constraintlayout.solver.SolverVariable$Type $r1;
        java.lang.String $r2;

        $r0 := @this: androidx.constraintlayout.solver.SolverVariable;

        $r1 := @parameter0: androidx.constraintlayout.solver.SolverVariable$Type;

        $r2 := @parameter1: java.lang.String;

        $r0.<androidx.constraintlayout.solver.SolverVariable: androidx.constraintlayout.solver.SolverVariable$Type mType> = $r1;

        return;
    }

    java.lang.String strengthsToString()
    {
        androidx.constraintlayout.solver.SolverVariable $r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        boolean $z0, $z1;
        int $i0, $i1;
        float[] $r3;
        float $f0;
        byte $b2;

        $r0 := @this: androidx.constraintlayout.solver.SolverVariable;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = 0;

        $z1 = 1;

        $i0 = 0;

     label1:
        $r3 = $r0.<androidx.constraintlayout.solver.SolverVariable: float[] strengthVector>;

        $i1 = lengthof $r3;

        if $i0 >= $i1 goto label7;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = $r0.<androidx.constraintlayout.solver.SolverVariable: float[] strengthVector>;

        $f0 = $r3[$i0];

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = $r0.<androidx.constraintlayout.solver.SolverVariable: float[] strengthVector>;

        $f0 = $r3[$i0];

        $b2 = $f0 cmpl 0.0F;

        if $b2 <= 0 goto label2;

        $z0 = 0;

        goto label3;

     label2:
        $f0 = $r3[$i0];

        $b2 = $f0 cmpg 0.0F;

        if $b2 >= 0 goto label3;

        $z0 = 1;

     label3:
        $r3 = $r0.<androidx.constraintlayout.solver.SolverVariable: float[] strengthVector>;

        $f0 = $r3[$i0];

        $b2 = $f0 cmpl 0.0F;

        if $b2 == 0 goto label4;

        $z1 = 0;

     label4:
        $r3 = $r0.<androidx.constraintlayout.solver.SolverVariable: float[] strengthVector>;

        $i1 = lengthof $r3;

        $i1 = $i1 + -1;

        if $i0 >= $i1 goto label5;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label6;

     label5:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] ");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

     label6:
        $i0 = $i0 + 1;

        goto label1;

     label7:
        if $z0 == 0 goto label8;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (-)");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

     label8:
        if $z1 == 0 goto label9;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (*)");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

     label9:
        return $r2;
    }

    public java.lang.String toString()
    {
        androidx.constraintlayout.solver.SolverVariable $r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        $r0 := @this: androidx.constraintlayout.solver.SolverVariable;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r2 = $r0.<androidx.constraintlayout.solver.SolverVariable: java.lang.String mName>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public final void updateReferencesWithNewDefinition(androidx.constraintlayout.solver.ArrayRow)
    {
        androidx.constraintlayout.solver.SolverVariable $r0;
        androidx.constraintlayout.solver.ArrayRow $r1, $r3;
        int $i0, $i1;
        androidx.constraintlayout.solver.ArrayRow[] $r2;
        androidx.constraintlayout.solver.ArrayLinkedVariables $r4;

        $r0 := @this: androidx.constraintlayout.solver.SolverVariable;

        $r1 := @parameter0: androidx.constraintlayout.solver.ArrayRow;

        $i0 = $r0.<androidx.constraintlayout.solver.SolverVariable: int mClientEquationsCount>;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r2 = $r0.<androidx.constraintlayout.solver.SolverVariable: androidx.constraintlayout.solver.ArrayRow[] mClientEquations>;

        $r3 = $r2[$i1];

        $r4 = $r3.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        $r2 = $r0.<androidx.constraintlayout.solver.SolverVariable: androidx.constraintlayout.solver.ArrayRow[] mClientEquations>;

        $r3 = $r2[$i1];

        virtualinvoke $r4.<androidx.constraintlayout.solver.ArrayLinkedVariables: void updateFromRow(androidx.constraintlayout.solver.ArrayRow,androidx.constraintlayout.solver.ArrayRow,boolean)>($r3, $r1, 0);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        $r0.<androidx.constraintlayout.solver.SolverVariable: int mClientEquationsCount> = 0;

        return;
    }
}
