abstract class androidx.vectordrawable.graphics.drawable.VectorDrawableCommon extends android.graphics.drawable.Drawable implements androidx.core.graphics.drawable.TintAwareDrawable
{
    android.graphics.drawable.Drawable mDelegateDrawable;

    void <init>()
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCommon $r0;

        $r0 := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCommon;

        specialinvoke $r0.<android.graphics.drawable.Drawable: void <init>()>();

        return;
    }

    public void applyTheme(android.content.res.Resources$Theme)
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCommon $r0;
        android.content.res.Resources$Theme $r1;
        android.graphics.drawable.Drawable $r2;

        $r0 := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCommon;

        $r1 := @parameter0: android.content.res.Resources$Theme;

        $r2 = $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable mDelegateDrawable>;

        if $r2 == null goto label1;

        staticinvoke <androidx.core.graphics.drawable.DrawableCompat: void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme)>($r2, $r1);

     label1:
        return;
    }

    public void clearColorFilter()
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCommon $r0;
        android.graphics.drawable.Drawable $r1;

        $r0 := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCommon;

        $r1 = $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable mDelegateDrawable>;

        if $r1 == null goto label1;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void clearColorFilter()>();

        return;

     label1:
        specialinvoke $r0.<android.graphics.drawable.Drawable: void clearColorFilter()>();

        return;
    }

    public android.graphics.ColorFilter getColorFilter()
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCommon $r0;
        android.graphics.ColorFilter $r1;
        android.graphics.drawable.Drawable $r2;

        $r0 := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCommon;

        $r2 = $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable mDelegateDrawable>;

        if $r2 == null goto label1;

        $r1 = staticinvoke <androidx.core.graphics.drawable.DrawableCompat: android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable)>($r2);

        return $r1;

     label1:
        return null;
    }

    public android.graphics.drawable.Drawable getCurrent()
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCommon $r0;
        android.graphics.drawable.Drawable $r1;

        $r0 := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCommon;

        $r1 = $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable mDelegateDrawable>;

        if $r1 == null goto label1;

        $r1 = virtualinvoke $r1.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable getCurrent()>();

        return $r1;

     label1:
        $r1 = specialinvoke $r0.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable getCurrent()>();

        return $r1;
    }

    public int getMinimumHeight()
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCommon $r0;
        android.graphics.drawable.Drawable $r1;
        int $i0;

        $r0 := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCommon;

        $r1 = $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable mDelegateDrawable>;

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getMinimumHeight()>();

        return $i0;

     label1:
        $i0 = specialinvoke $r0.<android.graphics.drawable.Drawable: int getMinimumHeight()>();

        return $i0;
    }

    public int getMinimumWidth()
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCommon $r0;
        android.graphics.drawable.Drawable $r1;
        int $i0;

        $r0 := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCommon;

        $r1 = $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable mDelegateDrawable>;

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getMinimumWidth()>();

        return $i0;

     label1:
        $i0 = specialinvoke $r0.<android.graphics.drawable.Drawable: int getMinimumWidth()>();

        return $i0;
    }

    public boolean getPadding(android.graphics.Rect)
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCommon $r0;
        android.graphics.Rect $r1;
        android.graphics.drawable.Drawable $r2;
        boolean $z0;

        $r0 := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCommon;

        $r1 := @parameter0: android.graphics.Rect;

        $r2 = $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable mDelegateDrawable>;

        if $r2 == null goto label1;

        $z0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>($r1);

        return $z0;

     label1:
        $z0 = specialinvoke $r0.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>($r1);

        return $z0;
    }

    public int[] getState()
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCommon $r0;
        android.graphics.drawable.Drawable $r1;
        int[] $r2;

        $r0 := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCommon;

        $r1 = $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable mDelegateDrawable>;

        if $r1 == null goto label1;

        $r2 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int[] getState()>();

        return $r2;

     label1:
        $r2 = specialinvoke $r0.<android.graphics.drawable.Drawable: int[] getState()>();

        return $r2;
    }

    public android.graphics.Region getTransparentRegion()
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCommon $r0;
        android.graphics.drawable.Drawable $r1;
        android.graphics.Region $r2;

        $r0 := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCommon;

        $r1 = $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable mDelegateDrawable>;

        if $r1 == null goto label1;

        $r2 = virtualinvoke $r1.<android.graphics.drawable.Drawable: android.graphics.Region getTransparentRegion()>();

        return $r2;

     label1:
        $r2 = specialinvoke $r0.<android.graphics.drawable.Drawable: android.graphics.Region getTransparentRegion()>();

        return $r2;
    }

    public void jumpToCurrentState()
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCommon $r0;
        android.graphics.drawable.Drawable $r1;

        $r0 := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCommon;

        $r1 = $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable mDelegateDrawable>;

        if $r1 == null goto label1;

        staticinvoke <androidx.core.graphics.drawable.DrawableCompat: void jumpToCurrentState(android.graphics.drawable.Drawable)>($r1);

     label1:
        return;
    }

    protected void onBoundsChange(android.graphics.Rect)
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCommon $r0;
        android.graphics.Rect $r1;
        android.graphics.drawable.Drawable $r2;

        $r0 := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCommon;

        $r1 := @parameter0: android.graphics.Rect;

        $r2 = $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable mDelegateDrawable>;

        if $r2 == null goto label1;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setBounds(android.graphics.Rect)>($r1);

        return;

     label1:
        specialinvoke $r0.<android.graphics.drawable.Drawable: void onBoundsChange(android.graphics.Rect)>($r1);

        return;
    }

    protected boolean onLevelChange(int)
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCommon $r0;
        int $i0;
        android.graphics.drawable.Drawable $r1;
        boolean $z0;

        $r0 := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCommon;

        $i0 := @parameter0: int;

        $r1 = $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable mDelegateDrawable>;

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setLevel(int)>($i0);

        return $z0;

     label1:
        $z0 = specialinvoke $r0.<android.graphics.drawable.Drawable: boolean onLevelChange(int)>($i0);

        return $z0;
    }

    public void setChangingConfigurations(int)
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCommon $r0;
        int $i0;
        android.graphics.drawable.Drawable $r1;

        $r0 := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCommon;

        $i0 := @parameter0: int;

        $r1 = $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable mDelegateDrawable>;

        if $r1 == null goto label1;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void setChangingConfigurations(int)>($i0);

        return;

     label1:
        specialinvoke $r0.<android.graphics.drawable.Drawable: void setChangingConfigurations(int)>($i0);

        return;
    }

    public void setColorFilter(int, android.graphics.PorterDuff$Mode)
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCommon $r0;
        int $i0;
        android.graphics.PorterDuff$Mode $r1;
        android.graphics.drawable.Drawable $r2;

        $r0 := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCommon;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.graphics.PorterDuff$Mode;

        $r2 = $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable mDelegateDrawable>;

        if $r2 == null goto label1;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setColorFilter(int,android.graphics.PorterDuff$Mode)>($i0, $r1);

        return;

     label1:
        specialinvoke $r0.<android.graphics.drawable.Drawable: void setColorFilter(int,android.graphics.PorterDuff$Mode)>($i0, $r1);

        return;
    }

    public void setFilterBitmap(boolean)
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCommon $r0;
        boolean $z0;
        android.graphics.drawable.Drawable $r1;

        $r0 := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCommon;

        $z0 := @parameter0: boolean;

        $r1 = $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable mDelegateDrawable>;

        if $r1 == null goto label1;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void setFilterBitmap(boolean)>($z0);

     label1:
        return;
    }

    public void setHotspot(float, float)
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCommon $r0;
        float $f0, $f1;
        android.graphics.drawable.Drawable $r1;

        $r0 := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCommon;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $r1 = $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable mDelegateDrawable>;

        if $r1 == null goto label1;

        staticinvoke <androidx.core.graphics.drawable.DrawableCompat: void setHotspot(android.graphics.drawable.Drawable,float,float)>($r1, $f0, $f1);

     label1:
        return;
    }

    public void setHotspotBounds(int, int, int, int)
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCommon $r0;
        int $i0, $i1, $i2, $i3;
        android.graphics.drawable.Drawable $r1;

        $r0 := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCommon;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $r1 = $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable mDelegateDrawable>;

        if $r1 == null goto label1;

        staticinvoke <androidx.core.graphics.drawable.DrawableCompat: void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)>($r1, $i0, $i1, $i2, $i3);

     label1:
        return;
    }

    public boolean setState(int[])
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCommon $r0;
        int[] $r1;
        android.graphics.drawable.Drawable $r2;
        boolean $z0;

        $r0 := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCommon;

        $r1 := @parameter0: int[];

        $r2 = $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable mDelegateDrawable>;

        if $r2 == null goto label1;

        $z0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: boolean setState(int[])>($r1);

        return $z0;

     label1:
        $z0 = specialinvoke $r0.<android.graphics.drawable.Drawable: boolean setState(int[])>($r1);

        return $z0;
    }
}
