class androidx.appcompat.graphics.drawable.DrawableContainer extends android.graphics.drawable.Drawable implements android.graphics.drawable.Drawable$Callback
{
    private static final boolean DEBUG;
    private static final boolean DEFAULT_DITHER;
    private static final java.lang.String TAG;
    private int mAlpha;
    private java.lang.Runnable mAnimationRunnable;
    private androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback mBlockInvalidateCallback;
    private int mCurIndex;
    private android.graphics.drawable.Drawable mCurrDrawable;
    private androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState;
    private long mEnterAnimationEnd;
    private long mExitAnimationEnd;
    private boolean mHasAlpha;
    private android.graphics.Rect mHotspotBounds;
    private android.graphics.drawable.Drawable mLastDrawable;
    private int mLastIndex;
    private boolean mMutated;

    void <init>()
    {
        androidx.appcompat.graphics.drawable.DrawableContainer $r0;

        $r0 := @this: androidx.appcompat.graphics.drawable.DrawableContainer;

        specialinvoke $r0.<android.graphics.drawable.Drawable: void <init>()>();

        $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: int mAlpha> = 255;

        $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: int mCurIndex> = -1;

        $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: int mLastIndex> = -1;

        return;
    }

    private void initializeDrawableForDisplay(android.graphics.drawable.Drawable)
    {
        androidx.appcompat.graphics.drawable.DrawableContainer $r0;
        android.graphics.drawable.Drawable $r1;
        int $i0, $i1, $i2, $i3;
        androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback $r2;
        android.graphics.drawable.Drawable$Callback $r3;
        androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState $r4;
        boolean $z0;
        android.graphics.ColorFilter $r5;
        android.content.res.ColorStateList $r6;
        android.graphics.PorterDuff$Mode $r7;
        int[] $r8;
        android.graphics.Rect $r9;
        java.lang.Throwable $r10;

        $r0 := @this: androidx.appcompat.graphics.drawable.DrawableContainer;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback mBlockInvalidateCallback>;

        if $r2 != null goto label01;

        $r2 = new androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback;

        specialinvoke $r2.<androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback: void <init>()>();

        $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback mBlockInvalidateCallback> = $r2;

     label01:
        $r2 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback mBlockInvalidateCallback>;

        $r3 = virtualinvoke $r1.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$Callback getCallback()>();

        $r2 = virtualinvoke $r2.<androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback: androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback wrap(android.graphics.drawable.Drawable$Callback)>($r3);

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>($r2);

     label02:
        $r4 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $i0 = $r4.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int mEnterFadeDuration>;

     label03:
        if $i0 > 0 goto label07;

     label04:
        $z0 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: boolean mHasAlpha>;

     label05:
        if $z0 == 0 goto label07;

     label06:
        $i0 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: int mAlpha>;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void setAlpha(int)>($i0);

     label07:
        $r4 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $z0 = $r4.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mHasColorFilter>;

     label08:
        if $z0 == 0 goto label11;

     label09:
        $r4 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $r5 = $r4.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.ColorFilter mColorFilter>;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>($r5);

     label10:
        goto label17;

     label11:
        $r4 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $z0 = $r4.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mHasTintList>;

     label12:
        if $z0 == 0 goto label14;

     label13:
        $r4 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $r6 = $r4.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.content.res.ColorStateList mTintList>;

        staticinvoke <androidx.core.graphics.drawable.DrawableCompat: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)>($r1, $r6);

     label14:
        $r4 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $z0 = $r4.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mHasTintMode>;

     label15:
        if $z0 == 0 goto label17;

     label16:
        $r4 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $r7 = $r4.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.PorterDuff$Mode mTintMode>;

        staticinvoke <androidx.core.graphics.drawable.DrawableCompat: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)>($r1, $r7);

     label17:
        $z0 = virtualinvoke $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: boolean isVisible()>();

        virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>($z0, 1);

        $r4 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $z0 = $r4.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mDither>;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void setDither(boolean)>($z0);

        $r8 = virtualinvoke $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: int[] getState()>();

        virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setState(int[])>($r8);

        $i0 = virtualinvoke $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: int getLevel()>();

        virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setLevel(int)>($i0);

        $r9 = virtualinvoke $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.Rect getBounds()>();

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void setBounds(android.graphics.Rect)>($r9);

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

     label18:
        if $i0 < 23 goto label20;

     label19:
        $i0 = virtualinvoke $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: int getLayoutDirection()>();

        virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>($i0);

     label20:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

     label21:
        if $i0 < 19 goto label23;

     label22:
        $r4 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $z0 = $r4.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mAutoMirrored>;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void setAutoMirrored(boolean)>($z0);

     label23:
        $r9 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.Rect mHotspotBounds>;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

     label24:
        if $i0 < 21 goto label26;

        if $r9 == null goto label26;

     label25:
        $i2 = $r9.<android.graphics.Rect: int left>;

        $i3 = $r9.<android.graphics.Rect: int top>;

        $i0 = $r9.<android.graphics.Rect: int right>;

        $i1 = $r9.<android.graphics.Rect: int bottom>;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void setHotspotBounds(int,int,int,int)>($i2, $i3, $i0, $i1);

     label26:
        $r2 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback mBlockInvalidateCallback>;

        $r3 = virtualinvoke $r2.<androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback: android.graphics.drawable.Drawable$Callback unwrap()>();

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>($r3);

        return;

     label27:
        $r10 := @caughtexception;

        $r2 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback mBlockInvalidateCallback>;

        $r3 = virtualinvoke $r2.<androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback: android.graphics.drawable.Drawable$Callback unwrap()>();

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>($r3);

        throw $r10;

        catch java.lang.Throwable from label02 to label03 with label27;
        catch java.lang.Throwable from label04 to label05 with label27;
        catch java.lang.Throwable from label06 to label08 with label27;
        catch java.lang.Throwable from label09 to label10 with label27;
        catch java.lang.Throwable from label11 to label12 with label27;
        catch java.lang.Throwable from label13 to label15 with label27;
        catch java.lang.Throwable from label16 to label18 with label27;
        catch java.lang.Throwable from label19 to label21 with label27;
        catch java.lang.Throwable from label22 to label24 with label27;
        catch java.lang.Throwable from label25 to label26 with label27;
    }

    private boolean needsMirroring()
    {
        androidx.appcompat.graphics.drawable.DrawableContainer $r0;
        boolean $z0;
        int $i0;

        $r0 := @this: androidx.appcompat.graphics.drawable.DrawableContainer;

        $z0 = virtualinvoke $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: boolean isAutoMirrored()>();

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: int getLayoutDirection()>();

        if $i0 != 1 goto label1;

        return 1;

     label1:
        return 0;
    }

    static int resolveDensity(android.content.res.Resources, int)
    {
        android.content.res.Resources $r0;
        int $i0;
        android.util.DisplayMetrics $r1;

        $r0 := @parameter0: android.content.res.Resources;

        $i0 := @parameter1: int;

        if $r0 != null goto label1;

        goto label2;

     label1:
        $r1 = virtualinvoke $r0.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $i0 = $r1.<android.util.DisplayMetrics: int densityDpi>;

     label2:
        if $i0 != 0 goto label3;

        return 160;

     label3:
        return $i0;
    }

    void animate(boolean)
    {
        androidx.appcompat.graphics.drawable.DrawableContainer $r0;
        boolean $z0, $z1;
        long $l0, $l1;
        android.graphics.drawable.Drawable $r1;
        byte $b2;
        int $i3, $i4;
        androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState $r2;
        java.lang.Runnable $r3;

        $r0 := @this: androidx.appcompat.graphics.drawable.DrawableContainer;

        $z0 := @parameter0: boolean;

        $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: boolean mHasAlpha> = 1;

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $z1 = 0;

        $r1 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r1 == null goto label2;

        $l1 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: long mEnterAnimationEnd>;

        $b2 = $l1 cmp 0L;

        if $b2 == 0 goto label3;

        $b2 = $l1 cmp $l0;

        if $b2 > 0 goto label1;

        $i3 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: int mAlpha>;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void setAlpha(int)>($i3);

        $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: long mEnterAnimationEnd> = 0L;

        goto label3;

     label1:
        $l1 = $l1 - $l0;

        $l1 = $l1 * 255L;

        $i3 = (int) $l1;

        $r2 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $i4 = $r2.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int mEnterFadeDuration>;

        $i3 = $i3 / $i4;

        $r1 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        $i3 = 255 - $i3;

        $i4 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: int mAlpha>;

        $i3 = $i3 * $i4;

        $i3 = $i3 / 255;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void setAlpha(int)>($i3);

        $z1 = 1;

        goto label3;

     label2:
        $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: long mEnterAnimationEnd> = 0L;

     label3:
        $r1 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mLastDrawable>;

        if $r1 == null goto label5;

        $l1 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: long mExitAnimationEnd>;

        $b2 = $l1 cmp 0L;

        if $b2 == 0 goto label6;

        $b2 = $l1 cmp $l0;

        if $b2 > 0 goto label4;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>(0, 0);

        $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mLastDrawable> = null;

        $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: int mLastIndex> = -1;

        $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: long mExitAnimationEnd> = 0L;

        goto label6;

     label4:
        $l1 = $l1 - $l0;

        $l1 = $l1 * 255L;

        $i3 = (int) $l1;

        $r2 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $i4 = $r2.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int mExitFadeDuration>;

        $i3 = $i3 / $i4;

        $r1 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mLastDrawable>;

        $i4 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: int mAlpha>;

        $i3 = $i4 * $i3;

        $i3 = $i3 / 255;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void setAlpha(int)>($i3);

        $z1 = 1;

        goto label6;

     label5:
        $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: long mExitAnimationEnd> = 0L;

     label6:
        if $z0 == 0 goto label7;

        if $z1 == 0 goto label7;

        $r3 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: java.lang.Runnable mAnimationRunnable>;

        $l0 = 16L + $l0;

        virtualinvoke $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: void scheduleSelf(java.lang.Runnable,long)>($r3, $l0);

     label7:
        return;
    }

    public void applyTheme(android.content.res.Resources$Theme)
    {
        androidx.appcompat.graphics.drawable.DrawableContainer $r0;
        android.content.res.Resources$Theme $r1;
        androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState $r2;

        $r0 := @this: androidx.appcompat.graphics.drawable.DrawableContainer;

        $r1 := @parameter0: android.content.res.Resources$Theme;

        $r2 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        virtualinvoke $r2.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void applyTheme(android.content.res.Resources$Theme)>($r1);

        return;
    }

    public boolean canApplyTheme()
    {
        androidx.appcompat.graphics.drawable.DrawableContainer $r0;
        boolean $z0;
        androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState $r1;

        $r0 := @this: androidx.appcompat.graphics.drawable.DrawableContainer;

        $r1 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $z0 = virtualinvoke $r1.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean canApplyTheme()>();

        return $z0;
    }

    void clearMutated()
    {
        androidx.appcompat.graphics.drawable.DrawableContainer $r0;
        androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState $r1;

        $r0 := @this: androidx.appcompat.graphics.drawable.DrawableContainer;

        $r1 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        virtualinvoke $r1.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void clearMutated()>();

        $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: boolean mMutated> = 0;

        return;
    }

    androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState()
    {
        androidx.appcompat.graphics.drawable.DrawableContainer $r0;
        androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState r1;

        $r0 := @this: androidx.appcompat.graphics.drawable.DrawableContainer;

        r1 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        return r1;
    }

    public void draw(android.graphics.Canvas)
    {
        androidx.appcompat.graphics.drawable.DrawableContainer $r0;
        android.graphics.Canvas $r1;
        android.graphics.drawable.Drawable $r2;

        $r0 := @this: androidx.appcompat.graphics.drawable.DrawableContainer;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r2 == null goto label1;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r1);

     label1:
        $r2 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mLastDrawable>;

        if $r2 == null goto label2;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r1);

     label2:
        return;
    }

    public int getAlpha()
    {
        androidx.appcompat.graphics.drawable.DrawableContainer $r0;
        int i0;

        $r0 := @this: androidx.appcompat.graphics.drawable.DrawableContainer;

        i0 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: int mAlpha>;

        return i0;
    }

    public int getChangingConfigurations()
    {
        androidx.appcompat.graphics.drawable.DrawableContainer $r0;
        int $i0, $i1;
        androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState $r1;

        $r0 := @this: androidx.appcompat.graphics.drawable.DrawableContainer;

        $i0 = specialinvoke $r0.<android.graphics.drawable.Drawable: int getChangingConfigurations()>();

        $r1 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $i1 = virtualinvoke $r1.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int getChangingConfigurations()>();

        $i0 = $i0 | $i1;

        return $i0;
    }

    public final android.graphics.drawable.Drawable$ConstantState getConstantState()
    {
        androidx.appcompat.graphics.drawable.DrawableContainer $r0;
        androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState $r1;
        boolean $z0;
        int $i0;

        $r0 := @this: androidx.appcompat.graphics.drawable.DrawableContainer;

        $r1 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $z0 = virtualinvoke $r1.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean canConstantState()>();

        if $z0 == 0 goto label1;

        $r1 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $i0 = virtualinvoke $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: int getChangingConfigurations()>();

        $r1.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int mChangingConfigurations> = $i0;

        $r1 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        return $r1;

     label1:
        return null;
    }

    public android.graphics.drawable.Drawable getCurrent()
    {
        androidx.appcompat.graphics.drawable.DrawableContainer $r0;
        android.graphics.drawable.Drawable r1;

        $r0 := @this: androidx.appcompat.graphics.drawable.DrawableContainer;

        r1 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        return r1;
    }

    int getCurrentIndex()
    {
        androidx.appcompat.graphics.drawable.DrawableContainer $r0;
        int i0;

        $r0 := @this: androidx.appcompat.graphics.drawable.DrawableContainer;

        i0 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: int mCurIndex>;

        return i0;
    }

    public void getHotspotBounds(android.graphics.Rect)
    {
        androidx.appcompat.graphics.drawable.DrawableContainer $r0;
        android.graphics.Rect $r1, $r2;

        $r0 := @this: androidx.appcompat.graphics.drawable.DrawableContainer;

        $r1 := @parameter0: android.graphics.Rect;

        $r2 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.Rect mHotspotBounds>;

        if $r2 == null goto label1;

        virtualinvoke $r1.<android.graphics.Rect: void set(android.graphics.Rect)>($r2);

        return;

     label1:
        specialinvoke $r0.<android.graphics.drawable.Drawable: void getHotspotBounds(android.graphics.Rect)>($r1);

        return;
    }

    public int getIntrinsicHeight()
    {
        androidx.appcompat.graphics.drawable.DrawableContainer $r0;
        androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState $r1;
        boolean $z0;
        int $i0;
        android.graphics.drawable.Drawable $r2;

        $r0 := @this: androidx.appcompat.graphics.drawable.DrawableContainer;

        $r1 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $z0 = virtualinvoke $r1.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean isConstantSize()>();

        if $z0 == 0 goto label1;

        $r1 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $i0 = virtualinvoke $r1.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int getConstantHeight()>();

        return $i0;

     label1:
        $r2 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r2 == null goto label2;

        $i0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        return $i0;

     label2:
        return -1;
    }

    public int getIntrinsicWidth()
    {
        androidx.appcompat.graphics.drawable.DrawableContainer $r0;
        androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState $r1;
        boolean $z0;
        int $i0;
        android.graphics.drawable.Drawable $r2;

        $r0 := @this: androidx.appcompat.graphics.drawable.DrawableContainer;

        $r1 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $z0 = virtualinvoke $r1.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean isConstantSize()>();

        if $z0 == 0 goto label1;

        $r1 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $i0 = virtualinvoke $r1.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int getConstantWidth()>();

        return $i0;

     label1:
        $r2 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r2 == null goto label2;

        $i0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        return $i0;

     label2:
        return -1;
    }

    public int getMinimumHeight()
    {
        androidx.appcompat.graphics.drawable.DrawableContainer $r0;
        androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState $r1;
        boolean $z0;
        int $i0;
        android.graphics.drawable.Drawable $r2;

        $r0 := @this: androidx.appcompat.graphics.drawable.DrawableContainer;

        $r1 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $z0 = virtualinvoke $r1.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean isConstantSize()>();

        if $z0 == 0 goto label1;

        $r1 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $i0 = virtualinvoke $r1.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int getConstantMinimumHeight()>();

        return $i0;

     label1:
        $r2 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r2 == null goto label2;

        $i0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getMinimumHeight()>();

        return $i0;

     label2:
        return 0;
    }

    public int getMinimumWidth()
    {
        androidx.appcompat.graphics.drawable.DrawableContainer $r0;
        androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState $r1;
        boolean $z0;
        int $i0;
        android.graphics.drawable.Drawable $r2;

        $r0 := @this: androidx.appcompat.graphics.drawable.DrawableContainer;

        $r1 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $z0 = virtualinvoke $r1.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean isConstantSize()>();

        if $z0 == 0 goto label1;

        $r1 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $i0 = virtualinvoke $r1.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int getConstantMinimumWidth()>();

        return $i0;

     label1:
        $r2 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r2 == null goto label2;

        $i0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getMinimumWidth()>();

        return $i0;

     label2:
        return 0;
    }

    public int getOpacity()
    {
        androidx.appcompat.graphics.drawable.DrawableContainer $r0;
        android.graphics.drawable.Drawable $r1;
        boolean $z0;
        androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState $r2;
        int $i0;

        $r0 := @this: androidx.appcompat.graphics.drawable.DrawableContainer;

        $r1 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r1 == null goto label2;

        $z0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean isVisible()>();

        if $z0 != 0 goto label1;

        goto label2;

     label1:
        $r2 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $i0 = virtualinvoke $r2.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int getOpacity()>();

        return $i0;

     label2:
        return -2;
    }

    public void getOutline(android.graphics.Outline)
    {
        androidx.appcompat.graphics.drawable.DrawableContainer $r0;
        android.graphics.Outline $r1;
        android.graphics.drawable.Drawable $r2;

        $r0 := @this: androidx.appcompat.graphics.drawable.DrawableContainer;

        $r1 := @parameter0: android.graphics.Outline;

        $r2 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r2 == null goto label1;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void getOutline(android.graphics.Outline)>($r1);

     label1:
        return;
    }

    public boolean getPadding(android.graphics.Rect)
    {
        androidx.appcompat.graphics.drawable.DrawableContainer $r0;
        android.graphics.Rect $r1, $r3;
        int $i0, $i1;
        androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState $r2;
        boolean $z0, $z1;
        android.graphics.drawable.Drawable $r4;

        $r0 := @this: androidx.appcompat.graphics.drawable.DrawableContainer;

        $r1 := @parameter0: android.graphics.Rect;

        $r2 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $r3 = virtualinvoke $r2.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.Rect getConstantPadding()>();

        if $r3 == null goto label3;

        virtualinvoke $r1.<android.graphics.Rect: void set(android.graphics.Rect)>($r3);

        $i0 = $r3.<android.graphics.Rect: int left>;

        $i1 = $r3.<android.graphics.Rect: int top>;

        $i0 = $i0 | $i1;

        $i1 = $r3.<android.graphics.Rect: int bottom>;

        $i0 = $i0 | $i1;

        $i1 = $r3.<android.graphics.Rect: int right>;

        $i0 = $i0 | $i1;

        if $i0 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        goto label5;

     label3:
        $r4 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r4 == null goto label4;

        $z0 = virtualinvoke $r4.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>($r1);

        goto label5;

     label4:
        $z0 = specialinvoke $r0.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>($r1);

     label5:
        $z1 = specialinvoke $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: boolean needsMirroring()>();

        if $z1 == 0 goto label6;

        $i1 = $r1.<android.graphics.Rect: int left>;

        $i0 = $r1.<android.graphics.Rect: int right>;

        $r1.<android.graphics.Rect: int left> = $i0;

        $r1.<android.graphics.Rect: int right> = $i1;

     label6:
        return $z0;
    }

    public void invalidateDrawable(android.graphics.drawable.Drawable)
    {
        androidx.appcompat.graphics.drawable.DrawableContainer $r0;
        android.graphics.drawable.Drawable $r1, $r3;
        androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState $r2;
        android.graphics.drawable.Drawable$Callback $r4;

        $r0 := @this: androidx.appcompat.graphics.drawable.DrawableContainer;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        if $r2 == null goto label1;

        virtualinvoke $r2.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void invalidateCache()>();

     label1:
        $r3 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r1 != $r3 goto label2;

        $r4 = virtualinvoke $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable$Callback getCallback()>();

        if $r4 == null goto label2;

        $r4 = virtualinvoke $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable$Callback getCallback()>();

        interfaceinvoke $r4.<android.graphics.drawable.Drawable$Callback: void invalidateDrawable(android.graphics.drawable.Drawable)>($r0);

     label2:
        return;
    }

    public boolean isAutoMirrored()
    {
        androidx.appcompat.graphics.drawable.DrawableContainer $r0;
        androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState $r1;
        boolean z0;

        $r0 := @this: androidx.appcompat.graphics.drawable.DrawableContainer;

        $r1 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        z0 = $r1.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mAutoMirrored>;

        return z0;
    }

    public boolean isStateful()
    {
        androidx.appcompat.graphics.drawable.DrawableContainer $r0;
        boolean $z0;
        androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState $r1;

        $r0 := @this: androidx.appcompat.graphics.drawable.DrawableContainer;

        $r1 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $z0 = virtualinvoke $r1.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean isStateful()>();

        return $z0;
    }

    public void jumpToCurrentState()
    {
        androidx.appcompat.graphics.drawable.DrawableContainer $r0;
        int $i0;
        boolean $z0, $z1;
        android.graphics.drawable.Drawable $r1;
        long $l1;
        byte $b2;

        $r0 := @this: androidx.appcompat.graphics.drawable.DrawableContainer;

        $z0 = 0;

        $r1 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mLastDrawable>;

        if $r1 == null goto label1;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void jumpToCurrentState()>();

        $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mLastDrawable> = null;

        $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: int mLastIndex> = -1;

        $z0 = 1;

     label1:
        $r1 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r1 == null goto label2;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void jumpToCurrentState()>();

        $z1 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: boolean mHasAlpha>;

        if $z1 == 0 goto label2;

        $r1 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        $i0 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: int mAlpha>;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void setAlpha(int)>($i0);

     label2:
        $l1 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: long mExitAnimationEnd>;

        $b2 = $l1 cmp 0L;

        if $b2 == 0 goto label3;

        $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: long mExitAnimationEnd> = 0L;

        $z0 = 1;

     label3:
        $l1 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: long mEnterAnimationEnd>;

        $b2 = $l1 cmp 0L;

        if $b2 == 0 goto label4;

        $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: long mEnterAnimationEnd> = 0L;

        $z0 = 1;

     label4:
        if $z0 == 0 goto label5;

        virtualinvoke $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: void invalidateSelf()>();

     label5:
        return;
    }

    public android.graphics.drawable.Drawable mutate()
    {
        androidx.appcompat.graphics.drawable.DrawableContainer $r0;
        boolean $z0;
        android.graphics.drawable.Drawable $r1;
        androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState $r2;

        $r0 := @this: androidx.appcompat.graphics.drawable.DrawableContainer;

        $z0 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: boolean mMutated>;

        if $z0 != 0 goto label1;

        $r1 = specialinvoke $r0.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        if $r1 != $r0 goto label1;

        $r2 = virtualinvoke $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState()>();

        virtualinvoke $r2.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void mutate()>();

        virtualinvoke $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState)>($r2);

        $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: boolean mMutated> = 1;

     label1:
        return $r0;
    }

    protected void onBoundsChange(android.graphics.Rect)
    {
        androidx.appcompat.graphics.drawable.DrawableContainer $r0;
        android.graphics.Rect $r1;
        android.graphics.drawable.Drawable $r2;

        $r0 := @this: androidx.appcompat.graphics.drawable.DrawableContainer;

        $r1 := @parameter0: android.graphics.Rect;

        $r2 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mLastDrawable>;

        if $r2 == null goto label1;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setBounds(android.graphics.Rect)>($r1);

     label1:
        $r2 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r2 == null goto label2;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setBounds(android.graphics.Rect)>($r1);

     label2:
        return;
    }

    public boolean onLayoutDirectionChanged(int)
    {
        androidx.appcompat.graphics.drawable.DrawableContainer $r0;
        int $i0, $i1;
        androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState $r1;
        boolean $z0;

        $r0 := @this: androidx.appcompat.graphics.drawable.DrawableContainer;

        $i0 := @parameter0: int;

        $r1 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $i1 = virtualinvoke $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: int getCurrentIndex()>();

        $z0 = virtualinvoke $r1.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean setLayoutDirection(int,int)>($i0, $i1);

        return $z0;
    }

    protected boolean onLevelChange(int)
    {
        androidx.appcompat.graphics.drawable.DrawableContainer $r0;
        int $i0;
        android.graphics.drawable.Drawable $r1;
        boolean $z0;

        $r0 := @this: androidx.appcompat.graphics.drawable.DrawableContainer;

        $i0 := @parameter0: int;

        $r1 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mLastDrawable>;

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setLevel(int)>($i0);

        return $z0;

     label1:
        $r1 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r1 == null goto label2;

        $z0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setLevel(int)>($i0);

        return $z0;

     label2:
        return 0;
    }

    protected boolean onStateChange(int[])
    {
        androidx.appcompat.graphics.drawable.DrawableContainer $r0;
        int[] $r1;
        android.graphics.drawable.Drawable $r2;
        boolean $z0;

        $r0 := @this: androidx.appcompat.graphics.drawable.DrawableContainer;

        $r1 := @parameter0: int[];

        $r2 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mLastDrawable>;

        if $r2 == null goto label1;

        $z0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: boolean setState(int[])>($r1);

        return $z0;

     label1:
        $r2 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r2 == null goto label2;

        $z0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: boolean setState(int[])>($r1);

        return $z0;

     label2:
        return 0;
    }

    public void scheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable, long)
    {
        androidx.appcompat.graphics.drawable.DrawableContainer $r0;
        android.graphics.drawable.Drawable $r1, $r3;
        java.lang.Runnable $r2;
        long $l0;
        android.graphics.drawable.Drawable$Callback $r4;

        $r0 := @this: androidx.appcompat.graphics.drawable.DrawableContainer;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 := @parameter1: java.lang.Runnable;

        $l0 := @parameter2: long;

        $r3 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r1 != $r3 goto label1;

        $r4 = virtualinvoke $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable$Callback getCallback()>();

        if $r4 == null goto label1;

        $r4 = virtualinvoke $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable$Callback getCallback()>();

        interfaceinvoke $r4.<android.graphics.drawable.Drawable$Callback: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)>($r0, $r2, $l0);

     label1:
        return;
    }

    boolean selectDrawable(int)
    {
        androidx.appcompat.graphics.drawable.DrawableContainer $r0;
        int $i0, $i1;
        long $l2, $l3;
        androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState $r1;
        android.graphics.drawable.Drawable $r2;
        byte $b4;
        java.lang.Runnable $r3;
        androidx.appcompat.graphics.drawable.DrawableContainer$1 $r4;

        $r0 := @this: androidx.appcompat.graphics.drawable.DrawableContainer;

        $i0 := @parameter0: int;

        $i1 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: int mCurIndex>;

        if $i0 != $i1 goto label01;

        return 0;

     label01:
        $l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r1 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $i1 = $r1.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int mExitFadeDuration>;

        if $i1 <= 0 goto label04;

        $r2 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mLastDrawable>;

        if $r2 == null goto label02;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>(0, 0);

     label02:
        $r2 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r2 == null goto label03;

        $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mLastDrawable> = $r2;

        $i1 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: int mCurIndex>;

        $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: int mLastIndex> = $i1;

        $r1 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $i1 = $r1.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int mExitFadeDuration>;

        $l3 = (long) $i1;

        $l3 = $l3 + $l2;

        $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: long mExitAnimationEnd> = $l3;

        goto label05;

     label03:
        $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mLastDrawable> = null;

        $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: int mLastIndex> = -1;

        $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: long mExitAnimationEnd> = 0L;

        goto label05;

     label04:
        $r2 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r2 == null goto label05;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>(0, 0);

     label05:
        if $i0 < 0 goto label07;

        $r1 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $i1 = $r1.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int mNumChildren>;

        if $i0 >= $i1 goto label07;

        $r1 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $r2 = virtualinvoke $r1.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable getChild(int)>($i0);

        $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable> = $r2;

        $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: int mCurIndex> = $i0;

        if $r2 == null goto label08;

        $r1 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $i0 = $r1.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int mEnterFadeDuration>;

        if $i0 <= 0 goto label06;

        $r1 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $i0 = $r1.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int mEnterFadeDuration>;

        $l3 = (long) $i0;

        $l2 = $l3 + $l2;

        $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: long mEnterAnimationEnd> = $l2;

     label06:
        specialinvoke $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: void initializeDrawableForDisplay(android.graphics.drawable.Drawable)>($r2);

        goto label08;

     label07:
        $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable> = null;

        $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: int mCurIndex> = -1;

     label08:
        $l2 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: long mEnterAnimationEnd>;

        $b4 = $l2 cmp 0L;

        if $b4 != 0 goto label09;

        $l2 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: long mExitAnimationEnd>;

        $b4 = $l2 cmp 0L;

        if $b4 == 0 goto label12;

     label09:
        $r3 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: java.lang.Runnable mAnimationRunnable>;

        if $r3 != null goto label10;

        $r4 = new androidx.appcompat.graphics.drawable.DrawableContainer$1;

        specialinvoke $r4.<androidx.appcompat.graphics.drawable.DrawableContainer$1: void <init>(androidx.appcompat.graphics.drawable.DrawableContainer)>($r0);

        $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: java.lang.Runnable mAnimationRunnable> = $r4;

        goto label11;

     label10:
        virtualinvoke $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: void unscheduleSelf(java.lang.Runnable)>($r3);

     label11:
        virtualinvoke $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: void animate(boolean)>(1);

     label12:
        virtualinvoke $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: void invalidateSelf()>();

        return 1;
    }

    public void setAlpha(int)
    {
        androidx.appcompat.graphics.drawable.DrawableContainer $r0;
        int $i0, $i3;
        long $l1;
        byte $b2;
        boolean $z0;
        android.graphics.drawable.Drawable $r1;

        $r0 := @this: androidx.appcompat.graphics.drawable.DrawableContainer;

        $i0 := @parameter0: int;

        $z0 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: boolean mHasAlpha>;

        if $z0 == 0 goto label1;

        $i3 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: int mAlpha>;

        if $i3 == $i0 goto label3;

     label1:
        $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: boolean mHasAlpha> = 1;

        $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: int mAlpha> = $i0;

        $r1 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r1 == null goto label3;

        $l1 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: long mEnterAnimationEnd>;

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label2;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void setAlpha(int)>($i0);

        return;

     label2:
        virtualinvoke $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: void animate(boolean)>(0);

     label3:
        return;
    }

    public void setAutoMirrored(boolean)
    {
        androidx.appcompat.graphics.drawable.DrawableContainer $r0;
        boolean $z0, $z1;
        android.graphics.drawable.Drawable $r1;
        androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState $r2;

        $r0 := @this: androidx.appcompat.graphics.drawable.DrawableContainer;

        $z0 := @parameter0: boolean;

        $r2 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $z1 = $r2.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mAutoMirrored>;

        if $z1 == $z0 goto label1;

        $r2 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $r2.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mAutoMirrored> = $z0;

        $r1 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r1 == null goto label1;

        $z0 = $r2.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mAutoMirrored>;

        staticinvoke <androidx.core.graphics.drawable.DrawableCompat: void setAutoMirrored(android.graphics.drawable.Drawable,boolean)>($r1, $z0);

     label1:
        return;
    }

    public void setColorFilter(android.graphics.ColorFilter)
    {
        androidx.appcompat.graphics.drawable.DrawableContainer $r0;
        android.graphics.ColorFilter $r1, $r3;
        androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState $r2;
        android.graphics.drawable.Drawable $r4;

        $r0 := @this: androidx.appcompat.graphics.drawable.DrawableContainer;

        $r1 := @parameter0: android.graphics.ColorFilter;

        $r2 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $r2.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mHasColorFilter> = 1;

        $r3 = $r2.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.ColorFilter mColorFilter>;

        if $r3 == $r1 goto label1;

        $r2 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $r2.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.ColorFilter mColorFilter> = $r1;

        $r4 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r4 == null goto label1;

        virtualinvoke $r4.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>($r1);

     label1:
        return;
    }

    protected void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState)
    {
        androidx.appcompat.graphics.drawable.DrawableContainer $r0;
        androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState $r1;
        android.graphics.drawable.Drawable $r2;
        int $i0;

        $r0 := @this: androidx.appcompat.graphics.drawable.DrawableContainer;

        $r1 := @parameter0: androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState;

        $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState> = $r1;

        $i0 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: int mCurIndex>;

        if $i0 < 0 goto label1;

        $r2 = virtualinvoke $r1.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable getChild(int)>($i0);

        $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable> = $r2;

        $r2 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r2 == null goto label1;

        specialinvoke $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: void initializeDrawableForDisplay(android.graphics.drawable.Drawable)>($r2);

     label1:
        $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: int mLastIndex> = -1;

        $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mLastDrawable> = null;

        return;
    }

    void setCurrentIndex(int)
    {
        androidx.appcompat.graphics.drawable.DrawableContainer $r0;
        int $i0;

        $r0 := @this: androidx.appcompat.graphics.drawable.DrawableContainer;

        $i0 := @parameter0: int;

        virtualinvoke $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: boolean selectDrawable(int)>($i0);

        return;
    }

    public void setDither(boolean)
    {
        androidx.appcompat.graphics.drawable.DrawableContainer $r0;
        boolean $z0, $z1;
        android.graphics.drawable.Drawable $r1;
        androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState $r2;

        $r0 := @this: androidx.appcompat.graphics.drawable.DrawableContainer;

        $z0 := @parameter0: boolean;

        $r2 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $z1 = $r2.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mDither>;

        if $z1 == $z0 goto label1;

        $r2 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $r2.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mDither> = $z0;

        $r1 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r1 == null goto label1;

        $z0 = $r2.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mDither>;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void setDither(boolean)>($z0);

     label1:
        return;
    }

    public void setEnterFadeDuration(int)
    {
        androidx.appcompat.graphics.drawable.DrawableContainer $r0;
        int $i0;
        androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState $r1;

        $r0 := @this: androidx.appcompat.graphics.drawable.DrawableContainer;

        $i0 := @parameter0: int;

        $r1 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $r1.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int mEnterFadeDuration> = $i0;

        return;
    }

    public void setExitFadeDuration(int)
    {
        androidx.appcompat.graphics.drawable.DrawableContainer $r0;
        int $i0;
        androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState $r1;

        $r0 := @this: androidx.appcompat.graphics.drawable.DrawableContainer;

        $i0 := @parameter0: int;

        $r1 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $r1.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int mExitFadeDuration> = $i0;

        return;
    }

    public void setHotspot(float, float)
    {
        androidx.appcompat.graphics.drawable.DrawableContainer $r0;
        float $f0, $f1;
        android.graphics.drawable.Drawable $r1;

        $r0 := @this: androidx.appcompat.graphics.drawable.DrawableContainer;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $r1 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r1 == null goto label1;

        staticinvoke <androidx.core.graphics.drawable.DrawableCompat: void setHotspot(android.graphics.drawable.Drawable,float,float)>($r1, $f0, $f1);

     label1:
        return;
    }

    public void setHotspotBounds(int, int, int, int)
    {
        androidx.appcompat.graphics.drawable.DrawableContainer $r0;
        int $i0, $i1, $i2, $i3;
        android.graphics.Rect $r1;
        android.graphics.drawable.Drawable $r2;

        $r0 := @this: androidx.appcompat.graphics.drawable.DrawableContainer;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $r1 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.Rect mHotspotBounds>;

        if $r1 != null goto label1;

        $r1 = new android.graphics.Rect;

        specialinvoke $r1.<android.graphics.Rect: void <init>(int,int,int,int)>($i0, $i1, $i2, $i3);

        $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.Rect mHotspotBounds> = $r1;

        goto label2;

     label1:
        virtualinvoke $r1.<android.graphics.Rect: void set(int,int,int,int)>($i0, $i1, $i2, $i3);

     label2:
        $r2 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r2 == null goto label3;

        staticinvoke <androidx.core.graphics.drawable.DrawableCompat: void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)>($r2, $i0, $i1, $i2, $i3);

     label3:
        return;
    }

    public void setTintList(android.content.res.ColorStateList)
    {
        androidx.appcompat.graphics.drawable.DrawableContainer $r0;
        android.content.res.ColorStateList $r1, $r3;
        androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState $r2;
        android.graphics.drawable.Drawable $r4;

        $r0 := @this: androidx.appcompat.graphics.drawable.DrawableContainer;

        $r1 := @parameter0: android.content.res.ColorStateList;

        $r2 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $r2.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mHasTintList> = 1;

        $r3 = $r2.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.content.res.ColorStateList mTintList>;

        if $r3 == $r1 goto label1;

        $r2 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $r2.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.content.res.ColorStateList mTintList> = $r1;

        $r4 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        staticinvoke <androidx.core.graphics.drawable.DrawableCompat: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)>($r4, $r1);

     label1:
        return;
    }

    public void setTintMode(android.graphics.PorterDuff$Mode)
    {
        androidx.appcompat.graphics.drawable.DrawableContainer $r0;
        android.graphics.PorterDuff$Mode $r1, $r3;
        androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState $r2;
        android.graphics.drawable.Drawable $r4;

        $r0 := @this: androidx.appcompat.graphics.drawable.DrawableContainer;

        $r1 := @parameter0: android.graphics.PorterDuff$Mode;

        $r2 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $r2.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mHasTintMode> = 1;

        $r3 = $r2.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.PorterDuff$Mode mTintMode>;

        if $r3 == $r1 goto label1;

        $r2 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        $r2.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.PorterDuff$Mode mTintMode> = $r1;

        $r4 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        staticinvoke <androidx.core.graphics.drawable.DrawableCompat: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)>($r4, $r1);

     label1:
        return;
    }

    public boolean setVisible(boolean, boolean)
    {
        androidx.appcompat.graphics.drawable.DrawableContainer $r0;
        boolean $z0, $z1, $z2;
        android.graphics.drawable.Drawable $r1;

        $r0 := @this: androidx.appcompat.graphics.drawable.DrawableContainer;

        $z0 := @parameter0: boolean;

        $z1 := @parameter1: boolean;

        $z2 = specialinvoke $r0.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>($z0, $z1);

        $r1 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mLastDrawable>;

        if $r1 == null goto label1;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>($z0, $z1);

     label1:
        $r1 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r1 == null goto label2;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>($z0, $z1);

     label2:
        return $z2;
    }

    public void unscheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable)
    {
        androidx.appcompat.graphics.drawable.DrawableContainer $r0;
        android.graphics.drawable.Drawable $r1, $r3;
        java.lang.Runnable $r2;
        android.graphics.drawable.Drawable$Callback $r4;

        $r0 := @this: androidx.appcompat.graphics.drawable.DrawableContainer;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 := @parameter1: java.lang.Runnable;

        $r3 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable>;

        if $r1 != $r3 goto label1;

        $r4 = virtualinvoke $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable$Callback getCallback()>();

        if $r4 == null goto label1;

        $r4 = virtualinvoke $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable$Callback getCallback()>();

        interfaceinvoke $r4.<android.graphics.drawable.Drawable$Callback: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)>($r0, $r2);

     label1:
        return;
    }

    final void updateDensity(android.content.res.Resources)
    {
        androidx.appcompat.graphics.drawable.DrawableContainer $r0;
        android.content.res.Resources $r1;
        androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState $r2;

        $r0 := @this: androidx.appcompat.graphics.drawable.DrawableContainer;

        $r1 := @parameter0: android.content.res.Resources;

        $r2 = $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState>;

        virtualinvoke $r2.<androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void updateDensity(android.content.res.Resources)>($r1);

        return;
    }

    public static void <clinit>()
    {
        <androidx.appcompat.graphics.drawable.DrawableContainer: java.lang.String TAG> = "DrawableContainer";

        <androidx.appcompat.graphics.drawable.DrawableContainer: boolean DEFAULT_DITHER> = 1;

        <androidx.appcompat.graphics.drawable.DrawableContainer: boolean DEBUG> = 0;

        return;
    }
}
