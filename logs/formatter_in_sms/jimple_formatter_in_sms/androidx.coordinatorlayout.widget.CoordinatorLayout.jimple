public class androidx.coordinatorlayout.widget.CoordinatorLayout extends android.view.ViewGroup implements androidx.core.view.NestedScrollingParent2
{
    static final java.lang.Class[] CONSTRUCTOR_PARAMS;
    static final int EVENT_NESTED_SCROLL;
    static final int EVENT_PRE_DRAW;
    static final int EVENT_VIEW_REMOVED;
    static final java.lang.String TAG;
    static final java.util.Comparator TOP_SORTED_CHILDREN_COMPARATOR;
    private static final int TYPE_ON_INTERCEPT;
    private static final int TYPE_ON_TOUCH;
    static final java.lang.String WIDGET_PACKAGE_NAME;
    static final java.lang.ThreadLocal sConstructors;
    private static final androidx.core.util.Pools$Pool sRectPool;
    private androidx.core.view.OnApplyWindowInsetsListener mApplyWindowInsetsListener;
    private android.view.View mBehaviorTouchView;
    private final androidx.coordinatorlayout.widget.DirectedAcyclicGraph mChildDag;
    private final java.util.List mDependencySortedChildren;
    private boolean mDisallowInterceptReset;
    private boolean mDrawStatusBarBackground;
    private boolean mIsAttachedToWindow;
    private int[] mKeylines;
    private androidx.core.view.WindowInsetsCompat mLastInsets;
    private boolean mNeedsPreDrawListener;
    private final androidx.core.view.NestedScrollingParentHelper mNestedScrollingParentHelper;
    private android.view.View mNestedScrollingTarget;
    android.view.ViewGroup$OnHierarchyChangeListener mOnHierarchyChangeListener;
    private androidx.coordinatorlayout.widget.CoordinatorLayout$OnPreDrawListener mOnPreDrawListener;
    private android.graphics.Paint mScrimPaint;
    private android.graphics.drawable.Drawable mStatusBarBackground;
    private final java.util.List mTempDependenciesList;
    private final int[] mTempIntPair;
    private final java.util.List mTempList1;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.Package $r1;
        java.lang.String $r2;
        int $i0;
        androidx.coordinatorlayout.widget.CoordinatorLayout$ViewElevationComparator $r3;
        java.lang.Class[] $r4;
        java.lang.ThreadLocal $r5;
        androidx.core.util.Pools$SynchronizedPool $r6;

        <androidx.coordinatorlayout.widget.CoordinatorLayout: int TYPE_ON_TOUCH> = 1;

        <androidx.coordinatorlayout.widget.CoordinatorLayout: int TYPE_ON_INTERCEPT> = 0;

        <androidx.coordinatorlayout.widget.CoordinatorLayout: java.lang.String TAG> = "CoordinatorLayout";

        <androidx.coordinatorlayout.widget.CoordinatorLayout: int EVENT_VIEW_REMOVED> = 2;

        <androidx.coordinatorlayout.widget.CoordinatorLayout: int EVENT_PRE_DRAW> = 0;

        <androidx.coordinatorlayout.widget.CoordinatorLayout: int EVENT_NESTED_SCROLL> = 1;

        $r0 = class "Landroidx/coordinatorlayout/widget/CoordinatorLayout;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Package getPackage()>();

        if $r1 == null goto label1;

        $r2 = virtualinvoke $r1.<java.lang.Package: java.lang.String getName()>();

        goto label2;

     label1:
        $r2 = null;

     label2:
        <androidx.coordinatorlayout.widget.CoordinatorLayout: java.lang.String WIDGET_PACKAGE_NAME> = $r2;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label3;

        $r3 = new androidx.coordinatorlayout.widget.CoordinatorLayout$ViewElevationComparator;

        specialinvoke $r3.<androidx.coordinatorlayout.widget.CoordinatorLayout$ViewElevationComparator: void <init>()>();

        <androidx.coordinatorlayout.widget.CoordinatorLayout: java.util.Comparator TOP_SORTED_CHILDREN_COMPARATOR> = $r3;

        goto label4;

     label3:
        <androidx.coordinatorlayout.widget.CoordinatorLayout: java.util.Comparator TOP_SORTED_CHILDREN_COMPARATOR> = null;

     label4:
        $r4 = newarray (java.lang.Class)[2];

        $r4[0] = class "Landroid/content/Context;";

        $r4[1] = class "Landroid/util/AttributeSet;";

        <androidx.coordinatorlayout.widget.CoordinatorLayout: java.lang.Class[] CONSTRUCTOR_PARAMS> = $r4;

        $r5 = new java.lang.ThreadLocal;

        specialinvoke $r5.<java.lang.ThreadLocal: void <init>()>();

        <androidx.coordinatorlayout.widget.CoordinatorLayout: java.lang.ThreadLocal sConstructors> = $r5;

        $r6 = new androidx.core.util.Pools$SynchronizedPool;

        specialinvoke $r6.<androidx.core.util.Pools$SynchronizedPool: void <init>(int)>(12);

        <androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.core.util.Pools$Pool sRectPool> = $r6;

        return;
    }

    public void <init>(android.content.Context)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        android.content.Context $r1;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r1 := @parameter0: android.content.Context;

        specialinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: void <init>(android.content.Context,android.util.AttributeSet)>($r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 = <androidx.coordinatorlayout.R$attr: int coordinatorLayoutStyle>;

        specialinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0, $i1, $i2;
        int[] $r3;
        java.util.ArrayList $r4;
        androidx.coordinatorlayout.widget.DirectedAcyclicGraph $r5;
        androidx.core.view.NestedScrollingParentHelper $r6;
        android.content.res.TypedArray $r7;
        android.content.res.Resources $r8;
        android.util.DisplayMetrics $r9;
        float $f0, $f1;
        android.graphics.drawable.Drawable $r10;
        androidx.coordinatorlayout.widget.CoordinatorLayout$HierarchyChangeListener $r11;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        specialinvoke $r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: java.util.List mDependencySortedChildren> = $r4;

        $r5 = new androidx.coordinatorlayout.widget.DirectedAcyclicGraph;

        specialinvoke $r5.<androidx.coordinatorlayout.widget.DirectedAcyclicGraph: void <init>()>();

        $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.coordinatorlayout.widget.DirectedAcyclicGraph mChildDag> = $r5;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: java.util.List mTempList1> = $r4;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: java.util.List mTempDependenciesList> = $r4;

        $r3 = newarray (int)[2];

        $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: int[] mTempIntPair> = $r3;

        $r6 = new androidx.core.view.NestedScrollingParentHelper;

        specialinvoke $r6.<androidx.core.view.NestedScrollingParentHelper: void <init>(android.view.ViewGroup)>($r0);

        $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.core.view.NestedScrollingParentHelper mNestedScrollingParentHelper> = $r6;

        if $i0 != 0 goto label1;

        $r3 = <androidx.coordinatorlayout.R$styleable: int[] CoordinatorLayout>;

        $i0 = <androidx.coordinatorlayout.R$style: int Widget_Support_CoordinatorLayout>;

        $r7 = virtualinvoke $r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>($r2, $r3, 0, $i0);

        goto label2;

     label1:
        $r3 = <androidx.coordinatorlayout.R$styleable: int[] CoordinatorLayout>;

        $r7 = virtualinvoke $r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>($r2, $r3, $i0, 0);

     label2:
        $i0 = <androidx.coordinatorlayout.R$styleable: int CoordinatorLayout_keylines>;

        $i0 = virtualinvoke $r7.<android.content.res.TypedArray: int getResourceId(int,int)>($i0, 0);

        if $i0 == 0 goto label4;

        $r8 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r8.<android.content.res.Resources: int[] getIntArray(int)>($i0);

        $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: int[] mKeylines> = $r3;

        $r9 = virtualinvoke $r8.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f0 = $r9.<android.util.DisplayMetrics: float density>;

        $r3 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: int[] mKeylines>;

        $i0 = lengthof $r3;

        $i1 = 0;

     label3:
        if $i1 >= $i0 goto label4;

        $r3 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: int[] mKeylines>;

        $i2 = $r3[$i1];

        $f1 = (float) $i2;

        $f1 = $f1 * $f0;

        $i2 = (int) $f1;

        $r3[$i1] = $i2;

        $i1 = $i1 + 1;

        goto label3;

     label4:
        $i0 = <androidx.coordinatorlayout.R$styleable: int CoordinatorLayout_statusBarBackground>;

        $r10 = virtualinvoke $r7.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>($i0);

        $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.drawable.Drawable mStatusBarBackground> = $r10;

        virtualinvoke $r7.<android.content.res.TypedArray: void recycle()>();

        specialinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: void setupForInsets()>();

        $r11 = new androidx.coordinatorlayout.widget.CoordinatorLayout$HierarchyChangeListener;

        specialinvoke $r11.<androidx.coordinatorlayout.widget.CoordinatorLayout$HierarchyChangeListener: void <init>(androidx.coordinatorlayout.widget.CoordinatorLayout)>($r0);

        specialinvoke $r0.<android.view.ViewGroup: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)>($r11);

        return;
    }

    private static android.graphics.Rect acquireTempRect()
    {
        android.graphics.Rect $r0;
        java.lang.Object $r1;
        androidx.core.util.Pools$Pool $r2;

        $r2 = <androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.core.util.Pools$Pool sRectPool>;

        $r1 = interfaceinvoke $r2.<androidx.core.util.Pools$Pool: java.lang.Object acquire()>();

        $r0 = (android.graphics.Rect) $r1;

        if $r0 != null goto label1;

        $r0 = new android.graphics.Rect;

        specialinvoke $r0.<android.graphics.Rect: void <init>()>();

     label1:
        return $r0;
    }

    private static int clamp(int, int, int)
    {
        int $i0, $i1, $i2;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        if $i0 >= $i1 goto label1;

        return $i1;

     label1:
        if $i0 <= $i2 goto label2;

        return $i2;

     label2:
        return $i0;
    }

    private void constrainChildRect(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams, android.graphics.Rect, int, int)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams $r1;
        android.graphics.Rect $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r1 := @parameter0: androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams;

        $r2 := @parameter1: android.graphics.Rect;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $i3 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: int getWidth()>();

        $i2 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: int getHeight()>();

        $i4 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: int getPaddingLeft()>();

        $i5 = $r1.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int leftMargin>;

        $i4 = $i4 + $i5;

        $i5 = $r2.<android.graphics.Rect: int left>;

        $i6 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: int getPaddingRight()>();

        $i3 = $i3 - $i6;

        $i3 = $i3 - $i0;

        $i6 = $r1.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int rightMargin>;

        $i3 = $i3 - $i6;

        $i5 = staticinvoke <java.lang.Math: int min(int,int)>($i5, $i3);

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>($i4, $i5);

        $i5 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: int getPaddingTop()>();

        $i3 = $r1.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int topMargin>;

        $i5 = $i5 + $i3;

        $i3 = $r2.<android.graphics.Rect: int top>;

        $i6 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: int getPaddingBottom()>();

        $i2 = $i2 - $i6;

        $i6 = $i2 - $i1;

        $i2 = $r1.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int bottomMargin>;

        $i2 = $i6 - $i2;

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i3, $i2);

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>($i5, $i2);

        $i0 = $i4 + $i0;

        $i1 = $i2 + $i1;

        virtualinvoke $r2.<android.graphics.Rect: void set(int,int,int,int)>($i4, $i2, $i0, $i1);

        return;
    }

    private androidx.core.view.WindowInsetsCompat dispatchApplyWindowInsetsToBehaviors(androidx.core.view.WindowInsetsCompat)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        androidx.core.view.WindowInsetsCompat $r1, $r6;
        boolean $z0;
        int $i0, $i1;
        android.view.View $r2;
        android.view.ViewGroup$LayoutParams $r3;
        androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams $r4;
        androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior $r5;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r1 := @parameter0: androidx.core.view.WindowInsetsCompat;

        $z0 = virtualinvoke $r1.<androidx.core.view.WindowInsetsCompat: boolean isConsumed()>();

        if $z0 == 0 goto label1;

        return $r1;

     label1:
        $i0 = 0;

        $i1 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: int getChildCount()>();

     label2:
        if $i0 >= $i1 goto label4;

        $r2 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: android.view.View getChildAt(int)>($i0);

        $z0 = staticinvoke <androidx.core.view.ViewCompat: boolean getFitsSystemWindows(android.view.View)>($r2);

        if $z0 == 0 goto label3;

        $r3 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r4 = (androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) $r3;

        $r5 = virtualinvoke $r4.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()>();

        if $r5 == null goto label3;

        $r6 = virtualinvoke $r5.<androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: androidx.core.view.WindowInsetsCompat onApplyWindowInsets(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,androidx.core.view.WindowInsetsCompat)>($r0, $r2, $r1);

        $r1 = $r6;

        $z0 = virtualinvoke $r6.<androidx.core.view.WindowInsetsCompat: boolean isConsumed()>();

        if $z0 == 0 goto label3;

        return $r6;

     label3:
        $i0 = $i0 + 1;

        goto label2;

     label4:
        return $r1;
    }

    private void getDesiredAnchoredChildRectWithoutConstraints(android.view.View, int, android.graphics.Rect, android.graphics.Rect, androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams, int, int)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        android.view.View $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        android.graphics.Rect $r2, $r3;
        androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams $r4;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r2 := @parameter2: android.graphics.Rect;

        $r3 := @parameter3: android.graphics.Rect;

        $r4 := @parameter4: androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams;

        $i1 := @parameter5: int;

        $i2 := @parameter6: int;

        $i3 = $r4.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int gravity>;

        $i3 = staticinvoke <androidx.coordinatorlayout.widget.CoordinatorLayout: int resolveAnchoredChildGravity(int)>($i3);

        $i3 = staticinvoke <androidx.core.view.GravityCompat: int getAbsoluteGravity(int,int)>($i3, $i0);

        $i4 = $r4.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int anchorGravity>;

        $i4 = staticinvoke <androidx.coordinatorlayout.widget.CoordinatorLayout: int resolveGravity(int)>($i4);

        $i5 = staticinvoke <androidx.core.view.GravityCompat: int getAbsoluteGravity(int,int)>($i4, $i0);

        $i0 = $i3 & 7;

        $i3 = $i3 & 112;

        $i4 = $i5 & 7;

        $i5 = $i5 & 112;

        if $i4 == 1 goto label02;

        if $i4 == 5 goto label01;

        $i4 = $r2.<android.graphics.Rect: int left>;

        goto label03;

     label01:
        $i4 = $r2.<android.graphics.Rect: int right>;

        goto label03;

     label02:
        $i4 = $r2.<android.graphics.Rect: int left>;

        $i6 = virtualinvoke $r2.<android.graphics.Rect: int width()>();

        $i6 = $i6 / 2;

        $i4 = $i4 + $i6;

     label03:
        if $i5 == 16 goto label05;

        if $i5 == 80 goto label04;

        $i5 = $r2.<android.graphics.Rect: int top>;

        goto label06;

     label04:
        $i5 = $r2.<android.graphics.Rect: int bottom>;

        goto label06;

     label05:
        $i5 = $r2.<android.graphics.Rect: int top>;

        $i6 = virtualinvoke $r2.<android.graphics.Rect: int height()>();

        $i6 = $i6 / 2;

        $i5 = $i5 + $i6;

     label06:
        if $i0 == 1 goto label08;

        if $i0 == 5 goto label07;

        $i4 = $i4 - $i1;

        goto label09;

     label07:
        goto label09;

     label08:
        $i0 = $i1 / 2;

        $i4 = $i4 - $i0;

     label09:
        if $i3 == 16 goto label11;

        if $i3 == 80 goto label10;

        $i5 = $i5 - $i2;

        goto label12;

     label10:
        goto label12;

     label11:
        $i0 = $i2 / 2;

        $i5 = $i5 - $i0;

     label12:
        $i0 = $i4 + $i1;

        $i1 = $i5 + $i2;

        virtualinvoke $r3.<android.graphics.Rect: void set(int,int,int,int)>($i4, $i5, $i0, $i1);

        return;
    }

    private int getKeyline(int)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        int $i0, $i1;
        int[] $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $i0 := @parameter0: int;

        $r1 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: int[] mKeylines>;

        if $r1 != null goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No keylines defined for ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - attempted index lookup ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CoordinatorLayout", $r3);

        return 0;

     label1:
        if $i0 < 0 goto label3;

        $i1 = lengthof $r1;

        if $i0 < $i1 goto label2;

        goto label3;

     label2:
        $i0 = $r1[$i0];

        return $i0;

     label3:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Keyline index ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" out of range for ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CoordinatorLayout", $r3);

        return 0;
    }

    private void getTopSortedChildren(java.util.List)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        java.util.List $r1;
        boolean $z0;
        int $i0, $i1, $i2;
        android.view.View $r2;
        java.util.Comparator $r3;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r1 := @parameter0: java.util.List;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        $z0 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean isChildrenDrawingOrderEnabled()>();

        $i0 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: int getChildCount()>();

        $i1 = $i0 + -1;

     label1:
        if $i1 < 0 goto label4;

        if $z0 == 0 goto label2;

        $i2 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: int getChildDrawingOrder(int,int)>($i0, $i1);

        goto label3;

     label2:
        $i2 = $i1;

     label3:
        $r2 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: android.view.View getChildAt(int)>($i2);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r2);

        $i1 = $i1 + -1;

        goto label1;

     label4:
        $r3 = <androidx.coordinatorlayout.widget.CoordinatorLayout: java.util.Comparator TOP_SORTED_CHILDREN_COMPARATOR>;

        if $r3 == null goto label5;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r1, $r3);

     label5:
        return;
    }

    private boolean hasDependencies(android.view.View)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        android.view.View $r1;
        boolean $z0;
        androidx.coordinatorlayout.widget.DirectedAcyclicGraph $r2;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r1 := @parameter0: android.view.View;

        $r2 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.coordinatorlayout.widget.DirectedAcyclicGraph mChildDag>;

        $z0 = virtualinvoke $r2.<androidx.coordinatorlayout.widget.DirectedAcyclicGraph: boolean hasOutgoingEdges(java.lang.Object)>($r1);

        return $z0;
    }

    private void layoutChild(android.view.View, int)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        android.view.View $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.view.ViewGroup$LayoutParams $r2;
        androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams $r3;
        android.graphics.Rect $r4, $r6;
        androidx.core.view.WindowInsetsCompat $r5;
        boolean $z0;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) $r2;

        $r4 = staticinvoke <androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.Rect acquireTempRect()>();

        $i1 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: int getPaddingLeft()>();

        $i2 = $r3.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int leftMargin>;

        $i1 = $i1 + $i2;

        $i2 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: int getPaddingTop()>();

        $i3 = $r3.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int topMargin>;

        $i2 = $i2 + $i3;

        $i3 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: int getWidth()>();

        $i4 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: int getPaddingRight()>();

        $i3 = $i3 - $i4;

        $i4 = $r3.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int rightMargin>;

        $i3 = $i3 - $i4;

        $i4 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: int getHeight()>();

        $i5 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: int getPaddingBottom()>();

        $i4 = $i4 - $i5;

        $i5 = $r3.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int bottomMargin>;

        $i4 = $i4 - $i5;

        virtualinvoke $r4.<android.graphics.Rect: void set(int,int,int,int)>($i1, $i2, $i3, $i4);

        $r5 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.core.view.WindowInsetsCompat mLastInsets>;

        if $r5 == null goto label1;

        $z0 = staticinvoke <androidx.core.view.ViewCompat: boolean getFitsSystemWindows(android.view.View)>($r0);

        if $z0 == 0 goto label1;

        $z0 = staticinvoke <androidx.core.view.ViewCompat: boolean getFitsSystemWindows(android.view.View)>($r1);

        if $z0 != 0 goto label1;

        $i1 = $r4.<android.graphics.Rect: int left>;

        $r5 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.core.view.WindowInsetsCompat mLastInsets>;

        $i2 = virtualinvoke $r5.<androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetLeft()>();

        $i1 = $i1 + $i2;

        $r4.<android.graphics.Rect: int left> = $i1;

        $i1 = $r4.<android.graphics.Rect: int top>;

        $r5 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.core.view.WindowInsetsCompat mLastInsets>;

        $i2 = virtualinvoke $r5.<androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetTop()>();

        $i1 = $i1 + $i2;

        $r4.<android.graphics.Rect: int top> = $i1;

        $i1 = $r4.<android.graphics.Rect: int right>;

        $r5 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.core.view.WindowInsetsCompat mLastInsets>;

        $i2 = virtualinvoke $r5.<androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetRight()>();

        $i1 = $i1 - $i2;

        $r4.<android.graphics.Rect: int right> = $i1;

        $i1 = $r4.<android.graphics.Rect: int bottom>;

        $r5 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.core.view.WindowInsetsCompat mLastInsets>;

        $i2 = virtualinvoke $r5.<androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetBottom()>();

        $i1 = $i1 - $i2;

        $r4.<android.graphics.Rect: int bottom> = $i1;

     label1:
        $r6 = staticinvoke <androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.Rect acquireTempRect()>();

        $i1 = $r3.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int gravity>;

        $i1 = staticinvoke <androidx.coordinatorlayout.widget.CoordinatorLayout: int resolveGravity(int)>($i1);

        $i2 = virtualinvoke $r1.<android.view.View: int getMeasuredWidth()>();

        $i3 = virtualinvoke $r1.<android.view.View: int getMeasuredHeight()>();

        staticinvoke <androidx.core.view.GravityCompat: void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int)>($i1, $i2, $i3, $r4, $r6, $i0);

        $i0 = $r6.<android.graphics.Rect: int left>;

        $i1 = $r6.<android.graphics.Rect: int top>;

        $i2 = $r6.<android.graphics.Rect: int right>;

        $i3 = $r6.<android.graphics.Rect: int bottom>;

        virtualinvoke $r1.<android.view.View: void layout(int,int,int,int)>($i0, $i1, $i2, $i3);

        staticinvoke <androidx.coordinatorlayout.widget.CoordinatorLayout: void releaseTempRect(android.graphics.Rect)>($r4);

        staticinvoke <androidx.coordinatorlayout.widget.CoordinatorLayout: void releaseTempRect(android.graphics.Rect)>($r6);

        return;
    }

    private void layoutChildWithAnchor(android.view.View, android.view.View, int)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        android.view.View $r1, $r2;
        int $i0, $i1, $i2, $i3;
        android.graphics.Rect $r3, $r4;
        java.lang.Throwable $r5;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.view.View;

        $i0 := @parameter2: int;

        $r3 = staticinvoke <androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.Rect acquireTempRect()>();

        $r4 = staticinvoke <androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.Rect acquireTempRect()>();

     label1:
        virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: void getDescendantRect(android.view.View,android.graphics.Rect)>($r2, $r3);

        virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: void getDesiredAnchoredChildRect(android.view.View,int,android.graphics.Rect,android.graphics.Rect)>($r1, $i0, $r3, $r4);

        $i3 = $r4.<android.graphics.Rect: int left>;

        $i0 = $r4.<android.graphics.Rect: int top>;

        $i1 = $r4.<android.graphics.Rect: int right>;

        $i2 = $r4.<android.graphics.Rect: int bottom>;

        virtualinvoke $r1.<android.view.View: void layout(int,int,int,int)>($i3, $i0, $i1, $i2);

     label2:
        staticinvoke <androidx.coordinatorlayout.widget.CoordinatorLayout: void releaseTempRect(android.graphics.Rect)>($r3);

        staticinvoke <androidx.coordinatorlayout.widget.CoordinatorLayout: void releaseTempRect(android.graphics.Rect)>($r4);

        return;

     label3:
        $r5 := @caughtexception;

        staticinvoke <androidx.coordinatorlayout.widget.CoordinatorLayout: void releaseTempRect(android.graphics.Rect)>($r3);

        staticinvoke <androidx.coordinatorlayout.widget.CoordinatorLayout: void releaseTempRect(android.graphics.Rect)>($r4);

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private void layoutChildWithKeyline(android.view.View, int, int)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        android.view.View $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        android.view.ViewGroup$LayoutParams $r2;
        androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams $r3;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) $r2;

        $i4 = $r3.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int gravity>;

        $i4 = staticinvoke <androidx.coordinatorlayout.widget.CoordinatorLayout: int resolveKeylineGravity(int)>($i4);

        $i4 = staticinvoke <androidx.core.view.GravityCompat: int getAbsoluteGravity(int,int)>($i4, $i1);

        $i2 = $i4 & 7;

        $i3 = $i4 & 112;

        $i5 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: int getWidth()>();

        $i6 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: int getHeight()>();

        $i7 = virtualinvoke $r1.<android.view.View: int getMeasuredWidth()>();

        $i4 = virtualinvoke $r1.<android.view.View: int getMeasuredHeight()>();

        if $i1 != 1 goto label1;

        $i0 = $i5 - $i0;

        goto label1;

     label1:
        $i0 = specialinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: int getKeyline(int)>($i0);

        $i1 = $i0 - $i7;

        $i0 = 0;

        if $i2 == 1 goto label3;

        if $i2 == 5 goto label2;

        goto label4;

     label2:
        $i1 = $i1 + $i7;

        goto label4;

     label3:
        $i2 = $i7 / 2;

        $i1 = $i1 + $i2;

     label4:
        if $i3 == 16 goto label6;

        if $i3 == 80 goto label5;

        goto label7;

     label5:
        $i0 = $i4;

        goto label7;

     label6:
        $i0 = $i4 / 2;

     label7:
        $i2 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: int getPaddingLeft()>();

        $i3 = $r3.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int leftMargin>;

        $i2 = $i2 + $i3;

        $i3 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: int getPaddingRight()>();

        $i5 = $i5 - $i3;

        $i5 = $i5 - $i7;

        $i3 = $r3.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int rightMargin>;

        $i5 = $i5 - $i3;

        $i1 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i5);

        $i1 = staticinvoke <java.lang.Math: int max(int,int)>($i2, $i1);

        $i5 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: int getPaddingTop()>();

        $i2 = $r3.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int topMargin>;

        $i5 = $i5 + $i2;

        $i2 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: int getPaddingBottom()>();

        $i6 = $i6 - $i2;

        $i6 = $i6 - $i4;

        $i2 = $r3.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int bottomMargin>;

        $i6 = $i6 - $i2;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i6);

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>($i5, $i0);

        $i7 = $i1 + $i7;

        $i4 = $i0 + $i4;

        virtualinvoke $r1.<android.view.View: void layout(int,int,int,int)>($i1, $i0, $i7, $i4);

        return;
    }

    private void offsetChildByInset(android.view.View, android.graphics.Rect, int)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        android.view.View $r1;
        android.graphics.Rect $r2, $r6, $r7;
        int $i0, $i1, $i2, $i3, $i4;
        boolean $z0;
        android.view.ViewGroup$LayoutParams $r3;
        androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams $r4;
        androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior $r5;
        java.lang.IllegalArgumentException $r8;
        java.lang.StringBuilder $r9;
        java.lang.String $r10;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.graphics.Rect;

        $i0 := @parameter2: int;

        $z0 = staticinvoke <androidx.core.view.ViewCompat: boolean isLaidOut(android.view.View)>($r1);

        if $z0 != 0 goto label01;

        return;

     label01:
        $i1 = virtualinvoke $r1.<android.view.View: int getWidth()>();

        if $i1 <= 0 goto label13;

        $i1 = virtualinvoke $r1.<android.view.View: int getHeight()>();

        if $i1 > 0 goto label02;

        return;

     label02:
        $r3 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r4 = (androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) $r3;

        $r5 = virtualinvoke $r4.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()>();

        $r6 = staticinvoke <androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.Rect acquireTempRect()>();

        $r7 = staticinvoke <androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.Rect acquireTempRect()>();

        $i1 = virtualinvoke $r1.<android.view.View: int getLeft()>();

        $i2 = virtualinvoke $r1.<android.view.View: int getTop()>();

        $i3 = virtualinvoke $r1.<android.view.View: int getRight()>();

        $i4 = virtualinvoke $r1.<android.view.View: int getBottom()>();

        virtualinvoke $r7.<android.graphics.Rect: void set(int,int,int,int)>($i1, $i2, $i3, $i4);

        if $r5 == null goto label04;

        $z0 = virtualinvoke $r5.<androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: boolean getInsetDodgeRect(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.graphics.Rect)>($r0, $r1, $r6);

        if $z0 == 0 goto label04;

        $z0 = virtualinvoke $r7.<android.graphics.Rect: boolean contains(android.graphics.Rect)>($r6);

        if $z0 == 0 goto label03;

        goto label05;

     label03:
        $r8 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Rect should be within the child\'s bounds. Rect:");

        $r10 = virtualinvoke $r6.<android.graphics.Rect: java.lang.String toShortString()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" | Bounds:");

        $r10 = virtualinvoke $r7.<android.graphics.Rect: java.lang.String toShortString()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r8;

     label04:
        virtualinvoke $r6.<android.graphics.Rect: void set(android.graphics.Rect)>($r7);

     label05:
        staticinvoke <androidx.coordinatorlayout.widget.CoordinatorLayout: void releaseTempRect(android.graphics.Rect)>($r7);

        $z0 = virtualinvoke $r6.<android.graphics.Rect: boolean isEmpty()>();

        if $z0 == 0 goto label06;

        staticinvoke <androidx.coordinatorlayout.widget.CoordinatorLayout: void releaseTempRect(android.graphics.Rect)>($r6);

        return;

     label06:
        $i1 = $r4.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int dodgeInsetEdges>;

        $i0 = staticinvoke <androidx.core.view.GravityCompat: int getAbsoluteGravity(int,int)>($i1, $i0);

        $z0 = 0;

        $i1 = $i0 & 48;

        if $i1 != 48 goto label07;

        $i1 = $r6.<android.graphics.Rect: int top>;

        $i2 = $r4.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int topMargin>;

        $i1 = $i1 - $i2;

        $i2 = $r4.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int mInsetOffsetY>;

        $i1 = $i1 - $i2;

        $i2 = $r2.<android.graphics.Rect: int top>;

        if $i1 >= $i2 goto label07;

        $i2 = $r2.<android.graphics.Rect: int top>;

        $i1 = $i2 - $i1;

        specialinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: void setInsetOffsetY(android.view.View,int)>($r1, $i1);

        $z0 = 1;

     label07:
        $i1 = $i0 & 80;

        if $i1 != 80 goto label08;

        $i1 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: int getHeight()>();

        $i2 = $r6.<android.graphics.Rect: int bottom>;

        $i1 = $i1 - $i2;

        $i2 = $r4.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int bottomMargin>;

        $i1 = $i1 - $i2;

        $i2 = $r4.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int mInsetOffsetY>;

        $i1 = $i1 + $i2;

        $i2 = $r2.<android.graphics.Rect: int bottom>;

        if $i1 >= $i2 goto label08;

        $i2 = $r2.<android.graphics.Rect: int bottom>;

        $i1 = $i1 - $i2;

        specialinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: void setInsetOffsetY(android.view.View,int)>($r1, $i1);

        $z0 = 1;

     label08:
        if $z0 != 0 goto label09;

        specialinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: void setInsetOffsetY(android.view.View,int)>($r1, 0);

     label09:
        $z0 = 0;

        $i1 = $i0 & 3;

        if $i1 != 3 goto label10;

        $i1 = $r6.<android.graphics.Rect: int left>;

        $i2 = $r4.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int leftMargin>;

        $i1 = $i1 - $i2;

        $i2 = $r4.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int mInsetOffsetX>;

        $i1 = $i1 - $i2;

        $i2 = $r2.<android.graphics.Rect: int left>;

        if $i1 >= $i2 goto label10;

        $i2 = $r2.<android.graphics.Rect: int left>;

        $i1 = $i2 - $i1;

        specialinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: void setInsetOffsetX(android.view.View,int)>($r1, $i1);

        $z0 = 1;

     label10:
        $i0 = $i0 & 5;

        if $i0 != 5 goto label11;

        $i0 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: int getWidth()>();

        $i1 = $r6.<android.graphics.Rect: int right>;

        $i0 = $i0 - $i1;

        $i1 = $r4.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int rightMargin>;

        $i0 = $i0 - $i1;

        $i1 = $r4.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int mInsetOffsetX>;

        $i0 = $i0 + $i1;

        $i1 = $r2.<android.graphics.Rect: int right>;

        if $i0 >= $i1 goto label11;

        $i1 = $r2.<android.graphics.Rect: int right>;

        $i0 = $i0 - $i1;

        specialinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: void setInsetOffsetX(android.view.View,int)>($r1, $i0);

        $z0 = 1;

     label11:
        if $z0 != 0 goto label12;

        specialinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: void setInsetOffsetX(android.view.View,int)>($r1, 0);

     label12:
        staticinvoke <androidx.coordinatorlayout.widget.CoordinatorLayout: void releaseTempRect(android.graphics.Rect)>($r6);

     label13:
        return;
    }

    static androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior parseBehavior(android.content.Context, android.util.AttributeSet, java.lang.String)
    {
        android.content.Context $r0;
        android.util.AttributeSet $r1;
        java.lang.String $r2, $r4;
        boolean $z0;
        java.lang.StringBuilder $r3, r17;
        int $i0;
        java.lang.ThreadLocal $r5;
        java.lang.Object $r6, $r8;
        java.util.HashMap $r7, r18;
        java.lang.reflect.Constructor $r9, $r13;
        java.lang.ClassLoader $r10;
        java.lang.Class $r11;
        java.lang.Class[] $r12;
        java.lang.Object[] $r14;
        androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior $r15;
        java.lang.Exception $r16;
        java.lang.RuntimeException r19;
        java.util.Map r20;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.util.AttributeSet;

        $r2 := @parameter2: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z0 == 0 goto label01;

        return null;

     label01:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>(".");

        if $z0 == 0 goto label02;

        r17 = new java.lang.StringBuilder;

        $r3 = r17;

        specialinvoke r17.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label04;

     label02:
        $i0 = virtualinvoke $r2.<java.lang.String: int indexOf(int)>(46);

        if $i0 < 0 goto label03;

        goto label04;

     label03:
        $r4 = <androidx.coordinatorlayout.widget.CoordinatorLayout: java.lang.String WIDGET_PACKAGE_NAME>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r4);

        if $z0 != 0 goto label04;

        r17 = new java.lang.StringBuilder;

        $r3 = r17;

        specialinvoke r17.<java.lang.StringBuilder: void <init>()>();

        $r4 = <androidx.coordinatorlayout.widget.CoordinatorLayout: java.lang.String WIDGET_PACKAGE_NAME>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label04;

     label04:
        $r5 = <androidx.coordinatorlayout.widget.CoordinatorLayout: java.lang.ThreadLocal sConstructors>;

     label05:
        $r6 = virtualinvoke $r5.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r6 = (java.util.Map) $r6;

     label06:
        if $r6 != null goto label10;

        r18 = new java.util.HashMap;

        $r7 = r18;

     label07:
        specialinvoke r18.<java.util.HashMap: void <init>()>();

     label08:
        $r6 = $r7;

        $r5 = <androidx.coordinatorlayout.widget.CoordinatorLayout: java.lang.ThreadLocal sConstructors>;

     label09:
        virtualinvoke $r5.<java.lang.ThreadLocal: void set(java.lang.Object)>($r7);

     label10:
        r20 = (java.util.Map) $r6;

        $r8 = interfaceinvoke r20.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        $r9 = (java.lang.reflect.Constructor) $r8;

     label11:
        if $r9 != null goto label17;

     label12:
        $r10 = virtualinvoke $r0.<android.content.Context: java.lang.ClassLoader getClassLoader()>();

        $r11 = virtualinvoke $r10.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>($r2);

     label13:
        $r12 = <androidx.coordinatorlayout.widget.CoordinatorLayout: java.lang.Class[] CONSTRUCTOR_PARAMS>;

     label14:
        $r13 = virtualinvoke $r11.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r12);

     label15:
        $r9 = $r13;

     label16:
        virtualinvoke $r13.<java.lang.reflect.Constructor: void setAccessible(boolean)>(1);

        r20 = (java.util.Map) $r6;

        interfaceinvoke r20.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r13);

     label17:
        $r14 = newarray (java.lang.Object)[2];

        $r14[0] = $r0;

        $r14[1] = $r1;

        $r6 = virtualinvoke $r9.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r14);

        $r15 = (androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior) $r6;

     label18:
        return $r15;

     label19:
        $r16 := @caughtexception;

        r19 = new java.lang.RuntimeException;

        r17 = new java.lang.StringBuilder;

        $r3 = r17;

        specialinvoke r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not inflate Behavior subclass ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r19.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r2, $r16);

        throw r19;

        catch java.lang.Exception from label05 to label06 with label19;
        catch java.lang.Exception from label07 to label08 with label19;
        catch java.lang.Exception from label09 to label11 with label19;
        catch java.lang.Exception from label12 to label13 with label19;
        catch java.lang.Exception from label14 to label15 with label19;
        catch java.lang.Exception from label16 to label18 with label19;
    }

    private boolean performIntercept(android.view.MotionEvent, int)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        android.view.MotionEvent $r1, $r3;
        int $i0, $i1, $i2, $i3;
        java.util.List $r2;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r4;
        android.view.View $r5;
        android.view.ViewGroup$LayoutParams $r6;
        androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams $r7;
        androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior $r8;
        long $l4;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r1 := @parameter0: android.view.MotionEvent;

        $i0 := @parameter1: int;

        $z0 = 0;

        $z1 = 0;

        $r3 = null;

        $i1 = virtualinvoke $r1.<android.view.MotionEvent: int getActionMasked()>();

        $r2 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: java.util.List mTempList1>;

        specialinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: void getTopSortedChildren(java.util.List)>($r2);

        $i2 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i3 = 0;

     label01:
        if $i3 >= $i2 goto label15;

        $r4 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i3);

        $r5 = (android.view.View) $r4;

        $r6 = virtualinvoke $r5.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r7 = (androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) $r6;

        $r8 = virtualinvoke $r7.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()>();

        $z2 = 1;

        if $z0 != 0 goto label02;

        if $z1 == 0 goto label07;

     label02:
        if $i1 == 0 goto label07;

        if $r8 == null goto label14;

        if $r3 != null goto label03;

        $l4 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r3 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,float,float,int)>($l4, $l4, 3, 0.0F, 0.0F, 0);

     label03:
        if $i0 == 0 goto label05;

        if $i0 == 1 goto label04;

        goto label06;

     label04:
        virtualinvoke $r8.<androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: boolean onTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)>($r0, $r5, $r3);

        goto label06;

     label05:
        virtualinvoke $r8.<androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: boolean onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)>($r0, $r5, $r3);

     label06:
        goto label14;

     label07:
        if $z0 != 0 goto label11;

        if $r8 == null goto label11;

        if $i0 == 0 goto label09;

        if $i0 == 1 goto label08;

        goto label10;

     label08:
        $z0 = virtualinvoke $r8.<androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: boolean onTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)>($r0, $r5, $r1);

        goto label10;

     label09:
        $z0 = virtualinvoke $r8.<androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: boolean onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)>($r0, $r5, $r1);

     label10:
        if $z0 == 0 goto label11;

        $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: android.view.View mBehaviorTouchView> = $r5;

     label11:
        $z1 = virtualinvoke $r7.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: boolean didBlockInteraction()>();

        $z3 = virtualinvoke $r7.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: boolean isBlockingInteractionBelow(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View)>($r0, $r5);

        if $z3 == 0 goto label12;

        if $z1 != 0 goto label12;

        goto label13;

     label12:
        $z2 = 0;

     label13:
        $z1 = $z2;

        if $z3 == 0 goto label14;

        if $z2 != 0 goto label14;

        goto label15;

     label14:
        $i3 = $i3 + 1;

        goto label01;

     label15:
        interfaceinvoke $r2.<java.util.List: void clear()>();

        return $z0;
    }

    private void prepareChildren()
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        java.util.List $r1;
        androidx.coordinatorlayout.widget.DirectedAcyclicGraph $r2;
        int $i0, $i1, $i2;
        android.view.View $r3, $r5;
        androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams $r4;
        boolean $z0;
        java.util.ArrayList $r6;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r1 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: java.util.List mDependencySortedChildren>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        $r2 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.coordinatorlayout.widget.DirectedAcyclicGraph mChildDag>;

        virtualinvoke $r2.<androidx.coordinatorlayout.widget.DirectedAcyclicGraph: void clear()>();

        $i0 = 0;

        $i1 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: int getChildCount()>();

     label1:
        if $i0 >= $i1 goto label7;

        $r3 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: android.view.View getChildAt(int)>($i0);

        $r4 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams getResolvedLayoutParams(android.view.View)>($r3);

        virtualinvoke $r4.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: android.view.View findAnchorView(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View)>($r0, $r3);

        $r2 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.coordinatorlayout.widget.DirectedAcyclicGraph mChildDag>;

        virtualinvoke $r2.<androidx.coordinatorlayout.widget.DirectedAcyclicGraph: void addNode(java.lang.Object)>($r3);

        $i2 = 0;

     label2:
        if $i2 >= $i1 goto label6;

        if $i2 != $i0 goto label3;

        goto label5;

     label3:
        $r5 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: android.view.View getChildAt(int)>($i2);

        $z0 = virtualinvoke $r4.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: boolean dependsOn(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View)>($r0, $r3, $r5);

        if $z0 == 0 goto label5;

        $r2 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.coordinatorlayout.widget.DirectedAcyclicGraph mChildDag>;

        $z0 = virtualinvoke $r2.<androidx.coordinatorlayout.widget.DirectedAcyclicGraph: boolean contains(java.lang.Object)>($r5);

        if $z0 != 0 goto label4;

        $r2 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.coordinatorlayout.widget.DirectedAcyclicGraph mChildDag>;

        virtualinvoke $r2.<androidx.coordinatorlayout.widget.DirectedAcyclicGraph: void addNode(java.lang.Object)>($r5);

     label4:
        $r2 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.coordinatorlayout.widget.DirectedAcyclicGraph mChildDag>;

        virtualinvoke $r2.<androidx.coordinatorlayout.widget.DirectedAcyclicGraph: void addEdge(java.lang.Object,java.lang.Object)>($r5, $r3);

     label5:
        $i2 = $i2 + 1;

        goto label2;

     label6:
        $i0 = $i0 + 1;

        goto label1;

     label7:
        $r1 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: java.util.List mDependencySortedChildren>;

        $r2 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.coordinatorlayout.widget.DirectedAcyclicGraph mChildDag>;

        $r6 = virtualinvoke $r2.<androidx.coordinatorlayout.widget.DirectedAcyclicGraph: java.util.ArrayList getSortedList()>();

        interfaceinvoke $r1.<java.util.List: boolean addAll(java.util.Collection)>($r6);

        $r1 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: java.util.List mDependencySortedChildren>;

        staticinvoke <java.util.Collections: void reverse(java.util.List)>($r1);

        return;
    }

    private static void releaseTempRect(android.graphics.Rect)
    {
        android.graphics.Rect $r0;
        androidx.core.util.Pools$Pool $r1;

        $r0 := @parameter0: android.graphics.Rect;

        virtualinvoke $r0.<android.graphics.Rect: void setEmpty()>();

        $r1 = <androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.core.util.Pools$Pool sRectPool>;

        interfaceinvoke $r1.<androidx.core.util.Pools$Pool: boolean release(java.lang.Object)>($r0);

        return;
    }

    private void resetTouchBehaviors(boolean)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        boolean $z0;
        int $i0, $i1;
        android.view.View $r1;
        android.view.ViewGroup$LayoutParams $r2;
        androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams $r3;
        androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior $r4;
        long $l2;
        android.view.MotionEvent $r5;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $z0 := @parameter0: boolean;

        $i0 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: int getChildCount()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label5;

        $r1 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: android.view.View getChildAt(int)>($i1);

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) $r2;

        $r4 = virtualinvoke $r3.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()>();

        if $r4 == null goto label4;

        $l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r5 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,float,float,int)>($l2, $l2, 3, 0.0F, 0.0F, 0);

        if $z0 == 0 goto label2;

        virtualinvoke $r4.<androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: boolean onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)>($r0, $r1, $r5);

        goto label3;

     label2:
        virtualinvoke $r4.<androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: boolean onTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)>($r0, $r1, $r5);

     label3:
        virtualinvoke $r5.<android.view.MotionEvent: void recycle()>();

     label4:
        $i1 = $i1 + 1;

        goto label1;

     label5:
        $i1 = 0;

     label6:
        if $i1 >= $i0 goto label7;

        $r1 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: android.view.View getChildAt(int)>($i1);

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) $r2;

        virtualinvoke $r3.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: void resetTouchBehaviorTracking()>();

        $i1 = $i1 + 1;

        goto label6;

     label7:
        $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: android.view.View mBehaviorTouchView> = null;

        $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean mDisallowInterceptReset> = 0;

        return;
    }

    private static int resolveAnchoredChildGravity(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        if $i0 != 0 goto label1;

        return 17;

     label1:
        return $i0;
    }

    private static int resolveGravity(int)
    {
        int $i0, $i1;

        $i0 := @parameter0: int;

        $i1 = $i0 & 7;

        if $i1 != 0 goto label1;

        $i0 = $i0 | 8388611;

     label1:
        $i1 = $i0 & 112;

        if $i1 != 0 goto label2;

        $i0 = $i0 | 48;

     label2:
        return $i0;
    }

    private static int resolveKeylineGravity(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        if $i0 != 0 goto label1;

        return 8388661;

     label1:
        return $i0;
    }

    private void setInsetOffsetX(android.view.View, int)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        android.view.View $r1;
        int $i0, $i1;
        android.view.ViewGroup$LayoutParams $r2;
        androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams $r3;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) $r2;

        $i1 = $r3.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int mInsetOffsetX>;

        if $i1 == $i0 goto label1;

        $i1 = $r3.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int mInsetOffsetX>;

        $i1 = $i0 - $i1;

        staticinvoke <androidx.core.view.ViewCompat: void offsetLeftAndRight(android.view.View,int)>($r1, $i1);

        $r3.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int mInsetOffsetX> = $i0;

     label1:
        return;
    }

    private void setInsetOffsetY(android.view.View, int)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        android.view.View $r1;
        int $i0, $i1;
        android.view.ViewGroup$LayoutParams $r2;
        androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams $r3;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) $r2;

        $i1 = $r3.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int mInsetOffsetY>;

        if $i1 == $i0 goto label1;

        $i1 = $r3.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int mInsetOffsetY>;

        $i1 = $i0 - $i1;

        staticinvoke <androidx.core.view.ViewCompat: void offsetTopAndBottom(android.view.View,int)>($r1, $i1);

        $r3.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int mInsetOffsetY> = $i0;

     label1:
        return;
    }

    private void setupForInsets()
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        boolean $z0;
        int $i0;
        androidx.core.view.OnApplyWindowInsetsListener $r1;
        androidx.coordinatorlayout.widget.CoordinatorLayout$1 $r2;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 21 goto label1;

        return;

     label1:
        $z0 = staticinvoke <androidx.core.view.ViewCompat: boolean getFitsSystemWindows(android.view.View)>($r0);

        if $z0 == 0 goto label3;

        $r1 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.core.view.OnApplyWindowInsetsListener mApplyWindowInsetsListener>;

        if $r1 != null goto label2;

        $r2 = new androidx.coordinatorlayout.widget.CoordinatorLayout$1;

        specialinvoke $r2.<androidx.coordinatorlayout.widget.CoordinatorLayout$1: void <init>(androidx.coordinatorlayout.widget.CoordinatorLayout)>($r0);

        $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.core.view.OnApplyWindowInsetsListener mApplyWindowInsetsListener> = $r2;

     label2:
        $r1 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.core.view.OnApplyWindowInsetsListener mApplyWindowInsetsListener>;

        staticinvoke <androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>($r0, $r1);

        virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: void setSystemUiVisibility(int)>(1280);

        return;

     label3:
        staticinvoke <androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>($r0, null);

        return;
    }

    void addPreDrawListener()
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        androidx.coordinatorlayout.widget.CoordinatorLayout$OnPreDrawListener $r1;
        android.view.ViewTreeObserver $r2;
        boolean $z0;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $z0 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean mIsAttachedToWindow>;

        if $z0 == 0 goto label2;

        $r1 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.coordinatorlayout.widget.CoordinatorLayout$OnPreDrawListener mOnPreDrawListener>;

        if $r1 != null goto label1;

        $r1 = new androidx.coordinatorlayout.widget.CoordinatorLayout$OnPreDrawListener;

        specialinvoke $r1.<androidx.coordinatorlayout.widget.CoordinatorLayout$OnPreDrawListener: void <init>(androidx.coordinatorlayout.widget.CoordinatorLayout)>($r0);

        $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.coordinatorlayout.widget.CoordinatorLayout$OnPreDrawListener mOnPreDrawListener> = $r1;

     label1:
        $r2 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: android.view.ViewTreeObserver getViewTreeObserver()>();

        $r1 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.coordinatorlayout.widget.CoordinatorLayout$OnPreDrawListener mOnPreDrawListener>;

        virtualinvoke $r2.<android.view.ViewTreeObserver: void addOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener)>($r1);

     label2:
        $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean mNeedsPreDrawListener> = 1;

        return;
    }

    protected boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        android.view.ViewGroup$LayoutParams $r1;
        boolean $z0;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $z0 = $r1 instanceof androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams;

        if $z0 == 0 goto label1;

        $z0 = specialinvoke $r0.<android.view.ViewGroup: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>($r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void dispatchDependentViewsChanged(android.view.View)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        android.view.View $r1, $r5;
        androidx.coordinatorlayout.widget.DirectedAcyclicGraph $r2;
        java.util.List $r3;
        boolean $z0;
        int $i0, $i1;
        java.lang.Object $r4;
        android.view.ViewGroup$LayoutParams $r6;
        androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams $r7;
        androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior $r8;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r1 := @parameter0: android.view.View;

        $r2 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.coordinatorlayout.widget.DirectedAcyclicGraph mChildDag>;

        $r3 = virtualinvoke $r2.<androidx.coordinatorlayout.widget.DirectedAcyclicGraph: java.util.List getIncomingEdges(java.lang.Object)>($r1);

        if $r3 == null goto label3;

        $z0 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label3;

        $i0 = 0;

     label1:
        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i0 >= $i1 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>($i0);

        $r5 = (android.view.View) $r4;

        $r6 = virtualinvoke $r5.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r7 = (androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) $r6;

        $r8 = virtualinvoke $r7.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()>();

        if $r8 == null goto label2;

        virtualinvoke $r8.<androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View)>($r0, $r5, $r1);

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        return;
    }

    public boolean doViewsOverlap(android.view.View, android.view.View)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        android.view.View $r1, $r2;
        int $i0, $i1;
        boolean $z0, $z1;
        android.graphics.Rect $r3, $r5;
        android.view.ViewParent $r4;
        java.lang.Throwable $r6;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.view.View;

        $i0 = virtualinvoke $r1.<android.view.View: int getVisibility()>();

        $z0 = 0;

        if $i0 != 0 goto label15;

        $i0 = virtualinvoke $r2.<android.view.View: int getVisibility()>();

        if $i0 != 0 goto label15;

        $r3 = staticinvoke <androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.Rect acquireTempRect()>();

        $r4 = virtualinvoke $r1.<android.view.View: android.view.ViewParent getParent()>();

        if $r4 == $r0 goto label01;

        $z1 = 1;

        goto label02;

     label01:
        $z1 = 0;

     label02:
        virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: void getChildRect(android.view.View,boolean,android.graphics.Rect)>($r1, $z1, $r3);

        $r5 = staticinvoke <androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.Rect acquireTempRect()>();

        $r4 = virtualinvoke $r2.<android.view.View: android.view.ViewParent getParent()>();

        if $r4 == $r0 goto label03;

        $z1 = 1;

        goto label04;

     label03:
        $z1 = 0;

     label04:
        virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: void getChildRect(android.view.View,boolean,android.graphics.Rect)>($r2, $z1, $r5);

     label05:
        $i0 = $r3.<android.graphics.Rect: int left>;

        $i1 = $r5.<android.graphics.Rect: int right>;

     label06:
        if $i0 > $i1 goto label13;

     label07:
        $i0 = $r3.<android.graphics.Rect: int top>;

        $i1 = $r5.<android.graphics.Rect: int bottom>;

     label08:
        if $i0 > $i1 goto label13;

     label09:
        $i0 = $r3.<android.graphics.Rect: int right>;

        $i1 = $r5.<android.graphics.Rect: int left>;

     label10:
        if $i0 < $i1 goto label13;

     label11:
        $i0 = $r3.<android.graphics.Rect: int bottom>;

        $i1 = $r5.<android.graphics.Rect: int top>;

     label12:
        if $i0 < $i1 goto label13;

        $z0 = 1;

     label13:
        staticinvoke <androidx.coordinatorlayout.widget.CoordinatorLayout: void releaseTempRect(android.graphics.Rect)>($r3);

        staticinvoke <androidx.coordinatorlayout.widget.CoordinatorLayout: void releaseTempRect(android.graphics.Rect)>($r5);

        return $z0;

     label14:
        $r6 := @caughtexception;

        staticinvoke <androidx.coordinatorlayout.widget.CoordinatorLayout: void releaseTempRect(android.graphics.Rect)>($r3);

        staticinvoke <androidx.coordinatorlayout.widget.CoordinatorLayout: void releaseTempRect(android.graphics.Rect)>($r5);

        throw $r6;

     label15:
        return 0;

        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch java.lang.Throwable from label09 to label10 with label14;
        catch java.lang.Throwable from label11 to label12 with label14;
    }

    protected boolean drawChild(android.graphics.Canvas, android.view.View, long)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        android.graphics.Canvas $r1;
        android.view.View $r2;
        long $l0;
        android.view.ViewGroup$LayoutParams $r3;
        androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams $r4;
        androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior $r5;
        float $f0, $f1, $f2, $f3;
        byte $b1;
        android.graphics.Paint $r6;
        int $i2, $i3, $i4;
        boolean $z0;
        android.graphics.Region$Op $r7;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 := @parameter1: android.view.View;

        $l0 := @parameter2: long;

        $r3 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r4 = (androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) $r3;

        $r5 = $r4.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior mBehavior>;

        if $r5 == null goto label3;

        $r5 = $r4.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior mBehavior>;

        $f0 = virtualinvoke $r5.<androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: float getScrimOpacity(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View)>($r0, $r2);

        $b1 = $f0 cmpl 0.0F;

        if $b1 <= 0 goto label3;

        $r6 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.Paint mScrimPaint>;

        if $r6 != null goto label1;

        $r6 = new android.graphics.Paint;

        specialinvoke $r6.<android.graphics.Paint: void <init>()>();

        $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.Paint mScrimPaint> = $r6;

     label1:
        $r6 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.Paint mScrimPaint>;

        $r5 = $r4.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior mBehavior>;

        $i2 = virtualinvoke $r5.<androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: int getScrimColor(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View)>($r0, $r2);

        virtualinvoke $r6.<android.graphics.Paint: void setColor(int)>($i2);

        $r6 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.Paint mScrimPaint>;

        $f0 = 255.0F * $f0;

        $i2 = staticinvoke <java.lang.Math: int round(float)>($f0);

        $i2 = staticinvoke <androidx.coordinatorlayout.widget.CoordinatorLayout: int clamp(int,int,int)>($i2, 0, 255);

        virtualinvoke $r6.<android.graphics.Paint: void setAlpha(int)>($i2);

        $i2 = virtualinvoke $r1.<android.graphics.Canvas: int save()>();

        $z0 = virtualinvoke $r2.<android.view.View: boolean isOpaque()>();

        if $z0 == 0 goto label2;

        $i3 = virtualinvoke $r2.<android.view.View: int getLeft()>();

        $f0 = (float) $i3;

        $i3 = virtualinvoke $r2.<android.view.View: int getTop()>();

        $f1 = (float) $i3;

        $i3 = virtualinvoke $r2.<android.view.View: int getRight()>();

        $f2 = (float) $i3;

        $i3 = virtualinvoke $r2.<android.view.View: int getBottom()>();

        $f3 = (float) $i3;

        $r7 = <android.graphics.Region$Op: android.graphics.Region$Op DIFFERENCE>;

        virtualinvoke $r1.<android.graphics.Canvas: boolean clipRect(float,float,float,float,android.graphics.Region$Op)>($f0, $f1, $f2, $f3, $r7);

     label2:
        $i3 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: int getPaddingLeft()>();

        $f0 = (float) $i3;

        $i3 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: int getPaddingTop()>();

        $f1 = (float) $i3;

        $i3 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: int getWidth()>();

        $i4 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: int getPaddingRight()>();

        $i3 = $i3 - $i4;

        $f2 = (float) $i3;

        $i3 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: int getHeight()>();

        $i4 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: int getPaddingBottom()>();

        $i3 = $i3 - $i4;

        $f3 = (float) $i3;

        $r6 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.Paint mScrimPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>($f0, $f1, $f2, $f3, $r6);

        virtualinvoke $r1.<android.graphics.Canvas: void restoreToCount(int)>($i2);

     label3:
        $z0 = specialinvoke $r0.<android.view.ViewGroup: boolean drawChild(android.graphics.Canvas,android.view.View,long)>($r1, $r2, $l0);

        return $z0;
    }

    protected void drawableStateChanged()
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        android.graphics.drawable.Drawable $r1;
        int[] $r2;
        boolean $z0, $z1;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        specialinvoke $r0.<android.view.ViewGroup: void drawableStateChanged()>();

        $r2 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: int[] getDrawableState()>();

        $z0 = 0;

        $r1 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.drawable.Drawable mStatusBarBackground>;

        if $r1 == null goto label1;

        $z1 = virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean isStateful()>();

        if $z1 == 0 goto label1;

        $z0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setState(int[])>($r2);

     label1:
        if $z0 == 0 goto label2;

        virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: void invalidate()>();

     label2:
        return;
    }

    void ensurePreDrawListener()
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        boolean $z0, $z1;
        int $i0, $i1;
        android.view.View $r1;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $z0 = 0;

        $i0 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: int getChildCount()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r1 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: android.view.View getChildAt(int)>($i1);

        $z1 = specialinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean hasDependencies(android.view.View)>($r1);

        if $z1 == 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        $z1 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean mNeedsPreDrawListener>;

        if $z0 == $z1 goto label5;

        if $z0 == 0 goto label4;

        virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: void addPreDrawListener()>();

        return;

     label4:
        virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: void removePreDrawListener()>();

     label5:
        return;
    }

    protected volatile android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams $r1;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r1 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams generateDefaultLayoutParams()>();

        return $r1;
    }

    protected androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams generateDefaultLayoutParams()
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams $r1;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r1 = new androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams;

        specialinvoke $r1.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: void <init>(int,int)>(-2, -2);

        return $r1;
    }

    public volatile android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams $r1;
        android.util.AttributeSet $r2;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r2 := @parameter0: android.util.AttributeSet;

        $r1 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)>($r2);

        return $r1;
    }

    protected volatile android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams $r1;
        android.view.ViewGroup$LayoutParams $r2;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r2 := @parameter0: android.view.ViewGroup$LayoutParams;

        $r1 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>($r2);

        return $r1;
    }

    public androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        android.util.AttributeSet $r1;
        androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams $r2;
        android.content.Context $r3;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r1 := @parameter0: android.util.AttributeSet;

        $r2 = new androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams;

        $r3 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: android.content.Context getContext()>();

        specialinvoke $r2.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>($r3, $r1);

        return $r2;
    }

    protected androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        android.view.ViewGroup$LayoutParams $r1;
        boolean $z0;
        androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams $r2, $r3;
        android.view.ViewGroup$MarginLayoutParams $r4;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $z0 = $r1 instanceof androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams;

        if $z0 == 0 goto label1;

        $r2 = new androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams;

        $r3 = (androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) $r1;

        specialinvoke $r2.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: void <init>(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams)>($r3);

        return $r2;

     label1:
        $z0 = $r1 instanceof android.view.ViewGroup$MarginLayoutParams;

        if $z0 == 0 goto label2;

        $r2 = new androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams;

        $r4 = (android.view.ViewGroup$MarginLayoutParams) $r1;

        specialinvoke $r2.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: void <init>(android.view.ViewGroup$MarginLayoutParams)>($r4);

        return $r2;

     label2:
        $r2 = new androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams;

        specialinvoke $r2.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>($r1);

        return $r2;
    }

    void getChildRect(android.view.View, boolean, android.graphics.Rect)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        android.view.View $r1;
        boolean $z0, $z1;
        android.graphics.Rect $r2;
        int $i0, $i1, $i2, $i3;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r1 := @parameter0: android.view.View;

        $z0 := @parameter1: boolean;

        $r2 := @parameter2: android.graphics.Rect;

        $z1 = virtualinvoke $r1.<android.view.View: boolean isLayoutRequested()>();

        if $z1 != 0 goto label3;

        $i0 = virtualinvoke $r1.<android.view.View: int getVisibility()>();

        if $i0 != 8 goto label1;

        goto label3;

     label1:
        if $z0 == 0 goto label2;

        virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: void getDescendantRect(android.view.View,android.graphics.Rect)>($r1, $r2);

        return;

     label2:
        $i0 = virtualinvoke $r1.<android.view.View: int getLeft()>();

        $i1 = virtualinvoke $r1.<android.view.View: int getTop()>();

        $i2 = virtualinvoke $r1.<android.view.View: int getRight()>();

        $i3 = virtualinvoke $r1.<android.view.View: int getBottom()>();

        virtualinvoke $r2.<android.graphics.Rect: void set(int,int,int,int)>($i0, $i1, $i2, $i3);

        return;

     label3:
        virtualinvoke $r2.<android.graphics.Rect: void setEmpty()>();

        return;
    }

    public java.util.List getDependencies(android.view.View)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        android.view.View $r1;
        java.util.List $r2, $r4;
        androidx.coordinatorlayout.widget.DirectedAcyclicGraph $r3;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r1 := @parameter0: android.view.View;

        $r3 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.coordinatorlayout.widget.DirectedAcyclicGraph mChildDag>;

        $r2 = virtualinvoke $r3.<androidx.coordinatorlayout.widget.DirectedAcyclicGraph: java.util.List getOutgoingEdges(java.lang.Object)>($r1);

        $r4 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: java.util.List mTempDependenciesList>;

        interfaceinvoke $r4.<java.util.List: void clear()>();

        if $r2 == null goto label1;

        $r4 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: java.util.List mTempDependenciesList>;

        interfaceinvoke $r4.<java.util.List: boolean addAll(java.util.Collection)>($r2);

     label1:
        $r2 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: java.util.List mTempDependenciesList>;

        return $r2;
    }

    final java.util.List getDependencySortedChildren()
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        java.util.List $r1;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        specialinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: void prepareChildren()>();

        $r1 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: java.util.List mDependencySortedChildren>;

        $r1 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r1;
    }

    public java.util.List getDependents(android.view.View)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        android.view.View $r1;
        java.util.List $r2, $r4;
        androidx.coordinatorlayout.widget.DirectedAcyclicGraph $r3;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r1 := @parameter0: android.view.View;

        $r3 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.coordinatorlayout.widget.DirectedAcyclicGraph mChildDag>;

        $r2 = virtualinvoke $r3.<androidx.coordinatorlayout.widget.DirectedAcyclicGraph: java.util.List getIncomingEdges(java.lang.Object)>($r1);

        $r4 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: java.util.List mTempDependenciesList>;

        interfaceinvoke $r4.<java.util.List: void clear()>();

        if $r2 == null goto label1;

        $r4 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: java.util.List mTempDependenciesList>;

        interfaceinvoke $r4.<java.util.List: boolean addAll(java.util.Collection)>($r2);

     label1:
        $r2 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: java.util.List mTempDependenciesList>;

        return $r2;
    }

    void getDescendantRect(android.view.View, android.graphics.Rect)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        android.view.View $r1;
        android.graphics.Rect $r2;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.graphics.Rect;

        staticinvoke <androidx.coordinatorlayout.widget.ViewGroupUtils: void getDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect)>($r0, $r1, $r2);

        return;
    }

    void getDesiredAnchoredChildRect(android.view.View, int, android.graphics.Rect, android.graphics.Rect)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        android.view.View $r1;
        int $i0, $i1, $i2;
        android.graphics.Rect $r2, $r3;
        android.view.ViewGroup$LayoutParams $r4;
        androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams $r5;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r2 := @parameter2: android.graphics.Rect;

        $r3 := @parameter3: android.graphics.Rect;

        $r4 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r5 = (androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) $r4;

        $i1 = virtualinvoke $r1.<android.view.View: int getMeasuredWidth()>();

        $i2 = virtualinvoke $r1.<android.view.View: int getMeasuredHeight()>();

        specialinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: void getDesiredAnchoredChildRectWithoutConstraints(android.view.View,int,android.graphics.Rect,android.graphics.Rect,androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams,int,int)>($r1, $i0, $r2, $r3, $r5, $i1, $i2);

        specialinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: void constrainChildRect(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams,android.graphics.Rect,int,int)>($r5, $r3, $i1, $i2);

        return;
    }

    void getLastChildRect(android.view.View, android.graphics.Rect)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        android.view.View $r1;
        android.graphics.Rect $r2, $r5;
        android.view.ViewGroup$LayoutParams $r3;
        androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams $r4;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.graphics.Rect;

        $r3 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r4 = (androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) $r3;

        $r5 = virtualinvoke $r4.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: android.graphics.Rect getLastChildRect()>();

        virtualinvoke $r2.<android.graphics.Rect: void set(android.graphics.Rect)>($r5);

        return;
    }

    public final androidx.core.view.WindowInsetsCompat getLastWindowInsets()
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        androidx.core.view.WindowInsetsCompat r1;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        r1 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.core.view.WindowInsetsCompat mLastInsets>;

        return r1;
    }

    public int getNestedScrollAxes()
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        int $i0;
        androidx.core.view.NestedScrollingParentHelper $r1;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r1 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.core.view.NestedScrollingParentHelper mNestedScrollingParentHelper>;

        $i0 = virtualinvoke $r1.<androidx.core.view.NestedScrollingParentHelper: int getNestedScrollAxes()>();

        return $i0;
    }

    androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams getResolvedLayoutParams(android.view.View)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        android.view.View $r1;
        android.view.ViewGroup$LayoutParams $r2;
        androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams $r3;
        boolean $z0;
        androidx.coordinatorlayout.widget.CoordinatorLayout$AttachedBehavior $r4;
        androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior $r5;
        java.lang.Class $r6;
        androidx.coordinatorlayout.widget.CoordinatorLayout$DefaultBehavior $r7, $r9;
        java.lang.'annotation'.Annotation $r8;
        java.lang.Class[] $r10;
        java.lang.reflect.Constructor $r11;
        java.lang.Object[] $r12;
        java.lang.Object $r13;
        java.lang.Exception $r14;
        java.lang.StringBuilder $r15;
        java.lang.String $r16;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) $r2;

        $z0 = $r3.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: boolean mBehaviorResolved>;

        if $z0 != 0 goto label9;

        $z0 = $r1 instanceof androidx.coordinatorlayout.widget.CoordinatorLayout$AttachedBehavior;

        if $z0 == 0 goto label2;

        $r4 = (androidx.coordinatorlayout.widget.CoordinatorLayout$AttachedBehavior) $r1;

        $r5 = interfaceinvoke $r4.<androidx.coordinatorlayout.widget.CoordinatorLayout$AttachedBehavior: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()>();

        if $r5 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CoordinatorLayout", "Attached behavior class is null");

     label1:
        virtualinvoke $r3.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: void setBehavior(androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior)>($r5);

        $r3.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: boolean mBehaviorResolved> = 1;

        return $r3;

     label2:
        $r6 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = null;

     label3:
        if $r6 == null goto label4;

        $r8 = virtualinvoke $r6.<java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Landroidx/coordinatorlayout/widget/CoordinatorLayout$DefaultBehavior;");

        $r9 = (androidx.coordinatorlayout.widget.CoordinatorLayout$DefaultBehavior) $r8;

        $r7 = $r9;

        if $r9 != null goto label4;

        $r6 = virtualinvoke $r6.<java.lang.Class: java.lang.Class getSuperclass()>();

        goto label3;

     label4:
        if $r7 == null goto label8;

     label5:
        $r6 = interfaceinvoke $r7.<androidx.coordinatorlayout.widget.CoordinatorLayout$DefaultBehavior: java.lang.Class value()>();

        $r10 = newarray (java.lang.Class)[0];

        $r11 = virtualinvoke $r6.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>($r10);

        $r12 = newarray (java.lang.Object)[0];

        $r13 = virtualinvoke $r11.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r12);

        $r5 = (androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior) $r13;

        virtualinvoke $r3.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: void setBehavior(androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior)>($r5);

     label6:
        goto label8;

     label7:
        $r14 := @caughtexception;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Default behavior class ");

        $r6 = interfaceinvoke $r7.<androidx.coordinatorlayout.widget.CoordinatorLayout$DefaultBehavior: java.lang.Class value()>();

        $r16 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" could not be instantiated. Did you forget");

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" a default constructor?");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("CoordinatorLayout", $r16, $r14);

     label8:
        $r3.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: boolean mBehaviorResolved> = 1;

     label9:
        return $r3;

        catch java.lang.Exception from label5 to label6 with label7;
    }

    public android.graphics.drawable.Drawable getStatusBarBackground()
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        android.graphics.drawable.Drawable r1;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        r1 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.drawable.Drawable mStatusBarBackground>;

        return r1;
    }

    protected int getSuggestedMinimumHeight()
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        int $i0, $i1, $i2;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $i0 = specialinvoke $r0.<android.view.ViewGroup: int getSuggestedMinimumHeight()>();

        $i1 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: int getPaddingTop()>();

        $i2 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: int getPaddingBottom()>();

        $i1 = $i1 + $i2;

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>($i0, $i1);

        return $i0;
    }

    protected int getSuggestedMinimumWidth()
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        int $i0, $i1, $i2;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $i0 = specialinvoke $r0.<android.view.ViewGroup: int getSuggestedMinimumWidth()>();

        $i1 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: int getPaddingLeft()>();

        $i2 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: int getPaddingRight()>();

        $i1 = $i1 + $i2;

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>($i0, $i1);

        return $i0;
    }

    public boolean isPointInChildBounds(android.view.View, int, int)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        android.view.View $r1;
        int $i0, $i1;
        android.graphics.Rect $r2;
        boolean $z0;
        java.lang.Throwable $r3;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = staticinvoke <androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.Rect acquireTempRect()>();

        virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: void getDescendantRect(android.view.View,android.graphics.Rect)>($r1, $r2);

     label1:
        $z0 = virtualinvoke $r2.<android.graphics.Rect: boolean contains(int,int)>($i0, $i1);

     label2:
        staticinvoke <androidx.coordinatorlayout.widget.CoordinatorLayout: void releaseTempRect(android.graphics.Rect)>($r2);

        return $z0;

     label3:
        $r3 := @caughtexception;

        staticinvoke <androidx.coordinatorlayout.widget.CoordinatorLayout: void releaseTempRect(android.graphics.Rect)>($r2);

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void offsetChildToAnchor(android.view.View, int)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        android.view.View $r1, $r4;
        int $i0, $i1, $i2, $i3;
        android.view.ViewGroup$LayoutParams $r2;
        androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams $r3;
        android.graphics.Rect $r5, $r6, $r7;
        boolean $z0;
        androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior $r8;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) $r2;

        $r4 = $r3.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: android.view.View mAnchorView>;

        if $r4 == null goto label6;

        $r5 = staticinvoke <androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.Rect acquireTempRect()>();

        $r6 = staticinvoke <androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.Rect acquireTempRect()>();

        $r7 = staticinvoke <androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.Rect acquireTempRect()>();

        $r4 = $r3.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: android.view.View mAnchorView>;

        virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: void getDescendantRect(android.view.View,android.graphics.Rect)>($r4, $r5);

        $z0 = 0;

        virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: void getChildRect(android.view.View,boolean,android.graphics.Rect)>($r1, 0, $r6);

        $i1 = virtualinvoke $r1.<android.view.View: int getMeasuredWidth()>();

        $i2 = virtualinvoke $r1.<android.view.View: int getMeasuredHeight()>();

        specialinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: void getDesiredAnchoredChildRectWithoutConstraints(android.view.View,int,android.graphics.Rect,android.graphics.Rect,androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams,int,int)>($r1, $i0, $r5, $r7, $r3, $i1, $i2);

        $i0 = $r7.<android.graphics.Rect: int left>;

        $i3 = $r6.<android.graphics.Rect: int left>;

        if $i0 != $i3 goto label1;

        $i0 = $r7.<android.graphics.Rect: int top>;

        $i3 = $r6.<android.graphics.Rect: int top>;

        if $i0 == $i3 goto label2;

     label1:
        $z0 = 1;

     label2:
        specialinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: void constrainChildRect(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams,android.graphics.Rect,int,int)>($r3, $r7, $i1, $i2);

        $i0 = $r7.<android.graphics.Rect: int left>;

        $i1 = $r6.<android.graphics.Rect: int left>;

        $i0 = $i0 - $i1;

        $i1 = $r7.<android.graphics.Rect: int top>;

        $i2 = $r6.<android.graphics.Rect: int top>;

        $i1 = $i1 - $i2;

        if $i0 == 0 goto label3;

        staticinvoke <androidx.core.view.ViewCompat: void offsetLeftAndRight(android.view.View,int)>($r1, $i0);

     label3:
        if $i1 == 0 goto label4;

        staticinvoke <androidx.core.view.ViewCompat: void offsetTopAndBottom(android.view.View,int)>($r1, $i1);

     label4:
        if $z0 == 0 goto label5;

        $r8 = virtualinvoke $r3.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()>();

        if $r8 == null goto label5;

        $r4 = $r3.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: android.view.View mAnchorView>;

        virtualinvoke $r8.<androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View)>($r0, $r1, $r4);

     label5:
        staticinvoke <androidx.coordinatorlayout.widget.CoordinatorLayout: void releaseTempRect(android.graphics.Rect)>($r5);

        staticinvoke <androidx.coordinatorlayout.widget.CoordinatorLayout: void releaseTempRect(android.graphics.Rect)>($r6);

        staticinvoke <androidx.coordinatorlayout.widget.CoordinatorLayout: void releaseTempRect(android.graphics.Rect)>($r7);

     label6:
        return;
    }

    public void onAttachedToWindow()
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        androidx.coordinatorlayout.widget.CoordinatorLayout$OnPreDrawListener $r1;
        boolean $z0;
        android.view.ViewTreeObserver $r2;
        androidx.core.view.WindowInsetsCompat $r3;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        specialinvoke $r0.<android.view.ViewGroup: void onAttachedToWindow()>();

        specialinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: void resetTouchBehaviors(boolean)>(0);

        $z0 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean mNeedsPreDrawListener>;

        if $z0 == 0 goto label2;

        $r1 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.coordinatorlayout.widget.CoordinatorLayout$OnPreDrawListener mOnPreDrawListener>;

        if $r1 != null goto label1;

        $r1 = new androidx.coordinatorlayout.widget.CoordinatorLayout$OnPreDrawListener;

        specialinvoke $r1.<androidx.coordinatorlayout.widget.CoordinatorLayout$OnPreDrawListener: void <init>(androidx.coordinatorlayout.widget.CoordinatorLayout)>($r0);

        $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.coordinatorlayout.widget.CoordinatorLayout$OnPreDrawListener mOnPreDrawListener> = $r1;

     label1:
        $r2 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: android.view.ViewTreeObserver getViewTreeObserver()>();

        $r1 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.coordinatorlayout.widget.CoordinatorLayout$OnPreDrawListener mOnPreDrawListener>;

        virtualinvoke $r2.<android.view.ViewTreeObserver: void addOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener)>($r1);

     label2:
        $r3 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.core.view.WindowInsetsCompat mLastInsets>;

        if $r3 != null goto label3;

        $z0 = staticinvoke <androidx.core.view.ViewCompat: boolean getFitsSystemWindows(android.view.View)>($r0);

        if $z0 == 0 goto label3;

        staticinvoke <androidx.core.view.ViewCompat: void requestApplyInsets(android.view.View)>($r0);

     label3:
        $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean mIsAttachedToWindow> = 1;

        return;
    }

    final void onChildViewsChanged(int)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.util.List $r1;
        android.graphics.Rect $r2, $r3, $r4;
        java.lang.Object $r5;
        android.view.View $r6, $r9, $r10;
        android.view.ViewGroup$LayoutParams $r7;
        androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams $r8;
        boolean $z0;
        androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior $r11;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $i0 := @parameter0: int;

        $i1 = staticinvoke <androidx.core.view.ViewCompat: int getLayoutDirection(android.view.View)>($r0);

        $r1 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: java.util.List mDependencySortedChildren>;

        $i2 = interfaceinvoke $r1.<java.util.List: int size()>();

        $r2 = staticinvoke <androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.Rect acquireTempRect()>();

        $r3 = staticinvoke <androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.Rect acquireTempRect()>();

        $r4 = staticinvoke <androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.Rect acquireTempRect()>();

        $i3 = 0;

     label01:
        if $i3 >= $i2 goto label21;

        $r1 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: java.util.List mDependencySortedChildren>;

        $r5 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i3);

        $r6 = (android.view.View) $r5;

        $r7 = virtualinvoke $r6.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r8 = (androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) $r7;

        if $i0 != 0 goto label02;

        $i4 = virtualinvoke $r6.<android.view.View: int getVisibility()>();

        if $i4 != 8 goto label02;

        goto label20;

     label02:
        $i4 = 0;

     label03:
        if $i4 >= $i3 goto label05;

        $r1 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: java.util.List mDependencySortedChildren>;

        $r5 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i4);

        $r9 = (android.view.View) $r5;

        $r10 = $r8.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: android.view.View mAnchorDirectChild>;

        if $r10 != $r9 goto label04;

        virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: void offsetChildToAnchor(android.view.View,int)>($r6, $i1);

     label04:
        $i4 = $i4 + 1;

        goto label03;

     label05:
        virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: void getChildRect(android.view.View,boolean,android.graphics.Rect)>($r6, 1, $r3);

        $i4 = $r8.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int insetEdge>;

        if $i4 == 0 goto label11;

        $z0 = virtualinvoke $r3.<android.graphics.Rect: boolean isEmpty()>();

        if $z0 != 0 goto label11;

        $i4 = $r8.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int insetEdge>;

        $i4 = staticinvoke <androidx.core.view.GravityCompat: int getAbsoluteGravity(int,int)>($i4, $i1);

        $i5 = $i4 & 112;

        if $i5 == 48 goto label07;

        if $i5 == 80 goto label06;

        goto label08;

     label06:
        $i5 = $r2.<android.graphics.Rect: int bottom>;

        $i6 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: int getHeight()>();

        $i7 = $r3.<android.graphics.Rect: int top>;

        $i6 = $i6 - $i7;

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>($i5, $i6);

        $r2.<android.graphics.Rect: int bottom> = $i5;

        goto label08;

     label07:
        $i5 = $r2.<android.graphics.Rect: int top>;

        $i6 = $r3.<android.graphics.Rect: int bottom>;

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>($i5, $i6);

        $r2.<android.graphics.Rect: int top> = $i5;

     label08:
        $i4 = $i4 & 7;

        if $i4 == 3 goto label10;

        if $i4 == 5 goto label09;

        goto label11;

     label09:
        $i4 = $r2.<android.graphics.Rect: int right>;

        $i5 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: int getWidth()>();

        $i6 = $r3.<android.graphics.Rect: int left>;

        $i5 = $i5 - $i6;

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>($i4, $i5);

        $r2.<android.graphics.Rect: int right> = $i4;

        goto label11;

     label10:
        $i4 = $r2.<android.graphics.Rect: int left>;

        $i5 = $r3.<android.graphics.Rect: int right>;

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>($i4, $i5);

        $r2.<android.graphics.Rect: int left> = $i4;

     label11:
        $i4 = $r8.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int dodgeInsetEdges>;

        if $i4 == 0 goto label12;

        $i4 = virtualinvoke $r6.<android.view.View: int getVisibility()>();

        if $i4 != 0 goto label12;

        specialinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: void offsetChildByInset(android.view.View,android.graphics.Rect,int)>($r6, $r2, $i1);

     label12:
        if $i0 == 2 goto label14;

        virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: void getLastChildRect(android.view.View,android.graphics.Rect)>($r6, $r4);

        $z0 = virtualinvoke $r4.<android.graphics.Rect: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label13;

        goto label20;

     label13:
        virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: void recordLastChildRect(android.view.View,android.graphics.Rect)>($r6, $r3);

     label14:
        $i4 = $i3 + 1;

     label15:
        if $i4 >= $i2 goto label20;

        $r1 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: java.util.List mDependencySortedChildren>;

        $r5 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i4);

        $r9 = (android.view.View) $r5;

        $r7 = virtualinvoke $r9.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r8 = (androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) $r7;

        $r11 = virtualinvoke $r8.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()>();

        if $r11 == null goto label19;

        $z0 = virtualinvoke $r11.<androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: boolean layoutDependsOn(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View)>($r0, $r9, $r6);

        if $z0 == 0 goto label19;

        if $i0 != 0 goto label16;

        $z0 = virtualinvoke $r8.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: boolean getChangedAfterNestedScroll()>();

        if $z0 == 0 goto label16;

        virtualinvoke $r8.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: void resetChangedAfterNestedScroll()>();

        goto label19;

     label16:
        if $i0 == 2 goto label17;

        $z0 = virtualinvoke $r11.<androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View)>($r0, $r9, $r6);

        goto label18;

     label17:
        virtualinvoke $r11.<androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: void onDependentViewRemoved(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View)>($r0, $r9, $r6);

        $z0 = 1;

     label18:
        if $i0 != 1 goto label19;

        virtualinvoke $r8.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: void setChangedAfterNestedScroll(boolean)>($z0);

     label19:
        $i4 = $i4 + 1;

        goto label15;

     label20:
        $i3 = $i3 + 1;

        goto label01;

     label21:
        staticinvoke <androidx.coordinatorlayout.widget.CoordinatorLayout: void releaseTempRect(android.graphics.Rect)>($r2);

        staticinvoke <androidx.coordinatorlayout.widget.CoordinatorLayout: void releaseTempRect(android.graphics.Rect)>($r3);

        staticinvoke <androidx.coordinatorlayout.widget.CoordinatorLayout: void releaseTempRect(android.graphics.Rect)>($r4);

        return;
    }

    public void onDetachedFromWindow()
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        androidx.coordinatorlayout.widget.CoordinatorLayout$OnPreDrawListener $r1;
        android.view.ViewTreeObserver $r2;
        boolean $z0;
        android.view.View $r3;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        specialinvoke $r0.<android.view.ViewGroup: void onDetachedFromWindow()>();

        specialinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: void resetTouchBehaviors(boolean)>(0);

        $z0 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean mNeedsPreDrawListener>;

        if $z0 == 0 goto label1;

        $r1 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.coordinatorlayout.widget.CoordinatorLayout$OnPreDrawListener mOnPreDrawListener>;

        if $r1 == null goto label1;

        $r2 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: android.view.ViewTreeObserver getViewTreeObserver()>();

        $r1 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.coordinatorlayout.widget.CoordinatorLayout$OnPreDrawListener mOnPreDrawListener>;

        virtualinvoke $r2.<android.view.ViewTreeObserver: void removeOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener)>($r1);

     label1:
        $r3 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: android.view.View mNestedScrollingTarget>;

        if $r3 == null goto label2;

        virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: void onStopNestedScroll(android.view.View)>($r3);

     label2:
        $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean mIsAttachedToWindow> = 0;

        return;
    }

    public void onDraw(android.graphics.Canvas)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        android.graphics.Canvas $r1;
        android.graphics.drawable.Drawable $r2;
        boolean $z0;
        androidx.core.view.WindowInsetsCompat $r3;
        int $i0, $i1;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r1 := @parameter0: android.graphics.Canvas;

        specialinvoke $r0.<android.view.ViewGroup: void onDraw(android.graphics.Canvas)>($r1);

        $z0 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean mDrawStatusBarBackground>;

        if $z0 == 0 goto label3;

        $r2 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.drawable.Drawable mStatusBarBackground>;

        if $r2 == null goto label3;

        $r3 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.core.view.WindowInsetsCompat mLastInsets>;

        if $r3 == null goto label1;

        $i0 = virtualinvoke $r3.<androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetTop()>();

        goto label2;

     label1:
        $i0 = 0;

     label2:
        if $i0 <= 0 goto label3;

        $r2 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.drawable.Drawable mStatusBarBackground>;

        $i1 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: int getWidth()>();

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i1, $i0);

        $r2 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.drawable.Drawable mStatusBarBackground>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r1);

     label3:
        return;
    }

    public boolean onInterceptTouchEvent(android.view.MotionEvent)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        android.view.MotionEvent $r1;
        int $i0;
        boolean $z0;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r1 := @parameter0: android.view.MotionEvent;

        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getActionMasked()>();

        if $i0 != 0 goto label1;

        specialinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: void resetTouchBehaviors(boolean)>(1);

     label1:
        $z0 = specialinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean performIntercept(android.view.MotionEvent,int)>($r1, 0);

        if $i0 == 1 goto label2;

        if $i0 != 3 goto label3;

     label2:
        specialinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: void resetTouchBehaviors(boolean)>(1);

     label3:
        return $z0;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        boolean $z0;
        int $i0, $i1, $i2, $i3;
        java.util.List $r1;
        java.lang.Object $r2;
        android.view.View $r3;
        android.view.ViewGroup$LayoutParams $r4;
        androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams $r5;
        androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior $r6;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $i0 = staticinvoke <androidx.core.view.ViewCompat: int getLayoutDirection(android.view.View)>($r0);

        $r1 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: java.util.List mDependencySortedChildren>;

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label5;

        $r1 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: java.util.List mDependencySortedChildren>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i2);

        $r3 = (android.view.View) $r2;

        $i3 = virtualinvoke $r3.<android.view.View: int getVisibility()>();

        if $i3 != 8 goto label2;

        goto label4;

     label2:
        $r4 = virtualinvoke $r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r5 = (androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) $r4;

        $r6 = virtualinvoke $r5.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()>();

        if $r6 == null goto label3;

        $z0 = virtualinvoke $r6.<androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int)>($r0, $r3, $i0);

        if $z0 != 0 goto label4;

     label3:
        virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: void onLayoutChild(android.view.View,int)>($r3, $i0);

     label4:
        $i2 = $i2 + 1;

        goto label1;

     label5:
        return;
    }

    public void onLayoutChild(android.view.View, int)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        android.view.View $r1, $r4;
        int $i0, $i1;
        android.view.ViewGroup$LayoutParams $r2;
        androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams $r3;
        boolean $z0;
        java.lang.IllegalStateException $r5;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) $r2;

        $z0 = virtualinvoke $r3.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: boolean checkAnchorChanged()>();

        if $z0 != 0 goto label3;

        $r4 = $r3.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: android.view.View mAnchorView>;

        if $r4 == null goto label1;

        $r4 = $r3.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: android.view.View mAnchorView>;

        specialinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: void layoutChildWithAnchor(android.view.View,android.view.View,int)>($r1, $r4, $i0);

        return;

     label1:
        $i1 = $r3.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int keyline>;

        if $i1 < 0 goto label2;

        $i1 = $r3.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int keyline>;

        specialinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: void layoutChildWithKeyline(android.view.View,int,int)>($r1, $i1, $i0);

        return;

     label2:
        specialinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: void layoutChild(android.view.View,int)>($r1, $i0);

        return;

     label3:
        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("An anchor may not be changed after CoordinatorLayout measurement begins before layout is complete.");

        throw $r5;
    }

    protected void onMeasure(int, int)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19;
        boolean $z0, $z1, $z2;
        androidx.core.view.WindowInsetsCompat $r1;
        java.util.List $r2;
        java.lang.Object $r3;
        android.view.View $r4;
        android.view.ViewGroup$LayoutParams $r5;
        androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams $r6;
        androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior $r7;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        specialinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: void prepareChildren()>();

        virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: void ensurePreDrawListener()>();

        $i4 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: int getPaddingLeft()>();

        $i3 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: int getPaddingTop()>();

        $i5 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: int getPaddingRight()>();

        $i6 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: int getPaddingBottom()>();

        $i7 = staticinvoke <androidx.core.view.ViewCompat: int getLayoutDirection(android.view.View)>($r0);

        $z1 = 1;

        if $i7 != 1 goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        $i8 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i0);

        $i9 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i0);

        $i10 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i1);

        $i11 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i1);

        $i2 = $i4 + $i5;

        $i3 = $i3 + $i6;

        $i12 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: int getSuggestedMinimumWidth()>();

        $i13 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: int getSuggestedMinimumHeight()>();

        $r1 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.core.view.WindowInsetsCompat mLastInsets>;

        if $r1 == null goto label03;

        $z2 = staticinvoke <androidx.core.view.ViewCompat: boolean getFitsSystemWindows(android.view.View)>($r0);

        if $z2 == 0 goto label03;

        goto label04;

     label03:
        $z1 = 0;

     label04:
        $r2 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: java.util.List mDependencySortedChildren>;

        $i6 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i14 = 0;

        $i15 = $i12;

        $i12 = $i13;

        $i16 = 0;

     label05:
        if $i14 >= $i6 goto label19;

        $r2 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: java.util.List mDependencySortedChildren>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i14);

        $r4 = (android.view.View) $r3;

        $i13 = virtualinvoke $r4.<android.view.View: int getVisibility()>();

        if $i13 != 8 goto label06;

        goto label18;

     label06:
        $r5 = virtualinvoke $r4.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r6 = (androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) $r5;

        $i13 = 0;

        $i17 = $r6.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int keyline>;

        if $i17 < 0 goto label13;

        if $i8 == 0 goto label13;

        $i17 = $r6.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int keyline>;

        $i17 = specialinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: int getKeyline(int)>($i17);

        $i18 = $r6.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int gravity>;

        $i18 = staticinvoke <androidx.coordinatorlayout.widget.CoordinatorLayout: int resolveKeylineGravity(int)>($i18);

        $i18 = staticinvoke <androidx.core.view.GravityCompat: int getAbsoluteGravity(int,int)>($i18, $i7);

        $i18 = $i18 & 7;

        if $i18 != 3 goto label07;

        if $z0 == 0 goto label08;

     label07:
        if $i18 != 5 goto label09;

        if $z0 == 0 goto label09;

     label08:
        $i13 = $i9 - $i5;

        $i13 = $i13 - $i17;

        $i13 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i13);

        goto label13;

     label09:
        if $i18 != 5 goto label10;

        if $z0 == 0 goto label11;

     label10:
        if $i18 != 3 goto label12;

        if $z0 == 0 goto label12;

     label11:
        $i13 = $i17 - $i4;

        $i13 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i13);

        goto label13;

     label12:
        goto label13;

     label13:
        if $z1 == 0 goto label14;

        $z2 = staticinvoke <androidx.core.view.ViewCompat: boolean getFitsSystemWindows(android.view.View)>($r4);

        if $z2 != 0 goto label14;

        $r1 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.core.view.WindowInsetsCompat mLastInsets>;

        $i17 = virtualinvoke $r1.<androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetLeft()>();

        $r1 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.core.view.WindowInsetsCompat mLastInsets>;

        $i18 = virtualinvoke $r1.<androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetRight()>();

        $i17 = $i17 + $i18;

        $r1 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.core.view.WindowInsetsCompat mLastInsets>;

        $i18 = virtualinvoke $r1.<androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetTop()>();

        $r1 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.core.view.WindowInsetsCompat mLastInsets>;

        $i19 = virtualinvoke $r1.<androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetBottom()>();

        $i18 = $i18 + $i19;

        $i17 = $i9 - $i17;

        $i17 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i17, $i8);

        $i18 = $i11 - $i18;

        $i18 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i18, $i10);

        goto label15;

     label14:
        $i17 = $i0;

        $i18 = $i1;

     label15:
        $r7 = virtualinvoke $r6.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()>();

        if $r7 == null goto label16;

        $z2 = virtualinvoke $r7.<androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int,int)>($r0, $r4, $i17, $i13, $i18, 0);

        if $z2 != 0 goto label17;

        goto label16;

     label16:
        virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: void onMeasureChild(android.view.View,int,int,int,int)>($r4, $i17, $i13, $i18, 0);

     label17:
        $i13 = virtualinvoke $r4.<android.view.View: int getMeasuredWidth()>();

        $i13 = $i2 + $i13;

        $i17 = $r6.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int leftMargin>;

        $i13 = $i13 + $i17;

        $i17 = $r6.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int rightMargin>;

        $i13 = $i13 + $i17;

        $i13 = staticinvoke <java.lang.Math: int max(int,int)>($i15, $i13);

        $i15 = virtualinvoke $r4.<android.view.View: int getMeasuredHeight()>();

        $i15 = $i3 + $i15;

        $i17 = $r6.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int topMargin>;

        $i15 = $i15 + $i17;

        $i17 = $r6.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int bottomMargin>;

        $i15 = $i15 + $i17;

        $i12 = staticinvoke <java.lang.Math: int max(int,int)>($i12, $i15);

        $i15 = virtualinvoke $r4.<android.view.View: int getMeasuredState()>();

        $i16 = staticinvoke <android.view.View: int combineMeasuredStates(int,int)>($i16, $i15);

        $i15 = $i13;

     label18:
        $i14 = $i14 + 1;

        goto label05;

     label19:
        $i4 = -16777216 & $i16;

        $i0 = staticinvoke <android.view.View: int resolveSizeAndState(int,int,int)>($i15, $i0, $i4);

        $i4 = $i16 << 16;

        $i1 = staticinvoke <android.view.View: int resolveSizeAndState(int,int,int)>($i12, $i1, $i4);

        virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: void setMeasuredDimension(int,int)>($i0, $i1);

        return;
    }

    public void onMeasureChild(android.view.View, int, int, int, int)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        android.view.View $r1;
        int $i0, $i1, $i2, $i3;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: void measureChildWithMargins(android.view.View,int,int,int,int)>($r1, $i0, $i1, $i2, $i3);

        return;
    }

    public boolean onNestedFling(android.view.View, float, float, boolean)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        android.view.View $r1, $r2;
        float $f0, $f1;
        boolean $z0, $z1, $z2;
        int $i0, $i1, $i2;
        android.view.ViewGroup$LayoutParams $r3;
        androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams $r4;
        androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior $r5;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r1 := @parameter0: android.view.View;

        $f0 := @parameter1: float;

        $f1 := @parameter2: float;

        $z0 := @parameter3: boolean;

        $i0 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: int getChildCount()>();

        $z1 = 0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label5;

        $r2 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: android.view.View getChildAt(int)>($i1);

        $i2 = virtualinvoke $r2.<android.view.View: int getVisibility()>();

        if $i2 != 8 goto label2;

        goto label4;

     label2:
        $r3 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r4 = (androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) $r3;

        $z2 = virtualinvoke $r4.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: boolean isNestedScrollAccepted(int)>(0);

        if $z2 != 0 goto label3;

        goto label4;

     label3:
        $r5 = virtualinvoke $r4.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()>();

        if $r5 == null goto label4;

        $z2 = virtualinvoke $r5.<androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: boolean onNestedFling(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,float,float,boolean)>($r0, $r2, $r1, $f0, $f1, $z0);

        $z1 = $z2 | $z1;

     label4:
        $i1 = $i1 + 1;

        goto label1;

     label5:
        if $z1 == 0 goto label6;

        virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: void onChildViewsChanged(int)>(1);

     label6:
        return $z1;
    }

    public boolean onNestedPreFling(android.view.View, float, float)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        android.view.View $r1, $r2;
        float $f0, $f1;
        boolean $z0, $z1;
        int $i0, $i1, $i2;
        android.view.ViewGroup$LayoutParams $r3;
        androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams $r4;
        androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior $r5;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r1 := @parameter0: android.view.View;

        $f0 := @parameter1: float;

        $f1 := @parameter2: float;

        $z0 = 0;

        $i0 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: int getChildCount()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label5;

        $r2 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: android.view.View getChildAt(int)>($i1);

        $i2 = virtualinvoke $r2.<android.view.View: int getVisibility()>();

        if $i2 != 8 goto label2;

        goto label4;

     label2:
        $r3 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r4 = (androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) $r3;

        $z1 = virtualinvoke $r4.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: boolean isNestedScrollAccepted(int)>(0);

        if $z1 != 0 goto label3;

        goto label4;

     label3:
        $r5 = virtualinvoke $r4.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()>();

        if $r5 == null goto label4;

        $z1 = virtualinvoke $r5.<androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: boolean onNestedPreFling(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,float,float)>($r0, $r2, $r1, $f0, $f1);

        $z0 = $z0 | $z1;

     label4:
        $i1 = $i1 + 1;

        goto label1;

     label5:
        return $z0;
    }

    public void onNestedPreScroll(android.view.View, int, int, int[])
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        android.view.View $r1;
        int $i0, $i1;
        int[] $r2;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 := @parameter3: int[];

        virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: void onNestedPreScroll(android.view.View,int,int,int[],int)>($r1, $i0, $i1, $r2, 0);

        return;
    }

    public void onNestedPreScroll(android.view.View, int, int, int[], int)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        android.view.View $r1, $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        int[] $r2, $r7;
        boolean $z0, $z1;
        android.view.ViewGroup$LayoutParams $r4;
        androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams $r5;
        androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior $r6;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 := @parameter3: int[];

        $i2 := @parameter4: int;

        $i3 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: int getChildCount()>();

        $i4 = 0;

        $i5 = 0;

        $z0 = 0;

        $i6 = 0;

     label01:
        if $i6 >= $i3 goto label09;

        $r3 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: android.view.View getChildAt(int)>($i6);

        $i7 = virtualinvoke $r3.<android.view.View: int getVisibility()>();

        if $i7 != 8 goto label02;

        goto label08;

     label02:
        $r4 = virtualinvoke $r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r5 = (androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) $r4;

        $z1 = virtualinvoke $r5.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: boolean isNestedScrollAccepted(int)>($i2);

        if $z1 != 0 goto label03;

        goto label08;

     label03:
        $r6 = virtualinvoke $r5.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()>();

        if $r6 == null goto label08;

        $r7 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: int[] mTempIntPair>;

        $r7[1] = 0;

        $r7[0] = 0;

        virtualinvoke $r6.<androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int[],int)>($r0, $r3, $r1, $i0, $i1, $r7, $i2);

        if $i0 <= 0 goto label04;

        $r7 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: int[] mTempIntPair>;

        $i7 = $r7[0];

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>($i4, $i7);

        goto label05;

     label04:
        $r7 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: int[] mTempIntPair>;

        $i7 = $r7[0];

        $i4 = staticinvoke <java.lang.Math: int min(int,int)>($i4, $i7);

     label05:
        if $i1 <= 0 goto label06;

        $r7 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: int[] mTempIntPair>;

        $i7 = $r7[1];

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>($i5, $i7);

        goto label07;

     label06:
        $r7 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: int[] mTempIntPair>;

        $i7 = $r7[1];

        $i5 = staticinvoke <java.lang.Math: int min(int,int)>($i5, $i7);

     label07:
        $z0 = 1;

        goto label08;

     label08:
        $i6 = $i6 + 1;

        goto label01;

     label09:
        $r2[0] = $i4;

        $r2[1] = $i5;

        if $z0 == 0 goto label10;

        virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: void onChildViewsChanged(int)>(1);

     label10:
        return;
    }

    public void onNestedScroll(android.view.View, int, int, int, int)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        android.view.View $r1;
        int $i0, $i1, $i2, $i3;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: void onNestedScroll(android.view.View,int,int,int,int,int)>($r1, $i0, $i1, $i2, $i3, 0);

        return;
    }

    public void onNestedScroll(android.view.View, int, int, int, int, int)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        android.view.View $r1, $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean $z0, $z1;
        android.view.ViewGroup$LayoutParams $r3;
        androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams $r4;
        androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior $r5;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $i4 := @parameter5: int;

        $i5 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: int getChildCount()>();

        $z0 = 0;

        $i6 = 0;

     label1:
        if $i6 >= $i5 goto label5;

        $r2 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: android.view.View getChildAt(int)>($i6);

        $i7 = virtualinvoke $r2.<android.view.View: int getVisibility()>();

        if $i7 != 8 goto label2;

        goto label4;

     label2:
        $r3 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r4 = (androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) $r3;

        $z1 = virtualinvoke $r4.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: boolean isNestedScrollAccepted(int)>($i4);

        if $z1 != 0 goto label3;

        goto label4;

     label3:
        $r5 = virtualinvoke $r4.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()>();

        if $r5 == null goto label4;

        virtualinvoke $r5.<androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int,int)>($r0, $r2, $r1, $i0, $i1, $i2, $i3, $i4);

        $z0 = 1;

     label4:
        $i6 = $i6 + 1;

        goto label1;

     label5:
        if $z0 == 0 goto label6;

        virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: void onChildViewsChanged(int)>(1);

     label6:
        return;
    }

    public void onNestedScrollAccepted(android.view.View, android.view.View, int)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        android.view.View $r1, $r2;
        int $i0;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.view.View;

        $i0 := @parameter2: int;

        virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: void onNestedScrollAccepted(android.view.View,android.view.View,int,int)>($r1, $r2, $i0, 0);

        return;
    }

    public void onNestedScrollAccepted(android.view.View, android.view.View, int, int)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        android.view.View $r1, $r2, $r4;
        int $i0, $i1, $i2, $i3;
        androidx.core.view.NestedScrollingParentHelper $r3;
        android.view.ViewGroup$LayoutParams $r5;
        androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams $r6;
        boolean $z0;
        androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior $r7;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.view.View;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $r3 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.core.view.NestedScrollingParentHelper mNestedScrollingParentHelper>;

        virtualinvoke $r3.<androidx.core.view.NestedScrollingParentHelper: void onNestedScrollAccepted(android.view.View,android.view.View,int,int)>($r1, $r2, $i0, $i1);

        $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: android.view.View mNestedScrollingTarget> = $r2;

        $i2 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: int getChildCount()>();

        $i3 = 0;

     label1:
        if $i3 >= $i2 goto label4;

        $r4 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: android.view.View getChildAt(int)>($i3);

        $r5 = virtualinvoke $r4.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r6 = (androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) $r5;

        $z0 = virtualinvoke $r6.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: boolean isNestedScrollAccepted(int)>($i1);

        if $z0 != 0 goto label2;

        goto label3;

     label2:
        $r7 = virtualinvoke $r6.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()>();

        if $r7 == null goto label3;

        virtualinvoke $r7.<androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: void onNestedScrollAccepted(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int)>($r0, $r4, $r1, $r2, $i0, $i1);

     label3:
        $i3 = $i3 + 1;

        goto label1;

     label4:
        return;
    }

    protected void onRestoreInstanceState(android.os.Parcelable)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        android.os.Parcelable $r1;
        boolean $z0;
        androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState $r2;
        android.util.SparseArray $r3;
        int $i0, $i1, $i2;
        android.view.View $r4;
        androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams $r5;
        androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior $r6;
        java.lang.Object $r7;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r1 := @parameter0: android.os.Parcelable;

        $z0 = $r1 instanceof androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState;

        if $z0 != 0 goto label1;

        specialinvoke $r0.<android.view.ViewGroup: void onRestoreInstanceState(android.os.Parcelable)>($r1);

        return;

     label1:
        $r2 = (androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState) $r1;

        $r1 = virtualinvoke $r2.<androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState: android.os.Parcelable getSuperState()>();

        specialinvoke $r0.<android.view.ViewGroup: void onRestoreInstanceState(android.os.Parcelable)>($r1);

        $r3 = $r2.<androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState: android.util.SparseArray behaviorStates>;

        $i0 = 0;

        $i1 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: int getChildCount()>();

     label2:
        if $i0 >= $i1 goto label4;

        $r4 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: android.view.View getChildAt(int)>($i0);

        $i2 = virtualinvoke $r4.<android.view.View: int getId()>();

        $r5 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams getResolvedLayoutParams(android.view.View)>($r4);

        $r6 = virtualinvoke $r5.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()>();

        if $i2 == -1 goto label3;

        if $r6 == null goto label3;

        $r7 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>($i2);

        $r1 = (android.os.Parcelable) $r7;

        if $r1 == null goto label3;

        virtualinvoke $r6.<androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: void onRestoreInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.os.Parcelable)>($r0, $r4, $r1);

     label3:
        $i0 = $i0 + 1;

        goto label2;

     label4:
        return;
    }

    protected android.os.Parcelable onSaveInstanceState()
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState $r1;
        android.os.Parcelable $r2;
        android.util.SparseArray $r3;
        int $i0, $i1, $i2;
        android.view.View $r4;
        android.view.ViewGroup$LayoutParams $r5;
        androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams $r6;
        androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior $r7;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r1 = new androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState;

        $r2 = specialinvoke $r0.<android.view.ViewGroup: android.os.Parcelable onSaveInstanceState()>();

        specialinvoke $r1.<androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState: void <init>(android.os.Parcelable)>($r2);

        $r3 = new android.util.SparseArray;

        specialinvoke $r3.<android.util.SparseArray: void <init>()>();

        $i0 = 0;

        $i1 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: int getChildCount()>();

     label1:
        if $i0 >= $i1 goto label3;

        $r4 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: android.view.View getChildAt(int)>($i0);

        $i2 = virtualinvoke $r4.<android.view.View: int getId()>();

        $r5 = virtualinvoke $r4.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r6 = (androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) $r5;

        $r7 = virtualinvoke $r6.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()>();

        if $i2 == -1 goto label2;

        if $r7 == null goto label2;

        $r2 = virtualinvoke $r7.<androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View)>($r0, $r4);

        if $r2 == null goto label2;

        virtualinvoke $r3.<android.util.SparseArray: void append(int,java.lang.Object)>($i2, $r2);

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        $r1.<androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState: android.util.SparseArray behaviorStates> = $r3;

        return $r1;
    }

    public boolean onStartNestedScroll(android.view.View, android.view.View, int)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        android.view.View $r1, $r2;
        int $i0;
        boolean $z0;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.view.View;

        $i0 := @parameter2: int;

        $z0 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onStartNestedScroll(android.view.View,android.view.View,int,int)>($r1, $r2, $i0, 0);

        return $z0;
    }

    public boolean onStartNestedScroll(android.view.View, android.view.View, int, int)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        android.view.View $r1, $r2, $r3;
        int $i0, $i1, $i2, $i3, $i4;
        boolean $z0, $z1;
        android.view.ViewGroup$LayoutParams $r4;
        androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams $r5;
        androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior $r6;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.view.View;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $i2 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: int getChildCount()>();

        $z0 = 0;

        $i3 = 0;

     label1:
        if $i3 >= $i2 goto label5;

        $r3 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: android.view.View getChildAt(int)>($i3);

        $i4 = virtualinvoke $r3.<android.view.View: int getVisibility()>();

        if $i4 != 8 goto label2;

        goto label4;

     label2:
        $r4 = virtualinvoke $r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r5 = (androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) $r4;

        $r6 = virtualinvoke $r5.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()>();

        if $r6 == null goto label3;

        $z1 = virtualinvoke $r6.<androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int)>($r0, $r3, $r1, $r2, $i0, $i1);

        virtualinvoke $r5.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: void setNestedScrollAccepted(int,boolean)>($i1, $z1);

        $z0 = $z0 | $z1;

        goto label4;

     label3:
        virtualinvoke $r5.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: void setNestedScrollAccepted(int,boolean)>($i1, 0);

     label4:
        $i3 = $i3 + 1;

        goto label1;

     label5:
        return $z0;
    }

    public void onStopNestedScroll(android.view.View)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        android.view.View $r1;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r1 := @parameter0: android.view.View;

        virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: void onStopNestedScroll(android.view.View,int)>($r1, 0);

        return;
    }

    public void onStopNestedScroll(android.view.View, int)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        android.view.View $r1, $r3;
        int $i0, $i1, $i2;
        androidx.core.view.NestedScrollingParentHelper $r2;
        android.view.ViewGroup$LayoutParams $r4;
        androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams $r5;
        boolean $z0;
        androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior $r6;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r2 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.core.view.NestedScrollingParentHelper mNestedScrollingParentHelper>;

        virtualinvoke $r2.<androidx.core.view.NestedScrollingParentHelper: void onStopNestedScroll(android.view.View,int)>($r1, $i0);

        $i1 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: int getChildCount()>();

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label5;

        $r3 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: android.view.View getChildAt(int)>($i2);

        $r4 = virtualinvoke $r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r5 = (androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) $r4;

        $z0 = virtualinvoke $r5.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: boolean isNestedScrollAccepted(int)>($i0);

        if $z0 != 0 goto label2;

        goto label4;

     label2:
        $r6 = virtualinvoke $r5.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()>();

        if $r6 == null goto label3;

        virtualinvoke $r6.<androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int)>($r0, $r3, $r1, $i0);

     label3:
        virtualinvoke $r5.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: void resetNestedScroll(int)>($i0);

        virtualinvoke $r5.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: void resetChangedAfterNestedScroll()>();

     label4:
        $i2 = $i2 + 1;

        goto label1;

     label5:
        $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: android.view.View mNestedScrollingTarget> = null;

        return;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        android.view.MotionEvent $r1, $r3;
        android.view.View $r2;
        boolean $z0, $z1, $z2;
        int $i0;
        android.view.ViewGroup$LayoutParams $r4;
        androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams $r5;
        androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior $r6;
        long $l1;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r1 := @parameter0: android.view.MotionEvent;

        $z0 = 0;

        $z1 = 0;

        $r3 = null;

        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getActionMasked()>();

        $r2 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: android.view.View mBehaviorTouchView>;

        if $r2 != null goto label1;

        $z2 = specialinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean performIntercept(android.view.MotionEvent,int)>($r1, 1);

        $z1 = $z2;

        if $z2 == 0 goto label2;

     label1:
        $r2 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: android.view.View mBehaviorTouchView>;

        $r4 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r5 = (androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) $r4;

        $r6 = virtualinvoke $r5.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()>();

        if $r6 == null goto label2;

        $r2 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: android.view.View mBehaviorTouchView>;

        $z0 = virtualinvoke $r6.<androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: boolean onTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)>($r0, $r2, $r1);

     label2:
        $r2 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: android.view.View mBehaviorTouchView>;

        if $r2 != null goto label3;

        $z1 = specialinvoke $r0.<android.view.ViewGroup: boolean onTouchEvent(android.view.MotionEvent)>($r1);

        $z0 = $z0 | $z1;

        goto label4;

     label3:
        if $z1 == 0 goto label4;

        $l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r3 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,float,float,int)>($l1, $l1, 3, 0.0F, 0.0F, 0);

        specialinvoke $r0.<android.view.ViewGroup: boolean onTouchEvent(android.view.MotionEvent)>($r3);

     label4:
        if $r3 == null goto label5;

        virtualinvoke $r3.<android.view.MotionEvent: void recycle()>();

     label5:
        if $i0 == 1 goto label6;

        if $i0 != 3 goto label7;

     label6:
        specialinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: void resetTouchBehaviors(boolean)>(0);

     label7:
        return $z0;
    }

    void recordLastChildRect(android.view.View, android.graphics.Rect)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        android.view.View $r1;
        android.graphics.Rect $r2;
        android.view.ViewGroup$LayoutParams $r3;
        androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams $r4;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.graphics.Rect;

        $r3 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r4 = (androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) $r3;

        virtualinvoke $r4.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: void setLastChildRect(android.graphics.Rect)>($r2);

        return;
    }

    void removePreDrawListener()
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        androidx.coordinatorlayout.widget.CoordinatorLayout$OnPreDrawListener $r1;
        android.view.ViewTreeObserver $r2;
        boolean $z0;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $z0 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean mIsAttachedToWindow>;

        if $z0 == 0 goto label1;

        $r1 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.coordinatorlayout.widget.CoordinatorLayout$OnPreDrawListener mOnPreDrawListener>;

        if $r1 == null goto label1;

        $r2 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: android.view.ViewTreeObserver getViewTreeObserver()>();

        $r1 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.coordinatorlayout.widget.CoordinatorLayout$OnPreDrawListener mOnPreDrawListener>;

        virtualinvoke $r2.<android.view.ViewTreeObserver: void removeOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener)>($r1);

     label1:
        $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean mNeedsPreDrawListener> = 0;

        return;
    }

    public boolean requestChildRectangleOnScreen(android.view.View, android.graphics.Rect, boolean)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        android.view.View $r1;
        android.graphics.Rect $r2;
        boolean $z0, $z1;
        android.view.ViewGroup$LayoutParams $r3;
        androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams $r4;
        androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior $r5;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.graphics.Rect;

        $z0 := @parameter2: boolean;

        $r3 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r4 = (androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) $r3;

        $r5 = virtualinvoke $r4.<androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()>();

        if $r5 == null goto label1;

        $z1 = virtualinvoke $r5.<androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: boolean onRequestChildRectangleOnScreen(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.graphics.Rect,boolean)>($r0, $r1, $r2, $z0);

        if $z1 == 0 goto label1;

        return 1;

     label1:
        $z0 = specialinvoke $r0.<android.view.ViewGroup: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)>($r1, $r2, $z0);

        return $z0;
    }

    public void requestDisallowInterceptTouchEvent(boolean)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        boolean $z0;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $z0 := @parameter0: boolean;

        specialinvoke $r0.<android.view.ViewGroup: void requestDisallowInterceptTouchEvent(boolean)>($z0);

        if $z0 == 0 goto label1;

        $z0 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean mDisallowInterceptReset>;

        if $z0 != 0 goto label1;

        specialinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: void resetTouchBehaviors(boolean)>(0);

        $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean mDisallowInterceptReset> = 1;

     label1:
        return;
    }

    public void setFitsSystemWindows(boolean)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        boolean $z0;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $z0 := @parameter0: boolean;

        specialinvoke $r0.<android.view.ViewGroup: void setFitsSystemWindows(boolean)>($z0);

        specialinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: void setupForInsets()>();

        return;
    }

    public void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        android.view.ViewGroup$OnHierarchyChangeListener $r1;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r1 := @parameter0: android.view.ViewGroup$OnHierarchyChangeListener;

        $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: android.view.ViewGroup$OnHierarchyChangeListener mOnHierarchyChangeListener> = $r1;

        return;
    }

    public void setStatusBarBackground(android.graphics.drawable.Drawable)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        android.graphics.drawable.Drawable $r1, $r2, $r3;
        boolean $z0;
        int[] $r4;
        int $i0;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.drawable.Drawable mStatusBarBackground>;

        if $r2 == $r1 goto label7;

        $r3 = null;

        if $r2 == null goto label1;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

     label1:
        if $r1 == null goto label2;

        $r3 = virtualinvoke $r1.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

     label2:
        $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.drawable.Drawable mStatusBarBackground> = $r3;

        $r1 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.drawable.Drawable mStatusBarBackground>;

        if $r1 == null goto label6;

        $z0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean isStateful()>();

        if $z0 == 0 goto label3;

        $r1 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.drawable.Drawable mStatusBarBackground>;

        $r4 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: int[] getDrawableState()>();

        virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setState(int[])>($r4);

     label3:
        $r1 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.drawable.Drawable mStatusBarBackground>;

        $i0 = staticinvoke <androidx.core.view.ViewCompat: int getLayoutDirection(android.view.View)>($r0);

        staticinvoke <androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>($r1, $i0);

        $r1 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.drawable.Drawable mStatusBarBackground>;

        $i0 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: int getVisibility()>();

        if $i0 != 0 goto label4;

        $z0 = 1;

        goto label5;

     label4:
        $z0 = 0;

     label5:
        virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>($z0, 0);

        $r1 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.drawable.Drawable mStatusBarBackground>;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>($r0);

     label6:
        staticinvoke <androidx.core.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>($r0);

     label7:
        return;
    }

    public void setStatusBarBackgroundColor(int)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        int $i0;
        android.graphics.drawable.ColorDrawable $r1;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $i0 := @parameter0: int;

        $r1 = new android.graphics.drawable.ColorDrawable;

        specialinvoke $r1.<android.graphics.drawable.ColorDrawable: void <init>(int)>($i0);

        virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackground(android.graphics.drawable.Drawable)>($r1);

        return;
    }

    public void setStatusBarBackgroundResource(int)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        int $i0;
        android.content.Context $r1;
        android.graphics.drawable.Drawable $r2;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $i0 := @parameter0: int;

        if $i0 == 0 goto label1;

        $r1 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: android.content.Context getContext()>();

        $r2 = staticinvoke <androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>($r1, $i0);

        goto label2;

     label1:
        $r2 = null;

     label2:
        virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackground(android.graphics.drawable.Drawable)>($r2);

        return;
    }

    public void setVisibility(int)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        int $i0;
        boolean $z0, $z1;
        android.graphics.drawable.Drawable $r1;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $i0 := @parameter0: int;

        specialinvoke $r0.<android.view.ViewGroup: void setVisibility(int)>($i0);

        if $i0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        $r1 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.drawable.Drawable mStatusBarBackground>;

        if $r1 == null goto label3;

        $z0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean isVisible()>();

        if $z0 == $z1 goto label3;

        $r1 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.drawable.Drawable mStatusBarBackground>;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>($z1, 0);

     label3:
        return;
    }

    final androidx.core.view.WindowInsetsCompat setWindowInsets(androidx.core.view.WindowInsetsCompat)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        androidx.core.view.WindowInsetsCompat $r1, $r2;
        boolean $z0, $z1;
        int $i0;
        android.graphics.drawable.Drawable $r3;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r1 := @parameter0: androidx.core.view.WindowInsetsCompat;

        $r2 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.core.view.WindowInsetsCompat mLastInsets>;

        $z0 = staticinvoke <androidx.core.util.ObjectsCompat: boolean equals(java.lang.Object,java.lang.Object)>($r2, $r1);

        if $z0 != 0 goto label5;

        $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.core.view.WindowInsetsCompat mLastInsets> = $r1;

        $z0 = 1;

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetTop()>();

        if $i0 <= 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean mDrawStatusBarBackground> = $z1;

        $z1 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: boolean mDrawStatusBarBackground>;

        if $z1 != 0 goto label3;

        $r3 = virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.drawable.Drawable getBackground()>();

        if $r3 != null goto label3;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: void setWillNotDraw(boolean)>($z0);

        $r1 = specialinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.core.view.WindowInsetsCompat dispatchApplyWindowInsetsToBehaviors(androidx.core.view.WindowInsetsCompat)>($r1);

        virtualinvoke $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: void requestLayout()>();

     label5:
        return $r1;
    }

    protected boolean verifyDrawable(android.graphics.drawable.Drawable)
    {
        androidx.coordinatorlayout.widget.CoordinatorLayout $r0;
        android.graphics.drawable.Drawable $r1, $r2;
        boolean $z0;

        $r0 := @this: androidx.coordinatorlayout.widget.CoordinatorLayout;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        $z0 = specialinvoke $r0.<android.view.ViewGroup: boolean verifyDrawable(android.graphics.drawable.Drawable)>($r1);

        if $z0 != 0 goto label2;

        $r2 = $r0.<androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.drawable.Drawable mStatusBarBackground>;

        if $r1 != $r2 goto label1;

        goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }
}
