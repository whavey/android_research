public class androidx.appcompat.graphics.drawable.DrawerArrowDrawable extends android.graphics.drawable.Drawable
{
    public static final int ARROW_DIRECTION_END;
    public static final int ARROW_DIRECTION_LEFT;
    public static final int ARROW_DIRECTION_RIGHT;
    public static final int ARROW_DIRECTION_START;
    private static final float ARROW_HEAD_ANGLE;
    private float mArrowHeadLength;
    private float mArrowShaftLength;
    private float mBarGap;
    private float mBarLength;
    private int mDirection;
    private float mMaxCutForBarSize;
    private final android.graphics.Paint mPaint;
    private final android.graphics.Path mPath;
    private float mProgress;
    private final int mSize;
    private boolean mSpin;
    private boolean mVerticalMirror;

    static void <clinit>()
    {
        double $d0;
        float $f0;

        <androidx.appcompat.graphics.drawable.DrawerArrowDrawable: int ARROW_DIRECTION_START> = 2;

        <androidx.appcompat.graphics.drawable.DrawerArrowDrawable: int ARROW_DIRECTION_RIGHT> = 1;

        <androidx.appcompat.graphics.drawable.DrawerArrowDrawable: int ARROW_DIRECTION_LEFT> = 0;

        <androidx.appcompat.graphics.drawable.DrawerArrowDrawable: int ARROW_DIRECTION_END> = 3;

        $d0 = staticinvoke <java.lang.Math: double toRadians(double)>(45.0);

        $f0 = (float) $d0;

        <androidx.appcompat.graphics.drawable.DrawerArrowDrawable: float ARROW_HEAD_ANGLE> = $f0;

        return;
    }

    public void <init>(android.content.Context)
    {
        androidx.appcompat.graphics.drawable.DrawerArrowDrawable $r0;
        android.content.Context $r1;
        int $i0, $i1;
        android.graphics.Paint $r2;
        android.graphics.Path $r3;
        android.graphics.Paint$Style $r4;
        android.graphics.Paint$Join $r5;
        android.graphics.Paint$Cap $r6;
        android.content.res.Resources$Theme $r7;
        int[] $r8;
        android.content.res.TypedArray $r9;
        float $f0;
        boolean $z0;

        $r0 := @this: androidx.appcompat.graphics.drawable.DrawerArrowDrawable;

        $r1 := @parameter0: android.content.Context;

        specialinvoke $r0.<android.graphics.drawable.Drawable: void <init>()>();

        $r2 = new android.graphics.Paint;

        specialinvoke $r2.<android.graphics.Paint: void <init>()>();

        $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: android.graphics.Paint mPaint> = $r2;

        $r3 = new android.graphics.Path;

        specialinvoke $r3.<android.graphics.Path: void <init>()>();

        $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: android.graphics.Path mPath> = $r3;

        $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: boolean mVerticalMirror> = 0;

        $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: int mDirection> = 2;

        $r2 = $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: android.graphics.Paint mPaint>;

        $r4 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke $r2.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r4);

        $r2 = $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: android.graphics.Paint mPaint>;

        $r5 = <android.graphics.Paint$Join: android.graphics.Paint$Join MITER>;

        virtualinvoke $r2.<android.graphics.Paint: void setStrokeJoin(android.graphics.Paint$Join)>($r5);

        $r2 = $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: android.graphics.Paint mPaint>;

        $r6 = <android.graphics.Paint$Cap: android.graphics.Paint$Cap BUTT>;

        virtualinvoke $r2.<android.graphics.Paint: void setStrokeCap(android.graphics.Paint$Cap)>($r6);

        $r2 = $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: android.graphics.Paint mPaint>;

        virtualinvoke $r2.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $r7 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $r8 = <androidx.appcompat.R$styleable: int[] DrawerArrowToggle>;

        $i1 = <androidx.appcompat.R$attr: int drawerArrowStyle>;

        $i0 = <androidx.appcompat.R$style: int Base_Widget_AppCompat_DrawerArrowToggle>;

        $r9 = virtualinvoke $r7.<android.content.res.Resources$Theme: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(null, $r8, $i1, $i0);

        $i0 = <androidx.appcompat.R$styleable: int DrawerArrowToggle_color>;

        $i0 = virtualinvoke $r9.<android.content.res.TypedArray: int getColor(int,int)>($i0, 0);

        virtualinvoke $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: void setColor(int)>($i0);

        $i0 = <androidx.appcompat.R$styleable: int DrawerArrowToggle_thickness>;

        $f0 = virtualinvoke $r9.<android.content.res.TypedArray: float getDimension(int,float)>($i0, 0.0F);

        virtualinvoke $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: void setBarThickness(float)>($f0);

        $i0 = <androidx.appcompat.R$styleable: int DrawerArrowToggle_spinBars>;

        $z0 = virtualinvoke $r9.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i0, 1);

        virtualinvoke $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: void setSpinEnabled(boolean)>($z0);

        $i0 = <androidx.appcompat.R$styleable: int DrawerArrowToggle_gapBetweenBars>;

        $f0 = virtualinvoke $r9.<android.content.res.TypedArray: float getDimension(int,float)>($i0, 0.0F);

        $i0 = staticinvoke <java.lang.Math: int round(float)>($f0);

        $f0 = (float) $i0;

        virtualinvoke $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: void setGapSize(float)>($f0);

        $i0 = <androidx.appcompat.R$styleable: int DrawerArrowToggle_drawableSize>;

        $i0 = virtualinvoke $r9.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>($i0, 0);

        $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: int mSize> = $i0;

        $i0 = <androidx.appcompat.R$styleable: int DrawerArrowToggle_barLength>;

        $f0 = virtualinvoke $r9.<android.content.res.TypedArray: float getDimension(int,float)>($i0, 0.0F);

        $i0 = staticinvoke <java.lang.Math: int round(float)>($f0);

        $f0 = (float) $i0;

        $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: float mBarLength> = $f0;

        $i0 = <androidx.appcompat.R$styleable: int DrawerArrowToggle_arrowHeadLength>;

        $f0 = virtualinvoke $r9.<android.content.res.TypedArray: float getDimension(int,float)>($i0, 0.0F);

        $i0 = staticinvoke <java.lang.Math: int round(float)>($f0);

        $f0 = (float) $i0;

        $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: float mArrowHeadLength> = $f0;

        $i0 = <androidx.appcompat.R$styleable: int DrawerArrowToggle_arrowShaftLength>;

        $f0 = virtualinvoke $r9.<android.content.res.TypedArray: float getDimension(int,float)>($i0, 0.0F);

        $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: float mArrowShaftLength> = $f0;

        virtualinvoke $r9.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    private static float lerp(float, float, float)
    {
        float $f0, $f1, $f2;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $f1 = $f1 - $f0;

        $f1 = $f1 * $f2;

        $f0 = $f1 + $f0;

        return $f0;
    }

    public void draw(android.graphics.Canvas)
    {
        androidx.appcompat.graphics.drawable.DrawerArrowDrawable $r0;
        android.graphics.Canvas $r1;
        android.graphics.Rect $r2;
        int $i0;
        boolean $z0, $z1;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;
        double $d0, $d1;
        long $l1;
        android.graphics.Path $r3;
        android.graphics.Paint $r4;
        byte $b2;

        $r0 := @this: androidx.appcompat.graphics.drawable.DrawerArrowDrawable;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 = virtualinvoke $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: android.graphics.Rect getBounds()>();

        $i0 = $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: int mDirection>;

        if $i0 == 0 goto label05;

        if $i0 == 1 goto label04;

        $z0 = 0;

        if $i0 == 3 goto label02;

        $i0 = staticinvoke <androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>($r0);

        if $i0 != 1 goto label01;

        $z0 = 1;

     label01:
        goto label06;

     label02:
        $i0 = staticinvoke <androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>($r0);

        if $i0 != 0 goto label03;

        $z0 = 1;

     label03:
        goto label06;

     label04:
        $z0 = 1;

        goto label06;

     label05:
        $z0 = 0;

     label06:
        $f0 = $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: float mArrowHeadLength>;

        $f0 = $f0 * $f0;

        $f0 = $f0 * 2.0F;

        $d0 = (double) $f0;

        $d0 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        $f0 = (float) $d0;

        $f1 = $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: float mBarLength>;

        $f2 = $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: float mProgress>;

        $f3 = staticinvoke <androidx.appcompat.graphics.drawable.DrawerArrowDrawable: float lerp(float,float,float)>($f1, $f0, $f2);

        $f0 = $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: float mBarLength>;

        $f1 = $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: float mArrowShaftLength>;

        $f2 = $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: float mProgress>;

        $f1 = staticinvoke <androidx.appcompat.graphics.drawable.DrawerArrowDrawable: float lerp(float,float,float)>($f0, $f1, $f2);

        $f0 = $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: float mMaxCutForBarSize>;

        $f2 = $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: float mProgress>;

        $f0 = staticinvoke <androidx.appcompat.graphics.drawable.DrawerArrowDrawable: float lerp(float,float,float)>(0.0F, $f0, $f2);

        $i0 = staticinvoke <java.lang.Math: int round(float)>($f0);

        $f2 = (float) $i0;

        $f0 = <androidx.appcompat.graphics.drawable.DrawerArrowDrawable: float ARROW_HEAD_ANGLE>;

        $f4 = $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: float mProgress>;

        $f5 = staticinvoke <androidx.appcompat.graphics.drawable.DrawerArrowDrawable: float lerp(float,float,float)>(0.0F, $f0, $f4);

        if $z0 == 0 goto label07;

        $f0 = 0.0F;

        goto label08;

     label07:
        $f0 = -180.0F;

     label08:
        if $z0 == 0 goto label09;

        $f4 = 180.0F;

        goto label10;

     label09:
        $f4 = 0.0F;

     label10:
        $f6 = $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: float mProgress>;

        $f0 = staticinvoke <androidx.appcompat.graphics.drawable.DrawerArrowDrawable: float lerp(float,float,float)>($f0, $f4, $f6);

        $d0 = (double) $f3;

        $d1 = (double) $f5;

        $d1 = staticinvoke <java.lang.Math: double cos(double)>($d1);

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d0);

        $d0 = $d0 * $d1;

        $l1 = staticinvoke <java.lang.Math: long round(double)>($d0);

        $f4 = (float) $l1;

        $d0 = (double) $f3;

        $d1 = (double) $f5;

        $d1 = staticinvoke <java.lang.Math: double sin(double)>($d1);

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d0);

        $d0 = $d0 * $d1;

        $l1 = staticinvoke <java.lang.Math: long round(double)>($d0);

        $f3 = (float) $l1;

        $r3 = $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: android.graphics.Path mPath>;

        virtualinvoke $r3.<android.graphics.Path: void rewind()>();

        $f5 = $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: float mBarGap>;

        $r4 = $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: android.graphics.Paint mPaint>;

        $f6 = virtualinvoke $r4.<android.graphics.Paint: float getStrokeWidth()>();

        $f5 = $f5 + $f6;

        $f6 = $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: float mMaxCutForBarSize>;

        $f6 = neg $f6;

        $f7 = $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: float mProgress>;

        $f5 = staticinvoke <androidx.appcompat.graphics.drawable.DrawerArrowDrawable: float lerp(float,float,float)>($f5, $f6, $f7);

        $f6 = neg $f1;

        $f6 = $f6 / 2.0F;

        $r3 = $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: android.graphics.Path mPath>;

        $f7 = $f6 + $f2;

        virtualinvoke $r3.<android.graphics.Path: void moveTo(float,float)>($f7, 0.0F);

        $r3 = $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: android.graphics.Path mPath>;

        $f2 = $f2 * 2.0F;

        $f1 = $f1 - $f2;

        virtualinvoke $r3.<android.graphics.Path: void rLineTo(float,float)>($f1, 0.0F);

        $r3 = $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: android.graphics.Path mPath>;

        virtualinvoke $r3.<android.graphics.Path: void moveTo(float,float)>($f6, $f5);

        $r3 = $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: android.graphics.Path mPath>;

        virtualinvoke $r3.<android.graphics.Path: void rLineTo(float,float)>($f4, $f3);

        $r3 = $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: android.graphics.Path mPath>;

        $f1 = neg $f5;

        virtualinvoke $r3.<android.graphics.Path: void moveTo(float,float)>($f6, $f1);

        $r3 = $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: android.graphics.Path mPath>;

        $f1 = neg $f3;

        virtualinvoke $r3.<android.graphics.Path: void rLineTo(float,float)>($f4, $f1);

        $r3 = $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: android.graphics.Path mPath>;

        virtualinvoke $r3.<android.graphics.Path: void close()>();

        virtualinvoke $r1.<android.graphics.Canvas: int save()>();

        $r4 = $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: android.graphics.Paint mPaint>;

        $f1 = virtualinvoke $r4.<android.graphics.Paint: float getStrokeWidth()>();

        $i0 = virtualinvoke $r2.<android.graphics.Rect: int height()>();

        $f2 = (float) $i0;

        $f4 = 3.0F * $f1;

        $f4 = $f2 - $f4;

        $f2 = $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: float mBarGap>;

        $f3 = 2.0F * $f2;

        $f4 = $f4 - $f3;

        $i0 = (int) $f4;

        $i0 = $i0 / 4;

        $i0 = $i0 * 2;

        $f4 = (float) $i0;

        $f1 = 1.5F * $f1;

        $f1 = $f1 + $f2;

        $f1 = $f4 + $f1;

        $i0 = virtualinvoke $r2.<android.graphics.Rect: int centerX()>();

        $f2 = (float) $i0;

        virtualinvoke $r1.<android.graphics.Canvas: void translate(float,float)>($f2, $f1);

        $z1 = $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: boolean mSpin>;

        if $z1 == 0 goto label13;

        $z1 = $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: boolean mVerticalMirror>;

        $z0 = $z1 ^ $z0;

        if $z0 == 0 goto label11;

        $b2 = -1;

        goto label12;

     label11:
        $b2 = 1;

     label12:
        $f1 = (float) $b2;

        $f0 = $f1 * $f0;

        virtualinvoke $r1.<android.graphics.Canvas: void rotate(float)>($f0);

        goto label14;

     label13:
        if $z0 == 0 goto label14;

        virtualinvoke $r1.<android.graphics.Canvas: void rotate(float)>(180.0F);

     label14:
        $r3 = $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: android.graphics.Path mPath>;

        $r4 = $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: android.graphics.Paint mPaint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>($r3, $r4);

        virtualinvoke $r1.<android.graphics.Canvas: void restore()>();

        return;
    }

    public float getArrowHeadLength()
    {
        androidx.appcompat.graphics.drawable.DrawerArrowDrawable $r0;
        float f0;

        $r0 := @this: androidx.appcompat.graphics.drawable.DrawerArrowDrawable;

        f0 = $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: float mArrowHeadLength>;

        return f0;
    }

    public float getArrowShaftLength()
    {
        androidx.appcompat.graphics.drawable.DrawerArrowDrawable $r0;
        float f0;

        $r0 := @this: androidx.appcompat.graphics.drawable.DrawerArrowDrawable;

        f0 = $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: float mArrowShaftLength>;

        return f0;
    }

    public float getBarLength()
    {
        androidx.appcompat.graphics.drawable.DrawerArrowDrawable $r0;
        float f0;

        $r0 := @this: androidx.appcompat.graphics.drawable.DrawerArrowDrawable;

        f0 = $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: float mBarLength>;

        return f0;
    }

    public float getBarThickness()
    {
        androidx.appcompat.graphics.drawable.DrawerArrowDrawable $r0;
        float $f0;
        android.graphics.Paint $r1;

        $r0 := @this: androidx.appcompat.graphics.drawable.DrawerArrowDrawable;

        $r1 = $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: android.graphics.Paint mPaint>;

        $f0 = virtualinvoke $r1.<android.graphics.Paint: float getStrokeWidth()>();

        return $f0;
    }

    public int getColor()
    {
        androidx.appcompat.graphics.drawable.DrawerArrowDrawable $r0;
        int $i0;
        android.graphics.Paint $r1;

        $r0 := @this: androidx.appcompat.graphics.drawable.DrawerArrowDrawable;

        $r1 = $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: android.graphics.Paint mPaint>;

        $i0 = virtualinvoke $r1.<android.graphics.Paint: int getColor()>();

        return $i0;
    }

    public int getDirection()
    {
        androidx.appcompat.graphics.drawable.DrawerArrowDrawable $r0;
        int i0;

        $r0 := @this: androidx.appcompat.graphics.drawable.DrawerArrowDrawable;

        i0 = $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: int mDirection>;

        return i0;
    }

    public float getGapSize()
    {
        androidx.appcompat.graphics.drawable.DrawerArrowDrawable $r0;
        float f0;

        $r0 := @this: androidx.appcompat.graphics.drawable.DrawerArrowDrawable;

        f0 = $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: float mBarGap>;

        return f0;
    }

    public int getIntrinsicHeight()
    {
        androidx.appcompat.graphics.drawable.DrawerArrowDrawable $r0;
        int i0;

        $r0 := @this: androidx.appcompat.graphics.drawable.DrawerArrowDrawable;

        i0 = $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: int mSize>;

        return i0;
    }

    public int getIntrinsicWidth()
    {
        androidx.appcompat.graphics.drawable.DrawerArrowDrawable $r0;
        int i0;

        $r0 := @this: androidx.appcompat.graphics.drawable.DrawerArrowDrawable;

        i0 = $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: int mSize>;

        return i0;
    }

    public int getOpacity()
    {
        androidx.appcompat.graphics.drawable.DrawerArrowDrawable $r0;

        $r0 := @this: androidx.appcompat.graphics.drawable.DrawerArrowDrawable;

        return -3;
    }

    public final android.graphics.Paint getPaint()
    {
        androidx.appcompat.graphics.drawable.DrawerArrowDrawable $r0;
        android.graphics.Paint r1;

        $r0 := @this: androidx.appcompat.graphics.drawable.DrawerArrowDrawable;

        r1 = $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: android.graphics.Paint mPaint>;

        return r1;
    }

    public float getProgress()
    {
        androidx.appcompat.graphics.drawable.DrawerArrowDrawable $r0;
        float f0;

        $r0 := @this: androidx.appcompat.graphics.drawable.DrawerArrowDrawable;

        f0 = $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: float mProgress>;

        return f0;
    }

    public boolean isSpinEnabled()
    {
        androidx.appcompat.graphics.drawable.DrawerArrowDrawable $r0;
        boolean z0;

        $r0 := @this: androidx.appcompat.graphics.drawable.DrawerArrowDrawable;

        z0 = $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: boolean mSpin>;

        return z0;
    }

    public void setAlpha(int)
    {
        androidx.appcompat.graphics.drawable.DrawerArrowDrawable $r0;
        int $i0, $i1;
        android.graphics.Paint $r1;

        $r0 := @this: androidx.appcompat.graphics.drawable.DrawerArrowDrawable;

        $i0 := @parameter0: int;

        $r1 = $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: android.graphics.Paint mPaint>;

        $i1 = virtualinvoke $r1.<android.graphics.Paint: int getAlpha()>();

        if $i0 == $i1 goto label1;

        $r1 = $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: android.graphics.Paint mPaint>;

        virtualinvoke $r1.<android.graphics.Paint: void setAlpha(int)>($i0);

        virtualinvoke $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: void invalidateSelf()>();

     label1:
        return;
    }

    public void setArrowHeadLength(float)
    {
        androidx.appcompat.graphics.drawable.DrawerArrowDrawable $r0;
        float $f0, $f1;
        byte $b0;

        $r0 := @this: androidx.appcompat.graphics.drawable.DrawerArrowDrawable;

        $f0 := @parameter0: float;

        $f1 = $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: float mArrowHeadLength>;

        $b0 = $f1 cmpl $f0;

        if $b0 == 0 goto label1;

        $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: float mArrowHeadLength> = $f0;

        virtualinvoke $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: void invalidateSelf()>();

     label1:
        return;
    }

    public void setArrowShaftLength(float)
    {
        androidx.appcompat.graphics.drawable.DrawerArrowDrawable $r0;
        float $f0, $f1;
        byte $b0;

        $r0 := @this: androidx.appcompat.graphics.drawable.DrawerArrowDrawable;

        $f0 := @parameter0: float;

        $f1 = $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: float mArrowShaftLength>;

        $b0 = $f1 cmpl $f0;

        if $b0 == 0 goto label1;

        $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: float mArrowShaftLength> = $f0;

        virtualinvoke $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: void invalidateSelf()>();

     label1:
        return;
    }

    public void setBarLength(float)
    {
        androidx.appcompat.graphics.drawable.DrawerArrowDrawable $r0;
        float $f0, $f1;
        byte $b0;

        $r0 := @this: androidx.appcompat.graphics.drawable.DrawerArrowDrawable;

        $f0 := @parameter0: float;

        $f1 = $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: float mBarLength>;

        $b0 = $f1 cmpl $f0;

        if $b0 == 0 goto label1;

        $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: float mBarLength> = $f0;

        virtualinvoke $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: void invalidateSelf()>();

     label1:
        return;
    }

    public void setBarThickness(float)
    {
        androidx.appcompat.graphics.drawable.DrawerArrowDrawable $r0;
        float $f0, $f1;
        android.graphics.Paint $r1;
        byte $b0;
        double $d0, $d1;

        $r0 := @this: androidx.appcompat.graphics.drawable.DrawerArrowDrawable;

        $f0 := @parameter0: float;

        $r1 = $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: android.graphics.Paint mPaint>;

        $f1 = virtualinvoke $r1.<android.graphics.Paint: float getStrokeWidth()>();

        $b0 = $f1 cmpl $f0;

        if $b0 == 0 goto label1;

        $r1 = $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: android.graphics.Paint mPaint>;

        virtualinvoke $r1.<android.graphics.Paint: void setStrokeWidth(float)>($f0);

        $f0 = $f0 / 2.0F;

        $d0 = (double) $f0;

        $f0 = <androidx.appcompat.graphics.drawable.DrawerArrowDrawable: float ARROW_HEAD_ANGLE>;

        $d1 = (double) $f0;

        $d1 = staticinvoke <java.lang.Math: double cos(double)>($d1);

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d0);

        $d0 = $d0 * $d1;

        $f0 = (float) $d0;

        $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: float mMaxCutForBarSize> = $f0;

        virtualinvoke $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: void invalidateSelf()>();

     label1:
        return;
    }

    public void setColor(int)
    {
        androidx.appcompat.graphics.drawable.DrawerArrowDrawable $r0;
        int $i0, $i1;
        android.graphics.Paint $r1;

        $r0 := @this: androidx.appcompat.graphics.drawable.DrawerArrowDrawable;

        $i0 := @parameter0: int;

        $r1 = $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: android.graphics.Paint mPaint>;

        $i1 = virtualinvoke $r1.<android.graphics.Paint: int getColor()>();

        if $i0 == $i1 goto label1;

        $r1 = $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: android.graphics.Paint mPaint>;

        virtualinvoke $r1.<android.graphics.Paint: void setColor(int)>($i0);

        virtualinvoke $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: void invalidateSelf()>();

     label1:
        return;
    }

    public void setColorFilter(android.graphics.ColorFilter)
    {
        androidx.appcompat.graphics.drawable.DrawerArrowDrawable $r0;
        android.graphics.ColorFilter $r1;
        android.graphics.Paint $r2;

        $r0 := @this: androidx.appcompat.graphics.drawable.DrawerArrowDrawable;

        $r1 := @parameter0: android.graphics.ColorFilter;

        $r2 = $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: android.graphics.Paint mPaint>;

        virtualinvoke $r2.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>($r1);

        virtualinvoke $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: void invalidateSelf()>();

        return;
    }

    public void setDirection(int)
    {
        androidx.appcompat.graphics.drawable.DrawerArrowDrawable $r0;
        int $i0, $i1;

        $r0 := @this: androidx.appcompat.graphics.drawable.DrawerArrowDrawable;

        $i0 := @parameter0: int;

        $i1 = $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: int mDirection>;

        if $i0 == $i1 goto label1;

        $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: int mDirection> = $i0;

        virtualinvoke $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: void invalidateSelf()>();

     label1:
        return;
    }

    public void setGapSize(float)
    {
        androidx.appcompat.graphics.drawable.DrawerArrowDrawable $r0;
        float $f0, $f1;
        byte $b0;

        $r0 := @this: androidx.appcompat.graphics.drawable.DrawerArrowDrawable;

        $f0 := @parameter0: float;

        $f1 = $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: float mBarGap>;

        $b0 = $f0 cmpl $f1;

        if $b0 == 0 goto label1;

        $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: float mBarGap> = $f0;

        virtualinvoke $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: void invalidateSelf()>();

     label1:
        return;
    }

    public void setProgress(float)
    {
        androidx.appcompat.graphics.drawable.DrawerArrowDrawable $r0;
        float $f0, $f1;
        byte $b0;

        $r0 := @this: androidx.appcompat.graphics.drawable.DrawerArrowDrawable;

        $f0 := @parameter0: float;

        $f1 = $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: float mProgress>;

        $b0 = $f1 cmpl $f0;

        if $b0 == 0 goto label1;

        $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: float mProgress> = $f0;

        virtualinvoke $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: void invalidateSelf()>();

     label1:
        return;
    }

    public void setSpinEnabled(boolean)
    {
        androidx.appcompat.graphics.drawable.DrawerArrowDrawable $r0;
        boolean $z0, $z1;

        $r0 := @this: androidx.appcompat.graphics.drawable.DrawerArrowDrawable;

        $z0 := @parameter0: boolean;

        $z1 = $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: boolean mSpin>;

        if $z1 == $z0 goto label1;

        $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: boolean mSpin> = $z0;

        virtualinvoke $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: void invalidateSelf()>();

     label1:
        return;
    }

    public void setVerticalMirror(boolean)
    {
        androidx.appcompat.graphics.drawable.DrawerArrowDrawable $r0;
        boolean $z0, $z1;

        $r0 := @this: androidx.appcompat.graphics.drawable.DrawerArrowDrawable;

        $z0 := @parameter0: boolean;

        $z1 = $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: boolean mVerticalMirror>;

        if $z1 == $z0 goto label1;

        $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: boolean mVerticalMirror> = $z0;

        virtualinvoke $r0.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: void invalidateSelf()>();

     label1:
        return;
    }
}
