public class androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat extends java.lang.Object implements android.view.animation.Interpolator
{
    public static final double EPSILON;
    public static final int MAX_NUM_POINTS;
    private static final float PRECISION;
    private float[] mX;
    private float[] mY;

    public void <init>(android.content.Context, android.util.AttributeSet, org.xmlpull.v1.XmlPullParser)
    {
        androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat $r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        org.xmlpull.v1.XmlPullParser $r3;
        android.content.res.Resources $r4;
        android.content.res.Resources$Theme $r5;

        $r0 := @this: androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $r3 := @parameter2: org.xmlpull.v1.XmlPullParser;

        $r4 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r5 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        specialinvoke $r0.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser)>($r4, $r5, $r2, $r3);

        return;
    }

    public void <init>(android.content.res.Resources, android.content.res.Resources$Theme, android.util.AttributeSet, org.xmlpull.v1.XmlPullParser)
    {
        androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat $r0;
        android.content.res.Resources $r1;
        android.content.res.Resources$Theme $r2;
        android.util.AttributeSet $r3;
        org.xmlpull.v1.XmlPullParser $r4;
        android.content.res.TypedArray $r5;
        int[] $r6;

        $r0 := @this: androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat;

        $r1 := @parameter0: android.content.res.Resources;

        $r2 := @parameter1: android.content.res.Resources$Theme;

        $r3 := @parameter2: android.util.AttributeSet;

        $r4 := @parameter3: org.xmlpull.v1.XmlPullParser;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r6 = <androidx.vectordrawable.graphics.drawable.AndroidResources: int[] STYLEABLE_PATH_INTERPOLATOR>;

        $r5 = staticinvoke <androidx.core.content.res.TypedArrayUtils: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>($r1, $r2, $r3, $r6);

        specialinvoke $r0.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void parseInterpolatorFromTypeArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)>($r5, $r4);

        virtualinvoke $r5.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    private void initCubic(float, float, float, float)
    {
        androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat $r0;
        float $f0, $f1, $f2, $f3;
        android.graphics.Path $r1;

        $r0 := @this: androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $f3 := @parameter3: float;

        $r1 = new android.graphics.Path;

        specialinvoke $r1.<android.graphics.Path: void <init>()>();

        virtualinvoke $r1.<android.graphics.Path: void moveTo(float,float)>(0.0F, 0.0F);

        virtualinvoke $r1.<android.graphics.Path: void cubicTo(float,float,float,float,float,float)>($f0, $f1, $f2, $f3, 1.0F, 1.0F);

        specialinvoke $r0.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void initPath(android.graphics.Path)>($r1);

        return;
    }

    private void initPath(android.graphics.Path)
    {
        androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat $r0;
        android.graphics.Path $r1;
        android.graphics.PathMeasure $r2;
        float $f0, $f1, $f2;
        int $i0, $i1, $i2;
        float[] $r3, $r4;
        double $d0;
        byte $b3;
        java.lang.IllegalArgumentException $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;
        boolean $z0;

        $r0 := @this: androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat;

        $r1 := @parameter0: android.graphics.Path;

        $r2 = new android.graphics.PathMeasure;

        specialinvoke $r2.<android.graphics.PathMeasure: void <init>(android.graphics.Path,boolean)>($r1, 0);

        $f0 = virtualinvoke $r2.<android.graphics.PathMeasure: float getLength()>();

        $f1 = $f0 / 0.002F;

        $i0 = (int) $f1;

        $i0 = $i0 + 1;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>(3000, $i0);

        if $i0 <= 0 goto label8;

        $r3 = newarray (float)[$i0];

        $r0.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float[] mX> = $r3;

        $r3 = newarray (float)[$i0];

        $r0.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float[] mY> = $r3;

        $r3 = newarray (float)[2];

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $f1 = (float) $i1;

        $f1 = $f1 * $f0;

        $i2 = $i0 + -1;

        $f2 = (float) $i2;

        $f1 = $f1 / $f2;

        virtualinvoke $r2.<android.graphics.PathMeasure: boolean getPosTan(float,float[],float[])>($f1, $r3, null);

        $r4 = $r0.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float[] mX>;

        $f1 = $r3[0];

        $r4[$i1] = $f1;

        $r4 = $r0.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float[] mY>;

        $f1 = $r3[1];

        $r4[$i1] = $f1;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        $r3 = $r0.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float[] mX>;

        $f0 = $r3[0];

        $f0 = staticinvoke <java.lang.Math: float abs(float)>($f0);

        $d0 = (double) $f0;

        $b3 = $d0 cmpl 1.0E-5;

        if $b3 > 0 goto label7;

        $r3 = $r0.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float[] mY>;

        $f0 = $r3[0];

        $f0 = staticinvoke <java.lang.Math: float abs(float)>($f0);

        $d0 = (double) $f0;

        $b3 = $d0 cmpl 1.0E-5;

        if $b3 > 0 goto label7;

        $r3 = $r0.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float[] mX>;

        $i1 = $i0 + -1;

        $f0 = $r3[$i1];

        $f0 = $f0 - 1.0F;

        $f0 = staticinvoke <java.lang.Math: float abs(float)>($f0);

        $d0 = (double) $f0;

        $b3 = $d0 cmpl 1.0E-5;

        if $b3 > 0 goto label7;

        $r3 = $r0.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float[] mY>;

        $i1 = $i0 + -1;

        $f0 = $r3[$i1];

        $f0 = $f0 - 1.0F;

        $f0 = staticinvoke <java.lang.Math: float abs(float)>($f0);

        $d0 = (double) $f0;

        $b3 = $d0 cmpl 1.0E-5;

        if $b3 > 0 goto label7;

        $f0 = 0.0F;

        $i1 = 0;

        $i2 = 0;

     label3:
        if $i2 >= $i0 goto label5;

        $r3 = $r0.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float[] mX>;

        $f1 = $r3[$i1];

        $b3 = $f1 cmpg $f0;

        if $b3 < 0 goto label4;

        $r3[$i2] = $f1;

        $f0 = $f1;

        $i2 = $i2 + 1;

        $i1 = $i1 + 1;

        goto label3;

     label4:
        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The Path cannot loop back on itself, x :");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r5;

     label5:
        $z0 = virtualinvoke $r2.<android.graphics.PathMeasure: boolean nextContour()>();

        if $z0 != 0 goto label6;

        return;

     label6:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The Path should be continuous, can\'t have 2+ contours");

        throw $r5;

     label7:
        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The Path must start at (0,0) and end at (1,1) start: ");

        $r3 = $r0.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float[] mX>;

        $f0 = $r3[0];

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r3 = $r0.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float[] mY>;

        $f0 = $r3[0];

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" end:");

        $r3 = $r0.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float[] mX>;

        $i1 = $i0 + -1;

        $f0 = $r3[$i1];

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r3 = $r0.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float[] mY>;

        $i0 = $i0 + -1;

        $f0 = $r3[$i0];

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r5;

     label8:
        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The Path has a invalid length ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r5;
    }

    private void initQuad(float, float)
    {
        androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat $r0;
        float $f0, $f1;
        android.graphics.Path $r1;

        $r0 := @this: androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $r1 = new android.graphics.Path;

        specialinvoke $r1.<android.graphics.Path: void <init>()>();

        virtualinvoke $r1.<android.graphics.Path: void moveTo(float,float)>(0.0F, 0.0F);

        virtualinvoke $r1.<android.graphics.Path: void quadTo(float,float,float,float)>($f0, $f1, 1.0F, 1.0F);

        specialinvoke $r0.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void initPath(android.graphics.Path)>($r1);

        return;
    }

    private void parseInterpolatorFromTypeArray(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser)
    {
        androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat $r0;
        android.content.res.TypedArray $r1;
        org.xmlpull.v1.XmlPullParser $r2;
        boolean $z0, $z1;
        java.lang.String $r3;
        android.graphics.Path $r4;
        android.view.InflateException $r5;
        java.lang.StringBuilder $r6;
        float $f0, $f1, $f2, $f3;

        $r0 := @this: androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat;

        $r1 := @parameter0: android.content.res.TypedArray;

        $r2 := @parameter1: org.xmlpull.v1.XmlPullParser;

        $z0 = staticinvoke <androidx.core.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>($r2, "pathData");

        if $z0 == 0 goto label2;

        $r3 = staticinvoke <androidx.core.content.res.TypedArrayUtils: java.lang.String getNamedString(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int)>($r1, $r2, "pathData", 4);

        $r4 = staticinvoke <androidx.core.graphics.PathParser: android.graphics.Path createPathFromPathData(java.lang.String)>($r3);

        if $r4 == null goto label1;

        specialinvoke $r0.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void initPath(android.graphics.Path)>($r4);

        return;

     label1:
        $r5 = new android.view.InflateException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The path is null, which is created from ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<android.view.InflateException: void <init>(java.lang.String)>($r3);

        throw $r5;

     label2:
        $z0 = staticinvoke <androidx.core.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>($r2, "controlX1");

        if $z0 == 0 goto label6;

        $z0 = staticinvoke <androidx.core.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>($r2, "controlY1");

        if $z0 == 0 goto label5;

        $f0 = staticinvoke <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>($r1, $r2, "controlX1", 0, 0.0F);

        $f1 = staticinvoke <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>($r1, $r2, "controlY1", 1, 0.0F);

        $z0 = staticinvoke <androidx.core.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>($r2, "controlX2");

        $z1 = staticinvoke <androidx.core.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>($r2, "controlY2");

        if $z0 != $z1 goto label4;

        if $z0 != 0 goto label3;

        specialinvoke $r0.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void initQuad(float,float)>($f0, $f1);

        return;

     label3:
        $f2 = staticinvoke <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>($r1, $r2, "controlX2", 2, 0.0F);

        $f3 = staticinvoke <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>($r1, $r2, "controlY2", 3, 0.0F);

        specialinvoke $r0.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void initCubic(float,float,float,float)>($f0, $f1, $f2, $f3);

        return;

     label4:
        $r5 = new android.view.InflateException;

        specialinvoke $r5.<android.view.InflateException: void <init>(java.lang.String)>("pathInterpolator requires both controlX2 and controlY2 for cubic Beziers.");

        throw $r5;

     label5:
        $r5 = new android.view.InflateException;

        specialinvoke $r5.<android.view.InflateException: void <init>(java.lang.String)>("pathInterpolator requires the controlY1 attribute");

        throw $r5;

     label6:
        $r5 = new android.view.InflateException;

        specialinvoke $r5.<android.view.InflateException: void <init>(java.lang.String)>("pathInterpolator requires the controlX1 attribute");

        throw $r5;
    }

    public float getInterpolation(float)
    {
        androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat $r0;
        float $f0, $f1, $f2;
        byte $b0;
        int $i1, $i2, $i3;
        float[] $r1;

        $r0 := @this: androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat;

        $f0 := @parameter0: float;

        $b0 = $f0 cmpg 0.0F;

        if $b0 > 0 goto label1;

        return 0.0F;

     label1:
        $b0 = $f0 cmpl 1.0F;

        if $b0 < 0 goto label2;

        return 1.0F;

     label2:
        $i1 = 0;

        $r1 = $r0.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float[] mX>;

        $i2 = lengthof $r1;

        $i2 = $i2 - 1;

     label3:
        $i3 = $i2 - $i1;

        if $i3 <= 1 goto label5;

        $i3 = $i1 + $i2;

        $i3 = $i3 / 2;

        $r1 = $r0.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float[] mX>;

        $f1 = $r1[$i3];

        $b0 = $f0 cmpg $f1;

        if $b0 >= 0 goto label4;

        $i2 = $i3;

        goto label3;

     label4:
        $i1 = $i3;

        goto label3;

     label5:
        $r1 = $r0.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float[] mX>;

        $f1 = $r1[$i2];

        $f2 = $r1[$i1];

        $f1 = $f1 - $f2;

        $b0 = $f1 cmpl 0.0F;

        if $b0 != 0 goto label6;

        $r1 = $r0.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float[] mY>;

        $f0 = $r1[$i1];

        return $f0;

     label6:
        $f2 = $r1[$i1];

        $f0 = $f0 - $f2;

        $f1 = $f0 / $f1;

        $r1 = $r0.<androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float[] mY>;

        $f0 = $r1[$i1];

        $f2 = $r1[$i2];

        $f2 = $f2 - $f0;

        $f1 = $f2 * $f1;

        $f0 = $f1 + $f0;

        return $f0;
    }

    public static void <clinit>()
    {
        <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float PRECISION> = 0.002F;

        <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: int MAX_NUM_POINTS> = 3000;

        <androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: double EPSILON> = 1.0E-5;

        return;
    }
}
