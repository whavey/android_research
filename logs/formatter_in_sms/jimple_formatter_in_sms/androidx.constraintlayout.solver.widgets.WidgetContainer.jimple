public class androidx.constraintlayout.solver.widgets.WidgetContainer extends androidx.constraintlayout.solver.widgets.ConstraintWidget
{
    protected java.util.ArrayList mChildren;

    public void <init>()
    {
        androidx.constraintlayout.solver.widgets.WidgetContainer $r0;
        java.util.ArrayList $r1;

        $r0 := @this: androidx.constraintlayout.solver.widgets.WidgetContainer;

        specialinvoke $r0.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r0.<androidx.constraintlayout.solver.widgets.WidgetContainer: java.util.ArrayList mChildren> = $r1;

        return;
    }

    public void <init>(int, int)
    {
        androidx.constraintlayout.solver.widgets.WidgetContainer $r0;
        int $i0, $i1;
        java.util.ArrayList $r1;

        $r0 := @this: androidx.constraintlayout.solver.widgets.WidgetContainer;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        specialinvoke $r0.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void <init>(int,int)>($i0, $i1);

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r0.<androidx.constraintlayout.solver.widgets.WidgetContainer: java.util.ArrayList mChildren> = $r1;

        return;
    }

    public void <init>(int, int, int, int)
    {
        androidx.constraintlayout.solver.widgets.WidgetContainer $r0;
        int $i0, $i1, $i2, $i3;
        java.util.ArrayList $r1;

        $r0 := @this: androidx.constraintlayout.solver.widgets.WidgetContainer;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        specialinvoke $r0.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void <init>(int,int,int,int)>($i0, $i1, $i2, $i3);

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r0.<androidx.constraintlayout.solver.widgets.WidgetContainer: java.util.ArrayList mChildren> = $r1;

        return;
    }

    public static androidx.constraintlayout.solver.widgets.Rectangle getBounds(java.util.ArrayList)
    {
        java.util.ArrayList $r0;
        androidx.constraintlayout.solver.widgets.Rectangle $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.Object $r2;
        androidx.constraintlayout.solver.widgets.ConstraintWidget $r3;

        $r0 := @parameter0: java.util.ArrayList;

        $r1 = new androidx.constraintlayout.solver.widgets.Rectangle;

        specialinvoke $r1.<androidx.constraintlayout.solver.widgets.Rectangle: void <init>()>();

        $i0 = virtualinvoke $r0.<java.util.ArrayList: int size()>();

        if $i0 != 0 goto label1;

        return $r1;

     label1:
        $i0 = 2147483647;

        $i1 = 0;

        $i2 = 2147483647;

        $i3 = 0;

        $i4 = 0;

        $i5 = virtualinvoke $r0.<java.util.ArrayList: int size()>();

     label2:
        if $i4 >= $i5 goto label7;

        $r2 = virtualinvoke $r0.<java.util.ArrayList: java.lang.Object get(int)>($i4);

        $r3 = (androidx.constraintlayout.solver.widgets.ConstraintWidget) $r2;

        $i6 = virtualinvoke $r3.<androidx.constraintlayout.solver.widgets.ConstraintWidget: int getX()>();

        if $i6 >= $i0 goto label3;

        $i0 = virtualinvoke $r3.<androidx.constraintlayout.solver.widgets.ConstraintWidget: int getX()>();

     label3:
        $i6 = virtualinvoke $r3.<androidx.constraintlayout.solver.widgets.ConstraintWidget: int getY()>();

        if $i6 >= $i2 goto label4;

        $i2 = virtualinvoke $r3.<androidx.constraintlayout.solver.widgets.ConstraintWidget: int getY()>();

     label4:
        $i6 = virtualinvoke $r3.<androidx.constraintlayout.solver.widgets.ConstraintWidget: int getRight()>();

        if $i6 <= $i1 goto label5;

        $i1 = virtualinvoke $r3.<androidx.constraintlayout.solver.widgets.ConstraintWidget: int getRight()>();

     label5:
        $i6 = virtualinvoke $r3.<androidx.constraintlayout.solver.widgets.ConstraintWidget: int getBottom()>();

        if $i6 <= $i3 goto label6;

        $i3 = virtualinvoke $r3.<androidx.constraintlayout.solver.widgets.ConstraintWidget: int getBottom()>();

     label6:
        $i4 = $i4 + 1;

        goto label2;

     label7:
        $i4 = $i1 - $i0;

        $i3 = $i3 - $i2;

        virtualinvoke $r1.<androidx.constraintlayout.solver.widgets.Rectangle: void setBounds(int,int,int,int)>($i0, $i2, $i4, $i3);

        return $r1;
    }

    public void add(androidx.constraintlayout.solver.widgets.ConstraintWidget)
    {
        androidx.constraintlayout.solver.widgets.WidgetContainer $r0, $r4;
        androidx.constraintlayout.solver.widgets.ConstraintWidget $r1, $r3;
        java.util.ArrayList $r2;

        $r0 := @this: androidx.constraintlayout.solver.widgets.WidgetContainer;

        $r1 := @parameter0: androidx.constraintlayout.solver.widgets.ConstraintWidget;

        $r2 = $r0.<androidx.constraintlayout.solver.widgets.WidgetContainer: java.util.ArrayList mChildren>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        $r3 = virtualinvoke $r1.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintWidget getParent()>();

        if $r3 == null goto label1;

        $r3 = virtualinvoke $r1.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintWidget getParent()>();

        $r4 = (androidx.constraintlayout.solver.widgets.WidgetContainer) $r3;

        virtualinvoke $r4.<androidx.constraintlayout.solver.widgets.WidgetContainer: void remove(androidx.constraintlayout.solver.widgets.ConstraintWidget)>($r1);

     label1:
        virtualinvoke $r1.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void setParent(androidx.constraintlayout.solver.widgets.ConstraintWidget)>($r0);

        return;
    }

    public transient void add(androidx.constraintlayout.solver.widgets.ConstraintWidget[])
    {
        androidx.constraintlayout.solver.widgets.WidgetContainer $r0;
        androidx.constraintlayout.solver.widgets.ConstraintWidget[] $r1;
        int $i0, $i1;
        androidx.constraintlayout.solver.widgets.ConstraintWidget $r2;

        $r0 := @this: androidx.constraintlayout.solver.widgets.WidgetContainer;

        $r1 := @parameter0: androidx.constraintlayout.solver.widgets.ConstraintWidget[];

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r2 = $r1[$i1];

        virtualinvoke $r0.<androidx.constraintlayout.solver.widgets.WidgetContainer: void add(androidx.constraintlayout.solver.widgets.ConstraintWidget)>($r2);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }

    public androidx.constraintlayout.solver.widgets.ConstraintWidget findWidget(float, float)
    {
        androidx.constraintlayout.solver.widgets.WidgetContainer $r0, $r5;
        float $f0, $f1, $f2;
        androidx.constraintlayout.solver.widgets.ConstraintWidget $r1, $r4;
        int $i0, $i1, $i2, $i3, $i5, $i6;
        byte $b4;
        java.util.ArrayList $r2;
        java.lang.Object $r3;
        boolean $z0;

        $r0 := @this: androidx.constraintlayout.solver.widgets.WidgetContainer;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $r1 = null;

        $i0 = virtualinvoke $r0.<androidx.constraintlayout.solver.widgets.WidgetContainer: int getDrawX()>();

        $i1 = virtualinvoke $r0.<androidx.constraintlayout.solver.widgets.WidgetContainer: int getDrawY()>();

        $i2 = virtualinvoke $r0.<androidx.constraintlayout.solver.widgets.WidgetContainer: int getWidth()>();

        $i2 = $i2 + $i0;

        $i3 = virtualinvoke $r0.<androidx.constraintlayout.solver.widgets.WidgetContainer: int getHeight()>();

        $i3 = $i3 + $i1;

        $f2 = (float) $i0;

        $b4 = $f0 cmpl $f2;

        if $b4 < 0 goto label1;

        $f2 = (float) $i2;

        $b4 = $f0 cmpg $f2;

        if $b4 > 0 goto label1;

        $f2 = (float) $i1;

        $b4 = $f1 cmpl $f2;

        if $b4 < 0 goto label1;

        $f2 = (float) $i3;

        $b4 = $f1 cmpg $f2;

        if $b4 > 0 goto label1;

        $r1 = $r0;

     label1:
        $i0 = 0;

        $r2 = $r0.<androidx.constraintlayout.solver.widgets.WidgetContainer: java.util.ArrayList mChildren>;

        $i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

     label2:
        if $i0 >= $i1 goto label6;

        $r2 = $r0.<androidx.constraintlayout.solver.widgets.WidgetContainer: java.util.ArrayList mChildren>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r4 = (androidx.constraintlayout.solver.widgets.ConstraintWidget) $r3;

        $z0 = $r4 instanceof androidx.constraintlayout.solver.widgets.WidgetContainer;

        if $z0 == 0 goto label4;

        $r5 = (androidx.constraintlayout.solver.widgets.WidgetContainer) $r4;

        $r4 = virtualinvoke $r5.<androidx.constraintlayout.solver.widgets.WidgetContainer: androidx.constraintlayout.solver.widgets.ConstraintWidget findWidget(float,float)>($f0, $f1);

        if $r4 == null goto label3;

        $r1 = $r4;

     label3:
        goto label5;

     label4:
        $i2 = virtualinvoke $r4.<androidx.constraintlayout.solver.widgets.ConstraintWidget: int getDrawX()>();

        $i3 = virtualinvoke $r4.<androidx.constraintlayout.solver.widgets.ConstraintWidget: int getDrawY()>();

        $i5 = virtualinvoke $r4.<androidx.constraintlayout.solver.widgets.ConstraintWidget: int getWidth()>();

        $i5 = $i5 + $i2;

        $i6 = virtualinvoke $r4.<androidx.constraintlayout.solver.widgets.ConstraintWidget: int getHeight()>();

        $i6 = $i6 + $i3;

        $f2 = (float) $i2;

        $b4 = $f0 cmpl $f2;

        if $b4 < 0 goto label5;

        $f2 = (float) $i5;

        $b4 = $f0 cmpg $f2;

        if $b4 > 0 goto label5;

        $f2 = (float) $i3;

        $b4 = $f1 cmpl $f2;

        if $b4 < 0 goto label5;

        $f2 = (float) $i6;

        $b4 = $f1 cmpg $f2;

        if $b4 > 0 goto label5;

        $r1 = $r4;

        goto label5;

     label5:
        $i0 = $i0 + 1;

        goto label2;

     label6:
        return $r1;
    }

    public java.util.ArrayList findWidgets(int, int, int, int)
    {
        androidx.constraintlayout.solver.widgets.WidgetContainer $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.util.ArrayList $r1, $r4;
        androidx.constraintlayout.solver.widgets.Rectangle $r2, $r3;
        java.lang.Object $r5;
        androidx.constraintlayout.solver.widgets.ConstraintWidget $r6;
        boolean $z0;

        $r0 := @this: androidx.constraintlayout.solver.widgets.WidgetContainer;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r2 = new androidx.constraintlayout.solver.widgets.Rectangle;

        specialinvoke $r2.<androidx.constraintlayout.solver.widgets.Rectangle: void <init>()>();

        virtualinvoke $r2.<androidx.constraintlayout.solver.widgets.Rectangle: void setBounds(int,int,int,int)>($i0, $i1, $i2, $i3);

        $i0 = 0;

        $r4 = $r0.<androidx.constraintlayout.solver.widgets.WidgetContainer: java.util.ArrayList mChildren>;

        $i1 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

     label1:
        if $i0 >= $i1 goto label3;

        $r4 = $r0.<androidx.constraintlayout.solver.widgets.WidgetContainer: java.util.ArrayList mChildren>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r6 = (androidx.constraintlayout.solver.widgets.ConstraintWidget) $r5;

        $r3 = new androidx.constraintlayout.solver.widgets.Rectangle;

        specialinvoke $r3.<androidx.constraintlayout.solver.widgets.Rectangle: void <init>()>();

        $i2 = virtualinvoke $r6.<androidx.constraintlayout.solver.widgets.ConstraintWidget: int getDrawX()>();

        $i3 = virtualinvoke $r6.<androidx.constraintlayout.solver.widgets.ConstraintWidget: int getDrawY()>();

        $i4 = virtualinvoke $r6.<androidx.constraintlayout.solver.widgets.ConstraintWidget: int getWidth()>();

        $i5 = virtualinvoke $r6.<androidx.constraintlayout.solver.widgets.ConstraintWidget: int getHeight()>();

        virtualinvoke $r3.<androidx.constraintlayout.solver.widgets.Rectangle: void setBounds(int,int,int,int)>($i2, $i3, $i4, $i5);

        $z0 = virtualinvoke $r2.<androidx.constraintlayout.solver.widgets.Rectangle: boolean intersects(androidx.constraintlayout.solver.widgets.Rectangle)>($r3);

        if $z0 == 0 goto label2;

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        return $r1;
    }

    public java.util.ArrayList getChildren()
    {
        androidx.constraintlayout.solver.widgets.WidgetContainer $r0;
        java.util.ArrayList r1;

        $r0 := @this: androidx.constraintlayout.solver.widgets.WidgetContainer;

        r1 = $r0.<androidx.constraintlayout.solver.widgets.WidgetContainer: java.util.ArrayList mChildren>;

        return r1;
    }

    public androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer getRootConstraintContainer()
    {
        androidx.constraintlayout.solver.widgets.WidgetContainer $r0;
        androidx.constraintlayout.solver.widgets.ConstraintWidget $r1, $r2;
        androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer $r3;
        boolean $z0;

        $r0 := @this: androidx.constraintlayout.solver.widgets.WidgetContainer;

        $r2 = virtualinvoke $r0.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintWidget getParent()>();

        $r3 = null;

        $z0 = $r0 instanceof androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer;

        if $z0 == 0 goto label1;

        $r3 = (androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer) $r0;

     label1:
        if $r2 == null goto label2;

        $r1 = $r2;

        $r2 = virtualinvoke $r2.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintWidget getParent()>();

        $z0 = $r1 instanceof androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer;

        if $z0 == 0 goto label1;

        $r3 = (androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer) $r1;

        goto label1;

     label2:
        return $r3;
    }

    public void layout()
    {
        androidx.constraintlayout.solver.widgets.WidgetContainer $r0, $r4;
        java.util.ArrayList $r1;
        int $i0, $i1;
        java.lang.Object $r2;
        androidx.constraintlayout.solver.widgets.ConstraintWidget $r3;
        boolean $z0;

        $r0 := @this: androidx.constraintlayout.solver.widgets.WidgetContainer;

        virtualinvoke $r0.<androidx.constraintlayout.solver.widgets.WidgetContainer: void updateDrawPosition()>();

        $r1 = $r0.<androidx.constraintlayout.solver.widgets.WidgetContainer: java.util.ArrayList mChildren>;

        if $r1 != null goto label1;

        return;

     label1:
        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label4;

        $r1 = $r0.<androidx.constraintlayout.solver.widgets.WidgetContainer: java.util.ArrayList mChildren>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r3 = (androidx.constraintlayout.solver.widgets.ConstraintWidget) $r2;

        $z0 = $r3 instanceof androidx.constraintlayout.solver.widgets.WidgetContainer;

        if $z0 == 0 goto label3;

        $r4 = (androidx.constraintlayout.solver.widgets.WidgetContainer) $r3;

        virtualinvoke $r4.<androidx.constraintlayout.solver.widgets.WidgetContainer: void layout()>();

     label3:
        $i1 = $i1 + 1;

        goto label2;

     label4:
        return;
    }

    public void remove(androidx.constraintlayout.solver.widgets.ConstraintWidget)
    {
        androidx.constraintlayout.solver.widgets.WidgetContainer $r0;
        androidx.constraintlayout.solver.widgets.ConstraintWidget $r1;
        java.util.ArrayList $r2;

        $r0 := @this: androidx.constraintlayout.solver.widgets.WidgetContainer;

        $r1 := @parameter0: androidx.constraintlayout.solver.widgets.ConstraintWidget;

        $r2 = $r0.<androidx.constraintlayout.solver.widgets.WidgetContainer: java.util.ArrayList mChildren>;

        virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>($r1);

        virtualinvoke $r1.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void setParent(androidx.constraintlayout.solver.widgets.ConstraintWidget)>(null);

        return;
    }

    public void removeAllChildren()
    {
        androidx.constraintlayout.solver.widgets.WidgetContainer $r0;
        java.util.ArrayList $r1;

        $r0 := @this: androidx.constraintlayout.solver.widgets.WidgetContainer;

        $r1 = $r0.<androidx.constraintlayout.solver.widgets.WidgetContainer: java.util.ArrayList mChildren>;

        virtualinvoke $r1.<java.util.ArrayList: void clear()>();

        return;
    }

    public void reset()
    {
        androidx.constraintlayout.solver.widgets.WidgetContainer $r0;
        java.util.ArrayList $r1;

        $r0 := @this: androidx.constraintlayout.solver.widgets.WidgetContainer;

        $r1 = $r0.<androidx.constraintlayout.solver.widgets.WidgetContainer: java.util.ArrayList mChildren>;

        virtualinvoke $r1.<java.util.ArrayList: void clear()>();

        specialinvoke $r0.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void reset()>();

        return;
    }

    public void resetSolverVariables(androidx.constraintlayout.solver.Cache)
    {
        androidx.constraintlayout.solver.widgets.WidgetContainer $r0;
        androidx.constraintlayout.solver.Cache $r1;
        java.util.ArrayList $r2;
        int $i0, $i1;
        java.lang.Object $r3;
        androidx.constraintlayout.solver.widgets.ConstraintWidget $r4;

        $r0 := @this: androidx.constraintlayout.solver.widgets.WidgetContainer;

        $r1 := @parameter0: androidx.constraintlayout.solver.Cache;

        specialinvoke $r0.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void resetSolverVariables(androidx.constraintlayout.solver.Cache)>($r1);

        $r2 = $r0.<androidx.constraintlayout.solver.widgets.WidgetContainer: java.util.ArrayList mChildren>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r2 = $r0.<androidx.constraintlayout.solver.widgets.WidgetContainer: java.util.ArrayList mChildren>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r4 = (androidx.constraintlayout.solver.widgets.ConstraintWidget) $r3;

        virtualinvoke $r4.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void resetSolverVariables(androidx.constraintlayout.solver.Cache)>($r1);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void setOffset(int, int)
    {
        androidx.constraintlayout.solver.widgets.WidgetContainer $r0;
        int $i0, $i1, $i2, $i3;
        java.util.ArrayList $r1;
        java.lang.Object $r2;
        androidx.constraintlayout.solver.widgets.ConstraintWidget $r3;

        $r0 := @this: androidx.constraintlayout.solver.widgets.WidgetContainer;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        specialinvoke $r0.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void setOffset(int,int)>($i0, $i1);

        $r1 = $r0.<androidx.constraintlayout.solver.widgets.WidgetContainer: java.util.ArrayList mChildren>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r1 = $r0.<androidx.constraintlayout.solver.widgets.WidgetContainer: java.util.ArrayList mChildren>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r3 = (androidx.constraintlayout.solver.widgets.ConstraintWidget) $r2;

        $i2 = virtualinvoke $r0.<androidx.constraintlayout.solver.widgets.WidgetContainer: int getRootX()>();

        $i3 = virtualinvoke $r0.<androidx.constraintlayout.solver.widgets.WidgetContainer: int getRootY()>();

        virtualinvoke $r3.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void setOffset(int,int)>($i2, $i3);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void updateDrawPosition()
    {
        androidx.constraintlayout.solver.widgets.WidgetContainer $r0;
        java.util.ArrayList $r1;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r2;
        androidx.constraintlayout.solver.widgets.ConstraintWidget $r3;
        boolean $z0;

        $r0 := @this: androidx.constraintlayout.solver.widgets.WidgetContainer;

        specialinvoke $r0.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void updateDrawPosition()>();

        $r1 = $r0.<androidx.constraintlayout.solver.widgets.WidgetContainer: java.util.ArrayList mChildren>;

        if $r1 != null goto label1;

        return;

     label1:
        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label4;

        $r1 = $r0.<androidx.constraintlayout.solver.widgets.WidgetContainer: java.util.ArrayList mChildren>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r3 = (androidx.constraintlayout.solver.widgets.ConstraintWidget) $r2;

        $i2 = virtualinvoke $r0.<androidx.constraintlayout.solver.widgets.WidgetContainer: int getDrawX()>();

        $i3 = virtualinvoke $r0.<androidx.constraintlayout.solver.widgets.WidgetContainer: int getDrawY()>();

        virtualinvoke $r3.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void setOffset(int,int)>($i2, $i3);

        $z0 = $r3 instanceof androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer;

        if $z0 != 0 goto label3;

        virtualinvoke $r3.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void updateDrawPosition()>();

     label3:
        $i1 = $i1 + 1;

        goto label2;

     label4:
        return;
    }
}
