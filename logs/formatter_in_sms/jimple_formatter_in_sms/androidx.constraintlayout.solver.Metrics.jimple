public class androidx.constraintlayout.solver.Metrics extends java.lang.Object
{
    public long additionalMeasures;
    public long barrierConnectionResolved;
    public long bfs;
    public long centerConnectionResolved;
    public long chainConnectionResolved;
    public long constraints;
    public long errors;
    public long extravariables;
    public long fullySolved;
    public long graphOptimizer;
    public long iterations;
    public long lastTableSize;
    public long matchConnectionResolved;
    public long maxRows;
    public long maxTableSize;
    public long maxVariables;
    public long measures;
    public long minimize;
    public long minimizeGoal;
    public long nonresolvedWidgets;
    public long oldresolvedWidgets;
    public long optimize;
    public long pivots;
    public java.util.ArrayList problematicLayouts;
    public long resolutions;
    public long resolvedWidgets;
    public long simpleconstraints;
    public long slackvariables;
    public long tableSizeIncrease;
    public long variables;

    public void <init>()
    {
        androidx.constraintlayout.solver.Metrics $r0;
        java.util.ArrayList $r1;

        $r0 := @this: androidx.constraintlayout.solver.Metrics;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r0.<androidx.constraintlayout.solver.Metrics: java.util.ArrayList problematicLayouts> = $r1;

        return;
    }

    public void reset()
    {
        androidx.constraintlayout.solver.Metrics $r0;
        java.util.ArrayList $r1;

        $r0 := @this: androidx.constraintlayout.solver.Metrics;

        $r0.<androidx.constraintlayout.solver.Metrics: long measures> = 0L;

        $r0.<androidx.constraintlayout.solver.Metrics: long additionalMeasures> = 0L;

        $r0.<androidx.constraintlayout.solver.Metrics: long resolutions> = 0L;

        $r0.<androidx.constraintlayout.solver.Metrics: long tableSizeIncrease> = 0L;

        $r0.<androidx.constraintlayout.solver.Metrics: long maxTableSize> = 0L;

        $r0.<androidx.constraintlayout.solver.Metrics: long lastTableSize> = 0L;

        $r0.<androidx.constraintlayout.solver.Metrics: long maxVariables> = 0L;

        $r0.<androidx.constraintlayout.solver.Metrics: long maxRows> = 0L;

        $r0.<androidx.constraintlayout.solver.Metrics: long minimize> = 0L;

        $r0.<androidx.constraintlayout.solver.Metrics: long minimizeGoal> = 0L;

        $r0.<androidx.constraintlayout.solver.Metrics: long constraints> = 0L;

        $r0.<androidx.constraintlayout.solver.Metrics: long simpleconstraints> = 0L;

        $r0.<androidx.constraintlayout.solver.Metrics: long optimize> = 0L;

        $r0.<androidx.constraintlayout.solver.Metrics: long iterations> = 0L;

        $r0.<androidx.constraintlayout.solver.Metrics: long pivots> = 0L;

        $r0.<androidx.constraintlayout.solver.Metrics: long bfs> = 0L;

        $r0.<androidx.constraintlayout.solver.Metrics: long variables> = 0L;

        $r0.<androidx.constraintlayout.solver.Metrics: long errors> = 0L;

        $r0.<androidx.constraintlayout.solver.Metrics: long slackvariables> = 0L;

        $r0.<androidx.constraintlayout.solver.Metrics: long extravariables> = 0L;

        $r0.<androidx.constraintlayout.solver.Metrics: long fullySolved> = 0L;

        $r0.<androidx.constraintlayout.solver.Metrics: long graphOptimizer> = 0L;

        $r0.<androidx.constraintlayout.solver.Metrics: long resolvedWidgets> = 0L;

        $r0.<androidx.constraintlayout.solver.Metrics: long oldresolvedWidgets> = 0L;

        $r0.<androidx.constraintlayout.solver.Metrics: long nonresolvedWidgets> = 0L;

        $r0.<androidx.constraintlayout.solver.Metrics: long centerConnectionResolved> = 0L;

        $r0.<androidx.constraintlayout.solver.Metrics: long matchConnectionResolved> = 0L;

        $r0.<androidx.constraintlayout.solver.Metrics: long chainConnectionResolved> = 0L;

        $r0.<androidx.constraintlayout.solver.Metrics: long barrierConnectionResolved> = 0L;

        $r1 = $r0.<androidx.constraintlayout.solver.Metrics: java.util.ArrayList problematicLayouts>;

        virtualinvoke $r1.<java.util.ArrayList: void clear()>();

        return;
    }

    public java.lang.String toString()
    {
        androidx.constraintlayout.solver.Metrics $r0;
        java.lang.String $r1;
        java.lang.StringBuilder $r2;
        long $l0;
        java.util.ArrayList $r3;

        $r0 := @this: androidx.constraintlayout.solver.Metrics;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n*** Metrics ***\nmeasures: ");

        $l0 = $r0.<androidx.constraintlayout.solver.Metrics: long measures>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nadditionalMeasures: ");

        $l0 = $r0.<androidx.constraintlayout.solver.Metrics: long additionalMeasures>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nresolutions passes: ");

        $l0 = $r0.<androidx.constraintlayout.solver.Metrics: long resolutions>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\ntable increases: ");

        $l0 = $r0.<androidx.constraintlayout.solver.Metrics: long tableSizeIncrease>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nmaxTableSize: ");

        $l0 = $r0.<androidx.constraintlayout.solver.Metrics: long maxTableSize>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nmaxVariables: ");

        $l0 = $r0.<androidx.constraintlayout.solver.Metrics: long maxVariables>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nmaxRows: ");

        $l0 = $r0.<androidx.constraintlayout.solver.Metrics: long maxRows>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n\nminimize: ");

        $l0 = $r0.<androidx.constraintlayout.solver.Metrics: long minimize>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nminimizeGoal: ");

        $l0 = $r0.<androidx.constraintlayout.solver.Metrics: long minimizeGoal>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nconstraints: ");

        $l0 = $r0.<androidx.constraintlayout.solver.Metrics: long constraints>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nsimpleconstraints: ");

        $l0 = $r0.<androidx.constraintlayout.solver.Metrics: long simpleconstraints>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\noptimize: ");

        $l0 = $r0.<androidx.constraintlayout.solver.Metrics: long optimize>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\niterations: ");

        $l0 = $r0.<androidx.constraintlayout.solver.Metrics: long iterations>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\npivots: ");

        $l0 = $r0.<androidx.constraintlayout.solver.Metrics: long pivots>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nbfs: ");

        $l0 = $r0.<androidx.constraintlayout.solver.Metrics: long bfs>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nvariables: ");

        $l0 = $r0.<androidx.constraintlayout.solver.Metrics: long variables>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nerrors: ");

        $l0 = $r0.<androidx.constraintlayout.solver.Metrics: long errors>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nslackvariables: ");

        $l0 = $r0.<androidx.constraintlayout.solver.Metrics: long slackvariables>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nextravariables: ");

        $l0 = $r0.<androidx.constraintlayout.solver.Metrics: long extravariables>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nfullySolved: ");

        $l0 = $r0.<androidx.constraintlayout.solver.Metrics: long fullySolved>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\ngraphOptimizer: ");

        $l0 = $r0.<androidx.constraintlayout.solver.Metrics: long graphOptimizer>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nresolvedWidgets: ");

        $l0 = $r0.<androidx.constraintlayout.solver.Metrics: long resolvedWidgets>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\noldresolvedWidgets: ");

        $l0 = $r0.<androidx.constraintlayout.solver.Metrics: long oldresolvedWidgets>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nnonresolvedWidgets: ");

        $l0 = $r0.<androidx.constraintlayout.solver.Metrics: long nonresolvedWidgets>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\ncenterConnectionResolved: ");

        $l0 = $r0.<androidx.constraintlayout.solver.Metrics: long centerConnectionResolved>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nmatchConnectionResolved: ");

        $l0 = $r0.<androidx.constraintlayout.solver.Metrics: long matchConnectionResolved>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nchainConnectionResolved: ");

        $l0 = $r0.<androidx.constraintlayout.solver.Metrics: long chainConnectionResolved>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nbarrierConnectionResolved: ");

        $l0 = $r0.<androidx.constraintlayout.solver.Metrics: long barrierConnectionResolved>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nproblematicsLayouts: ");

        $r3 = $r0.<androidx.constraintlayout.solver.Metrics: java.util.ArrayList problematicLayouts>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }
}
