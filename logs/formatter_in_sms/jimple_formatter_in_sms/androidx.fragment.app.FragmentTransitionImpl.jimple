public abstract class androidx.fragment.app.FragmentTransitionImpl extends java.lang.Object
{

    public void <init>()
    {
        androidx.fragment.app.FragmentTransitionImpl $r0;

        $r0 := @this: androidx.fragment.app.FragmentTransitionImpl;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    protected static void bfsAddViewChildren(java.util.List, android.view.View)
    {
        java.util.List $r0;
        android.view.View $r1;
        int $i0, $i1, $i2, $i3;
        boolean $z0;
        java.lang.Object $r2;
        android.view.ViewGroup $r3;

        $r0 := @parameter0: java.util.List;

        $r1 := @parameter1: android.view.View;

        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();

        $z0 = staticinvoke <androidx.fragment.app.FragmentTransitionImpl: boolean containedBeforeIndex(java.util.List,android.view.View,int)>($r0, $r1, $i0);

        if $z0 == 0 goto label1;

        return;

     label1:
        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r1);

        $i1 = $i0;

     label2:
        $i2 = interfaceinvoke $r0.<java.util.List: int size()>();

        if $i1 >= $i2 goto label6;

        $r2 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>($i1);

        $r1 = (android.view.View) $r2;

        $z0 = $r1 instanceof android.view.ViewGroup;

        if $z0 == 0 goto label5;

        $r3 = (android.view.ViewGroup) $r1;

        $i2 = virtualinvoke $r3.<android.view.ViewGroup: int getChildCount()>();

        $i3 = 0;

     label3:
        if $i3 >= $i2 goto label5;

        $r1 = virtualinvoke $r3.<android.view.ViewGroup: android.view.View getChildAt(int)>($i3);

        $z0 = staticinvoke <androidx.fragment.app.FragmentTransitionImpl: boolean containedBeforeIndex(java.util.List,android.view.View,int)>($r0, $r1, $i0);

        if $z0 != 0 goto label4;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r1);

     label4:
        $i3 = $i3 + 1;

        goto label3;

     label5:
        $i1 = $i1 + 1;

        goto label2;

     label6:
        return;
    }

    private static boolean containedBeforeIndex(java.util.List, android.view.View, int)
    {
        java.util.List $r0;
        android.view.View $r1;
        int $i0, $i1;
        java.lang.Object $r2;

        $r0 := @parameter0: java.util.List;

        $r1 := @parameter1: android.view.View;

        $i0 := @parameter2: int;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r2 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>($i1);

        if $r2 != $r1 goto label2;

        return 1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    static java.lang.String findKeyForValue(java.util.Map, java.lang.String)
    {
        java.util.Map $r0;
        java.lang.String $r1;
        java.util.Set $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.util.Map$Entry $r5;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: java.lang.String;

        $r2 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.util.Map$Entry) $r4;

        $r4 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label1;

        $r4 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r1 = (java.lang.String) $r4;

        return $r1;

     label2:
        return null;
    }

    protected static boolean isNullOrEmpty(java.util.List)
    {
        java.util.List $r0;
        boolean $z0;

        $r0 := @parameter0: java.util.List;

        if $r0 == null goto label2;

        $z0 = interfaceinvoke $r0.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    public abstract void addTarget(java.lang.Object, android.view.View);

    public abstract void addTargets(java.lang.Object, java.util.ArrayList);

    public abstract void beginDelayedTransition(android.view.ViewGroup, java.lang.Object);

    public abstract boolean canHandle(java.lang.Object);

    void captureTransitioningViews(java.util.ArrayList, android.view.View)
    {
        androidx.fragment.app.FragmentTransitionImpl $r0;
        java.util.ArrayList $r1;
        android.view.View $r2;
        int $i0, $i1;
        boolean $z0;
        android.view.ViewGroup $r3;

        $r0 := @this: androidx.fragment.app.FragmentTransitionImpl;

        $r1 := @parameter0: java.util.ArrayList;

        $r2 := @parameter1: android.view.View;

        $i0 = virtualinvoke $r2.<android.view.View: int getVisibility()>();

        if $i0 != 0 goto label5;

        $z0 = $r2 instanceof android.view.ViewGroup;

        if $z0 == 0 goto label4;

        $r3 = (android.view.ViewGroup) $r2;

        $z0 = staticinvoke <androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)>($r3);

        if $z0 == 0 goto label1;

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        goto label3;

     label1:
        $i0 = virtualinvoke $r3.<android.view.ViewGroup: int getChildCount()>();

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label3;

        $r2 = virtualinvoke $r3.<android.view.ViewGroup: android.view.View getChildAt(int)>($i1);

        virtualinvoke $r0.<androidx.fragment.app.FragmentTransitionImpl: void captureTransitioningViews(java.util.ArrayList,android.view.View)>($r1, $r2);

        $i1 = $i1 + 1;

        goto label2;

     label3:
        return;

     label4:
        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

     label5:
        return;
    }

    public abstract java.lang.Object cloneTransition(java.lang.Object);

    void findNamedViews(java.util.Map, android.view.View)
    {
        androidx.fragment.app.FragmentTransitionImpl $r0;
        java.util.Map $r1;
        android.view.View $r2;
        int $i0, $i1;
        java.lang.String $r3;
        boolean $z0;
        android.view.ViewGroup $r4;

        $r0 := @this: androidx.fragment.app.FragmentTransitionImpl;

        $r1 := @parameter0: java.util.Map;

        $r2 := @parameter1: android.view.View;

        $i0 = virtualinvoke $r2.<android.view.View: int getVisibility()>();

        if $i0 != 0 goto label3;

        $r3 = staticinvoke <androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>($r2);

        if $r3 == null goto label1;

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r2);

     label1:
        $z0 = $r2 instanceof android.view.ViewGroup;

        if $z0 == 0 goto label3;

        $r4 = (android.view.ViewGroup) $r2;

        $i0 = virtualinvoke $r4.<android.view.ViewGroup: int getChildCount()>();

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label3;

        $r2 = virtualinvoke $r4.<android.view.ViewGroup: android.view.View getChildAt(int)>($i1);

        virtualinvoke $r0.<androidx.fragment.app.FragmentTransitionImpl: void findNamedViews(java.util.Map,android.view.View)>($r1, $r2);

        $i1 = $i1 + 1;

        goto label2;

     label3:
        return;
    }

    protected void getBoundsOnScreen(android.view.View, android.graphics.Rect)
    {
        androidx.fragment.app.FragmentTransitionImpl $r0;
        android.view.View $r1;
        android.graphics.Rect $r2;
        int $i0, $i1, $i2, $i3, $i4;
        int[] $r3;

        $r0 := @this: androidx.fragment.app.FragmentTransitionImpl;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.graphics.Rect;

        $r3 = newarray (int)[2];

        virtualinvoke $r1.<android.view.View: void getLocationOnScreen(int[])>($r3);

        $i0 = $r3[0];

        $i1 = $r3[1];

        $i2 = $r3[0];

        $i3 = virtualinvoke $r1.<android.view.View: int getWidth()>();

        $i2 = $i2 + $i3;

        $i3 = $r3[1];

        $i4 = virtualinvoke $r1.<android.view.View: int getHeight()>();

        $i3 = $i3 + $i4;

        virtualinvoke $r2.<android.graphics.Rect: void set(int,int,int,int)>($i0, $i1, $i2, $i3);

        return;
    }

    public abstract java.lang.Object mergeTransitionsInSequence(java.lang.Object, java.lang.Object, java.lang.Object);

    public abstract java.lang.Object mergeTransitionsTogether(java.lang.Object, java.lang.Object, java.lang.Object);

    java.util.ArrayList prepareSetNameOverridesReordered(java.util.ArrayList)
    {
        androidx.fragment.app.FragmentTransitionImpl $r0;
        java.util.ArrayList $r1, $r2;
        int $i0, $i1;
        java.lang.Object $r3;
        android.view.View $r4;
        java.lang.String $r5;

        $r0 := @this: androidx.fragment.app.FragmentTransitionImpl;

        $r1 := @parameter0: java.util.ArrayList;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r3 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r4 = (android.view.View) $r3;

        $r5 = staticinvoke <androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>($r4);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        staticinvoke <androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>($r4, null);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r2;
    }

    public abstract void removeTarget(java.lang.Object, android.view.View);

    public abstract void replaceTargets(java.lang.Object, java.util.ArrayList, java.util.ArrayList);

    public abstract void scheduleHideFragmentView(java.lang.Object, android.view.View, java.util.ArrayList);

    void scheduleNameReset(android.view.ViewGroup, java.util.ArrayList, java.util.Map)
    {
        androidx.fragment.app.FragmentTransitionImpl $r0;
        android.view.ViewGroup $r1;
        java.util.ArrayList $r2;
        java.util.Map $r3;
        androidx.fragment.app.FragmentTransitionImpl$3 $r4;

        $r0 := @this: androidx.fragment.app.FragmentTransitionImpl;

        $r1 := @parameter0: android.view.ViewGroup;

        $r2 := @parameter1: java.util.ArrayList;

        $r3 := @parameter2: java.util.Map;

        $r4 = new androidx.fragment.app.FragmentTransitionImpl$3;

        specialinvoke $r4.<androidx.fragment.app.FragmentTransitionImpl$3: void <init>(androidx.fragment.app.FragmentTransitionImpl,java.util.ArrayList,java.util.Map)>($r0, $r2, $r3);

        staticinvoke <androidx.fragment.app.OneShotPreDrawListener: androidx.fragment.app.OneShotPreDrawListener add(android.view.View,java.lang.Runnable)>($r1, $r4);

        return;
    }

    public abstract void scheduleRemoveTargets(java.lang.Object, java.lang.Object, java.util.ArrayList, java.lang.Object, java.util.ArrayList, java.lang.Object, java.util.ArrayList);

    public abstract void setEpicenter(java.lang.Object, android.graphics.Rect);

    public abstract void setEpicenter(java.lang.Object, android.view.View);

    void setNameOverridesOrdered(android.view.View, java.util.ArrayList, java.util.Map)
    {
        androidx.fragment.app.FragmentTransitionImpl $r0;
        android.view.View $r1;
        java.util.ArrayList $r2;
        java.util.Map $r3;
        androidx.fragment.app.FragmentTransitionImpl$2 $r4;

        $r0 := @this: androidx.fragment.app.FragmentTransitionImpl;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: java.util.ArrayList;

        $r3 := @parameter2: java.util.Map;

        $r4 = new androidx.fragment.app.FragmentTransitionImpl$2;

        specialinvoke $r4.<androidx.fragment.app.FragmentTransitionImpl$2: void <init>(androidx.fragment.app.FragmentTransitionImpl,java.util.ArrayList,java.util.Map)>($r0, $r2, $r3);

        staticinvoke <androidx.fragment.app.OneShotPreDrawListener: androidx.fragment.app.OneShotPreDrawListener add(android.view.View,java.lang.Runnable)>($r1, $r4);

        return;
    }

    void setNameOverridesReordered(android.view.View, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.Map)
    {
        androidx.fragment.app.FragmentTransitionImpl $r0;
        android.view.View $r1, $r9;
        java.util.ArrayList $r2, $r3, $r4, $r7;
        java.util.Map $r5;
        androidx.fragment.app.FragmentTransitionImpl$1 $r6;
        int $i0, $i1, $i2;
        java.lang.Object $r8;
        java.lang.String $r10, $r11;
        boolean $z0;

        $r0 := @this: androidx.fragment.app.FragmentTransitionImpl;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: java.util.ArrayList;

        $r3 := @parameter2: java.util.ArrayList;

        $r4 := @parameter3: java.util.ArrayList;

        $r5 := @parameter4: java.util.Map;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label6;

        $r8 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r9 = (android.view.View) $r8;

        $r10 = staticinvoke <androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>($r9);

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>($r10);

        if $r10 != null goto label2;

        goto label5;

     label2:
        staticinvoke <androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>($r9, null);

        $r8 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r10);

        $r11 = (java.lang.String) $r8;

        $i2 = 0;

     label3:
        if $i2 >= $i0 goto label5;

        $r8 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $z0 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 == 0 goto label4;

        $r8 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r9 = (android.view.View) $r8;

        staticinvoke <androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>($r9, $r10);

        goto label5;

     label4:
        $i2 = $i2 + 1;

        goto label3;

     label5:
        $i1 = $i1 + 1;

        goto label1;

     label6:
        $r6 = new androidx.fragment.app.FragmentTransitionImpl$1;

        specialinvoke $r6.<androidx.fragment.app.FragmentTransitionImpl$1: void <init>(androidx.fragment.app.FragmentTransitionImpl,int,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>($r0, $i0, $r3, $r4, $r2, $r7);

        staticinvoke <androidx.fragment.app.OneShotPreDrawListener: androidx.fragment.app.OneShotPreDrawListener add(android.view.View,java.lang.Runnable)>($r1, $r6);

        return;
    }

    public abstract void setSharedElementTargets(java.lang.Object, android.view.View, java.util.ArrayList);

    public abstract void swapSharedElementTargets(java.lang.Object, java.util.ArrayList, java.util.ArrayList);

    public abstract java.lang.Object wrapTransitionInSet(java.lang.Object);
}
