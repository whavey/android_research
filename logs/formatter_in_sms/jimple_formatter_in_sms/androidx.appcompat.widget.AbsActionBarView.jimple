abstract class androidx.appcompat.widget.AbsActionBarView extends android.view.ViewGroup
{
    private static final int FADE_DURATION;
    protected androidx.appcompat.widget.ActionMenuPresenter mActionMenuPresenter;
    protected int mContentHeight;
    private boolean mEatingHover;
    private boolean mEatingTouch;
    protected androidx.appcompat.widget.ActionMenuView mMenuView;
    protected final android.content.Context mPopupContext;
    protected final androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener mVisAnimListener;
    protected androidx.core.view.ViewPropertyAnimatorCompat mVisibilityAnim;

    void <init>(android.content.Context)
    {
        androidx.appcompat.widget.AbsActionBarView $r0;
        android.content.Context $r1;

        $r0 := @this: androidx.appcompat.widget.AbsActionBarView;

        $r1 := @parameter0: android.content.Context;

        specialinvoke $r0.<androidx.appcompat.widget.AbsActionBarView: void <init>(android.content.Context,android.util.AttributeSet)>($r1, null);

        return;
    }

    void <init>(android.content.Context, android.util.AttributeSet)
    {
        androidx.appcompat.widget.AbsActionBarView $r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;

        $r0 := @this: androidx.appcompat.widget.AbsActionBarView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke $r0.<androidx.appcompat.widget.AbsActionBarView: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, 0);

        return;
    }

    void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        androidx.appcompat.widget.AbsActionBarView $r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0;
        androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener $r3;
        android.util.TypedValue $r4;
        android.content.res.Resources$Theme $r5;
        boolean $z0;
        android.view.ContextThemeWrapper $r6;

        $r0 := @this: androidx.appcompat.widget.AbsActionBarView;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        specialinvoke $r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        $r3 = new androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener;

        specialinvoke $r3.<androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener: void <init>(androidx.appcompat.widget.AbsActionBarView)>($r0);

        $r0.<androidx.appcompat.widget.AbsActionBarView: androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener mVisAnimListener> = $r3;

        $r4 = new android.util.TypedValue;

        specialinvoke $r4.<android.util.TypedValue: void <init>()>();

        $r5 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $i0 = <androidx.appcompat.R$attr: int actionBarPopupTheme>;

        $z0 = virtualinvoke $r5.<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>($i0, $r4, 1);

        if $z0 == 0 goto label1;

        $i0 = $r4.<android.util.TypedValue: int resourceId>;

        if $i0 == 0 goto label1;

        $r6 = new android.view.ContextThemeWrapper;

        $i0 = $r4.<android.util.TypedValue: int resourceId>;

        specialinvoke $r6.<android.view.ContextThemeWrapper: void <init>(android.content.Context,int)>($r1, $i0);

        $r0.<androidx.appcompat.widget.AbsActionBarView: android.content.Context mPopupContext> = $r6;

        return;

     label1:
        $r0.<androidx.appcompat.widget.AbsActionBarView: android.content.Context mPopupContext> = $r1;

        return;
    }

    static void access$001(androidx.appcompat.widget.AbsActionBarView, int)
    {
        androidx.appcompat.widget.AbsActionBarView $r0;
        int $i0;

        $r0 := @parameter0: androidx.appcompat.widget.AbsActionBarView;

        $i0 := @parameter1: int;

        specialinvoke $r0.<android.view.ViewGroup: void setVisibility(int)>($i0);

        return;
    }

    static void access$101(androidx.appcompat.widget.AbsActionBarView, int)
    {
        androidx.appcompat.widget.AbsActionBarView $r0;
        int $i0;

        $r0 := @parameter0: androidx.appcompat.widget.AbsActionBarView;

        $i0 := @parameter1: int;

        specialinvoke $r0.<android.view.ViewGroup: void setVisibility(int)>($i0);

        return;
    }

    protected static int next(int, int, boolean)
    {
        int $i0, $i1;
        boolean $z0;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $z0 := @parameter2: boolean;

        if $z0 == 0 goto label1;

        $i0 = $i0 - $i1;

        return $i0;

     label1:
        $i0 = $i0 + $i1;

        return $i0;
    }

    public void animateToVisibility(int)
    {
        androidx.appcompat.widget.AbsActionBarView $r0;
        int $i0;
        androidx.core.view.ViewPropertyAnimatorCompat $r1;

        $r0 := @this: androidx.appcompat.widget.AbsActionBarView;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke $r0.<androidx.appcompat.widget.AbsActionBarView: androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long)>($i0, 200L);

        virtualinvoke $r1.<androidx.core.view.ViewPropertyAnimatorCompat: void start()>();

        return;
    }

    public boolean canShowOverflowMenu()
    {
        androidx.appcompat.widget.AbsActionBarView $r0;
        boolean $z0;
        int $i0;

        $r0 := @this: androidx.appcompat.widget.AbsActionBarView;

        $z0 = virtualinvoke $r0.<androidx.appcompat.widget.AbsActionBarView: boolean isOverflowReserved()>();

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke $r0.<androidx.appcompat.widget.AbsActionBarView: int getVisibility()>();

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void dismissPopupMenus()
    {
        androidx.appcompat.widget.AbsActionBarView $r0;
        androidx.appcompat.widget.ActionMenuPresenter $r1;

        $r0 := @this: androidx.appcompat.widget.AbsActionBarView;

        $r1 = $r0.<androidx.appcompat.widget.AbsActionBarView: androidx.appcompat.widget.ActionMenuPresenter mActionMenuPresenter>;

        if $r1 == null goto label1;

        virtualinvoke $r1.<androidx.appcompat.widget.ActionMenuPresenter: boolean dismissPopupMenus()>();

     label1:
        return;
    }

    public int getAnimatedVisibility()
    {
        androidx.appcompat.widget.AbsActionBarView $r0;
        int $i0;
        androidx.core.view.ViewPropertyAnimatorCompat $r1;
        androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener $r2;

        $r0 := @this: androidx.appcompat.widget.AbsActionBarView;

        $r1 = $r0.<androidx.appcompat.widget.AbsActionBarView: androidx.core.view.ViewPropertyAnimatorCompat mVisibilityAnim>;

        if $r1 == null goto label1;

        $r2 = $r0.<androidx.appcompat.widget.AbsActionBarView: androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener mVisAnimListener>;

        $i0 = $r2.<androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener: int mFinalVisibility>;

        return $i0;

     label1:
        $i0 = virtualinvoke $r0.<androidx.appcompat.widget.AbsActionBarView: int getVisibility()>();

        return $i0;
    }

    public int getContentHeight()
    {
        androidx.appcompat.widget.AbsActionBarView $r0;
        int i0;

        $r0 := @this: androidx.appcompat.widget.AbsActionBarView;

        i0 = $r0.<androidx.appcompat.widget.AbsActionBarView: int mContentHeight>;

        return i0;
    }

    public boolean hideOverflowMenu()
    {
        androidx.appcompat.widget.AbsActionBarView $r0;
        boolean $z0;
        androidx.appcompat.widget.ActionMenuPresenter $r1;

        $r0 := @this: androidx.appcompat.widget.AbsActionBarView;

        $r1 = $r0.<androidx.appcompat.widget.AbsActionBarView: androidx.appcompat.widget.ActionMenuPresenter mActionMenuPresenter>;

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.<androidx.appcompat.widget.ActionMenuPresenter: boolean hideOverflowMenu()>();

        return $z0;

     label1:
        return 0;
    }

    public boolean isOverflowMenuShowPending()
    {
        androidx.appcompat.widget.AbsActionBarView $r0;
        boolean $z0;
        androidx.appcompat.widget.ActionMenuPresenter $r1;

        $r0 := @this: androidx.appcompat.widget.AbsActionBarView;

        $r1 = $r0.<androidx.appcompat.widget.AbsActionBarView: androidx.appcompat.widget.ActionMenuPresenter mActionMenuPresenter>;

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.<androidx.appcompat.widget.ActionMenuPresenter: boolean isOverflowMenuShowPending()>();

        return $z0;

     label1:
        return 0;
    }

    public boolean isOverflowMenuShowing()
    {
        androidx.appcompat.widget.AbsActionBarView $r0;
        boolean $z0;
        androidx.appcompat.widget.ActionMenuPresenter $r1;

        $r0 := @this: androidx.appcompat.widget.AbsActionBarView;

        $r1 = $r0.<androidx.appcompat.widget.AbsActionBarView: androidx.appcompat.widget.ActionMenuPresenter mActionMenuPresenter>;

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.<androidx.appcompat.widget.ActionMenuPresenter: boolean isOverflowMenuShowing()>();

        return $z0;

     label1:
        return 0;
    }

    public boolean isOverflowReserved()
    {
        androidx.appcompat.widget.AbsActionBarView $r0;
        boolean $z0;
        androidx.appcompat.widget.ActionMenuPresenter $r1;

        $r0 := @this: androidx.appcompat.widget.AbsActionBarView;

        $r1 = $r0.<androidx.appcompat.widget.AbsActionBarView: androidx.appcompat.widget.ActionMenuPresenter mActionMenuPresenter>;

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.<androidx.appcompat.widget.ActionMenuPresenter: boolean isOverflowReserved()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    protected int measureChildView(android.view.View, int, int, int)
    {
        androidx.appcompat.widget.AbsActionBarView $r0;
        android.view.View $r1;
        int $i0, $i1, $i2, $i3;

        $r0 := @this: androidx.appcompat.widget.AbsActionBarView;

        $r1 := @parameter0: android.view.View;

        $i2 := @parameter1: int;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $i3 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i2, -2147483648);

        virtualinvoke $r1.<android.view.View: void measure(int,int)>($i3, $i0);

        $i0 = virtualinvoke $r1.<android.view.View: int getMeasuredWidth()>();

        $i2 = $i2 - $i0;

        $i2 = $i2 - $i1;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i2);

        return $i2;
    }

    protected void onConfigurationChanged(android.content.res.Configuration)
    {
        androidx.appcompat.widget.AbsActionBarView $r0;
        android.content.res.Configuration $r1;
        int $i0;
        android.content.Context $r2;
        int[] $r3;
        android.content.res.TypedArray $r4;
        androidx.appcompat.widget.ActionMenuPresenter $r5;

        $r0 := @this: androidx.appcompat.widget.AbsActionBarView;

        $r1 := @parameter0: android.content.res.Configuration;

        specialinvoke $r0.<android.view.ViewGroup: void onConfigurationChanged(android.content.res.Configuration)>($r1);

        $r2 = virtualinvoke $r0.<androidx.appcompat.widget.AbsActionBarView: android.content.Context getContext()>();

        $r3 = <androidx.appcompat.R$styleable: int[] ActionBar>;

        $i0 = <androidx.appcompat.R$attr: int actionBarStyle>;

        $r4 = virtualinvoke $r2.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(null, $r3, $i0, 0);

        $i0 = <androidx.appcompat.R$styleable: int ActionBar_height>;

        $i0 = virtualinvoke $r4.<android.content.res.TypedArray: int getLayoutDimension(int,int)>($i0, 0);

        virtualinvoke $r0.<androidx.appcompat.widget.AbsActionBarView: void setContentHeight(int)>($i0);

        virtualinvoke $r4.<android.content.res.TypedArray: void recycle()>();

        $r5 = $r0.<androidx.appcompat.widget.AbsActionBarView: androidx.appcompat.widget.ActionMenuPresenter mActionMenuPresenter>;

        if $r5 == null goto label1;

        virtualinvoke $r5.<androidx.appcompat.widget.ActionMenuPresenter: void onConfigurationChanged(android.content.res.Configuration)>($r1);

     label1:
        return;
    }

    public boolean onHoverEvent(android.view.MotionEvent)
    {
        androidx.appcompat.widget.AbsActionBarView $r0;
        android.view.MotionEvent $r1;
        int $i0;
        boolean $z0;

        $r0 := @this: androidx.appcompat.widget.AbsActionBarView;

        $r1 := @parameter0: android.view.MotionEvent;

        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getActionMasked()>();

        if $i0 != 9 goto label1;

        $r0.<androidx.appcompat.widget.AbsActionBarView: boolean mEatingHover> = 0;

     label1:
        $z0 = $r0.<androidx.appcompat.widget.AbsActionBarView: boolean mEatingHover>;

        if $z0 != 0 goto label2;

        $z0 = specialinvoke $r0.<android.view.ViewGroup: boolean onHoverEvent(android.view.MotionEvent)>($r1);

        if $i0 != 9 goto label2;

        if $z0 != 0 goto label2;

        $r0.<androidx.appcompat.widget.AbsActionBarView: boolean mEatingHover> = 1;

     label2:
        if $i0 == 10 goto label3;

        if $i0 != 3 goto label4;

     label3:
        $r0.<androidx.appcompat.widget.AbsActionBarView: boolean mEatingHover> = 0;

     label4:
        return 1;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        androidx.appcompat.widget.AbsActionBarView $r0;
        android.view.MotionEvent $r1;
        int $i0;
        boolean $z0;

        $r0 := @this: androidx.appcompat.widget.AbsActionBarView;

        $r1 := @parameter0: android.view.MotionEvent;

        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getActionMasked()>();

        if $i0 != 0 goto label1;

        $r0.<androidx.appcompat.widget.AbsActionBarView: boolean mEatingTouch> = 0;

     label1:
        $z0 = $r0.<androidx.appcompat.widget.AbsActionBarView: boolean mEatingTouch>;

        if $z0 != 0 goto label2;

        $z0 = specialinvoke $r0.<android.view.ViewGroup: boolean onTouchEvent(android.view.MotionEvent)>($r1);

        if $i0 != 0 goto label2;

        if $z0 != 0 goto label2;

        $r0.<androidx.appcompat.widget.AbsActionBarView: boolean mEatingTouch> = 1;

     label2:
        if $i0 == 1 goto label3;

        if $i0 != 3 goto label4;

     label3:
        $r0.<androidx.appcompat.widget.AbsActionBarView: boolean mEatingTouch> = 0;

     label4:
        return 1;
    }

    protected int positionChild(android.view.View, int, int, int, boolean)
    {
        androidx.appcompat.widget.AbsActionBarView $r0;
        android.view.View $r1;
        int $i0, $i1, $i2, $i3, $i4;
        boolean $z0;

        $r0 := @this: androidx.appcompat.widget.AbsActionBarView;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $z0 := @parameter4: boolean;

        $i3 = virtualinvoke $r1.<android.view.View: int getMeasuredWidth()>();

        $i4 = virtualinvoke $r1.<android.view.View: int getMeasuredHeight()>();

        $i2 = $i2 - $i4;

        $i2 = $i2 / 2;

        $i1 = $i2 + $i1;

        if $z0 == 0 goto label1;

        $i2 = $i0 - $i3;

        $i4 = $i1 + $i4;

        virtualinvoke $r1.<android.view.View: void layout(int,int,int,int)>($i2, $i1, $i0, $i4);

        goto label2;

     label1:
        $i2 = $i0 + $i3;

        $i4 = $i1 + $i4;

        virtualinvoke $r1.<android.view.View: void layout(int,int,int,int)>($i0, $i1, $i2, $i4);

     label2:
        if $z0 == 0 goto label3;

        $i0 = neg $i3;

        return $i0;

     label3:
        return $i3;
    }

    public void postShowOverflowMenu()
    {
        androidx.appcompat.widget.AbsActionBarView $r0;
        androidx.appcompat.widget.AbsActionBarView$1 $r1;

        $r0 := @this: androidx.appcompat.widget.AbsActionBarView;

        $r1 = new androidx.appcompat.widget.AbsActionBarView$1;

        specialinvoke $r1.<androidx.appcompat.widget.AbsActionBarView$1: void <init>(androidx.appcompat.widget.AbsActionBarView)>($r0);

        virtualinvoke $r0.<androidx.appcompat.widget.AbsActionBarView: boolean post(java.lang.Runnable)>($r1);

        return;
    }

    public void setContentHeight(int)
    {
        androidx.appcompat.widget.AbsActionBarView $r0;
        int $i0;

        $r0 := @this: androidx.appcompat.widget.AbsActionBarView;

        $i0 := @parameter0: int;

        $r0.<androidx.appcompat.widget.AbsActionBarView: int mContentHeight> = $i0;

        virtualinvoke $r0.<androidx.appcompat.widget.AbsActionBarView: void requestLayout()>();

        return;
    }

    public void setVisibility(int)
    {
        androidx.appcompat.widget.AbsActionBarView $r0;
        int $i0, $i1;
        androidx.core.view.ViewPropertyAnimatorCompat $r1;

        $r0 := @this: androidx.appcompat.widget.AbsActionBarView;

        $i0 := @parameter0: int;

        $i1 = virtualinvoke $r0.<androidx.appcompat.widget.AbsActionBarView: int getVisibility()>();

        if $i0 == $i1 goto label2;

        $r1 = $r0.<androidx.appcompat.widget.AbsActionBarView: androidx.core.view.ViewPropertyAnimatorCompat mVisibilityAnim>;

        if $r1 == null goto label1;

        virtualinvoke $r1.<androidx.core.view.ViewPropertyAnimatorCompat: void cancel()>();

     label1:
        specialinvoke $r0.<android.view.ViewGroup: void setVisibility(int)>($i0);

     label2:
        return;
    }

    public androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int, long)
    {
        androidx.appcompat.widget.AbsActionBarView $r0;
        int $i0, $i2;
        long $l1;
        androidx.core.view.ViewPropertyAnimatorCompat $r1;
        androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener $r2;

        $r0 := @this: androidx.appcompat.widget.AbsActionBarView;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        $r1 = $r0.<androidx.appcompat.widget.AbsActionBarView: androidx.core.view.ViewPropertyAnimatorCompat mVisibilityAnim>;

        if $r1 == null goto label1;

        virtualinvoke $r1.<androidx.core.view.ViewPropertyAnimatorCompat: void cancel()>();

     label1:
        if $i0 != 0 goto label3;

        $i2 = virtualinvoke $r0.<androidx.appcompat.widget.AbsActionBarView: int getVisibility()>();

        if $i2 == 0 goto label2;

        virtualinvoke $r0.<androidx.appcompat.widget.AbsActionBarView: void setAlpha(float)>(0.0F);

     label2:
        $r1 = staticinvoke <androidx.core.view.ViewCompat: androidx.core.view.ViewPropertyAnimatorCompat animate(android.view.View)>($r0);

        $r1 = virtualinvoke $r1.<androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat alpha(float)>(1.0F);

        virtualinvoke $r1.<androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat setDuration(long)>($l1);

        $r2 = $r0.<androidx.appcompat.widget.AbsActionBarView: androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener mVisAnimListener>;

        $r2 = virtualinvoke $r2.<androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener: androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener withFinalVisibility(androidx.core.view.ViewPropertyAnimatorCompat,int)>($r1, $i0);

        virtualinvoke $r1.<androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat setListener(androidx.core.view.ViewPropertyAnimatorListener)>($r2);

        return $r1;

     label3:
        $r1 = staticinvoke <androidx.core.view.ViewCompat: androidx.core.view.ViewPropertyAnimatorCompat animate(android.view.View)>($r0);

        $r1 = virtualinvoke $r1.<androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat alpha(float)>(0.0F);

        virtualinvoke $r1.<androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat setDuration(long)>($l1);

        $r2 = $r0.<androidx.appcompat.widget.AbsActionBarView: androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener mVisAnimListener>;

        $r2 = virtualinvoke $r2.<androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener: androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener withFinalVisibility(androidx.core.view.ViewPropertyAnimatorCompat,int)>($r1, $i0);

        virtualinvoke $r1.<androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat setListener(androidx.core.view.ViewPropertyAnimatorListener)>($r2);

        return $r1;
    }

    public boolean showOverflowMenu()
    {
        androidx.appcompat.widget.AbsActionBarView $r0;
        boolean $z0;
        androidx.appcompat.widget.ActionMenuPresenter $r1;

        $r0 := @this: androidx.appcompat.widget.AbsActionBarView;

        $r1 = $r0.<androidx.appcompat.widget.AbsActionBarView: androidx.appcompat.widget.ActionMenuPresenter mActionMenuPresenter>;

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.<androidx.appcompat.widget.ActionMenuPresenter: boolean showOverflowMenu()>();

        return $z0;

     label1:
        return 0;
    }

    public static void <clinit>()
    {
        <androidx.appcompat.widget.AbsActionBarView: int FADE_DURATION> = 200;

        return;
    }
}
