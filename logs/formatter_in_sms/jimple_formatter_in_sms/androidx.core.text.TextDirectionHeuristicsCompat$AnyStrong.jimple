class androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong extends java.lang.Object implements androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm
{
    static final androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong INSTANCE_LTR;
    static final androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong INSTANCE_RTL;
    private final boolean mLookForRtl;

    static void <clinit>()
    {
        androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong $r0;

        $r0 = new androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong;

        specialinvoke $r0.<androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong: void <init>(boolean)>(1);

        <androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong: androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong INSTANCE_RTL> = $r0;

        $r0 = new androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong;

        specialinvoke $r0.<androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong: void <init>(boolean)>(0);

        <androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong: androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong INSTANCE_LTR> = $r0;

        return;
    }

    private void <init>(boolean)
    {
        androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong $r0;
        boolean $z0;

        $r0 := @this: androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong;

        $z0 := @parameter0: boolean;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong: boolean mLookForRtl> = $z0;

        return;
    }

    public int checkRtl(java.lang.CharSequence, int, int)
    {
        androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong $r0;
        java.lang.CharSequence $r1;
        int $i0, $i1, $i2;
        boolean $z0;
        char $c3;
        byte $b4;

        $r0 := @this: androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong;

        $r1 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 = 0;

        $i2 = $i0;

        $i0 = $i0 + $i1;

     label1:
        if $i2 >= $i0 goto label7;

        $c3 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i2);

        $b4 = staticinvoke <java.lang.Character: byte getDirectionality(char)>($c3);

        $i1 = staticinvoke <androidx.core.text.TextDirectionHeuristicsCompat: int isRtlText(int)>($b4);

        if $i1 == 0 goto label4;

        if $i1 == 1 goto label2;

        goto label6;

     label2:
        $z0 = $r0.<androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong: boolean mLookForRtl>;

        if $z0 != 0 goto label3;

        return 1;

     label3:
        $z0 = 1;

        goto label6;

     label4:
        $z0 = $r0.<androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong: boolean mLookForRtl>;

        if $z0 == 0 goto label5;

        return 0;

     label5:
        $z0 = 1;

     label6:
        $i2 = $i2 + 1;

        goto label1;

     label7:
        if $z0 == 0 goto label8;

        $z0 = $r0.<androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong: boolean mLookForRtl>;

        $i0 = (int) $z0;

        return $i0;

     label8:
        return 2;
    }
}
