public class androidx.core.graphics.PathParser$PathDataNode extends java.lang.Object
{
    public float[] mParams;
    public char mType;

    void <init>(char, float[])
    {
        androidx.core.graphics.PathParser$PathDataNode $r0;
        char $c0;
        float[] $r1;

        $r0 := @this: androidx.core.graphics.PathParser$PathDataNode;

        $c0 := @parameter0: char;

        $r1 := @parameter1: float[];

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<androidx.core.graphics.PathParser$PathDataNode: char mType> = $c0;

        $r0.<androidx.core.graphics.PathParser$PathDataNode: float[] mParams> = $r1;

        return;
    }

    void <init>(androidx.core.graphics.PathParser$PathDataNode)
    {
        androidx.core.graphics.PathParser$PathDataNode $r0, $r1;
        int $i0;
        float[] $r2;
        char $c1;

        $r0 := @this: androidx.core.graphics.PathParser$PathDataNode;

        $r1 := @parameter0: androidx.core.graphics.PathParser$PathDataNode;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $c1 = $r1.<androidx.core.graphics.PathParser$PathDataNode: char mType>;

        $r0.<androidx.core.graphics.PathParser$PathDataNode: char mType> = $c1;

        $r2 = $r1.<androidx.core.graphics.PathParser$PathDataNode: float[] mParams>;

        $i0 = lengthof $r2;

        $r2 = staticinvoke <androidx.core.graphics.PathParser: float[] copyOfRange(float[],int,int)>($r2, 0, $i0);

        $r0.<androidx.core.graphics.PathParser$PathDataNode: float[] mParams> = $r2;

        return;
    }

    private static void addCommand(android.graphics.Path, float[], char, char, float[])
    {
        android.graphics.Path $r0;
        float[] $r1, $r2;
        char $c0, $c1;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9;
        byte $b2, $b5;
        int $i3, $i4, $i6;
        boolean $z0, $z1;

        $r0 := @parameter0: android.graphics.Path;

        $r1 := @parameter1: float[];

        $c0 := @parameter2: char;

        $c1 := @parameter3: char;

        $r2 := @parameter4: float[];

        $f0 = $r1[0];

        $f1 = $r1[1];

        $f2 = $r1[2];

        $f3 = $r1[3];

        $f4 = $r1[4];

        $f5 = $r1[5];

        lookupswitch($c1)
        {
            case 65: goto label07;
            case 67: goto label06;
            case 72: goto label05;
            case 76: goto label04;
            case 77: goto label04;
            case 81: goto label03;
            case 83: goto label03;
            case 84: goto label04;
            case 86: goto label05;
            case 90: goto label02;
            case 97: goto label07;
            case 99: goto label06;
            case 104: goto label05;
            case 108: goto label04;
            case 109: goto label04;
            case 113: goto label03;
            case 115: goto label03;
            case 116: goto label04;
            case 118: goto label05;
            case 122: goto label02;
            default: goto label01;
        };

     label01:
        $b2 = 2;

        goto label08;

     label02:
        virtualinvoke $r0.<android.graphics.Path: void close()>();

        $f0 = $f4;

        $f1 = $f5;

        $f2 = $f4;

        $f3 = $f5;

        virtualinvoke $r0.<android.graphics.Path: void moveTo(float,float)>($f4, $f5);

        $b2 = 2;

        goto label08;

     label03:
        $b2 = 4;

        goto label08;

     label04:
        $b2 = 2;

        goto label08;

     label05:
        $b2 = 1;

        goto label08;

     label06:
        $b2 = 6;

        goto label08;

     label07:
        $b2 = 7;

     label08:
        $i3 = 0;

     label09:
        $i4 = lengthof $r2;

        if $i3 >= $i4 goto label48;

        if $c1 == 65 goto label42;

        if $c1 == 67 goto label41;

        if $c1 == 72 goto label40;

        if $c1 == 81 goto label39;

        if $c1 == 86 goto label38;

        if $c1 == 97 goto label33;

        if $c1 == 99 goto label32;

        if $c1 == 104 goto label31;

        if $c1 == 113 goto label30;

        if $c1 == 118 goto label29;

        if $c1 == 76 goto label28;

        if $c1 == 77 goto label26;

        if $c1 == 83 goto label23;

        if $c1 == 84 goto label20;

        if $c1 == 108 goto label19;

        if $c1 == 109 goto label17;

        if $c1 == 115 goto label13;

        if $c1 == 116 goto label10;

        $i4 = $i3;

        goto label47;

     label10:
        $f6 = 0.0F;

        $f7 = 0.0F;

        if $c0 == 113 goto label11;

        if $c0 == 116 goto label11;

        if $c0 == 81 goto label11;

        if $c0 != 84 goto label12;

     label11:
        $f6 = $f0 - $f2;

        $f7 = $f1 - $f3;

     label12:
        $i4 = $i3;

        $f2 = $r2[$i4];

        $i4 = $i3 + 1;

        $f3 = $r2[$i4];

        virtualinvoke $r0.<android.graphics.Path: void rQuadTo(float,float,float,float)>($f6, $f7, $f2, $f3);

        $f2 = $f0 + $f6;

        $f3 = $f1 + $f7;

        $i4 = $i3;

        $f7 = $r2[$i4];

        $f0 = $f0 + $f7;

        $i4 = $i3 + 1;

        $f7 = $r2[$i4];

        $f1 = $f1 + $f7;

        $i4 = $i3;

        goto label47;

     label13:
        if $c0 == 99 goto label15;

        if $c0 == 115 goto label15;

        if $c0 == 67 goto label15;

        if $c0 != 83 goto label14;

        goto label15;

     label14:
        $f2 = 0.0F;

        $f3 = 0.0F;

        goto label16;

     label15:
        $f2 = $f0 - $f2;

        $f3 = $f1 - $f3;

     label16:
        $i4 = $i3;

        $f7 = $r2[$i4];

        $i4 = $i3 + 1;

        $f6 = $r2[$i4];

        $i4 = $i3 + 2;

        $f8 = $r2[$i4];

        $i4 = $i3 + 3;

        $f9 = $r2[$i4];

        virtualinvoke $r0.<android.graphics.Path: void rCubicTo(float,float,float,float,float,float)>($f2, $f3, $f7, $f6, $f8, $f9);

        $i4 = $i3;

        $f2 = $r2[$i4];

        $f2 = $f2 + $f0;

        $i4 = $i3 + 1;

        $f3 = $r2[$i4];

        $f3 = $f3 + $f1;

        $i4 = $i3 + 2;

        $f7 = $r2[$i4];

        $f0 = $f0 + $f7;

        $i4 = $i3 + 3;

        $f7 = $r2[$i4];

        $f1 = $f1 + $f7;

        $i4 = $i3;

        goto label47;

     label17:
        $i4 = $i3;

        $f7 = $r2[$i4];

        $f0 = $f0 + $f7;

        $i4 = $i3 + 1;

        $f7 = $r2[$i4];

        $f1 = $f1 + $f7;

        if $i3 <= 0 goto label18;

        $i4 = $i3;

        $f7 = $r2[$i4];

        $i4 = $i3 + 1;

        $f6 = $r2[$i4];

        virtualinvoke $r0.<android.graphics.Path: void rLineTo(float,float)>($f7, $f6);

        $i4 = $i3;

        goto label47;

     label18:
        $i4 = $i3;

        $f4 = $r2[$i4];

        $i4 = $i3 + 1;

        $f5 = $r2[$i4];

        virtualinvoke $r0.<android.graphics.Path: void rMoveTo(float,float)>($f4, $f5);

        $f4 = $f0;

        $f5 = $f1;

        $i4 = $i3;

        goto label47;

     label19:
        $i4 = $i3;

        $f7 = $r2[$i4];

        $i4 = $i3 + 1;

        $f6 = $r2[$i4];

        virtualinvoke $r0.<android.graphics.Path: void rLineTo(float,float)>($f7, $f6);

        $i4 = $i3;

        $f7 = $r2[$i4];

        $f0 = $f0 + $f7;

        $i4 = $i3 + 1;

        $f7 = $r2[$i4];

        $f1 = $f1 + $f7;

        $i4 = $i3;

        goto label47;

     label20:
        $f7 = $f0;

        $f6 = $f1;

        if $c0 == 113 goto label21;

        if $c0 == 116 goto label21;

        if $c0 == 81 goto label21;

        if $c0 != 84 goto label22;

     label21:
        $f0 = $f0 * 2.0F;

        $f7 = $f0 - $f2;

        $f1 = 2.0F * $f1;

        $f6 = $f1 - $f3;

     label22:
        $i4 = $i3;

        $f1 = $r2[$i4];

        $i4 = $i3 + 1;

        $f0 = $r2[$i4];

        virtualinvoke $r0.<android.graphics.Path: void quadTo(float,float,float,float)>($f7, $f6, $f1, $f0);

        $i4 = $i3;

        $f0 = $r2[$i4];

        $i4 = $i3 + 1;

        $f1 = $r2[$i4];

        $f2 = $f7;

        $f3 = $f6;

        $i4 = $i3;

        goto label47;

     label23:
        if $c0 == 99 goto label24;

        if $c0 == 115 goto label24;

        if $c0 == 67 goto label24;

        if $c0 != 83 goto label25;

        goto label24;

     label24:
        $f0 = $f0 * 2.0F;

        $f1 = 2.0F * $f1;

        $f0 = $f0 - $f2;

        $f1 = $f1 - $f3;

     label25:
        $i4 = $i3;

        $f2 = $r2[$i4];

        $i4 = $i3 + 1;

        $f3 = $r2[$i4];

        $i4 = $i3 + 2;

        $f7 = $r2[$i4];

        $i4 = $i3 + 3;

        $f6 = $r2[$i4];

        virtualinvoke $r0.<android.graphics.Path: void cubicTo(float,float,float,float,float,float)>($f0, $f1, $f2, $f3, $f7, $f6);

        $i4 = $i3;

        $f2 = $r2[$i4];

        $i4 = $i3 + 1;

        $f3 = $r2[$i4];

        $i4 = $i3 + 2;

        $f0 = $r2[$i4];

        $i4 = $i3 + 3;

        $f1 = $r2[$i4];

        $i4 = $i3;

        goto label47;

     label26:
        $i4 = $i3;

        $f0 = $r2[$i4];

        $i4 = $i3 + 1;

        $f1 = $r2[$i4];

        if $i3 <= 0 goto label27;

        $i4 = $i3;

        $f7 = $r2[$i4];

        $i4 = $i3 + 1;

        $f6 = $r2[$i4];

        virtualinvoke $r0.<android.graphics.Path: void lineTo(float,float)>($f7, $f6);

        $i4 = $i3;

        goto label47;

     label27:
        $i4 = $i3;

        $f4 = $r2[$i4];

        $i4 = $i3 + 1;

        $f5 = $r2[$i4];

        virtualinvoke $r0.<android.graphics.Path: void moveTo(float,float)>($f4, $f5);

        $f4 = $f0;

        $f5 = $f1;

        $i4 = $i3;

        goto label47;

     label28:
        $i4 = $i3;

        $f1 = $r2[$i4];

        $i4 = $i3 + 1;

        $f0 = $r2[$i4];

        virtualinvoke $r0.<android.graphics.Path: void lineTo(float,float)>($f1, $f0);

        $i4 = $i3;

        $f0 = $r2[$i4];

        $i4 = $i3 + 1;

        $f1 = $r2[$i4];

        $i4 = $i3;

        goto label47;

     label29:
        $i4 = $i3;

        $f7 = $r2[$i4];

        virtualinvoke $r0.<android.graphics.Path: void rLineTo(float,float)>(0.0F, $f7);

        $i4 = $i3;

        $f7 = $r2[$i4];

        $f1 = $f1 + $f7;

        $i4 = $i3;

        goto label47;

     label30:
        $i4 = $i3;

        $f2 = $r2[$i4];

        $i4 = $i3 + 1;

        $f3 = $r2[$i4];

        $i4 = $i3 + 2;

        $f7 = $r2[$i4];

        $i4 = $i3 + 3;

        $f6 = $r2[$i4];

        virtualinvoke $r0.<android.graphics.Path: void rQuadTo(float,float,float,float)>($f2, $f3, $f7, $f6);

        $i4 = $i3;

        $f2 = $r2[$i4];

        $f2 = $f2 + $f0;

        $i4 = $i3 + 1;

        $f3 = $r2[$i4];

        $f3 = $f3 + $f1;

        $i4 = $i3 + 2;

        $f7 = $r2[$i4];

        $f0 = $f0 + $f7;

        $i4 = $i3 + 3;

        $f7 = $r2[$i4];

        $f1 = $f1 + $f7;

        $i4 = $i3;

        goto label47;

     label31:
        $i4 = $i3;

        $f7 = $r2[$i4];

        virtualinvoke $r0.<android.graphics.Path: void rLineTo(float,float)>($f7, 0.0F);

        $i4 = $i3;

        $f7 = $r2[$i4];

        $f0 = $f0 + $f7;

        $i4 = $i3;

        goto label47;

     label32:
        $i4 = $i3;

        $f2 = $r2[$i4];

        $i4 = $i3 + 1;

        $f3 = $r2[$i4];

        $i4 = $i3 + 2;

        $f7 = $r2[$i4];

        $i4 = $i3 + 3;

        $f6 = $r2[$i4];

        $i4 = $i3 + 4;

        $f8 = $r2[$i4];

        $i4 = $i3 + 5;

        $f9 = $r2[$i4];

        virtualinvoke $r0.<android.graphics.Path: void rCubicTo(float,float,float,float,float,float)>($f2, $f3, $f7, $f6, $f8, $f9);

        $i4 = $i3 + 2;

        $f2 = $r2[$i4];

        $f2 = $f2 + $f0;

        $i4 = $i3 + 3;

        $f3 = $r2[$i4];

        $f3 = $f3 + $f1;

        $i4 = $i3 + 4;

        $f7 = $r2[$i4];

        $f0 = $f0 + $f7;

        $i4 = $i3 + 5;

        $f7 = $r2[$i4];

        $f1 = $f1 + $f7;

        $i4 = $i3;

        goto label47;

     label33:
        $i4 = $i3 + 5;

        $f2 = $r2[$i4];

        $f2 = $f2 + $f0;

        $i4 = $i3 + 6;

        $f3 = $r2[$i4];

        $f3 = $f3 + $f1;

        $i4 = $i3;

        $f7 = $r2[$i4];

        $i4 = $i3 + 1;

        $f6 = $r2[$i4];

        $i4 = $i3 + 2;

        $f8 = $r2[$i4];

        $i4 = $i3 + 3;

        $f9 = $r2[$i4];

        $b5 = $f9 cmpl 0.0F;

        if $b5 == 0 goto label34;

        $z0 = 1;

        goto label35;

     label34:
        $z0 = 0;

     label35:
        $i4 = $i3 + 4;

        $f9 = $r2[$i4];

        $b5 = $f9 cmpl 0.0F;

        if $b5 == 0 goto label36;

        $z1 = 1;

        goto label37;

     label36:
        $z1 = 0;

     label37:
        $i4 = $i3;

        staticinvoke <androidx.core.graphics.PathParser$PathDataNode: void drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean)>($r0, $f0, $f1, $f2, $f3, $f7, $f6, $f8, $z0, $z1);

        $i6 = $i3 + 5;

        $f2 = $r2[$i6];

        $f0 = $f0 + $f2;

        $i3 = $i3 + 6;

        $f2 = $r2[$i3];

        $f1 = $f1 + $f2;

        $f2 = $f0;

        $f3 = $f1;

        goto label47;

     label38:
        $i4 = $i3;

        $i6 = $i3;

        $f1 = $r2[$i6];

        virtualinvoke $r0.<android.graphics.Path: void lineTo(float,float)>($f0, $f1);

        $f1 = $r2[$i3];

        goto label47;

     label39:
        $i4 = $i3;

        $i6 = $i3;

        $f1 = $r2[$i6];

        $i6 = $i3 + 1;

        $f0 = $r2[$i6];

        $i6 = $i3 + 2;

        $f2 = $r2[$i6];

        $i6 = $i3 + 3;

        $f3 = $r2[$i6];

        virtualinvoke $r0.<android.graphics.Path: void quadTo(float,float,float,float)>($f1, $f0, $f2, $f3);

        $i6 = $i3;

        $f2 = $r2[$i6];

        $i6 = $i3 + 1;

        $f3 = $r2[$i6];

        $i6 = $i3 + 2;

        $f0 = $r2[$i6];

        $i3 = $i3 + 3;

        $f1 = $r2[$i3];

        goto label47;

     label40:
        $i4 = $i3;

        $i6 = $i3;

        $f0 = $r2[$i6];

        virtualinvoke $r0.<android.graphics.Path: void lineTo(float,float)>($f0, $f1);

        $f0 = $r2[$i3];

        goto label47;

     label41:
        $i4 = $i3;

        $i6 = $i3;

        $f1 = $r2[$i6];

        $i6 = $i3 + 1;

        $f0 = $r2[$i6];

        $i6 = $i3 + 2;

        $f2 = $r2[$i6];

        $i6 = $i3 + 3;

        $f3 = $r2[$i6];

        $i6 = $i3 + 4;

        $f7 = $r2[$i6];

        $i6 = $i3 + 5;

        $f6 = $r2[$i6];

        virtualinvoke $r0.<android.graphics.Path: void cubicTo(float,float,float,float,float,float)>($f1, $f0, $f2, $f3, $f7, $f6);

        $i6 = $i3 + 4;

        $f0 = $r2[$i6];

        $i6 = $i3 + 5;

        $f1 = $r2[$i6];

        $i6 = $i3 + 2;

        $i3 = $i3 + 3;

        $f2 = $r2[$i6];

        $f3 = $r2[$i3];

        goto label47;

     label42:
        $i4 = $i3;

        $i6 = $i3 + 5;

        $f2 = $r2[$i6];

        $i6 = $i3 + 6;

        $f3 = $r2[$i6];

        $i6 = $i3;

        $f7 = $r2[$i6];

        $i6 = $i3 + 1;

        $f6 = $r2[$i6];

        $i6 = $i3 + 2;

        $f8 = $r2[$i6];

        $i3 = $i3 + 3;

        $f9 = $r2[$i3];

        $b5 = $f9 cmpl 0.0F;

        if $b5 == 0 goto label43;

        $z0 = 1;

        goto label44;

     label43:
        $z0 = 0;

     label44:
        $i3 = $i4 + 4;

        $f9 = $r2[$i3];

        $b5 = $f9 cmpl 0.0F;

        if $b5 == 0 goto label45;

        $z1 = 1;

        goto label46;

     label45:
        $z1 = 0;

     label46:
        staticinvoke <androidx.core.graphics.PathParser$PathDataNode: void drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean)>($r0, $f0, $f1, $f2, $f3, $f7, $f6, $f8, $z0, $z1);

        $i3 = $i4 + 5;

        $f0 = $r2[$i3];

        $i3 = $i4 + 6;

        $f1 = $r2[$i3];

        $f2 = $f0;

        $f3 = $f1;

     label47:
        $c0 = $c1;

        $i3 = $i4 + $b2;

        goto label09;

     label48:
        $r1[0] = $f0;

        $r1[1] = $f1;

        $r1[2] = $f2;

        $r1[3] = $f3;

        $r1[4] = $f4;

        $r1[5] = $f5;

        return;
    }

    private static void arcToBezier(android.graphics.Path, double, double, double, double, double, double, double, double, double)
    {
        android.graphics.Path $r0;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        int $i0, $i1;

        $r0 := @parameter0: android.graphics.Path;

        $d0 := @parameter1: double;

        $d1 := @parameter2: double;

        $d2 := @parameter3: double;

        $d3 := @parameter4: double;

        $d9 := @parameter5: double;

        $d4 := @parameter6: double;

        $d5 := @parameter7: double;

        $d6 := @parameter8: double;

        $d7 := @parameter9: double;

        $d10 = $d2;

        $d11 = $d7 * 4.0;

        $d11 = $d11 / 3.141592653589793;

        $d11 = staticinvoke <java.lang.Math: double abs(double)>($d11);

        $d11 = staticinvoke <java.lang.Math: double ceil(double)>($d11);

        $i0 = (int) $d11;

        $d8 = staticinvoke <java.lang.Math: double cos(double)>($d5);

        $d11 = $d8;

        $d12 = staticinvoke <java.lang.Math: double sin(double)>($d5);

        $d5 = $d12;

        $d13 = staticinvoke <java.lang.Math: double cos(double)>($d6);

        $d14 = staticinvoke <java.lang.Math: double sin(double)>($d6);

        $d15 = neg $d2;

        $d15 = $d15 * $d8;

        $d15 = $d15 * $d14;

        $d16 = $d3 * $d12;

        $d16 = $d16 * $d13;

        $d15 = $d15 - $d16;

        $d16 = neg $d2;

        $d12 = $d16 * $d12;

        $d14 = $d12 * $d14;

        $d8 = $d3 * $d8;

        $d8 = $d8 * $d13;

        $d13 = (double) $i0;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d13);

        $d7 = $d7 / $d13;

        $d13 = $d15;

        $d8 = $d14 + $d8;

        $d15 = $d9;

        $i1 = 0;

        $d16 = $d6;

     label1:
        if $i1 >= $i0 goto label2;

        $d9 = $d16 + $d7;

        $d17 = staticinvoke <java.lang.Math: double sin(double)>($d9);

        $d18 = staticinvoke <java.lang.Math: double cos(double)>($d9);

        $d6 = $d10 * $d11;

        $d6 = $d6 * $d18;

        $d6 = $d0 + $d6;

        $d14 = $d3 * $d5;

        $d14 = $d14 * $d17;

        $d6 = $d6 - $d14;

        $d14 = $d10 * $d5;

        $d14 = $d14 * $d18;

        $d14 = $d1 + $d14;

        $d12 = $d3 * $d11;

        $d12 = $d12 * $d17;

        $d14 = $d14 + $d12;

        $d12 = neg $d10;

        $d12 = $d12 * $d11;

        $d12 = $d12 * $d17;

        $d19 = $d3 * $d5;

        $d19 = $d19 * $d18;

        $d12 = $d12 - $d19;

        $d10 = neg $d10;

        $d10 = $d10 * $d5;

        $d10 = $d10 * $d17;

        $d17 = $d3 * $d11;

        $d18 = $d17 * $d18;

        $d10 = $d10 + $d18;

        $d18 = $d9 - $d16;

        $d18 = $d18 / 2.0;

        $d18 = staticinvoke <java.lang.Math: double tan(double)>($d18);

        $d16 = $d9 - $d16;

        $d16 = staticinvoke <java.lang.Math: double sin(double)>($d16);

        $d17 = $d18 * 3.0;

        $d18 = $d17 * $d18;

        $d18 = $d18 + 4.0;

        $d18 = staticinvoke <java.lang.Math: double sqrt(double)>($d18);

        $d18 = $d18 - 1.0;

        $d16 = $d16 * $d18;

        $d16 = $d16 / 3.0;

        $d13 = $d16 * $d13;

        $d13 = $d15 + $d13;

        $d8 = $d16 * $d8;

        $d4 = $d4 + $d8;

        $d8 = $d16 * $d12;

        $d8 = $d6 - $d8;

        $d15 = $d16 * $d10;

        $d15 = $d14 - $d15;

        virtualinvoke $r0.<android.graphics.Path: void rLineTo(float,float)>(0.0F, 0.0F);

        $f1 = (float) $d13;

        $f2 = (float) $d4;

        $f0 = (float) $d8;

        $f3 = (float) $d15;

        $f4 = (float) $d6;

        $f5 = (float) $d14;

        virtualinvoke $r0.<android.graphics.Path: void cubicTo(float,float,float,float,float,float)>($f1, $f2, $f0, $f3, $f4, $f5);

        $d16 = $d9;

        $d15 = $d6;

        $d4 = $d14;

        $d13 = $d12;

        $d8 = $d10;

        $i1 = $i1 + 1;

        $d10 = $d2;

        goto label1;

     label2:
        return;
    }

    private static void drawArc(android.graphics.Path, float, float, float, float, float, float, float, boolean, boolean)
    {
        android.graphics.Path $r0;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;
        boolean $z0, $z1;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12;
        byte $b0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        $r0 := @parameter0: android.graphics.Path;

        $f0 := @parameter1: float;

        $f1 := @parameter2: float;

        $f2 := @parameter3: float;

        $f3 := @parameter4: float;

        $f4 := @parameter5: float;

        $f5 := @parameter6: float;

        $f6 := @parameter7: float;

        $z0 := @parameter8: boolean;

        $z1 := @parameter9: boolean;

        $d9 = (double) $f6;

        $d9 = staticinvoke <java.lang.Math: double toRadians(double)>($d9);

        $d10 = staticinvoke <java.lang.Math: double cos(double)>($d9);

        $d11 = staticinvoke <java.lang.Math: double sin(double)>($d9);

        $d0 = (double) $f0;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d0);

        $d0 = $d0 * $d10;

        $d1 = (double) $f1;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d1);

        $d1 = $d1 * $d11;

        $d0 = $d0 + $d1;

        $d1 = (double) $f4;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d1);

        $d0 = $d0 / $d1;

        $f7 = neg $f0;

        $d1 = (double) $f7;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d1);

        $d1 = $d1 * $d11;

        $d2 = (double) $f1;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d2);

        $d2 = $d2 * $d10;

        $d1 = $d1 + $d2;

        $d2 = (double) $f5;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d2);

        $d1 = $d1 / $d2;

        $d2 = (double) $f2;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d2);

        $d2 = $d2 * $d10;

        $d3 = (double) $f3;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d3);

        $d3 = $d3 * $d11;

        $d2 = $d2 + $d3;

        $d3 = (double) $f4;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d3);

        $d2 = $d2 / $d3;

        $f7 = neg $f2;

        $d3 = (double) $f7;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d3);

        $d3 = $d3 * $d11;

        $d5 = (double) $f3;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d5);

        $d5 = $d5 * $d10;

        $d3 = $d3 + $d5;

        $d5 = (double) $f5;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d5);

        $d3 = $d3 / $d5;

        $d4 = $d0 - $d2;

        $d5 = $d1 - $d3;

        $d6 = $d0 + $d2;

        $d6 = $d6 / 2.0;

        $d7 = $d1 + $d3;

        $d7 = $d7 / 2.0;

        $d12 = $d4 * $d4;

        $d8 = $d5 * $d5;

        $d12 = $d12 + $d8;

        $b0 = $d12 cmpl 0.0;

        if $b0 != 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PathParser", " Points are coincident");

        return;

     label1:
        $d8 = 1.0 / $d12;

        $d8 = $d8 - 0.25;

        $b0 = $d8 cmpg 0.0;

        if $b0 >= 0 goto label2;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Points are too far apart ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d12);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PathParser", $r2);

        $d9 = staticinvoke <java.lang.Math: double sqrt(double)>($d12);

        $d9 = $d9 / 1.99999;

        $f7 = (float) $d9;

        $f4 = $f4 * $f7;

        $f5 = $f5 * $f7;

        staticinvoke <androidx.core.graphics.PathParser$PathDataNode: void drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean)>($r0, $f0, $f1, $f2, $f3, $f4, $f5, $f6, $z0, $z1);

        return;

     label2:
        $d12 = staticinvoke <java.lang.Math: double sqrt(double)>($d8);

        $d4 = $d12 * $d4;

        $d5 = $d12 * $d5;

        if $z0 != $z1 goto label3;

        $d5 = $d6 - $d5;

        $d6 = $d7 + $d4;

        goto label4;

     label3:
        $d5 = $d6 + $d5;

        $d6 = $d7 - $d4;

     label4:
        $d1 = $d1 - $d6;

        $d0 = $d0 - $d5;

        $d0 = staticinvoke <java.lang.Math: double atan2(double,double)>($d1, $d0);

        $d1 = $d3 - $d6;

        $d2 = $d2 - $d5;

        $d1 = staticinvoke <java.lang.Math: double atan2(double,double)>($d1, $d2);

        $d1 = $d1 - $d0;

        $b0 = $d1 cmpl 0.0;

        if $b0 < 0 goto label5;

        $z0 = 1;

        goto label6;

     label5:
        $z0 = 0;

     label6:
        if $z1 == $z0 goto label8;

        $b0 = $d1 cmpl 0.0;

        if $b0 <= 0 goto label7;

        $d1 = $d1 - 6.283185307179586;

        goto label8;

     label7:
        $d1 = $d1 + 6.283185307179586;

     label8:
        $d2 = (double) $f4;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d2);

        $d3 = $d5 * $d2;

        $d2 = (double) $f5;

        staticinvoke <java.lang.Double: boolean isNaN(double)>($d2);

        $d5 = $d2 * $d6;

        $d2 = $d3 * $d10;

        $d6 = $d5 * $d11;

        $d2 = $d2 - $d6;

        $d11 = $d3 * $d11;

        $d10 = $d5 * $d10;

        $d10 = $d11 + $d10;

        $d11 = (double) $f4;

        $d3 = (double) $f5;

        $d5 = (double) $f0;

        $d6 = (double) $f1;

        staticinvoke <androidx.core.graphics.PathParser$PathDataNode: void arcToBezier(android.graphics.Path,double,double,double,double,double,double,double,double,double)>($r0, $d2, $d10, $d11, $d3, $d5, $d6, $d9, $d0, $d1);

        return;
    }

    public static void nodesToPath(androidx.core.graphics.PathParser$PathDataNode[], android.graphics.Path)
    {
        androidx.core.graphics.PathParser$PathDataNode[] $r0;
        android.graphics.Path $r1;
        float[] $r2, $r4;
        char $c0, $c3;
        int $i1, $i2;
        androidx.core.graphics.PathParser$PathDataNode $r3;

        $r0 := @parameter0: androidx.core.graphics.PathParser$PathDataNode[];

        $r1 := @parameter1: android.graphics.Path;

        $r2 = newarray (float)[6];

        $c0 = 109;

        $i1 = 0;

     label1:
        $i2 = lengthof $r0;

        if $i1 >= $i2 goto label2;

        $r3 = $r0[$i1];

        $c3 = $r3.<androidx.core.graphics.PathParser$PathDataNode: char mType>;

        $r3 = $r0[$i1];

        $r4 = $r3.<androidx.core.graphics.PathParser$PathDataNode: float[] mParams>;

        staticinvoke <androidx.core.graphics.PathParser$PathDataNode: void addCommand(android.graphics.Path,float[],char,char,float[])>($r1, $r2, $c0, $c3, $r4);

        $r3 = $r0[$i1];

        $c0 = $r3.<androidx.core.graphics.PathParser$PathDataNode: char mType>;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void interpolatePathDataNode(androidx.core.graphics.PathParser$PathDataNode, androidx.core.graphics.PathParser$PathDataNode, float)
    {
        androidx.core.graphics.PathParser$PathDataNode $r0, $r1, $r2;
        float $f0, $f1, $f2;
        int $i0, $i1;
        float[] $r3, $r4;

        $r0 := @this: androidx.core.graphics.PathParser$PathDataNode;

        $r1 := @parameter0: androidx.core.graphics.PathParser$PathDataNode;

        $r2 := @parameter1: androidx.core.graphics.PathParser$PathDataNode;

        $f0 := @parameter2: float;

        $i0 = 0;

     label1:
        $r3 = $r1.<androidx.core.graphics.PathParser$PathDataNode: float[] mParams>;

        $i1 = lengthof $r3;

        if $i0 >= $i1 goto label2;

        $r4 = $r0.<androidx.core.graphics.PathParser$PathDataNode: float[] mParams>;

        $f1 = $r3[$i0];

        $f2 = 1.0F - $f0;

        $f1 = $f1 * $f2;

        $r3 = $r2.<androidx.core.graphics.PathParser$PathDataNode: float[] mParams>;

        $f2 = $r3[$i0];

        $f2 = $f2 * $f0;

        $f1 = $f1 + $f2;

        $r4[$i0] = $f1;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return;
    }
}
