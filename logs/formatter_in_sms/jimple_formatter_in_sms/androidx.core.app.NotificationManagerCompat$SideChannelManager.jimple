class androidx.core.app.NotificationManagerCompat$SideChannelManager extends java.lang.Object implements android.os.Handler$Callback, android.content.ServiceConnection
{
    private static final int MSG_QUEUE_TASK;
    private static final int MSG_RETRY_LISTENER_QUEUE;
    private static final int MSG_SERVICE_CONNECTED;
    private static final int MSG_SERVICE_DISCONNECTED;
    private java.util.Set mCachedEnabledPackages;
    private final android.content.Context mContext;
    private final android.os.Handler mHandler;
    private final android.os.HandlerThread mHandlerThread;
    private final java.util.Map mRecordMap;

    void <init>(android.content.Context)
    {
        androidx.core.app.NotificationManagerCompat$SideChannelManager $r0;
        android.content.Context $r1;
        android.os.Looper $r2;
        java.util.HashMap $r3;
        java.util.HashSet $r4;
        android.os.HandlerThread $r5;
        android.os.Handler $r6;

        $r0 := @this: androidx.core.app.NotificationManagerCompat$SideChannelManager;

        $r1 := @parameter0: android.content.Context;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        $r0.<androidx.core.app.NotificationManagerCompat$SideChannelManager: java.util.Map mRecordMap> = $r3;

        $r4 = new java.util.HashSet;

        specialinvoke $r4.<java.util.HashSet: void <init>()>();

        $r0.<androidx.core.app.NotificationManagerCompat$SideChannelManager: java.util.Set mCachedEnabledPackages> = $r4;

        $r0.<androidx.core.app.NotificationManagerCompat$SideChannelManager: android.content.Context mContext> = $r1;

        $r5 = new android.os.HandlerThread;

        specialinvoke $r5.<android.os.HandlerThread: void <init>(java.lang.String)>("NotificationManagerCompat");

        $r0.<androidx.core.app.NotificationManagerCompat$SideChannelManager: android.os.HandlerThread mHandlerThread> = $r5;

        $r5 = $r0.<androidx.core.app.NotificationManagerCompat$SideChannelManager: android.os.HandlerThread mHandlerThread>;

        virtualinvoke $r5.<android.os.HandlerThread: void start()>();

        $r6 = new android.os.Handler;

        $r5 = $r0.<androidx.core.app.NotificationManagerCompat$SideChannelManager: android.os.HandlerThread mHandlerThread>;

        $r2 = virtualinvoke $r5.<android.os.HandlerThread: android.os.Looper getLooper()>();

        specialinvoke $r6.<android.os.Handler: void <init>(android.os.Looper,android.os.Handler$Callback)>($r2, $r0);

        $r0.<androidx.core.app.NotificationManagerCompat$SideChannelManager: android.os.Handler mHandler> = $r6;

        return;
    }

    private boolean ensureServiceBound(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)
    {
        androidx.core.app.NotificationManagerCompat$SideChannelManager $r0;
        androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord $r1;
        boolean $z0;
        android.content.Intent $r2;
        android.content.ComponentName $r3;
        android.content.Context $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;

        $r0 := @this: androidx.core.app.NotificationManagerCompat$SideChannelManager;

        $r1 := @parameter0: androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord;

        $z0 = $r1.<androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: boolean bound>;

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>(java.lang.String)>("android.support.BIND_NOTIFICATION_SIDE_CHANNEL");

        $r3 = $r1.<androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: android.content.ComponentName componentName>;

        $r2 = virtualinvoke $r2.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r3);

        $r4 = $r0.<androidx.core.app.NotificationManagerCompat$SideChannelManager: android.content.Context mContext>;

        $z0 = virtualinvoke $r4.<android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>($r2, $r0, 33);

        $r1.<androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: boolean bound> = $z0;

        $z0 = $r1.<androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: boolean bound>;

        if $z0 == 0 goto label2;

        $r1.<androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: int retryCount> = 0;

        goto label3;

     label2:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to bind to listener ");

        $r3 = $r1.<androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: android.content.ComponentName componentName>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("NotifManCompat", $r6);

        $r4 = $r0.<androidx.core.app.NotificationManagerCompat$SideChannelManager: android.content.Context mContext>;

        virtualinvoke $r4.<android.content.Context: void unbindService(android.content.ServiceConnection)>($r0);

     label3:
        $z0 = $r1.<androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: boolean bound>;

        return $z0;
    }

    private void ensureServiceUnbound(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)
    {
        androidx.core.app.NotificationManagerCompat$SideChannelManager $r0;
        androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord $r1;
        boolean $z0;
        android.content.Context $r2;

        $r0 := @this: androidx.core.app.NotificationManagerCompat$SideChannelManager;

        $r1 := @parameter0: androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord;

        $z0 = $r1.<androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: boolean bound>;

        if $z0 == 0 goto label1;

        $r2 = $r0.<androidx.core.app.NotificationManagerCompat$SideChannelManager: android.content.Context mContext>;

        virtualinvoke $r2.<android.content.Context: void unbindService(android.content.ServiceConnection)>($r0);

        $r1.<androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: boolean bound> = 0;

     label1:
        $r1.<androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: androidx.core.app.INotificationSideChannel service> = null;

        return;
    }

    private void handleQueueTask(androidx.core.app.NotificationManagerCompat$Task)
    {
        androidx.core.app.NotificationManagerCompat$SideChannelManager $r0;
        androidx.core.app.NotificationManagerCompat$Task $r1;
        java.util.ArrayDeque $r2;
        java.util.Map $r3;
        java.util.Collection $r4;
        java.util.Iterator $r5;
        boolean $z0;
        java.lang.Object $r6;
        androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord $r7;

        $r0 := @this: androidx.core.app.NotificationManagerCompat$SideChannelManager;

        $r1 := @parameter0: androidx.core.app.NotificationManagerCompat$Task;

        specialinvoke $r0.<androidx.core.app.NotificationManagerCompat$SideChannelManager: void updateListenerMap()>();

        $r3 = $r0.<androidx.core.app.NotificationManagerCompat$SideChannelManager: java.util.Map mRecordMap>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Collection values()>();

        $r5 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) $r6;

        $r2 = $r7.<androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: java.util.ArrayDeque taskQueue>;

        virtualinvoke $r2.<java.util.ArrayDeque: boolean add(java.lang.Object)>($r1);

        specialinvoke $r0.<androidx.core.app.NotificationManagerCompat$SideChannelManager: void processListenerQueue(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)>($r7);

        goto label1;

     label2:
        return;
    }

    private void handleRetryListenerQueue(android.content.ComponentName)
    {
        androidx.core.app.NotificationManagerCompat$SideChannelManager $r0;
        android.content.ComponentName $r1;
        java.lang.Object $r2;
        java.util.Map $r3;
        androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord $r4;

        $r0 := @this: androidx.core.app.NotificationManagerCompat$SideChannelManager;

        $r1 := @parameter0: android.content.ComponentName;

        $r3 = $r0.<androidx.core.app.NotificationManagerCompat$SideChannelManager: java.util.Map mRecordMap>;

        $r2 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) $r2;

        if $r4 == null goto label1;

        specialinvoke $r0.<androidx.core.app.NotificationManagerCompat$SideChannelManager: void processListenerQueue(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)>($r4);

     label1:
        return;
    }

    private void handleServiceConnected(android.content.ComponentName, android.os.IBinder)
    {
        androidx.core.app.NotificationManagerCompat$SideChannelManager $r0;
        android.content.ComponentName $r1;
        android.os.IBinder $r2;
        java.util.Map $r3;
        java.lang.Object $r4;
        androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord $r5;
        androidx.core.app.INotificationSideChannel $r6;

        $r0 := @this: androidx.core.app.NotificationManagerCompat$SideChannelManager;

        $r1 := @parameter0: android.content.ComponentName;

        $r2 := @parameter1: android.os.IBinder;

        $r3 = $r0.<androidx.core.app.NotificationManagerCompat$SideChannelManager: java.util.Map mRecordMap>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r5 = (androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) $r4;

        if $r5 == null goto label1;

        $r6 = staticinvoke <androidx.core.app.INotificationSideChannel$Stub: androidx.core.app.INotificationSideChannel asInterface(android.os.IBinder)>($r2);

        $r5.<androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: androidx.core.app.INotificationSideChannel service> = $r6;

        $r5.<androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: int retryCount> = 0;

        specialinvoke $r0.<androidx.core.app.NotificationManagerCompat$SideChannelManager: void processListenerQueue(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)>($r5);

     label1:
        return;
    }

    private void handleServiceDisconnected(android.content.ComponentName)
    {
        androidx.core.app.NotificationManagerCompat$SideChannelManager $r0;
        android.content.ComponentName $r1;
        java.lang.Object $r2;
        java.util.Map $r3;
        androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord $r4;

        $r0 := @this: androidx.core.app.NotificationManagerCompat$SideChannelManager;

        $r1 := @parameter0: android.content.ComponentName;

        $r3 = $r0.<androidx.core.app.NotificationManagerCompat$SideChannelManager: java.util.Map mRecordMap>;

        $r2 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) $r2;

        if $r4 == null goto label1;

        specialinvoke $r0.<androidx.core.app.NotificationManagerCompat$SideChannelManager: void ensureServiceUnbound(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)>($r4);

     label1:
        return;
    }

    private void processListenerQueue(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)
    {
        androidx.core.app.NotificationManagerCompat$SideChannelManager $r0;
        androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord $r1;
        boolean $z0;
        java.lang.StringBuilder $r2;
        android.content.ComponentName $r3;
        java.util.ArrayDeque $r4;
        int $i0;
        java.lang.String $r5;
        androidx.core.app.INotificationSideChannel $r6;
        java.lang.Object $r7;
        androidx.core.app.NotificationManagerCompat$Task $r8;
        java.lang.Throwable $r9, $r10;

        $r0 := @this: androidx.core.app.NotificationManagerCompat$SideChannelManager;

        $r1 := @parameter0: androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("NotifManCompat", 3);

        if $z0 == 0 goto label01;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Processing component ");

        $r3 = $r1.<androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: android.content.ComponentName componentName>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r4 = $r1.<androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: java.util.ArrayDeque taskQueue>;

        $i0 = virtualinvoke $r4.<java.util.ArrayDeque: int size()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" queued tasks");

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("NotifManCompat", $r5);

     label01:
        $r4 = $r1.<androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: java.util.ArrayDeque taskQueue>;

        $z0 = virtualinvoke $r4.<java.util.ArrayDeque: boolean isEmpty()>();

        if $z0 == 0 goto label02;

        return;

     label02:
        $z0 = specialinvoke $r0.<androidx.core.app.NotificationManagerCompat$SideChannelManager: boolean ensureServiceBound(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)>($r1);

        if $z0 == 0 goto label17;

        $r6 = $r1.<androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: androidx.core.app.INotificationSideChannel service>;

        if $r6 != null goto label03;

        goto label17;

     label03:
        $r4 = $r1.<androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: java.util.ArrayDeque taskQueue>;

        $r7 = virtualinvoke $r4.<java.util.ArrayDeque: java.lang.Object peek()>();

        $r8 = (androidx.core.app.NotificationManagerCompat$Task) $r7;

        if $r8 != null goto label04;

        goto label16;

     label04:
        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("NotifManCompat", 3);

     label05:
        if $z0 == 0 goto label07;

        $r2 = new java.lang.StringBuilder;

     label06:
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sending task ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("NotifManCompat", $r5);

     label07:
        $r6 = $r1.<androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: androidx.core.app.INotificationSideChannel service>;

     label08:
        interfaceinvoke $r8.<androidx.core.app.NotificationManagerCompat$Task: void send(androidx.core.app.INotificationSideChannel)>($r6);

     label09:
        $r4 = $r1.<androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: java.util.ArrayDeque taskQueue>;

     label10:
        virtualinvoke $r4.<java.util.ArrayDeque: java.lang.Object remove()>();

     label11:
        goto label03;

     label12:
        $r9 := @caughtexception;

        goto label14;

     label13:
        $r10 := @caughtexception;

        goto label15;

     label14:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RemoteException communicating with ");

        $r3 = $r1.<androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: android.content.ComponentName componentName>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("NotifManCompat", $r5, $r9);

        goto label16;

     label15:
        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("NotifManCompat", 3);

        if $z0 == 0 goto label16;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Remote service has died: ");

        $r3 = $r1.<androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: android.content.ComponentName componentName>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("NotifManCompat", $r5);

     label16:
        $r4 = $r1.<androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: java.util.ArrayDeque taskQueue>;

        $z0 = virtualinvoke $r4.<java.util.ArrayDeque: boolean isEmpty()>();

        if $z0 != 0 goto label18;

        specialinvoke $r0.<androidx.core.app.NotificationManagerCompat$SideChannelManager: void scheduleListenerRetry(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)>($r1);

        return;

     label17:
        specialinvoke $r0.<androidx.core.app.NotificationManagerCompat$SideChannelManager: void scheduleListenerRetry(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)>($r1);

     label18:
        return;

        catch android.os.DeadObjectException from label04 to label05 with label13;
        catch android.os.DeadObjectException from label06 to label07 with label13;
        catch android.os.DeadObjectException from label08 to label09 with label13;
        catch android.os.DeadObjectException from label10 to label11 with label13;
        catch android.os.RemoteException from label04 to label05 with label12;
        catch android.os.RemoteException from label06 to label07 with label12;
        catch android.os.RemoteException from label08 to label09 with label12;
        catch android.os.RemoteException from label10 to label11 with label12;
    }

    private void scheduleListenerRetry(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)
    {
        androidx.core.app.NotificationManagerCompat$SideChannelManager $r0;
        androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord $r1;
        android.os.Handler $r2;
        android.content.ComponentName $r3;
        boolean $z0;
        int $i0;
        java.lang.StringBuilder $r4;
        java.util.ArrayDeque $r5;
        java.lang.String $r6;
        android.os.Message $r7;
        long $l1;

        $r0 := @this: androidx.core.app.NotificationManagerCompat$SideChannelManager;

        $r1 := @parameter0: androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord;

        $r2 = $r0.<androidx.core.app.NotificationManagerCompat$SideChannelManager: android.os.Handler mHandler>;

        $r3 = $r1.<androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: android.content.ComponentName componentName>;

        $z0 = virtualinvoke $r2.<android.os.Handler: boolean hasMessages(int,java.lang.Object)>(3, $r3);

        if $z0 == 0 goto label1;

        return;

     label1:
        $i0 = $r1.<androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: int retryCount>;

        $i0 = $i0 + 1;

        $r1.<androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: int retryCount> = $i0;

        $i0 = $r1.<androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: int retryCount>;

        if $i0 <= 6 goto label2;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Giving up on delivering ");

        $r5 = $r1.<androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: java.util.ArrayDeque taskQueue>;

        $i0 = virtualinvoke $r5.<java.util.ArrayDeque: int size()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" tasks to ");

        $r3 = $r1.<androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: android.content.ComponentName componentName>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" after ");

        $i0 = $r1.<androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: int retryCount>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" retries");

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("NotifManCompat", $r6);

        $r5 = $r1.<androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: java.util.ArrayDeque taskQueue>;

        virtualinvoke $r5.<java.util.ArrayDeque: void clear()>();

        return;

     label2:
        $i0 = $r1.<androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: int retryCount>;

        $i0 = $i0 - 1;

        $i0 = 1 << $i0;

        $i0 = $i0 * 1000;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("NotifManCompat", 3);

        if $z0 == 0 goto label3;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Scheduling retry for ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ms");

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("NotifManCompat", $r6);

     label3:
        $r2 = $r0.<androidx.core.app.NotificationManagerCompat$SideChannelManager: android.os.Handler mHandler>;

        $r3 = $r1.<androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: android.content.ComponentName componentName>;

        $r7 = virtualinvoke $r2.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(3, $r3);

        $r2 = $r0.<androidx.core.app.NotificationManagerCompat$SideChannelManager: android.os.Handler mHandler>;

        $l1 = (long) $i0;

        virtualinvoke $r2.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>($r7, $l1);

        return;
    }

    private void updateListenerMap()
    {
        androidx.core.app.NotificationManagerCompat$SideChannelManager $r0;
        android.content.Context $r1;
        java.util.Set $r2, $r3;
        boolean $z0;
        android.content.pm.PackageManager $r4;
        android.content.Intent $r5;
        java.util.List $r6;
        java.util.HashSet $r7;
        java.util.Iterator $r8;
        java.lang.Object $r9;
        android.content.pm.ResolveInfo $r10;
        android.content.pm.ServiceInfo $r11;
        java.lang.String $r12, $r14;
        android.content.ComponentName $r13;
        java.lang.StringBuilder $r15;
        java.util.Map $r16;
        androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord $r17;
        java.util.Map$Entry $r18;

        $r0 := @this: androidx.core.app.NotificationManagerCompat$SideChannelManager;

        $r1 = $r0.<androidx.core.app.NotificationManagerCompat$SideChannelManager: android.content.Context mContext>;

        $r2 = staticinvoke <androidx.core.app.NotificationManagerCompat: java.util.Set getEnabledListenerPackages(android.content.Context)>($r1);

        $r3 = $r0.<androidx.core.app.NotificationManagerCompat$SideChannelManager: java.util.Set mCachedEnabledPackages>;

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label01;

        return;

     label01:
        $r0.<androidx.core.app.NotificationManagerCompat$SideChannelManager: java.util.Set mCachedEnabledPackages> = $r2;

        $r1 = $r0.<androidx.core.app.NotificationManagerCompat$SideChannelManager: android.content.Context mContext>;

        $r4 = virtualinvoke $r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r5 = new android.content.Intent;

        specialinvoke $r5.<android.content.Intent: void <init>()>();

        $r5 = virtualinvoke $r5.<android.content.Intent: android.content.Intent setAction(java.lang.String)>("android.support.BIND_NOTIFICATION_SIDE_CHANNEL");

        $r6 = virtualinvoke $r4.<android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)>($r5, 0);

        $r7 = new java.util.HashSet;

        specialinvoke $r7.<java.util.HashSet: void <init>()>();

        $r8 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label05;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (android.content.pm.ResolveInfo) $r9;

        $r11 = $r10.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r12 = $r11.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>($r12);

        if $z0 != 0 goto label03;

        goto label02;

     label03:
        $r13 = new android.content.ComponentName;

        $r11 = $r10.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r12 = $r11.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $r11 = $r10.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r14 = $r11.<android.content.pm.ServiceInfo: java.lang.String name>;

        specialinvoke $r13.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r12, $r14);

        $r11 = $r10.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r12 = $r11.<android.content.pm.ServiceInfo: java.lang.String permission>;

        if $r12 == null goto label04;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission present on component ");

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", not adding listener record.");

        $r12 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("NotifManCompat", $r12);

        goto label02;

     label04:
        interfaceinvoke $r7.<java.util.Set: boolean add(java.lang.Object)>($r13);

        goto label02;

     label05:
        $r8 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label06:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label08;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        $r13 = (android.content.ComponentName) $r9;

        $r16 = $r0.<androidx.core.app.NotificationManagerCompat$SideChannelManager: java.util.Map mRecordMap>;

        $z0 = interfaceinvoke $r16.<java.util.Map: boolean containsKey(java.lang.Object)>($r13);

        if $z0 != 0 goto label06;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("NotifManCompat", 3);

        if $z0 == 0 goto label07;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Adding listener record for ");

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r12 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("NotifManCompat", $r12);

     label07:
        $r16 = $r0.<androidx.core.app.NotificationManagerCompat$SideChannelManager: java.util.Map mRecordMap>;

        $r17 = new androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord;

        specialinvoke $r17.<androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: void <init>(android.content.ComponentName)>($r13);

        interfaceinvoke $r16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, $r17);

        goto label06;

     label08:
        $r16 = $r0.<androidx.core.app.NotificationManagerCompat$SideChannelManager: java.util.Map mRecordMap>;

        $r2 = interfaceinvoke $r16.<java.util.Map: java.util.Set entrySet()>();

        $r8 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label09:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label11;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        $r18 = (java.util.Map$Entry) $r9;

        $r9 = interfaceinvoke $r18.<java.util.Map$Entry: java.lang.Object getKey()>();

        $z0 = interfaceinvoke $r7.<java.util.Set: boolean contains(java.lang.Object)>($r9);

        if $z0 != 0 goto label09;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("NotifManCompat", 3);

        if $z0 == 0 goto label10;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing listener record for ");

        $r9 = interfaceinvoke $r18.<java.util.Map$Entry: java.lang.Object getKey()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r12 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("NotifManCompat", $r12);

     label10:
        $r9 = interfaceinvoke $r18.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r17 = (androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) $r9;

        specialinvoke $r0.<androidx.core.app.NotificationManagerCompat$SideChannelManager: void ensureServiceUnbound(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)>($r17);

        interfaceinvoke $r8.<java.util.Iterator: void remove()>();

        goto label09;

     label11:
        return;
    }

    public boolean handleMessage(android.os.Message)
    {
        androidx.core.app.NotificationManagerCompat$SideChannelManager $r0;
        android.os.Message $r1;
        android.os.IBinder $r2;
        int $i0;
        java.lang.Object $r3;
        android.content.ComponentName $r4;
        androidx.core.app.NotificationManagerCompat$ServiceConnectedEvent $r5;
        androidx.core.app.NotificationManagerCompat$Task $r6;

        $r0 := @this: androidx.core.app.NotificationManagerCompat$SideChannelManager;

        $r1 := @parameter0: android.os.Message;

        $i0 = $r1.<android.os.Message: int what>;

        if $i0 == 0 goto label4;

        if $i0 == 1 goto label3;

        if $i0 == 2 goto label2;

        if $i0 == 3 goto label1;

        return 0;

     label1:
        $r3 = $r1.<android.os.Message: java.lang.Object obj>;

        $r4 = (android.content.ComponentName) $r3;

        specialinvoke $r0.<androidx.core.app.NotificationManagerCompat$SideChannelManager: void handleRetryListenerQueue(android.content.ComponentName)>($r4);

        return 1;

     label2:
        $r3 = $r1.<android.os.Message: java.lang.Object obj>;

        $r4 = (android.content.ComponentName) $r3;

        specialinvoke $r0.<androidx.core.app.NotificationManagerCompat$SideChannelManager: void handleServiceDisconnected(android.content.ComponentName)>($r4);

        return 1;

     label3:
        $r3 = $r1.<android.os.Message: java.lang.Object obj>;

        $r5 = (androidx.core.app.NotificationManagerCompat$ServiceConnectedEvent) $r3;

        $r4 = $r5.<androidx.core.app.NotificationManagerCompat$ServiceConnectedEvent: android.content.ComponentName componentName>;

        $r2 = $r5.<androidx.core.app.NotificationManagerCompat$ServiceConnectedEvent: android.os.IBinder iBinder>;

        specialinvoke $r0.<androidx.core.app.NotificationManagerCompat$SideChannelManager: void handleServiceConnected(android.content.ComponentName,android.os.IBinder)>($r4, $r2);

        return 1;

     label4:
        $r3 = $r1.<android.os.Message: java.lang.Object obj>;

        $r6 = (androidx.core.app.NotificationManagerCompat$Task) $r3;

        specialinvoke $r0.<androidx.core.app.NotificationManagerCompat$SideChannelManager: void handleQueueTask(androidx.core.app.NotificationManagerCompat$Task)>($r6);

        return 1;
    }

    public void onServiceConnected(android.content.ComponentName, android.os.IBinder)
    {
        androidx.core.app.NotificationManagerCompat$SideChannelManager $r0;
        android.content.ComponentName $r1;
        android.os.IBinder $r2;
        boolean $z0;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        android.os.Handler $r5;
        androidx.core.app.NotificationManagerCompat$ServiceConnectedEvent $r6;
        android.os.Message $r7;

        $r0 := @this: androidx.core.app.NotificationManagerCompat$SideChannelManager;

        $r1 := @parameter0: android.content.ComponentName;

        $r2 := @parameter1: android.os.IBinder;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("NotifManCompat", 3);

        if $z0 == 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Connected to service ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("NotifManCompat", $r4);

     label1:
        $r5 = $r0.<androidx.core.app.NotificationManagerCompat$SideChannelManager: android.os.Handler mHandler>;

        $r6 = new androidx.core.app.NotificationManagerCompat$ServiceConnectedEvent;

        specialinvoke $r6.<androidx.core.app.NotificationManagerCompat$ServiceConnectedEvent: void <init>(android.content.ComponentName,android.os.IBinder)>($r1, $r2);

        $r7 = virtualinvoke $r5.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(1, $r6);

        virtualinvoke $r7.<android.os.Message: void sendToTarget()>();

        return;
    }

    public void onServiceDisconnected(android.content.ComponentName)
    {
        androidx.core.app.NotificationManagerCompat$SideChannelManager $r0;
        android.content.ComponentName $r1;
        boolean $z0;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        android.os.Handler $r4;
        android.os.Message $r5;

        $r0 := @this: androidx.core.app.NotificationManagerCompat$SideChannelManager;

        $r1 := @parameter0: android.content.ComponentName;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("NotifManCompat", 3);

        if $z0 == 0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Disconnected from service ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("NotifManCompat", $r3);

     label1:
        $r4 = $r0.<androidx.core.app.NotificationManagerCompat$SideChannelManager: android.os.Handler mHandler>;

        $r5 = virtualinvoke $r4.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(2, $r1);

        virtualinvoke $r5.<android.os.Message: void sendToTarget()>();

        return;
    }

    public void queueTask(androidx.core.app.NotificationManagerCompat$Task)
    {
        androidx.core.app.NotificationManagerCompat$SideChannelManager $r0;
        androidx.core.app.NotificationManagerCompat$Task $r1;
        android.os.Message $r2;
        android.os.Handler $r3;

        $r0 := @this: androidx.core.app.NotificationManagerCompat$SideChannelManager;

        $r1 := @parameter0: androidx.core.app.NotificationManagerCompat$Task;

        $r3 = $r0.<androidx.core.app.NotificationManagerCompat$SideChannelManager: android.os.Handler mHandler>;

        $r2 = virtualinvoke $r3.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(0, $r1);

        virtualinvoke $r2.<android.os.Message: void sendToTarget()>();

        return;
    }

    public static void <clinit>()
    {
        <androidx.core.app.NotificationManagerCompat$SideChannelManager: int MSG_SERVICE_DISCONNECTED> = 2;

        <androidx.core.app.NotificationManagerCompat$SideChannelManager: int MSG_SERVICE_CONNECTED> = 1;

        <androidx.core.app.NotificationManagerCompat$SideChannelManager: int MSG_RETRY_LISTENER_QUEUE> = 3;

        <androidx.core.app.NotificationManagerCompat$SideChannelManager: int MSG_QUEUE_TASK> = 0;

        return;
    }
}
