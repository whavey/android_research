public class androidx.constraintlayout.solver.widgets.ConstraintTableLayout extends androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer
{
    public static final int ALIGN_CENTER;
    private static final int ALIGN_FULL;
    public static final int ALIGN_LEFT;
    public static final int ALIGN_RIGHT;
    private java.util.ArrayList mHorizontalGuidelines;
    private java.util.ArrayList mHorizontalSlices;
    private int mNumCols;
    private int mNumRows;
    private int mPadding;
    private boolean mVerticalGrowth;
    private java.util.ArrayList mVerticalGuidelines;
    private java.util.ArrayList mVerticalSlices;
    private androidx.constraintlayout.solver.LinearSystem system;

    public void <init>()
    {
        androidx.constraintlayout.solver.widgets.ConstraintTableLayout $r0;
        java.util.ArrayList $r1;

        $r0 := @this: androidx.constraintlayout.solver.widgets.ConstraintTableLayout;

        specialinvoke $r0.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void <init>()>();

        $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: boolean mVerticalGrowth> = 1;

        $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: int mNumCols> = 0;

        $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: int mNumRows> = 0;

        $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: int mPadding> = 8;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: java.util.ArrayList mVerticalSlices> = $r1;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: java.util.ArrayList mHorizontalSlices> = $r1;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: java.util.ArrayList mVerticalGuidelines> = $r1;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: java.util.ArrayList mHorizontalGuidelines> = $r1;

        $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: androidx.constraintlayout.solver.LinearSystem system> = null;

        return;
    }

    public void <init>(int, int)
    {
        androidx.constraintlayout.solver.widgets.ConstraintTableLayout $r0;
        int $i0, $i1;
        java.util.ArrayList $r1;

        $r0 := @this: androidx.constraintlayout.solver.widgets.ConstraintTableLayout;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        specialinvoke $r0.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void <init>(int,int)>($i0, $i1);

        $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: boolean mVerticalGrowth> = 1;

        $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: int mNumCols> = 0;

        $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: int mNumRows> = 0;

        $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: int mPadding> = 8;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: java.util.ArrayList mVerticalSlices> = $r1;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: java.util.ArrayList mHorizontalSlices> = $r1;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: java.util.ArrayList mVerticalGuidelines> = $r1;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: java.util.ArrayList mHorizontalGuidelines> = $r1;

        $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: androidx.constraintlayout.solver.LinearSystem system> = null;

        return;
    }

    public void <init>(int, int, int, int)
    {
        androidx.constraintlayout.solver.widgets.ConstraintTableLayout $r0;
        int $i0, $i1, $i2, $i3;
        java.util.ArrayList $r1;

        $r0 := @this: androidx.constraintlayout.solver.widgets.ConstraintTableLayout;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        specialinvoke $r0.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void <init>(int,int,int,int)>($i0, $i1, $i2, $i3);

        $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: boolean mVerticalGrowth> = 1;

        $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: int mNumCols> = 0;

        $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: int mNumRows> = 0;

        $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: int mPadding> = 8;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: java.util.ArrayList mVerticalSlices> = $r1;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: java.util.ArrayList mHorizontalSlices> = $r1;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: java.util.ArrayList mVerticalGuidelines> = $r1;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: java.util.ArrayList mHorizontalGuidelines> = $r1;

        $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: androidx.constraintlayout.solver.LinearSystem system> = null;

        return;
    }

    private void setChildrenConnections()
    {
        androidx.constraintlayout.solver.widgets.ConstraintTableLayout $r0;
        int $i0, $i1, $i2, $i3, $i4;
        androidx.constraintlayout.solver.widgets.ConstraintWidget $r1, $r2, $r3, $r4, $r7;
        java.util.ArrayList $r5;
        java.lang.Object $r6;
        androidx.constraintlayout.solver.widgets.ConstraintTableLayout$HorizontalSlice $r8;
        androidx.constraintlayout.solver.widgets.ConstraintTableLayout$VerticalSlice $r9;
        androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type $r10;
        androidx.constraintlayout.solver.widgets.ConstraintAnchor $r11, $r12;
        boolean $z0;
        androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour $r13;
        androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength $r14;

        $r0 := @this: androidx.constraintlayout.solver.widgets.ConstraintTableLayout;

        $r5 = $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: java.util.ArrayList mChildren>;

        $i1 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        $i2 = 0;

        $i3 = 0;

     label01:
        if $i3 >= $i1 goto label10;

        $r5 = $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: java.util.ArrayList mChildren>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>($i3);

        $r7 = (androidx.constraintlayout.solver.widgets.ConstraintWidget) $r6;

        $i0 = virtualinvoke $r7.<androidx.constraintlayout.solver.widgets.ConstraintWidget: int getContainerItemSkip()>();

        $i2 = $i2 + $i0;

        $i4 = $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: int mNumCols>;

        $i0 = $i2 % $i4;

        $i4 = $i2 / $i4;

        $r5 = $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: java.util.ArrayList mHorizontalSlices>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>($i4);

        $r8 = (androidx.constraintlayout.solver.widgets.ConstraintTableLayout$HorizontalSlice) $r6;

        $r5 = $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: java.util.ArrayList mVerticalSlices>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r9 = (androidx.constraintlayout.solver.widgets.ConstraintTableLayout$VerticalSlice) $r6;

        $r1 = $r9.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout$VerticalSlice: androidx.constraintlayout.solver.widgets.ConstraintWidget left>;

        $r2 = $r9.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout$VerticalSlice: androidx.constraintlayout.solver.widgets.ConstraintWidget right>;

        $r3 = $r8.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout$HorizontalSlice: androidx.constraintlayout.solver.widgets.ConstraintWidget top>;

        $r4 = $r8.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout$HorizontalSlice: androidx.constraintlayout.solver.widgets.ConstraintWidget bottom>;

        $r10 = <androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type LEFT>;

        $r11 = virtualinvoke $r7.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor getAnchor(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type)>($r10);

        $r10 = <androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type LEFT>;

        $r12 = virtualinvoke $r1.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor getAnchor(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type)>($r10);

        $i0 = $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: int mPadding>;

        virtualinvoke $r11.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: boolean connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int)>($r12, $i0);

        $z0 = $r2 instanceof androidx.constraintlayout.solver.widgets.Guideline;

        if $z0 == 0 goto label02;

        $r10 = <androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type RIGHT>;

        $r11 = virtualinvoke $r7.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor getAnchor(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type)>($r10);

        $r10 = <androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type LEFT>;

        $r12 = virtualinvoke $r2.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor getAnchor(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type)>($r10);

        $i0 = $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: int mPadding>;

        virtualinvoke $r11.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: boolean connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int)>($r12, $i0);

        goto label03;

     label02:
        $r10 = <androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type RIGHT>;

        $r11 = virtualinvoke $r7.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor getAnchor(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type)>($r10);

        $r10 = <androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type RIGHT>;

        $r12 = virtualinvoke $r2.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor getAnchor(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type)>($r10);

        $i0 = $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: int mPadding>;

        virtualinvoke $r11.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: boolean connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int)>($r12, $i0);

     label03:
        $i0 = $r9.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout$VerticalSlice: int alignment>;

        if $i0 == 1 goto label06;

        if $i0 == 2 goto label05;

        if $i0 == 3 goto label04;

        goto label07;

     label04:
        $r13 = <androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour MATCH_CONSTRAINT>;

        virtualinvoke $r7.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void setHorizontalDimensionBehaviour(androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour)>($r13);

        goto label07;

     label05:
        $r10 = <androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type LEFT>;

        $r11 = virtualinvoke $r7.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor getAnchor(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type)>($r10);

        $r14 = <androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength WEAK>;

        virtualinvoke $r11.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: void setStrength(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength)>($r14);

        $r10 = <androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type RIGHT>;

        $r11 = virtualinvoke $r7.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor getAnchor(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type)>($r10);

        $r14 = <androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength STRONG>;

        virtualinvoke $r11.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: void setStrength(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength)>($r14);

        goto label07;

     label06:
        $r10 = <androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type LEFT>;

        $r11 = virtualinvoke $r7.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor getAnchor(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type)>($r10);

        $r14 = <androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength STRONG>;

        virtualinvoke $r11.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: void setStrength(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength)>($r14);

        $r10 = <androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type RIGHT>;

        $r11 = virtualinvoke $r7.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor getAnchor(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type)>($r10);

        $r14 = <androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength WEAK>;

        virtualinvoke $r11.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: void setStrength(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength)>($r14);

     label07:
        $r10 = <androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type TOP>;

        $r11 = virtualinvoke $r7.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor getAnchor(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type)>($r10);

        $r10 = <androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type TOP>;

        $r12 = virtualinvoke $r3.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor getAnchor(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type)>($r10);

        $i0 = $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: int mPadding>;

        virtualinvoke $r11.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: boolean connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int)>($r12, $i0);

        $z0 = $r4 instanceof androidx.constraintlayout.solver.widgets.Guideline;

        if $z0 == 0 goto label08;

        $r10 = <androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type BOTTOM>;

        $r11 = virtualinvoke $r7.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor getAnchor(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type)>($r10);

        $r10 = <androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type TOP>;

        $r12 = virtualinvoke $r4.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor getAnchor(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type)>($r10);

        $i0 = $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: int mPadding>;

        virtualinvoke $r11.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: boolean connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int)>($r12, $i0);

        goto label09;

     label08:
        $r10 = <androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type BOTTOM>;

        $r11 = virtualinvoke $r7.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor getAnchor(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type)>($r10);

        $r10 = <androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type BOTTOM>;

        $r12 = virtualinvoke $r4.<androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor getAnchor(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type)>($r10);

        $i0 = $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: int mPadding>;

        virtualinvoke $r11.<androidx.constraintlayout.solver.widgets.ConstraintAnchor: boolean connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int)>($r12, $i0);

     label09:
        $i2 = $i2 + 1;

        $i3 = $i3 + 1;

        goto label01;

     label10:
        return;
    }

    private void setHorizontalSlices()
    {
        androidx.constraintlayout.solver.widgets.ConstraintTableLayout $r0;
        java.util.ArrayList $r1;
        int $i0, $i1;
        float $f0, $f1;
        androidx.constraintlayout.solver.widgets.ConstraintWidget $r2;
        androidx.constraintlayout.solver.widgets.ConstraintTableLayout$HorizontalSlice $r3;
        androidx.constraintlayout.solver.widgets.Guideline $r4;

        $r0 := @this: androidx.constraintlayout.solver.widgets.ConstraintTableLayout;

        $r1 = $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: java.util.ArrayList mHorizontalSlices>;

        virtualinvoke $r1.<java.util.ArrayList: void clear()>();

        $i0 = $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: int mNumRows>;

        $f0 = (float) $i0;

        $f0 = 100.0F / $f0;

        $f1 = $f0;

        $r2 = $r0;

        $i0 = 0;

     label1:
        $i1 = $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: int mNumRows>;

        if $i0 >= $i1 goto label4;

        $r3 = new androidx.constraintlayout.solver.widgets.ConstraintTableLayout$HorizontalSlice;

        specialinvoke $r3.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout$HorizontalSlice: void <init>(androidx.constraintlayout.solver.widgets.ConstraintTableLayout)>($r0);

        $r3.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout$HorizontalSlice: androidx.constraintlayout.solver.widgets.ConstraintWidget top> = $r2;

        $i1 = $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: int mNumRows>;

        $i1 = $i1 + -1;

        if $i0 >= $i1 goto label2;

        $r4 = new androidx.constraintlayout.solver.widgets.Guideline;

        specialinvoke $r4.<androidx.constraintlayout.solver.widgets.Guideline: void <init>()>();

        virtualinvoke $r4.<androidx.constraintlayout.solver.widgets.Guideline: void setOrientation(int)>(0);

        virtualinvoke $r4.<androidx.constraintlayout.solver.widgets.Guideline: void setParent(androidx.constraintlayout.solver.widgets.ConstraintWidget)>($r0);

        $i1 = (int) $f1;

        virtualinvoke $r4.<androidx.constraintlayout.solver.widgets.Guideline: void setGuidePercent(int)>($i1);

        $f1 = $f1 + $f0;

        $r3.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout$HorizontalSlice: androidx.constraintlayout.solver.widgets.ConstraintWidget bottom> = $r4;

        $r1 = $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: java.util.ArrayList mHorizontalGuidelines>;

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        goto label3;

     label2:
        $r3.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout$HorizontalSlice: androidx.constraintlayout.solver.widgets.ConstraintWidget bottom> = $r0;

     label3:
        $r2 = $r3.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout$HorizontalSlice: androidx.constraintlayout.solver.widgets.ConstraintWidget bottom>;

        $r1 = $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: java.util.ArrayList mHorizontalSlices>;

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        $i0 = $i0 + 1;

        goto label1;

     label4:
        specialinvoke $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: void updateDebugSolverNames()>();

        return;
    }

    private void setVerticalSlices()
    {
        androidx.constraintlayout.solver.widgets.ConstraintTableLayout $r0;
        java.util.ArrayList $r1;
        androidx.constraintlayout.solver.widgets.ConstraintWidget $r2;
        int $i0, $i1;
        float $f0, $f1;
        androidx.constraintlayout.solver.widgets.ConstraintTableLayout$VerticalSlice $r3;
        androidx.constraintlayout.solver.widgets.Guideline $r4;

        $r0 := @this: androidx.constraintlayout.solver.widgets.ConstraintTableLayout;

        $r1 = $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: java.util.ArrayList mVerticalSlices>;

        virtualinvoke $r1.<java.util.ArrayList: void clear()>();

        $r2 = $r0;

        $i0 = $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: int mNumCols>;

        $f0 = (float) $i0;

        $f0 = 100.0F / $f0;

        $f1 = $f0;

        $i0 = 0;

     label1:
        $i1 = $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: int mNumCols>;

        if $i0 >= $i1 goto label4;

        $r3 = new androidx.constraintlayout.solver.widgets.ConstraintTableLayout$VerticalSlice;

        specialinvoke $r3.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout$VerticalSlice: void <init>(androidx.constraintlayout.solver.widgets.ConstraintTableLayout)>($r0);

        $r3.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout$VerticalSlice: androidx.constraintlayout.solver.widgets.ConstraintWidget left> = $r2;

        $i1 = $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: int mNumCols>;

        $i1 = $i1 - 1;

        if $i0 >= $i1 goto label2;

        $r4 = new androidx.constraintlayout.solver.widgets.Guideline;

        specialinvoke $r4.<androidx.constraintlayout.solver.widgets.Guideline: void <init>()>();

        virtualinvoke $r4.<androidx.constraintlayout.solver.widgets.Guideline: void setOrientation(int)>(1);

        virtualinvoke $r4.<androidx.constraintlayout.solver.widgets.Guideline: void setParent(androidx.constraintlayout.solver.widgets.ConstraintWidget)>($r0);

        $i1 = (int) $f1;

        virtualinvoke $r4.<androidx.constraintlayout.solver.widgets.Guideline: void setGuidePercent(int)>($i1);

        $f1 = $f1 + $f0;

        $r3.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout$VerticalSlice: androidx.constraintlayout.solver.widgets.ConstraintWidget right> = $r4;

        $r1 = $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: java.util.ArrayList mVerticalGuidelines>;

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        goto label3;

     label2:
        $r3.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout$VerticalSlice: androidx.constraintlayout.solver.widgets.ConstraintWidget right> = $r0;

     label3:
        $r2 = $r3.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout$VerticalSlice: androidx.constraintlayout.solver.widgets.ConstraintWidget right>;

        $r1 = $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: java.util.ArrayList mVerticalSlices>;

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        $i0 = $i0 + 1;

        goto label1;

     label4:
        specialinvoke $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: void updateDebugSolverNames()>();

        return;
    }

    private void updateDebugSolverNames()
    {
        androidx.constraintlayout.solver.widgets.ConstraintTableLayout $r0;
        androidx.constraintlayout.solver.LinearSystem $r1;
        java.util.ArrayList $r2;
        int $i0, $i1;
        java.lang.Object $r3;
        androidx.constraintlayout.solver.widgets.Guideline $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;

        $r0 := @this: androidx.constraintlayout.solver.widgets.ConstraintTableLayout;

        $r1 = $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: androidx.constraintlayout.solver.LinearSystem system>;

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: java.util.ArrayList mVerticalGuidelines>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label3;

        $r2 = $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: java.util.ArrayList mVerticalGuidelines>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r4 = (androidx.constraintlayout.solver.widgets.Guideline) $r3;

        $r1 = $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: androidx.constraintlayout.solver.LinearSystem system>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: java.lang.String getDebugName()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".VG");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<androidx.constraintlayout.solver.widgets.Guideline: void setDebugSolverName(androidx.constraintlayout.solver.LinearSystem,java.lang.String)>($r1, $r6);

        $i1 = $i1 + 1;

        goto label2;

     label3:
        $r2 = $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: java.util.ArrayList mHorizontalGuidelines>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        $i1 = 0;

     label4:
        if $i1 >= $i0 goto label5;

        $r2 = $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: java.util.ArrayList mHorizontalGuidelines>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r4 = (androidx.constraintlayout.solver.widgets.Guideline) $r3;

        $r1 = $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: androidx.constraintlayout.solver.LinearSystem system>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: java.lang.String getDebugName()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".HG");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<androidx.constraintlayout.solver.widgets.Guideline: void setDebugSolverName(androidx.constraintlayout.solver.LinearSystem,java.lang.String)>($r1, $r6);

        $i1 = $i1 + 1;

        goto label4;

     label5:
        return;
    }

    public void addToSolver(androidx.constraintlayout.solver.LinearSystem)
    {
        androidx.constraintlayout.solver.widgets.ConstraintTableLayout $r0;
        androidx.constraintlayout.solver.LinearSystem $r1, $r3;
        java.util.ArrayList $r2;
        int $i0, $i1, $i2;
        boolean $z0;
        java.lang.Object $r4;
        androidx.constraintlayout.solver.widgets.Guideline $r5;
        androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour $r6, $r7;
        androidx.constraintlayout.solver.widgets.ConstraintWidget $r8;

        $r0 := @this: androidx.constraintlayout.solver.widgets.ConstraintTableLayout;

        $r1 := @parameter0: androidx.constraintlayout.solver.LinearSystem;

        specialinvoke $r0.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void addToSolver(androidx.constraintlayout.solver.LinearSystem)>($r1);

        $r2 = $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: java.util.ArrayList mChildren>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if $i0 != 0 goto label01;

        return;

     label01:
        virtualinvoke $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: void setTableDimensions()>();

        $r3 = $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: androidx.constraintlayout.solver.LinearSystem mSystem>;

        if $r1 != $r3 goto label10;

        $r2 = $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: java.util.ArrayList mVerticalGuidelines>;

        $i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        $i2 = 0;

     label02:
        $z0 = 0;

        if $i2 >= $i1 goto label04;

        $r2 = $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: java.util.ArrayList mVerticalGuidelines>;

        $r4 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r5 = (androidx.constraintlayout.solver.widgets.Guideline) $r4;

        $r6 = virtualinvoke $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour getHorizontalDimensionBehaviour()>();

        $r7 = <androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour WRAP_CONTENT>;

        if $r6 != $r7 goto label03;

        $z0 = 1;

     label03:
        virtualinvoke $r5.<androidx.constraintlayout.solver.widgets.Guideline: void setPositionRelaxed(boolean)>($z0);

        virtualinvoke $r5.<androidx.constraintlayout.solver.widgets.Guideline: void addToSolver(androidx.constraintlayout.solver.LinearSystem)>($r1);

        $i2 = $i2 + 1;

        goto label02;

     label04:
        $r2 = $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: java.util.ArrayList mHorizontalGuidelines>;

        $i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        $i2 = 0;

     label05:
        if $i2 >= $i1 goto label08;

        $r2 = $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: java.util.ArrayList mHorizontalGuidelines>;

        $r4 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r5 = (androidx.constraintlayout.solver.widgets.Guideline) $r4;

        $r6 = virtualinvoke $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour getVerticalDimensionBehaviour()>();

        $r7 = <androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour WRAP_CONTENT>;

        if $r6 != $r7 goto label06;

        $z0 = 1;

        goto label07;

     label06:
        $z0 = 0;

     label07:
        virtualinvoke $r5.<androidx.constraintlayout.solver.widgets.Guideline: void setPositionRelaxed(boolean)>($z0);

        virtualinvoke $r5.<androidx.constraintlayout.solver.widgets.Guideline: void addToSolver(androidx.constraintlayout.solver.LinearSystem)>($r1);

        $i2 = $i2 + 1;

        goto label05;

     label08:
        $i1 = 0;

     label09:
        if $i1 >= $i0 goto label10;

        $r2 = $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: java.util.ArrayList mChildren>;

        $r4 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r8 = (androidx.constraintlayout.solver.widgets.ConstraintWidget) $r4;

        virtualinvoke $r8.<androidx.constraintlayout.solver.widgets.ConstraintWidget: void addToSolver(androidx.constraintlayout.solver.LinearSystem)>($r1);

        $i1 = $i1 + 1;

        goto label09;

     label10:
        return;
    }

    public void computeGuidelinesPercentPositions()
    {
        androidx.constraintlayout.solver.widgets.ConstraintTableLayout $r0;
        java.util.ArrayList $r1;
        int $i0, $i1;
        java.lang.Object $r2;
        androidx.constraintlayout.solver.widgets.Guideline $r3;

        $r0 := @this: androidx.constraintlayout.solver.widgets.ConstraintTableLayout;

        $r1 = $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: java.util.ArrayList mVerticalGuidelines>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r1 = $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: java.util.ArrayList mVerticalGuidelines>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r3 = (androidx.constraintlayout.solver.widgets.Guideline) $r2;

        virtualinvoke $r3.<androidx.constraintlayout.solver.widgets.Guideline: void inferRelativePercentPosition()>();

        $i1 = $i1 + 1;

        goto label1;

     label2:
        $r1 = $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: java.util.ArrayList mHorizontalGuidelines>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $i1 = 0;

     label3:
        if $i1 >= $i0 goto label4;

        $r1 = $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: java.util.ArrayList mHorizontalGuidelines>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r3 = (androidx.constraintlayout.solver.widgets.Guideline) $r2;

        virtualinvoke $r3.<androidx.constraintlayout.solver.widgets.Guideline: void inferRelativePercentPosition()>();

        $i1 = $i1 + 1;

        goto label3;

     label4:
        return;
    }

    public void cycleColumnAlignment(int)
    {
        androidx.constraintlayout.solver.widgets.ConstraintTableLayout $r0;
        int $i0;
        java.lang.Object $r1;
        java.util.ArrayList $r2;
        androidx.constraintlayout.solver.widgets.ConstraintTableLayout$VerticalSlice $r3;

        $r0 := @this: androidx.constraintlayout.solver.widgets.ConstraintTableLayout;

        $i0 := @parameter0: int;

        $r2 = $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: java.util.ArrayList mVerticalSlices>;

        $r1 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r3 = (androidx.constraintlayout.solver.widgets.ConstraintTableLayout$VerticalSlice) $r1;

        $i0 = $r3.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout$VerticalSlice: int alignment>;

        if $i0 == 0 goto label3;

        if $i0 == 1 goto label2;

        if $i0 == 2 goto label1;

        goto label4;

     label1:
        $r3.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout$VerticalSlice: int alignment> = 1;

        goto label4;

     label2:
        $r3.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout$VerticalSlice: int alignment> = 0;

        goto label4;

     label3:
        $r3.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout$VerticalSlice: int alignment> = 2;

     label4:
        specialinvoke $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: void setChildrenConnections()>();

        return;
    }

    public java.lang.String getColumnAlignmentRepresentation(int)
    {
        androidx.constraintlayout.solver.widgets.ConstraintTableLayout $r0;
        int $i0;
        java.lang.Object $r1;
        java.util.ArrayList $r2;
        androidx.constraintlayout.solver.widgets.ConstraintTableLayout$VerticalSlice $r3;

        $r0 := @this: androidx.constraintlayout.solver.widgets.ConstraintTableLayout;

        $i0 := @parameter0: int;

        $r2 = $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: java.util.ArrayList mVerticalSlices>;

        $r1 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r3 = (androidx.constraintlayout.solver.widgets.ConstraintTableLayout$VerticalSlice) $r1;

        $i0 = $r3.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout$VerticalSlice: int alignment>;

        if $i0 != 1 goto label1;

        return "L";

     label1:
        $i0 = $r3.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout$VerticalSlice: int alignment>;

        if $i0 != 0 goto label2;

        return "C";

     label2:
        $i0 = $r3.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout$VerticalSlice: int alignment>;

        if $i0 != 3 goto label3;

        return "F";

     label3:
        $i0 = $r3.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout$VerticalSlice: int alignment>;

        if $i0 != 2 goto label4;

        return "R";

     label4:
        return "!";
    }

    public java.lang.String getColumnsAlignmentRepresentation()
    {
        androidx.constraintlayout.solver.widgets.ConstraintTableLayout $r0;
        java.util.ArrayList $r1;
        int $i0, $i1, $i2;
        java.lang.String $r2;
        java.lang.Object $r3;
        androidx.constraintlayout.solver.widgets.ConstraintTableLayout$VerticalSlice $r4;
        java.lang.StringBuilder $r5;

        $r0 := @this: androidx.constraintlayout.solver.widgets.ConstraintTableLayout;

        $r1 = $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: java.util.ArrayList mVerticalSlices>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $r2 = "";

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label6;

        $r1 = $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: java.util.ArrayList mVerticalSlices>;

        $r3 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r4 = (androidx.constraintlayout.solver.widgets.ConstraintTableLayout$VerticalSlice) $r3;

        $i2 = $r4.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout$VerticalSlice: int alignment>;

        if $i2 != 1 goto label2;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("L");

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label5;

     label2:
        $i2 = $r4.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout$VerticalSlice: int alignment>;

        if $i2 != 0 goto label3;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("C");

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label5;

     label3:
        $i2 = $r4.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout$VerticalSlice: int alignment>;

        if $i2 != 3 goto label4;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("F");

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label5;

     label4:
        $i2 = $r4.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout$VerticalSlice: int alignment>;

        if $i2 != 2 goto label5;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("R");

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label5:
        $i1 = $i1 + 1;

        goto label1;

     label6:
        return $r2;
    }

    public java.util.ArrayList getHorizontalGuidelines()
    {
        androidx.constraintlayout.solver.widgets.ConstraintTableLayout $r0;
        java.util.ArrayList r1;

        $r0 := @this: androidx.constraintlayout.solver.widgets.ConstraintTableLayout;

        r1 = $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: java.util.ArrayList mHorizontalGuidelines>;

        return r1;
    }

    public int getNumCols()
    {
        androidx.constraintlayout.solver.widgets.ConstraintTableLayout $r0;
        int i0;

        $r0 := @this: androidx.constraintlayout.solver.widgets.ConstraintTableLayout;

        i0 = $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: int mNumCols>;

        return i0;
    }

    public int getNumRows()
    {
        androidx.constraintlayout.solver.widgets.ConstraintTableLayout $r0;
        int i0;

        $r0 := @this: androidx.constraintlayout.solver.widgets.ConstraintTableLayout;

        i0 = $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: int mNumRows>;

        return i0;
    }

    public int getPadding()
    {
        androidx.constraintlayout.solver.widgets.ConstraintTableLayout $r0;
        int i0;

        $r0 := @this: androidx.constraintlayout.solver.widgets.ConstraintTableLayout;

        i0 = $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: int mPadding>;

        return i0;
    }

    public java.lang.String getType()
    {
        androidx.constraintlayout.solver.widgets.ConstraintTableLayout $r0;

        $r0 := @this: androidx.constraintlayout.solver.widgets.ConstraintTableLayout;

        return "ConstraintTableLayout";
    }

    public java.util.ArrayList getVerticalGuidelines()
    {
        androidx.constraintlayout.solver.widgets.ConstraintTableLayout $r0;
        java.util.ArrayList r1;

        $r0 := @this: androidx.constraintlayout.solver.widgets.ConstraintTableLayout;

        r1 = $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: java.util.ArrayList mVerticalGuidelines>;

        return r1;
    }

    public boolean handlesInternalConstraints()
    {
        androidx.constraintlayout.solver.widgets.ConstraintTableLayout $r0;

        $r0 := @this: androidx.constraintlayout.solver.widgets.ConstraintTableLayout;

        return 1;
    }

    public boolean isVerticalGrowth()
    {
        androidx.constraintlayout.solver.widgets.ConstraintTableLayout $r0;
        boolean z0;

        $r0 := @this: androidx.constraintlayout.solver.widgets.ConstraintTableLayout;

        z0 = $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: boolean mVerticalGrowth>;

        return z0;
    }

    public void setColumnAlignment(int, int)
    {
        androidx.constraintlayout.solver.widgets.ConstraintTableLayout $r0;
        int $i0, $i1, $i2;
        java.util.ArrayList $r1;
        java.lang.Object $r2;
        androidx.constraintlayout.solver.widgets.ConstraintTableLayout$VerticalSlice $r3;

        $r0 := @this: androidx.constraintlayout.solver.widgets.ConstraintTableLayout;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: java.util.ArrayList mVerticalSlices>;

        $i2 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $i0 >= $i2 goto label1;

        $r1 = $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: java.util.ArrayList mVerticalSlices>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r3 = (androidx.constraintlayout.solver.widgets.ConstraintTableLayout$VerticalSlice) $r2;

        $r3.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout$VerticalSlice: int alignment> = $i1;

        specialinvoke $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: void setChildrenConnections()>();

     label1:
        return;
    }

    public void setColumnAlignment(java.lang.String)
    {
        androidx.constraintlayout.solver.widgets.ConstraintTableLayout $r0;
        java.lang.String $r1;
        int $i0, $i1;
        char $c2;

        $r0 := @this: androidx.constraintlayout.solver.widgets.ConstraintTableLayout;

        $r1 := @parameter0: java.lang.String;

        $i0 = 0;

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

     label1:
        if $i0 >= $i1 goto label7;

        $c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0);

        if $c2 != 76 goto label2;

        virtualinvoke $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: void setColumnAlignment(int,int)>($i0, 1);

        goto label6;

     label2:
        if $c2 != 67 goto label3;

        virtualinvoke $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: void setColumnAlignment(int,int)>($i0, 0);

        goto label6;

     label3:
        if $c2 != 70 goto label4;

        virtualinvoke $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: void setColumnAlignment(int,int)>($i0, 3);

        goto label6;

     label4:
        if $c2 != 82 goto label5;

        virtualinvoke $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: void setColumnAlignment(int,int)>($i0, 2);

        goto label6;

     label5:
        virtualinvoke $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: void setColumnAlignment(int,int)>($i0, 0);

     label6:
        $i0 = $i0 + 1;

        goto label1;

     label7:
        return;
    }

    public void setDebugSolverName(androidx.constraintlayout.solver.LinearSystem, java.lang.String)
    {
        androidx.constraintlayout.solver.widgets.ConstraintTableLayout $r0;
        androidx.constraintlayout.solver.LinearSystem $r1;
        java.lang.String $r2;

        $r0 := @this: androidx.constraintlayout.solver.widgets.ConstraintTableLayout;

        $r1 := @parameter0: androidx.constraintlayout.solver.LinearSystem;

        $r2 := @parameter1: java.lang.String;

        $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: androidx.constraintlayout.solver.LinearSystem system> = $r1;

        specialinvoke $r0.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void setDebugSolverName(androidx.constraintlayout.solver.LinearSystem,java.lang.String)>($r1, $r2);

        specialinvoke $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: void updateDebugSolverNames()>();

        return;
    }

    public void setNumCols(int)
    {
        androidx.constraintlayout.solver.widgets.ConstraintTableLayout $r0;
        int $i0, $i1;
        boolean $z0;

        $r0 := @this: androidx.constraintlayout.solver.widgets.ConstraintTableLayout;

        $i0 := @parameter0: int;

        $z0 = $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: boolean mVerticalGrowth>;

        if $z0 == 0 goto label1;

        $i1 = $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: int mNumCols>;

        if $i1 == $i0 goto label1;

        $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: int mNumCols> = $i0;

        specialinvoke $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: void setVerticalSlices()>();

        virtualinvoke $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: void setTableDimensions()>();

     label1:
        return;
    }

    public void setNumRows(int)
    {
        androidx.constraintlayout.solver.widgets.ConstraintTableLayout $r0;
        int $i0, $i1;
        boolean $z0;

        $r0 := @this: androidx.constraintlayout.solver.widgets.ConstraintTableLayout;

        $i0 := @parameter0: int;

        $z0 = $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: boolean mVerticalGrowth>;

        if $z0 != 0 goto label1;

        $i1 = $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: int mNumCols>;

        if $i1 == $i0 goto label1;

        $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: int mNumRows> = $i0;

        specialinvoke $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: void setHorizontalSlices()>();

        virtualinvoke $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: void setTableDimensions()>();

     label1:
        return;
    }

    public void setPadding(int)
    {
        androidx.constraintlayout.solver.widgets.ConstraintTableLayout $r0;
        int $i0;

        $r0 := @this: androidx.constraintlayout.solver.widgets.ConstraintTableLayout;

        $i0 := @parameter0: int;

        if $i0 <= 1 goto label1;

        $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: int mPadding> = $i0;

     label1:
        return;
    }

    public void setTableDimensions()
    {
        androidx.constraintlayout.solver.widgets.ConstraintTableLayout $r0;
        int $i0, $i1, $i2, $i3;
        java.util.ArrayList $r1;
        java.lang.Object $r2;
        androidx.constraintlayout.solver.widgets.ConstraintWidget $r3;
        boolean $z0;

        $r0 := @this: androidx.constraintlayout.solver.widgets.ConstraintTableLayout;

        $i0 = 0;

        $r1 = $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: java.util.ArrayList mChildren>;

        $i1 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $i2 = 0;

     label01:
        if $i2 >= $i1 goto label02;

        $r1 = $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: java.util.ArrayList mChildren>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r3 = (androidx.constraintlayout.solver.widgets.ConstraintWidget) $r2;

        $i3 = virtualinvoke $r3.<androidx.constraintlayout.solver.widgets.ConstraintWidget: int getContainerItemSkip()>();

        $i0 = $i0 + $i3;

        $i2 = $i2 + 1;

        goto label01;

     label02:
        $i0 = $i1 + $i0;

        $z0 = $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: boolean mVerticalGrowth>;

        if $z0 == 0 goto label06;

        $i1 = $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: int mNumCols>;

        if $i1 != 0 goto label03;

        virtualinvoke $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: void setNumCols(int)>(1);

     label03:
        $i2 = $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: int mNumCols>;

        $i1 = $i0 / $i2;

        $i2 = $i2 * $i1;

        if $i2 >= $i0 goto label04;

        $i1 = $i1 + 1;

     label04:
        $i0 = $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: int mNumRows>;

        if $i0 != $i1 goto label05;

        $r1 = $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: java.util.ArrayList mVerticalGuidelines>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $i2 = $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: int mNumCols>;

        $i2 = $i2 - 1;

        if $i0 != $i2 goto label05;

        return;

     label05:
        $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: int mNumRows> = $i1;

        specialinvoke $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: void setHorizontalSlices()>();

        goto label10;

     label06:
        $i1 = $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: int mNumRows>;

        if $i1 != 0 goto label07;

        virtualinvoke $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: void setNumRows(int)>(1);

     label07:
        $i2 = $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: int mNumRows>;

        $i1 = $i0 / $i2;

        $i2 = $i2 * $i1;

        if $i2 >= $i0 goto label08;

        $i1 = $i1 + 1;

     label08:
        $i0 = $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: int mNumCols>;

        if $i0 != $i1 goto label09;

        $r1 = $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: java.util.ArrayList mHorizontalGuidelines>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $i2 = $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: int mNumRows>;

        $i2 = $i2 - 1;

        if $i0 != $i2 goto label09;

        return;

     label09:
        $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: int mNumCols> = $i1;

        specialinvoke $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: void setVerticalSlices()>();

     label10:
        specialinvoke $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: void setChildrenConnections()>();

        return;
    }

    public void setVerticalGrowth(boolean)
    {
        androidx.constraintlayout.solver.widgets.ConstraintTableLayout $r0;
        boolean $z0;

        $r0 := @this: androidx.constraintlayout.solver.widgets.ConstraintTableLayout;

        $z0 := @parameter0: boolean;

        $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: boolean mVerticalGrowth> = $z0;

        return;
    }

    public void updateFromSolver(androidx.constraintlayout.solver.LinearSystem)
    {
        androidx.constraintlayout.solver.widgets.ConstraintTableLayout $r0;
        androidx.constraintlayout.solver.LinearSystem $r1, $r2;
        java.util.ArrayList $r3;
        int $i0, $i1;
        java.lang.Object $r4;
        androidx.constraintlayout.solver.widgets.Guideline $r5;

        $r0 := @this: androidx.constraintlayout.solver.widgets.ConstraintTableLayout;

        $r1 := @parameter0: androidx.constraintlayout.solver.LinearSystem;

        specialinvoke $r0.<androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void updateFromSolver(androidx.constraintlayout.solver.LinearSystem)>($r1);

        $r2 = $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: androidx.constraintlayout.solver.LinearSystem mSystem>;

        if $r1 != $r2 goto label4;

        $r3 = $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: java.util.ArrayList mVerticalGuidelines>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r3 = $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: java.util.ArrayList mVerticalGuidelines>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r5 = (androidx.constraintlayout.solver.widgets.Guideline) $r4;

        virtualinvoke $r5.<androidx.constraintlayout.solver.widgets.Guideline: void updateFromSolver(androidx.constraintlayout.solver.LinearSystem)>($r1);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        $r3 = $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: java.util.ArrayList mHorizontalGuidelines>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        $i1 = 0;

     label3:
        if $i1 >= $i0 goto label4;

        $r3 = $r0.<androidx.constraintlayout.solver.widgets.ConstraintTableLayout: java.util.ArrayList mHorizontalGuidelines>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r5 = (androidx.constraintlayout.solver.widgets.Guideline) $r4;

        virtualinvoke $r5.<androidx.constraintlayout.solver.widgets.Guideline: void updateFromSolver(androidx.constraintlayout.solver.LinearSystem)>($r1);

        $i1 = $i1 + 1;

        goto label3;

     label4:
        return;
    }

    public static void <clinit>()
    {
        <androidx.constraintlayout.solver.widgets.ConstraintTableLayout: int ALIGN_RIGHT> = 2;

        <androidx.constraintlayout.solver.widgets.ConstraintTableLayout: int ALIGN_LEFT> = 1;

        <androidx.constraintlayout.solver.widgets.ConstraintTableLayout: int ALIGN_FULL> = 3;

        <androidx.constraintlayout.solver.widgets.ConstraintTableLayout: int ALIGN_CENTER> = 0;

        return;
    }
}
