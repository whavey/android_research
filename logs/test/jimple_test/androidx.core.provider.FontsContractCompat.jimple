public class androidx.core.provider.FontsContractCompat extends java.lang.Object
{
    private static final int BACKGROUND_THREAD_KEEP_ALIVE_DURATION_MS;
    public static final java.lang.String PARCEL_FONT_RESULTS;
    static final int RESULT_CODE_PROVIDER_NOT_FOUND;
    static final int RESULT_CODE_WRONG_CERTIFICATES;
    private static final java.lang.String TAG;
    private static final androidx.core.provider.SelfDestructiveThread sBackgroundThread;
    private static final java.util.Comparator sByteArrayComparator;
    static final java.lang.Object sLock;
    static final androidx.collection.SimpleArrayMap sPendingReplies;
    static final androidx.collection.LruCache sTypefaceCache;

    static void <clinit>()
    {
        androidx.collection.LruCache $r0;
        androidx.core.provider.SelfDestructiveThread $r1;
        java.lang.Object $r2;
        androidx.collection.SimpleArrayMap $r3;
        androidx.core.provider.FontsContractCompat$5 $r4;

        <androidx.core.provider.FontsContractCompat: java.lang.String TAG> = "FontsContractCompat";

        <androidx.core.provider.FontsContractCompat: int RESULT_CODE_WRONG_CERTIFICATES> = -2;

        <androidx.core.provider.FontsContractCompat: int RESULT_CODE_PROVIDER_NOT_FOUND> = -1;

        <androidx.core.provider.FontsContractCompat: java.lang.String PARCEL_FONT_RESULTS> = "font_results";

        <androidx.core.provider.FontsContractCompat: int BACKGROUND_THREAD_KEEP_ALIVE_DURATION_MS> = 10000;

        $r0 = new androidx.collection.LruCache;

        specialinvoke $r0.<androidx.collection.LruCache: void <init>(int)>(16);

        <androidx.core.provider.FontsContractCompat: androidx.collection.LruCache sTypefaceCache> = $r0;

        $r1 = new androidx.core.provider.SelfDestructiveThread;

        specialinvoke $r1.<androidx.core.provider.SelfDestructiveThread: void <init>(java.lang.String,int,int)>("fonts", 10, 10000);

        <androidx.core.provider.FontsContractCompat: androidx.core.provider.SelfDestructiveThread sBackgroundThread> = $r1;

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        <androidx.core.provider.FontsContractCompat: java.lang.Object sLock> = $r2;

        $r3 = new androidx.collection.SimpleArrayMap;

        specialinvoke $r3.<androidx.collection.SimpleArrayMap: void <init>()>();

        <androidx.core.provider.FontsContractCompat: androidx.collection.SimpleArrayMap sPendingReplies> = $r3;

        $r4 = new androidx.core.provider.FontsContractCompat$5;

        specialinvoke $r4.<androidx.core.provider.FontsContractCompat$5: void <init>()>();

        <androidx.core.provider.FontsContractCompat: java.util.Comparator sByteArrayComparator> = $r4;

        return;
    }

    private void <init>()
    {
        androidx.core.provider.FontsContractCompat $r0;

        $r0 := @this: androidx.core.provider.FontsContractCompat;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static android.graphics.Typeface buildTypeface(android.content.Context, android.os.CancellationSignal, androidx.core.provider.FontsContractCompat$FontInfo[])
    {
        android.content.Context $r0;
        android.os.CancellationSignal $r1;
        androidx.core.provider.FontsContractCompat$FontInfo[] $r2;
        android.graphics.Typeface $r3;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.os.CancellationSignal;

        $r2 := @parameter2: androidx.core.provider.FontsContractCompat$FontInfo[];

        $r3 = staticinvoke <androidx.core.graphics.TypefaceCompat: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)>($r0, $r1, $r2, 0);

        return $r3;
    }

    private static java.util.List convertToByteArrayList(android.content.pm.Signature[])
    {
        android.content.pm.Signature[] $r0;
        java.util.ArrayList $r1;
        byte[] $r2;
        int $i0, $i1;
        android.content.pm.Signature $r3;

        $r0 := @parameter0: android.content.pm.Signature[];

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $i0 = 0;

     label1:
        $i1 = lengthof $r0;

        if $i0 >= $i1 goto label2;

        $r3 = $r0[$i0];

        $r2 = virtualinvoke $r3.<android.content.pm.Signature: byte[] toByteArray()>();

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r2);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return $r1;
    }

    private static boolean equalsByteArrayList(java.util.List, java.util.List)
    {
        java.util.List $r0, $r1;
        int $i0, $i1;
        java.lang.Object $r2;
        byte[] $r3, $r4;
        boolean $z0;

        $r0 := @parameter0: java.util.List;

        $r1 := @parameter1: java.util.List;

        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 == $i1 goto label1;

        return 0;

     label1:
        $i0 = 0;

     label2:
        $i1 = interfaceinvoke $r0.<java.util.List: int size()>();

        if $i0 >= $i1 goto label4;

        $r2 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>($i0);

        $r3 = (byte[]) $r2;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0);

        $r4 = (byte[]) $r2;

        $z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r3, $r4);

        if $z0 != 0 goto label3;

        return 0;

     label3:
        $i0 = $i0 + 1;

        goto label2;

     label4:
        return 1;
    }

    public static androidx.core.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context, android.os.CancellationSignal, androidx.core.provider.FontRequest) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.content.Context $r0;
        android.os.CancellationSignal $r1;
        androidx.core.provider.FontRequest $r2;
        android.content.pm.PackageManager $r3;
        android.content.res.Resources $r4;
        android.content.pm.ProviderInfo $r5;
        androidx.core.provider.FontsContractCompat$FontFamilyResult $r6;
        java.lang.String $r7;
        androidx.core.provider.FontsContractCompat$FontInfo[] $r8;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.os.CancellationSignal;

        $r2 := @parameter2: androidx.core.provider.FontRequest;

        $r3 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r4 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r5 = staticinvoke <androidx.core.provider.FontsContractCompat: android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources)>($r3, $r2, $r4);

        if $r5 != null goto label1;

        $r6 = new androidx.core.provider.FontsContractCompat$FontFamilyResult;

        specialinvoke $r6.<androidx.core.provider.FontsContractCompat$FontFamilyResult: void <init>(int,androidx.core.provider.FontsContractCompat$FontInfo[])>(1, null);

        return $r6;

     label1:
        $r7 = $r5.<android.content.pm.ProviderInfo: java.lang.String authority>;

        $r8 = staticinvoke <androidx.core.provider.FontsContractCompat: androidx.core.provider.FontsContractCompat$FontInfo[] getFontFromProvider(android.content.Context,androidx.core.provider.FontRequest,java.lang.String,android.os.CancellationSignal)>($r0, $r2, $r7, $r1);

        $r6 = new androidx.core.provider.FontsContractCompat$FontFamilyResult;

        specialinvoke $r6.<androidx.core.provider.FontsContractCompat$FontFamilyResult: void <init>(int,androidx.core.provider.FontsContractCompat$FontInfo[])>(0, $r8);

        return $r6;
    }

    private static java.util.List getCertificates(androidx.core.provider.FontRequest, android.content.res.Resources)
    {
        androidx.core.provider.FontRequest $r0;
        android.content.res.Resources $r1;
        java.util.List $r2;
        int $i0;

        $r0 := @parameter0: androidx.core.provider.FontRequest;

        $r1 := @parameter1: android.content.res.Resources;

        $r2 = virtualinvoke $r0.<androidx.core.provider.FontRequest: java.util.List getCertificates()>();

        if $r2 == null goto label1;

        $r2 = virtualinvoke $r0.<androidx.core.provider.FontRequest: java.util.List getCertificates()>();

        return $r2;

     label1:
        $i0 = virtualinvoke $r0.<androidx.core.provider.FontRequest: int getCertificatesArrayResId()>();

        $r2 = staticinvoke <androidx.core.content.res.FontResourcesParserCompat: java.util.List readCerts(android.content.res.Resources,int)>($r1, $i0);

        return $r2;
    }

    static androidx.core.provider.FontsContractCompat$FontInfo[] getFontFromProvider(android.content.Context, androidx.core.provider.FontRequest, java.lang.String, android.os.CancellationSignal)
    {
        android.content.Context $r0;
        androidx.core.provider.FontRequest $r1;
        java.lang.String $r2;
        android.os.CancellationSignal $r3;
        java.util.ArrayList $r4;
        android.net.Uri$Builder $r5;
        android.net.Uri $r6, $r7, $r13;
        android.database.Cursor $r8, $r12;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9, $i10;
        android.content.ContentResolver $r9;
        java.lang.String[] $r10, $r11;
        boolean $z0;
        long $l8;
        androidx.core.provider.FontsContractCompat$FontInfo $r14;
        java.lang.Throwable $r15;
        androidx.core.provider.FontsContractCompat$FontInfo[] $r16;
        java.lang.Object[] $r17;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: androidx.core.provider.FontRequest;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: android.os.CancellationSignal;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        $r5 = new android.net.Uri$Builder;

        specialinvoke $r5.<android.net.Uri$Builder: void <init>()>();

        $r5 = virtualinvoke $r5.<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>("content");

        $r5 = virtualinvoke $r5.<android.net.Uri$Builder: android.net.Uri$Builder authority(java.lang.String)>($r2);

        $r6 = virtualinvoke $r5.<android.net.Uri$Builder: android.net.Uri build()>();

        $r5 = new android.net.Uri$Builder;

        specialinvoke $r5.<android.net.Uri$Builder: void <init>()>();

        $r5 = virtualinvoke $r5.<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>("content");

        $r5 = virtualinvoke $r5.<android.net.Uri$Builder: android.net.Uri$Builder authority(java.lang.String)>($r2);

        $r5 = virtualinvoke $r5.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>("file");

        $r7 = virtualinvoke $r5.<android.net.Uri$Builder: android.net.Uri build()>();

        $r8 = null;

     label01:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

     label02:
        if $i0 <= 16 goto label06;

     label03:
        $r9 = virtualinvoke $r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r10 = newarray (java.lang.String)[7];

        $r10[0] = "_id";

        $r10[1] = "file_id";

        $r10[2] = "font_ttc_index";

        $r10[3] = "font_variation_settings";

        $r10[4] = "font_weight";

        $r10[5] = "font_italic";

        $r10[6] = "result_code";

        $r11 = newarray (java.lang.String)[1];

        $r2 = virtualinvoke $r1.<androidx.core.provider.FontRequest: java.lang.String getQuery()>();

        $r11[0] = $r2;

     label04:
        $r12 = virtualinvoke $r9.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>($r6, $r10, "query = ?", $r11, null, $r3);

     label05:
        $r8 = $r12;

        goto label08;

     label06:
        $r9 = virtualinvoke $r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r10 = newarray (java.lang.String)[7];

        $r10[0] = "_id";

        $r10[1] = "file_id";

        $r10[2] = "font_ttc_index";

        $r10[3] = "font_variation_settings";

        $r10[4] = "font_weight";

        $r10[5] = "font_italic";

        $r10[6] = "result_code";

        $r11 = newarray (java.lang.String)[1];

        $r2 = virtualinvoke $r1.<androidx.core.provider.FontRequest: java.lang.String getQuery()>();

        $r11[0] = $r2;

        $r12 = virtualinvoke $r9.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r6, $r10, "query = ?", $r11, null);

     label07:
        $r8 = $r12;

     label08:
        if $r8 == null goto label37;

     label09:
        $i0 = interfaceinvoke $r8.<android.database.Cursor: int getCount()>();

     label10:
        if $i0 <= 0 goto label37;

     label11:
        $i0 = interfaceinvoke $r8.<android.database.Cursor: int getColumnIndex(java.lang.String)>("result_code");

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

     label12:
        $i1 = interfaceinvoke $r8.<android.database.Cursor: int getColumnIndex(java.lang.String)>("_id");

        $i2 = interfaceinvoke $r8.<android.database.Cursor: int getColumnIndex(java.lang.String)>("file_id");

        $i3 = interfaceinvoke $r8.<android.database.Cursor: int getColumnIndex(java.lang.String)>("font_ttc_index");

        $i4 = interfaceinvoke $r8.<android.database.Cursor: int getColumnIndex(java.lang.String)>("font_weight");

        $i5 = interfaceinvoke $r8.<android.database.Cursor: int getColumnIndex(java.lang.String)>("font_italic");

     label13:
        $z0 = interfaceinvoke $r8.<android.database.Cursor: boolean moveToNext()>();

     label14:
        if $z0 == 0 goto label37;

        if $i0 == -1 goto label17;

     label15:
        $i6 = interfaceinvoke $r8.<android.database.Cursor: int getInt(int)>($i0);

     label16:
        goto label18;

     label17:
        $i6 = 0;

     label18:
        if $i3 == -1 goto label21;

     label19:
        $i7 = interfaceinvoke $r8.<android.database.Cursor: int getInt(int)>($i3);

     label20:
        goto label22;

     label21:
        $i7 = 0;

     label22:
        if $i2 != -1 goto label25;

     label23:
        $l8 = interfaceinvoke $r8.<android.database.Cursor: long getLong(int)>($i1);

        $r13 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($r6, $l8);

     label24:
        goto label26;

     label25:
        $l8 = interfaceinvoke $r8.<android.database.Cursor: long getLong(int)>($i2);

        $r13 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($r7, $l8);

     label26:
        if $i4 == -1 goto label29;

     label27:
        $i9 = interfaceinvoke $r8.<android.database.Cursor: int getInt(int)>($i4);

     label28:
        goto label30;

     label29:
        $i9 = 400;

     label30:
        if $i5 == -1 goto label33;

     label31:
        $i10 = interfaceinvoke $r8.<android.database.Cursor: int getInt(int)>($i5);

     label32:
        if $i10 != 1 goto label33;

        $z0 = 1;

        goto label34;

     label33:
        $z0 = 0;

     label34:
        $r14 = new androidx.core.provider.FontsContractCompat$FontInfo;

        specialinvoke $r14.<androidx.core.provider.FontsContractCompat$FontInfo: void <init>(android.net.Uri,int,int,boolean,int)>($r13, $i7, $i9, $z0, $i6);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r14);

     label35:
        goto label13;

     label36:
        $r15 := @caughtexception;

        goto label41;

     label37:
        if $r8 == null goto label38;

        interfaceinvoke $r8.<android.database.Cursor: void close()>();

     label38:
        $r16 = newarray (androidx.core.provider.FontsContractCompat$FontInfo)[0];

        $r17 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r16);

        $r16 = (androidx.core.provider.FontsContractCompat$FontInfo[]) $r17;

        return $r16;

     label39:
        $r15 := @caughtexception;

        goto label41;

     label40:
        $r15 := @caughtexception;

     label41:
        if $r8 == null goto label42;

        interfaceinvoke $r8.<android.database.Cursor: void close()>();

     label42:
        throw $r15;

        catch java.lang.Throwable from label01 to label02 with label40;
        catch java.lang.Throwable from label03 to label04 with label40;
        catch java.lang.Throwable from label04 to label05 with label39;
        catch java.lang.Throwable from label06 to label07 with label39;
        catch java.lang.Throwable from label09 to label10 with label39;
        catch java.lang.Throwable from label11 to label12 with label39;
        catch java.lang.Throwable from label12 to label14 with label36;
        catch java.lang.Throwable from label15 to label16 with label36;
        catch java.lang.Throwable from label19 to label20 with label36;
        catch java.lang.Throwable from label23 to label24 with label36;
        catch java.lang.Throwable from label25 to label26 with label36;
        catch java.lang.Throwable from label27 to label28 with label36;
        catch java.lang.Throwable from label31 to label32 with label36;
        catch java.lang.Throwable from label34 to label35 with label36;
    }

    static androidx.core.provider.FontsContractCompat$TypefaceResult getFontInternal(android.content.Context, androidx.core.provider.FontRequest, int)
    {
        android.content.Context $r0;
        androidx.core.provider.FontRequest $r1;
        int $i0, $i1;
        androidx.core.provider.FontsContractCompat$FontFamilyResult $r2;
        byte $b2;
        androidx.core.provider.FontsContractCompat$FontInfo[] $r3;
        android.graphics.Typeface $r4;
        androidx.core.provider.FontsContractCompat$TypefaceResult $r5;
        java.lang.Throwable $r6;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: androidx.core.provider.FontRequest;

        $i0 := @parameter2: int;

     label1:
        $r2 = staticinvoke <androidx.core.provider.FontsContractCompat: androidx.core.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontRequest)>($r0, null, $r1);

     label2:
        $i1 = virtualinvoke $r2.<androidx.core.provider.FontsContractCompat$FontFamilyResult: int getStatusCode()>();

        $b2 = -3;

        if $i1 != 0 goto label4;

        $r3 = virtualinvoke $r2.<androidx.core.provider.FontsContractCompat$FontFamilyResult: androidx.core.provider.FontsContractCompat$FontInfo[] getFonts()>();

        $r4 = staticinvoke <androidx.core.graphics.TypefaceCompat: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)>($r0, null, $r3, $i0);

        $r5 = new androidx.core.provider.FontsContractCompat$TypefaceResult;

        if $r4 == null goto label3;

        $b2 = 0;

     label3:
        specialinvoke $r5.<androidx.core.provider.FontsContractCompat$TypefaceResult: void <init>(android.graphics.Typeface,int)>($r4, $b2);

        return $r5;

     label4:
        $i0 = virtualinvoke $r2.<androidx.core.provider.FontsContractCompat$FontFamilyResult: int getStatusCode()>();

        if $i0 != 1 goto label5;

        $b2 = -2;

     label5:
        $r5 = new androidx.core.provider.FontsContractCompat$TypefaceResult;

        specialinvoke $r5.<androidx.core.provider.FontsContractCompat$TypefaceResult: void <init>(android.graphics.Typeface,int)>(null, $b2);

        return $r5;

     label6:
        $r6 := @caughtexception;

        $r5 = new androidx.core.provider.FontsContractCompat$TypefaceResult;

        specialinvoke $r5.<androidx.core.provider.FontsContractCompat$TypefaceResult: void <init>(android.graphics.Typeface,int)>(null, -1);

        return $r5;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label6;
    }

    public static android.graphics.Typeface getFontSync(android.content.Context, androidx.core.provider.FontRequest, androidx.core.content.res.ResourcesCompat$FontCallback, android.os.Handler, boolean, int, int)
    {
        android.content.Context $r0;
        androidx.core.provider.FontRequest $r1;
        androidx.core.content.res.ResourcesCompat$FontCallback $r2;
        android.os.Handler $r3;
        boolean $z0;
        int $i0, $i1;
        androidx.collection.SimpleArrayMap $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;
        androidx.collection.LruCache $r7;
        java.lang.Object $r8, $r15;
        android.graphics.Typeface $r9;
        androidx.core.provider.FontsContractCompat$TypefaceResult $r10;
        androidx.core.provider.FontsContractCompat$1 $r11;
        androidx.core.provider.SelfDestructiveThread $r12;
        java.lang.Throwable $r13, $r18;
        androidx.core.provider.FontsContractCompat$2 $r14;
        java.util.ArrayList $r16;
        androidx.core.provider.FontsContractCompat$3 $r17;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: androidx.core.provider.FontRequest;

        $r2 := @parameter2: androidx.core.content.res.ResourcesCompat$FontCallback;

        $r3 := @parameter3: android.os.Handler;

        $z0 := @parameter4: boolean;

        $i0 := @parameter5: int;

        $i1 := @parameter6: int;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r1.<androidx.core.provider.FontRequest: java.lang.String getIdentifier()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = <androidx.core.provider.FontsContractCompat: androidx.collection.LruCache sTypefaceCache>;

        $r8 = virtualinvoke $r7.<androidx.collection.LruCache: java.lang.Object get(java.lang.Object)>($r6);

        $r9 = (android.graphics.Typeface) $r8;

        if $r9 == null goto label01;

        if $r2 == null goto label20;

        virtualinvoke $r2.<androidx.core.content.res.ResourcesCompat$FontCallback: void onFontRetrieved(android.graphics.Typeface)>($r9);

        return $r9;

     label01:
        if $z0 == 0 goto label04;

        if $i0 != -1 goto label04;

        $r10 = staticinvoke <androidx.core.provider.FontsContractCompat: androidx.core.provider.FontsContractCompat$TypefaceResult getFontInternal(android.content.Context,androidx.core.provider.FontRequest,int)>($r0, $r1, $i1);

        if $r2 == null goto label03;

        $i0 = $r10.<androidx.core.provider.FontsContractCompat$TypefaceResult: int mResult>;

        if $i0 != 0 goto label02;

        $r9 = $r10.<androidx.core.provider.FontsContractCompat$TypefaceResult: android.graphics.Typeface mTypeface>;

        virtualinvoke $r2.<androidx.core.content.res.ResourcesCompat$FontCallback: void callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)>($r9, $r3);

        goto label03;

     label02:
        $i0 = $r10.<androidx.core.provider.FontsContractCompat$TypefaceResult: int mResult>;

        virtualinvoke $r2.<androidx.core.content.res.ResourcesCompat$FontCallback: void callbackFailAsync(int,android.os.Handler)>($i0, $r3);

     label03:
        $r9 = $r10.<androidx.core.provider.FontsContractCompat$TypefaceResult: android.graphics.Typeface mTypeface>;

        return $r9;

     label04:
        $r11 = new androidx.core.provider.FontsContractCompat$1;

        specialinvoke $r11.<androidx.core.provider.FontsContractCompat$1: void <init>(android.content.Context,androidx.core.provider.FontRequest,int,java.lang.String)>($r0, $r1, $i1, $r6);

        if $z0 == 0 goto label08;

        $r12 = <androidx.core.provider.FontsContractCompat: androidx.core.provider.SelfDestructiveThread sBackgroundThread>;

     label05:
        $r8 = virtualinvoke $r12.<androidx.core.provider.SelfDestructiveThread: java.lang.Object postAndWait(java.util.concurrent.Callable,int)>($r11, $i0);

     label06:
        $r10 = (androidx.core.provider.FontsContractCompat$TypefaceResult) $r8;

        $r9 = $r10.<androidx.core.provider.FontsContractCompat$TypefaceResult: android.graphics.Typeface mTypeface>;

        return $r9;

     label07:
        $r13 := @caughtexception;

        return null;

     label08:
        if $r2 != null goto label09;

        $r14 = null;

        goto label10;

     label09:
        $r14 = new androidx.core.provider.FontsContractCompat$2;

        specialinvoke $r14.<androidx.core.provider.FontsContractCompat$2: void <init>(androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler)>($r2, $r3);

     label10:
        $r8 = <androidx.core.provider.FontsContractCompat: java.lang.Object sLock>;

        entermonitor $r8;

     label11:
        $r4 = <androidx.core.provider.FontsContractCompat: androidx.collection.SimpleArrayMap sPendingReplies>;

        $z0 = virtualinvoke $r4.<androidx.collection.SimpleArrayMap: boolean containsKey(java.lang.Object)>($r6);

        if $z0 == 0 goto label14;

        if $r14 == null goto label12;

        $r4 = <androidx.core.provider.FontsContractCompat: androidx.collection.SimpleArrayMap sPendingReplies>;

        $r15 = virtualinvoke $r4.<androidx.collection.SimpleArrayMap: java.lang.Object get(java.lang.Object)>($r6);

        $r16 = (java.util.ArrayList) $r15;

        virtualinvoke $r16.<java.util.ArrayList: boolean add(java.lang.Object)>($r14);

     label12:
        exitmonitor $r8;

     label13:
        return null;

     label14:
        if $r14 == null goto label15;

        $r16 = new java.util.ArrayList;

        specialinvoke $r16.<java.util.ArrayList: void <init>()>();

        virtualinvoke $r16.<java.util.ArrayList: boolean add(java.lang.Object)>($r14);

        $r4 = <androidx.core.provider.FontsContractCompat: androidx.collection.SimpleArrayMap sPendingReplies>;

        virtualinvoke $r4.<androidx.collection.SimpleArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r16);

     label15:
        exitmonitor $r8;

     label16:
        $r12 = <androidx.core.provider.FontsContractCompat: androidx.core.provider.SelfDestructiveThread sBackgroundThread>;

        $r17 = new androidx.core.provider.FontsContractCompat$3;

        specialinvoke $r17.<androidx.core.provider.FontsContractCompat$3: void <init>(java.lang.String)>($r6);

        virtualinvoke $r12.<androidx.core.provider.SelfDestructiveThread: void postAndReply(java.util.concurrent.Callable,androidx.core.provider.SelfDestructiveThread$ReplyCallback)>($r11, $r17);

        return null;

     label17:
        $r18 := @caughtexception;

     label18:
        exitmonitor $r8;

     label19:
        throw $r18;

     label20:
        return $r9;

        catch java.lang.InterruptedException from label05 to label06 with label07;
        catch java.lang.Throwable from label11 to label13 with label17;
        catch java.lang.Throwable from label14 to label16 with label17;
        catch java.lang.Throwable from label18 to label19 with label17;
    }

    public static android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager, androidx.core.provider.FontRequest, android.content.res.Resources) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.content.pm.PackageManager $r0;
        androidx.core.provider.FontRequest $r1;
        android.content.res.Resources $r2;
        java.lang.String $r3, $r5, $r6;
        android.content.pm.ProviderInfo $r4;
        boolean $z0;
        android.content.pm.PackageInfo $r7;
        android.content.pm.Signature[] $r8;
        java.util.List $r9, $r11;
        java.util.Comparator $r10;
        int $i0, $i1;
        java.util.ArrayList $r12;
        java.lang.Object $r13;
        java.util.Collection $r14;
        android.content.pm.PackageManager$NameNotFoundException $r15;
        java.lang.StringBuilder $r16;

        $r0 := @parameter0: android.content.pm.PackageManager;

        $r1 := @parameter1: androidx.core.provider.FontRequest;

        $r2 := @parameter2: android.content.res.Resources;

        $r3 = virtualinvoke $r1.<androidx.core.provider.FontRequest: java.lang.String getProviderAuthority()>();

        $r4 = virtualinvoke $r0.<android.content.pm.PackageManager: android.content.pm.ProviderInfo resolveContentProvider(java.lang.String,int)>($r3, 0);

        if $r4 == null goto label5;

        $r5 = $r4.<android.content.pm.ProviderInfo: java.lang.String packageName>;

        $r6 = virtualinvoke $r1.<androidx.core.provider.FontRequest: java.lang.String getProviderPackage()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label4;

        $r3 = $r4.<android.content.pm.ProviderInfo: java.lang.String packageName>;

        $r7 = virtualinvoke $r0.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r3, 64);

        $r8 = $r7.<android.content.pm.PackageInfo: android.content.pm.Signature[] signatures>;

        $r9 = staticinvoke <androidx.core.provider.FontsContractCompat: java.util.List convertToByteArrayList(android.content.pm.Signature[])>($r8);

        $r10 = <androidx.core.provider.FontsContractCompat: java.util.Comparator sByteArrayComparator>;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r9, $r10);

        $r11 = staticinvoke <androidx.core.provider.FontsContractCompat: java.util.List getCertificates(androidx.core.provider.FontRequest,android.content.res.Resources)>($r1, $r2);

        $i0 = 0;

     label1:
        $i1 = interfaceinvoke $r11.<java.util.List: int size()>();

        if $i0 >= $i1 goto label3;

        $r12 = new java.util.ArrayList;

        $r13 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>($i0);

        $r14 = (java.util.Collection) $r13;

        specialinvoke $r12.<java.util.ArrayList: void <init>(java.util.Collection)>($r14);

        $r10 = <androidx.core.provider.FontsContractCompat: java.util.Comparator sByteArrayComparator>;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r12, $r10);

        $z0 = staticinvoke <androidx.core.provider.FontsContractCompat: boolean equalsByteArrayList(java.util.List,java.util.List)>($r9, $r12);

        if $z0 == 0 goto label2;

        return $r4;

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        return null;

     label4:
        $r15 = new android.content.pm.PackageManager$NameNotFoundException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found content provider ");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", but package was not ");

        $r3 = virtualinvoke $r1.<androidx.core.provider.FontRequest: java.lang.String getProviderPackage()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<android.content.pm.PackageManager$NameNotFoundException: void <init>(java.lang.String)>($r3);

        throw $r15;

     label5:
        $r15 = new android.content.pm.PackageManager$NameNotFoundException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No package found for authority: ");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<android.content.pm.PackageManager$NameNotFoundException: void <init>(java.lang.String)>($r3);

        throw $r15;
    }

    public static java.util.Map prepareFontData(android.content.Context, androidx.core.provider.FontsContractCompat$FontInfo[], android.os.CancellationSignal)
    {
        android.content.Context $r0;
        androidx.core.provider.FontsContractCompat$FontInfo[] $r1;
        android.os.CancellationSignal $r2;
        java.util.HashMap $r3;
        androidx.core.provider.FontsContractCompat$FontInfo $r4;
        int $i0, $i1, $i2;
        android.net.Uri $r5;
        boolean $z0;
        java.nio.ByteBuffer $r6;
        java.util.Map $r7;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: androidx.core.provider.FontsContractCompat$FontInfo[];

        $r2 := @parameter2: android.os.CancellationSignal;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label5;

        $r4 = $r1[$i1];

        $i2 = virtualinvoke $r4.<androidx.core.provider.FontsContractCompat$FontInfo: int getResultCode()>();

        if $i2 == 0 goto label2;

        goto label4;

     label2:
        $r5 = virtualinvoke $r4.<androidx.core.provider.FontsContractCompat$FontInfo: android.net.Uri getUri()>();

        $z0 = virtualinvoke $r3.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r5);

        if $z0 == 0 goto label3;

        goto label4;

     label3:
        $r6 = staticinvoke <androidx.core.graphics.TypefaceCompatUtil: java.nio.ByteBuffer mmap(android.content.Context,android.os.CancellationSignal,android.net.Uri)>($r0, $r2, $r5);

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r6);

     label4:
        $i1 = $i1 + 1;

        goto label1;

     label5:
        $r7 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r3);

        return $r7;
    }

    public static void requestFont(android.content.Context, androidx.core.provider.FontRequest, androidx.core.provider.FontsContractCompat$FontRequestCallback, android.os.Handler)
    {
        android.content.Context $r0;
        androidx.core.provider.FontRequest $r1;
        androidx.core.provider.FontsContractCompat$FontRequestCallback $r2;
        android.os.Handler $r3, $r4;
        androidx.core.provider.FontsContractCompat$4 $r5;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: androidx.core.provider.FontRequest;

        $r2 := @parameter2: androidx.core.provider.FontsContractCompat$FontRequestCallback;

        $r3 := @parameter3: android.os.Handler;

        $r4 = new android.os.Handler;

        specialinvoke $r4.<android.os.Handler: void <init>()>();

        $r5 = new androidx.core.provider.FontsContractCompat$4;

        specialinvoke $r5.<androidx.core.provider.FontsContractCompat$4: void <init>(android.content.Context,androidx.core.provider.FontRequest,android.os.Handler,androidx.core.provider.FontsContractCompat$FontRequestCallback)>($r0, $r1, $r4, $r2);

        virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>($r5);

        return;
    }

    public static void resetCache()
    {
        androidx.collection.LruCache $r0;

        $r0 = <androidx.core.provider.FontsContractCompat: androidx.collection.LruCache sTypefaceCache>;

        virtualinvoke $r0.<androidx.collection.LruCache: void evictAll()>();

        return;
    }
}
