final class androidx.fragment.app.FragmentManagerImpl extends androidx.fragment.app.FragmentManager implements android.view.LayoutInflater$Factory2
{
    static final android.view.animation.Interpolator ACCELERATE_CUBIC;
    static final android.view.animation.Interpolator ACCELERATE_QUINT;
    static final int ANIM_DUR;
    public static final int ANIM_STYLE_CLOSE_ENTER;
    public static final int ANIM_STYLE_CLOSE_EXIT;
    public static final int ANIM_STYLE_FADE_ENTER;
    public static final int ANIM_STYLE_FADE_EXIT;
    public static final int ANIM_STYLE_OPEN_ENTER;
    public static final int ANIM_STYLE_OPEN_EXIT;
    static boolean DEBUG;
    static final android.view.animation.Interpolator DECELERATE_CUBIC;
    static final android.view.animation.Interpolator DECELERATE_QUINT;
    static final java.lang.String TAG;
    static final java.lang.String TARGET_REQUEST_CODE_STATE_TAG;
    static final java.lang.String TARGET_STATE_TAG;
    static final java.lang.String USER_VISIBLE_HINT_TAG;
    static final java.lang.String VIEW_STATE_TAG;
    static java.lang.reflect.Field sAnimationListenerField;
    android.util.SparseArray mActive;
    final java.util.ArrayList mAdded;
    java.util.ArrayList mAvailBackStackIndices;
    java.util.ArrayList mBackStack;
    java.util.ArrayList mBackStackChangeListeners;
    java.util.ArrayList mBackStackIndices;
    androidx.fragment.app.FragmentContainer mContainer;
    java.util.ArrayList mCreatedMenus;
    int mCurState;
    boolean mDestroyed;
    java.lang.Runnable mExecCommit;
    boolean mExecutingActions;
    boolean mHavePendingDeferredStart;
    androidx.fragment.app.FragmentHostCallback mHost;
    private final java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks;
    boolean mNeedMenuInvalidate;
    int mNextFragmentIndex;
    java.lang.String mNoTransactionsBecause;
    androidx.fragment.app.Fragment mParent;
    java.util.ArrayList mPendingActions;
    java.util.ArrayList mPostponedTransactions;
    androidx.fragment.app.Fragment mPrimaryNav;
    androidx.fragment.app.FragmentManagerNonConfig mSavedNonConfig;
    android.util.SparseArray mStateArray;
    android.os.Bundle mStateBundle;
    boolean mStateSaved;
    boolean mStopped;
    java.util.ArrayList mTmpAddedFragments;
    java.util.ArrayList mTmpIsPop;
    java.util.ArrayList mTmpRecords;

    static void <clinit>()
    {
        android.view.animation.DecelerateInterpolator $r0;
        android.view.animation.AccelerateInterpolator $r1;

        <androidx.fragment.app.FragmentManagerImpl: java.lang.String VIEW_STATE_TAG> = "android:view_state";

        <androidx.fragment.app.FragmentManagerImpl: java.lang.String USER_VISIBLE_HINT_TAG> = "android:user_visible_hint";

        <androidx.fragment.app.FragmentManagerImpl: java.lang.String TARGET_STATE_TAG> = "android:target_state";

        <androidx.fragment.app.FragmentManagerImpl: java.lang.String TARGET_REQUEST_CODE_STATE_TAG> = "android:target_req_state";

        <androidx.fragment.app.FragmentManagerImpl: java.lang.String TAG> = "FragmentManager";

        <androidx.fragment.app.FragmentManagerImpl: int ANIM_STYLE_OPEN_EXIT> = 2;

        <androidx.fragment.app.FragmentManagerImpl: int ANIM_STYLE_OPEN_ENTER> = 1;

        <androidx.fragment.app.FragmentManagerImpl: int ANIM_STYLE_FADE_EXIT> = 6;

        <androidx.fragment.app.FragmentManagerImpl: int ANIM_STYLE_FADE_ENTER> = 5;

        <androidx.fragment.app.FragmentManagerImpl: int ANIM_STYLE_CLOSE_EXIT> = 4;

        <androidx.fragment.app.FragmentManagerImpl: int ANIM_STYLE_CLOSE_ENTER> = 3;

        <androidx.fragment.app.FragmentManagerImpl: int ANIM_DUR> = 220;

        <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG> = 0;

        <androidx.fragment.app.FragmentManagerImpl: java.lang.reflect.Field sAnimationListenerField> = null;

        $r0 = new android.view.animation.DecelerateInterpolator;

        specialinvoke $r0.<android.view.animation.DecelerateInterpolator: void <init>(float)>(2.5F);

        <androidx.fragment.app.FragmentManagerImpl: android.view.animation.Interpolator DECELERATE_QUINT> = $r0;

        $r0 = new android.view.animation.DecelerateInterpolator;

        specialinvoke $r0.<android.view.animation.DecelerateInterpolator: void <init>(float)>(1.5F);

        <androidx.fragment.app.FragmentManagerImpl: android.view.animation.Interpolator DECELERATE_CUBIC> = $r0;

        $r1 = new android.view.animation.AccelerateInterpolator;

        specialinvoke $r1.<android.view.animation.AccelerateInterpolator: void <init>(float)>(2.5F);

        <androidx.fragment.app.FragmentManagerImpl: android.view.animation.Interpolator ACCELERATE_QUINT> = $r1;

        $r1 = new android.view.animation.AccelerateInterpolator;

        specialinvoke $r1.<android.view.animation.AccelerateInterpolator: void <init>(float)>(1.5F);

        <androidx.fragment.app.FragmentManagerImpl: android.view.animation.Interpolator ACCELERATE_CUBIC> = $r1;

        return;
    }

    void <init>()
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        java.util.ArrayList $r1;
        java.util.concurrent.CopyOnWriteArrayList $r2;
        androidx.fragment.app.FragmentManagerImpl$1 $r3;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        specialinvoke $r0.<androidx.fragment.app.FragmentManager: void <init>()>();

        $r0.<androidx.fragment.app.FragmentManagerImpl: int mNextFragmentIndex> = 0;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded> = $r1;

        $r2 = new java.util.concurrent.CopyOnWriteArrayList;

        specialinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();

        $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks> = $r2;

        $r0.<androidx.fragment.app.FragmentManagerImpl: int mCurState> = 0;

        $r0.<androidx.fragment.app.FragmentManagerImpl: android.os.Bundle mStateBundle> = null;

        $r0.<androidx.fragment.app.FragmentManagerImpl: android.util.SparseArray mStateArray> = null;

        $r3 = new androidx.fragment.app.FragmentManagerImpl$1;

        specialinvoke $r3.<androidx.fragment.app.FragmentManagerImpl$1: void <init>(androidx.fragment.app.FragmentManagerImpl)>($r0);

        $r0.<androidx.fragment.app.FragmentManagerImpl: java.lang.Runnable mExecCommit> = $r3;

        return;
    }

    private void addAddedFragments(androidx.collection.ArraySet)
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        androidx.collection.ArraySet $r1;
        int $i0, $i1, $i2, $i3, $i4;
        java.util.ArrayList $r2;
        java.lang.Object $r3;
        androidx.fragment.app.Fragment $r4;
        android.view.View $r5;
        boolean $z0;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 := @parameter0: androidx.collection.ArraySet;

        $i0 = $r0.<androidx.fragment.app.FragmentManagerImpl: int mCurState>;

        if $i0 >= 1 goto label1;

        return;

     label1:
        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, 3);

        $r2 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        $i2 = 0;

     label2:
        if $i2 >= $i1 goto label4;

        $r2 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r4 = (androidx.fragment.app.Fragment) $r3;

        $i3 = $r4.<androidx.fragment.app.Fragment: int mState>;

        if $i3 >= $i0 goto label3;

        $i3 = virtualinvoke $r4.<androidx.fragment.app.Fragment: int getNextAnim()>();

        $i4 = virtualinvoke $r4.<androidx.fragment.app.Fragment: int getNextTransition()>();

        virtualinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)>($r4, $i0, $i3, $i4, 0);

        $r5 = $r4.<androidx.fragment.app.Fragment: android.view.View mView>;

        if $r5 == null goto label3;

        $z0 = $r4.<androidx.fragment.app.Fragment: boolean mHidden>;

        if $z0 != 0 goto label3;

        $z0 = $r4.<androidx.fragment.app.Fragment: boolean mIsNewlyAdded>;

        if $z0 == 0 goto label3;

        virtualinvoke $r1.<androidx.collection.ArraySet: boolean add(java.lang.Object)>($r4);

     label3:
        $i2 = $i2 + 1;

        goto label2;

     label4:
        return;
    }

    private void animateRemoveFragment(androidx.fragment.app.Fragment, androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator, int)
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        androidx.fragment.app.Fragment $r1;
        androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator $r2;
        int $i0;
        android.view.View $r3, $r8;
        android.view.ViewGroup $r4;
        android.view.animation.Animation$AnimationListener $r5;
        android.view.animation.Animation $r6;
        androidx.fragment.app.FragmentManagerImpl$EndViewTransitionAnimator $r7;
        androidx.fragment.app.FragmentManagerImpl$2 $r9;
        android.animation.Animator $r10, $r11;
        androidx.fragment.app.FragmentManagerImpl$3 $r12;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 := @parameter0: androidx.fragment.app.Fragment;

        $r2 := @parameter1: androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator;

        $i0 := @parameter2: int;

        $r3 = $r1.<androidx.fragment.app.Fragment: android.view.View mView>;

        $r4 = $r1.<androidx.fragment.app.Fragment: android.view.ViewGroup mContainer>;

        virtualinvoke $r4.<android.view.ViewGroup: void startViewTransition(android.view.View)>($r3);

        virtualinvoke $r1.<androidx.fragment.app.Fragment: void setStateAfterAnimating(int)>($i0);

        $r6 = $r2.<androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator: android.view.animation.Animation animation>;

        if $r6 == null goto label1;

        $r7 = new androidx.fragment.app.FragmentManagerImpl$EndViewTransitionAnimator;

        $r6 = $r2.<androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator: android.view.animation.Animation animation>;

        specialinvoke $r7.<androidx.fragment.app.FragmentManagerImpl$EndViewTransitionAnimator: void <init>(android.view.animation.Animation,android.view.ViewGroup,android.view.View)>($r6, $r4, $r3);

        $r8 = $r1.<androidx.fragment.app.Fragment: android.view.View mView>;

        virtualinvoke $r1.<androidx.fragment.app.Fragment: void setAnimatingAway(android.view.View)>($r8);

        $r5 = staticinvoke <androidx.fragment.app.FragmentManagerImpl: android.view.animation.Animation$AnimationListener getAnimationListener(android.view.animation.Animation)>($r7);

        $r9 = new androidx.fragment.app.FragmentManagerImpl$2;

        specialinvoke $r9.<androidx.fragment.app.FragmentManagerImpl$2: void <init>(androidx.fragment.app.FragmentManagerImpl,android.view.animation.Animation$AnimationListener,android.view.ViewGroup,androidx.fragment.app.Fragment)>($r0, $r5, $r4, $r1);

        virtualinvoke $r7.<android.view.animation.Animation: void setAnimationListener(android.view.animation.Animation$AnimationListener)>($r9);

        staticinvoke <androidx.fragment.app.FragmentManagerImpl: void setHWLayerAnimListenerIfAlpha(android.view.View,androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator)>($r3, $r2);

        $r3 = $r1.<androidx.fragment.app.Fragment: android.view.View mView>;

        virtualinvoke $r3.<android.view.View: void startAnimation(android.view.animation.Animation)>($r7);

        return;

     label1:
        $r10 = $r2.<androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator: android.animation.Animator animator>;

        $r11 = $r2.<androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator: android.animation.Animator animator>;

        virtualinvoke $r1.<androidx.fragment.app.Fragment: void setAnimator(android.animation.Animator)>($r11);

        $r12 = new androidx.fragment.app.FragmentManagerImpl$3;

        specialinvoke $r12.<androidx.fragment.app.FragmentManagerImpl$3: void <init>(androidx.fragment.app.FragmentManagerImpl,android.view.ViewGroup,android.view.View,androidx.fragment.app.Fragment)>($r0, $r4, $r3, $r1);

        virtualinvoke $r10.<android.animation.Animator: void addListener(android.animation.Animator$AnimatorListener)>($r12);

        $r3 = $r1.<androidx.fragment.app.Fragment: android.view.View mView>;

        virtualinvoke $r10.<android.animation.Animator: void setTarget(java.lang.Object)>($r3);

        $r3 = $r1.<androidx.fragment.app.Fragment: android.view.View mView>;

        staticinvoke <androidx.fragment.app.FragmentManagerImpl: void setHWLayerAnimListenerIfAlpha(android.view.View,androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator)>($r3, $r2);

        virtualinvoke $r10.<android.animation.Animator: void start()>();

        return;
    }

    private void burpActive()
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        android.util.SparseArray $r1;
        int $i0, $i1;
        java.lang.Object $r2;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 = $r0.<androidx.fragment.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        if $r1 == null goto label3;

        $i0 = virtualinvoke $r1.<android.util.SparseArray: int size()>();

        $i0 = $i0 + -1;

     label1:
        if $i0 < 0 goto label3;

        $r1 = $r0.<androidx.fragment.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object valueAt(int)>($i0);

        if $r2 != null goto label2;

        $r1 = $r0.<androidx.fragment.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        $i1 = virtualinvoke $r1.<android.util.SparseArray: int keyAt(int)>($i0);

        virtualinvoke $r1.<android.util.SparseArray: void delete(int)>($i1);

     label2:
        $i0 = $i0 + -1;

        goto label1;

     label3:
        return;
    }

    private void checkStateLoss()
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        boolean $z0;
        java.lang.String $r1;
        java.lang.IllegalStateException $r2;
        java.lang.StringBuilder $r3;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $z0 = virtualinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: boolean isStateSaved()>();

        if $z0 != 0 goto label2;

        $r1 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.lang.String mNoTransactionsBecause>;

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = new java.lang.IllegalStateException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can not perform this action inside of ");

        $r1 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.lang.String mNoTransactionsBecause>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r1);

        throw $r2;

     label2:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Can not perform this action after onSaveInstanceState");

        throw $r2;
    }

    private void cleanupExec()
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        java.util.ArrayList $r1;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r0.<androidx.fragment.app.FragmentManagerImpl: boolean mExecutingActions> = 0;

        $r1 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mTmpIsPop>;

        virtualinvoke $r1.<java.util.ArrayList: void clear()>();

        $r1 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mTmpRecords>;

        virtualinvoke $r1.<java.util.ArrayList: void clear()>();

        return;
    }

    private void dispatchStateChange(int)
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        int $i0;
        java.lang.Throwable $r1;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $i0 := @parameter0: int;

     label1:
        $r0.<androidx.fragment.app.FragmentManagerImpl: boolean mExecutingActions> = 1;

        virtualinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void moveToState(int,boolean)>($i0, 0);

     label2:
        $r0.<androidx.fragment.app.FragmentManagerImpl: boolean mExecutingActions> = 0;

        virtualinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: boolean execPendingActions()>();

        return;

     label3:
        $r1 := @caughtexception;

        $r0.<androidx.fragment.app.FragmentManagerImpl: boolean mExecutingActions> = 0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private void endAnimatingAwayFragments()
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        android.util.SparseArray $r1;
        int $i0, $i1, $i2;
        java.lang.Object $r2;
        androidx.fragment.app.Fragment $r3;
        android.view.View $r4;
        android.view.animation.Animation $r5;
        android.animation.Animator $r6;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 = $r0.<androidx.fragment.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        if $r1 != null goto label1;

        $i0 = 0;

        goto label2;

     label1:
        $i0 = virtualinvoke $r1.<android.util.SparseArray: int size()>();

     label2:
        $i1 = 0;

     label3:
        if $i1 >= $i0 goto label7;

        $r1 = $r0.<androidx.fragment.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object valueAt(int)>($i1);

        $r3 = (androidx.fragment.app.Fragment) $r2;

        if $r3 == null goto label6;

        $r4 = virtualinvoke $r3.<androidx.fragment.app.Fragment: android.view.View getAnimatingAway()>();

        if $r4 == null goto label5;

        $i2 = virtualinvoke $r3.<androidx.fragment.app.Fragment: int getStateAfterAnimating()>();

        $r4 = virtualinvoke $r3.<androidx.fragment.app.Fragment: android.view.View getAnimatingAway()>();

        $r5 = virtualinvoke $r4.<android.view.View: android.view.animation.Animation getAnimation()>();

        if $r5 == null goto label4;

        virtualinvoke $r5.<android.view.animation.Animation: void cancel()>();

        virtualinvoke $r4.<android.view.View: void clearAnimation()>();

     label4:
        virtualinvoke $r3.<androidx.fragment.app.Fragment: void setAnimatingAway(android.view.View)>(null);

        virtualinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)>($r3, $i2, 0, 0, 0);

        goto label6;

     label5:
        $r6 = virtualinvoke $r3.<androidx.fragment.app.Fragment: android.animation.Animator getAnimator()>();

        if $r6 == null goto label6;

        $r6 = virtualinvoke $r3.<androidx.fragment.app.Fragment: android.animation.Animator getAnimator()>();

        virtualinvoke $r6.<android.animation.Animator: void end()>();

     label6:
        $i1 = $i1 + 1;

        goto label3;

     label7:
        return;
    }

    private void ensureExecReady(boolean)
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        boolean $z0, $z1;
        androidx.fragment.app.FragmentHostCallback $r1;
        android.os.Looper $r2, $r4;
        android.os.Handler $r3;
        java.util.ArrayList $r5;
        java.lang.Throwable $r6;
        java.lang.IllegalStateException $r7;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $z0 := @parameter0: boolean;

        $z1 = $r0.<androidx.fragment.app.FragmentManagerImpl: boolean mExecutingActions>;

        if $z1 != 0 goto label8;

        $r1 = $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost>;

        if $r1 == null goto label7;

        $r2 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $r1 = $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost>;

        $r3 = virtualinvoke $r1.<androidx.fragment.app.FragmentHostCallback: android.os.Handler getHandler()>();

        $r4 = virtualinvoke $r3.<android.os.Handler: android.os.Looper getLooper()>();

        if $r2 != $r4 goto label6;

        goto label1;

     label1:
        $r5 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mTmpRecords>;

        if $r5 != null goto label2;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mTmpRecords> = $r5;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mTmpIsPop> = $r5;

     label2:
        $r0.<androidx.fragment.app.FragmentManagerImpl: boolean mExecutingActions> = 1;

     label3:
        specialinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void executePostponedTransaction(java.util.ArrayList,java.util.ArrayList)>(null, null);

     label4:
        $r0.<androidx.fragment.app.FragmentManagerImpl: boolean mExecutingActions> = 0;

        return;

     label5:
        $r6 := @caughtexception;

        $r0.<androidx.fragment.app.FragmentManagerImpl: boolean mExecutingActions> = 0;

        throw $r6;

     label6:
        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Must be called from main thread of fragment host");

        throw $r7;

     label7:
        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Fragment host has been destroyed");

        throw $r7;

     label8:
        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("FragmentManager is already executing transactions");

        throw $r7;

        catch java.lang.Throwable from label3 to label4 with label5;
    }

    private static void executeOps(java.util.ArrayList, java.util.ArrayList, int, int)
    {
        java.util.ArrayList $r0, $r1;
        int $i0, $i1, $i2;
        java.lang.Object $r2;
        androidx.fragment.app.BackStackRecord $r3;
        java.lang.Boolean $r4;
        boolean $z0, $z1;

        $r0 := @parameter0: java.util.ArrayList;

        $r1 := @parameter1: java.util.ArrayList;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

     label1:
        if $i0 >= $i1 goto label6;

        $r2 = virtualinvoke $r0.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r3 = (androidx.fragment.app.BackStackRecord) $r2;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r4 = (java.lang.Boolean) $r2;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        $z1 = 1;

        if $z0 == 0 goto label4;

        virtualinvoke $r3.<androidx.fragment.app.BackStackRecord: void bumpBackStackNesting(int)>(-1);

        $i2 = $i1 + -1;

        if $i0 != $i2 goto label2;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        virtualinvoke $r3.<androidx.fragment.app.BackStackRecord: void executePopOps(boolean)>($z1);

        goto label5;

     label4:
        virtualinvoke $r3.<androidx.fragment.app.BackStackRecord: void bumpBackStackNesting(int)>(1);

        virtualinvoke $r3.<androidx.fragment.app.BackStackRecord: void executeOps()>();

     label5:
        $i0 = $i0 + 1;

        goto label1;

     label6:
        return;
    }

    private void executeOpsTogether(java.util.ArrayList, java.util.ArrayList, int, int)
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        java.util.ArrayList $r1, $r2, $r5, $r6;
        int $i0, $i1, $i2;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r3;
        androidx.fragment.app.BackStackRecord $r4;
        androidx.fragment.app.Fragment $r7;
        java.lang.Boolean $r8;
        androidx.collection.ArraySet $r9;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 := @parameter0: java.util.ArrayList;

        $r2 := @parameter1: java.util.ArrayList;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $r3 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r4 = (androidx.fragment.app.BackStackRecord) $r3;

        $z0 = $r4.<androidx.fragment.app.BackStackRecord: boolean mReorderingAllowed>;

        $r5 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mTmpAddedFragments>;

        if $r5 != null goto label01;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mTmpAddedFragments> = $r5;

        goto label02;

     label01:
        virtualinvoke $r5.<java.util.ArrayList: void clear()>();

     label02:
        $r5 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mTmpAddedFragments>;

        $r6 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        virtualinvoke $r5.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r6);

        $i2 = $i0;

        $z1 = 0;

        $r7 = virtualinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment getPrimaryNavigationFragment()>();

     label03:
        $z2 = 1;

        if $i2 >= $i1 goto label08;

        $r3 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r4 = (androidx.fragment.app.BackStackRecord) $r3;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r8 = (java.lang.Boolean) $r3;

        $z3 = virtualinvoke $r8.<java.lang.Boolean: boolean booleanValue()>();

        if $z3 != 0 goto label04;

        $r5 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mTmpAddedFragments>;

        $r7 = virtualinvoke $r4.<androidx.fragment.app.BackStackRecord: androidx.fragment.app.Fragment expandOps(java.util.ArrayList,androidx.fragment.app.Fragment)>($r5, $r7);

        goto label05;

     label04:
        $r5 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mTmpAddedFragments>;

        $r7 = virtualinvoke $r4.<androidx.fragment.app.BackStackRecord: androidx.fragment.app.Fragment trackAddedFragmentsInPop(java.util.ArrayList,androidx.fragment.app.Fragment)>($r5, $r7);

     label05:
        if $z1 != 0 goto label07;

        $z1 = $r4.<androidx.fragment.app.BackStackRecord: boolean mAddToBackStack>;

        if $z1 == 0 goto label06;

        goto label07;

     label06:
        $z2 = 0;

     label07:
        $z1 = $z2;

        $i2 = $i2 + 1;

        goto label03;

     label08:
        $r5 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mTmpAddedFragments>;

        virtualinvoke $r5.<java.util.ArrayList: void clear()>();

        if $z0 != 0 goto label09;

        staticinvoke <androidx.fragment.app.FragmentTransition: void startTransitions(androidx.fragment.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean)>($r0, $r1, $r2, $i0, $i1, 0);

     label09:
        staticinvoke <androidx.fragment.app.FragmentManagerImpl: void executeOps(java.util.ArrayList,java.util.ArrayList,int,int)>($r1, $r2, $i0, $i1);

        $i2 = $i1;

        if $z0 == 0 goto label10;

        $r9 = new androidx.collection.ArraySet;

        specialinvoke $r9.<androidx.collection.ArraySet: void <init>()>();

        specialinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void addAddedFragments(androidx.collection.ArraySet)>($r9);

        $i2 = specialinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: int postponePostponableTransactions(java.util.ArrayList,java.util.ArrayList,int,int,androidx.collection.ArraySet)>($r1, $r2, $i0, $i1, $r9);

        specialinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void makeRemovedFragmentsInvisible(androidx.collection.ArraySet)>($r9);

     label10:
        if $i2 == $i0 goto label11;

        if $z0 == 0 goto label11;

        staticinvoke <androidx.fragment.app.FragmentTransition: void startTransitions(androidx.fragment.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean)>($r0, $r1, $r2, $i0, $i2, 1);

        $i2 = $r0.<androidx.fragment.app.FragmentManagerImpl: int mCurState>;

        virtualinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void moveToState(int,boolean)>($i2, 1);

     label11:
        if $i0 >= $i1 goto label13;

        $r3 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r4 = (androidx.fragment.app.BackStackRecord) $r3;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r8 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r8.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label12;

        $i2 = $r4.<androidx.fragment.app.BackStackRecord: int mIndex>;

        if $i2 < 0 goto label12;

        $i2 = $r4.<androidx.fragment.app.BackStackRecord: int mIndex>;

        virtualinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void freeBackStackIndex(int)>($i2);

        $r4.<androidx.fragment.app.BackStackRecord: int mIndex> = -1;

     label12:
        virtualinvoke $r4.<androidx.fragment.app.BackStackRecord: void runOnCommitRunnables()>();

        $i0 = $i0 + 1;

        goto label11;

     label13:
        if $z1 == 0 goto label14;

        virtualinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void reportBackStackChanged()>();

     label14:
        return;
    }

    private void executePostponedTransaction(java.util.ArrayList, java.util.ArrayList)
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        java.util.ArrayList $r1, $r2, $r3;
        int $i0, $i1, $i2;
        java.lang.Object $r4;
        androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener $r5;
        boolean $z0;
        androidx.fragment.app.BackStackRecord $r6;
        java.lang.Boolean $r7;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 := @parameter0: java.util.ArrayList;

        $r2 := @parameter1: java.util.ArrayList;

        $r3 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mPostponedTransactions>;

        if $r3 != null goto label1;

        $i0 = 0;

        goto label2;

     label1:
        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

     label2:
        $i1 = 0;

     label3:
        if $i1 >= $i0 goto label8;

        $r3 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mPostponedTransactions>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r5 = (androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener) $r4;

        if $r1 == null goto label4;

        $z0 = $r5.<androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener: boolean mIsBack>;

        if $z0 != 0 goto label4;

        $r6 = $r5.<androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener: androidx.fragment.app.BackStackRecord mRecord>;

        $i2 = virtualinvoke $r1.<java.util.ArrayList: int indexOf(java.lang.Object)>($r6);

        if $i2 == -1 goto label4;

        $r4 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r7 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r7.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label4;

        virtualinvoke $r5.<androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener: void cancelTransaction()>();

        goto label7;

     label4:
        $z0 = virtualinvoke $r5.<androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener: boolean isReady()>();

        if $z0 != 0 goto label5;

        if $r1 == null goto label7;

        $r6 = $r5.<androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener: androidx.fragment.app.BackStackRecord mRecord>;

        $i2 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $z0 = virtualinvoke $r6.<androidx.fragment.app.BackStackRecord: boolean interactsWith(java.util.ArrayList,int,int)>($r1, 0, $i2);

        if $z0 == 0 goto label7;

     label5:
        $r3 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mPostponedTransactions>;

        virtualinvoke $r3.<java.util.ArrayList: java.lang.Object remove(int)>($i1);

        $i1 = $i1 + -1;

        $i0 = $i0 + -1;

        if $r1 == null goto label6;

        $z0 = $r5.<androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener: boolean mIsBack>;

        if $z0 != 0 goto label6;

        $r6 = $r5.<androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener: androidx.fragment.app.BackStackRecord mRecord>;

        $i2 = virtualinvoke $r1.<java.util.ArrayList: int indexOf(java.lang.Object)>($r6);

        if $i2 == -1 goto label6;

        $r4 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r7 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r7.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label6;

        virtualinvoke $r5.<androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener: void cancelTransaction()>();

        goto label7;

     label6:
        virtualinvoke $r5.<androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener: void completeTransaction()>();

     label7:
        $i1 = $i1 + 1;

        goto label3;

     label8:
        return;
    }

    private androidx.fragment.app.Fragment findFragmentUnder(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        androidx.fragment.app.Fragment $r1;
        android.view.ViewGroup $r2, $r6;
        android.view.View $r3;
        java.util.ArrayList $r4;
        int $i0;
        java.lang.Object $r5;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 := @parameter0: androidx.fragment.app.Fragment;

        $r2 = $r1.<androidx.fragment.app.Fragment: android.view.ViewGroup mContainer>;

        $r3 = $r1.<androidx.fragment.app.Fragment: android.view.View mView>;

        if $r2 == null goto label4;

        if $r3 != null goto label1;

        return null;

     label1:
        $r4 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $i0 = virtualinvoke $r4.<java.util.ArrayList: int indexOf(java.lang.Object)>($r1);

        $i0 = $i0 + -1;

     label2:
        if $i0 < 0 goto label4;

        $r4 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r1 = (androidx.fragment.app.Fragment) $r5;

        $r6 = $r1.<androidx.fragment.app.Fragment: android.view.ViewGroup mContainer>;

        if $r6 != $r2 goto label3;

        $r3 = $r1.<androidx.fragment.app.Fragment: android.view.View mView>;

        if $r3 == null goto label3;

        return $r1;

     label3:
        $i0 = $i0 + -1;

        goto label2;

     label4:
        return null;
    }

    private void forcePostponedTransactions()
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        java.util.ArrayList $r1;
        boolean $z0;
        java.lang.Object $r2;
        androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener $r3;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mPostponedTransactions>;

        if $r1 == null goto label2;

     label1:
        $r1 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mPostponedTransactions>;

        $z0 = virtualinvoke $r1.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        $r1 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mPostponedTransactions>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object remove(int)>(0);

        $r3 = (androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener) $r2;

        virtualinvoke $r3.<androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener: void completeTransaction()>();

        goto label1;

     label2:
        return;
    }

    private boolean generateOpsForPendingActions(java.util.ArrayList, java.util.ArrayList)
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        java.util.ArrayList $r1, $r2, $r3;
        boolean $z0, $z1;
        int $i0, $i1;
        java.lang.Object $r4;
        androidx.fragment.app.FragmentManagerImpl$OpGenerator $r5;
        androidx.fragment.app.FragmentHostCallback $r6;
        android.os.Handler $r7;
        java.lang.Runnable $r8;
        java.lang.Throwable $r9;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 := @parameter0: java.util.ArrayList;

        $r2 := @parameter1: java.util.ArrayList;

        $z0 = 0;

        entermonitor $r0;

     label1:
        $r3 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mPendingActions>;

        if $r3 == null goto label6;

        $r3 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mPendingActions>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if $i0 != 0 goto label2;

        goto label6;

     label2:
        $r3 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mPendingActions>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        $i1 = 0;

     label3:
        if $i1 >= $i0 goto label4;

        $r3 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mPendingActions>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r5 = (androidx.fragment.app.FragmentManagerImpl$OpGenerator) $r4;

        $z1 = interfaceinvoke $r5.<androidx.fragment.app.FragmentManagerImpl$OpGenerator: boolean generateOps(java.util.ArrayList,java.util.ArrayList)>($r1, $r2);

        $z0 = $z0 | $z1;

        $i1 = $i1 + 1;

        goto label3;

     label4:
        $r1 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mPendingActions>;

        virtualinvoke $r1.<java.util.ArrayList: void clear()>();

        $r6 = $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost>;

        $r7 = virtualinvoke $r6.<androidx.fragment.app.FragmentHostCallback: android.os.Handler getHandler()>();

        $r8 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.lang.Runnable mExecCommit>;

        virtualinvoke $r7.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r8);

        exitmonitor $r0;

     label5:
        return $z0;

     label6:
        exitmonitor $r0;

     label7:
        return 0;

     label8:
        $r9 := @caughtexception;

        exitmonitor $r0;

     label9:
        throw $r9;

        catch java.lang.Throwable from label1 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
        catch java.lang.Throwable from label8 to label9 with label8;
    }

    private static android.view.animation.Animation$AnimationListener getAnimationListener(android.view.animation.Animation)
    {
        android.view.animation.Animation $r0;
        android.view.animation.Animation$AnimationListener $r1;
        java.lang.reflect.Field $r2;
        java.lang.Class $r3;
        java.lang.Object $r4;
        java.lang.Throwable $r5, $r6;

        $r0 := @parameter0: android.view.animation.Animation;

        $r1 = null;

        $r2 = <androidx.fragment.app.FragmentManagerImpl: java.lang.reflect.Field sAnimationListenerField>;

        if $r2 != null goto label4;

        $r3 = class "Landroid/view/animation/Animation;";

     label1:
        $r2 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("mListener");

     label2:
        <androidx.fragment.app.FragmentManagerImpl: java.lang.reflect.Field sAnimationListenerField> = $r2;

        $r2 = <androidx.fragment.app.FragmentManagerImpl: java.lang.reflect.Field sAnimationListenerField>;

     label3:
        virtualinvoke $r2.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

     label4:
        $r2 = <androidx.fragment.app.FragmentManagerImpl: java.lang.reflect.Field sAnimationListenerField>;

     label5:
        $r4 = virtualinvoke $r2.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>($r0);

     label6:
        $r1 = (android.view.animation.Animation$AnimationListener) $r4;

     label7:
        return $r1;

     label8:
        $r5 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("FragmentManager", "Cannot access Animation\'s mListener field", $r5);

        return null;

     label9:
        $r6 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("FragmentManager", "No field with the name mListener is found in Animation class", $r6);

        goto label7;

        catch java.lang.NoSuchFieldException from label1 to label2 with label9;
        catch java.lang.NoSuchFieldException from label3 to label4 with label9;
        catch java.lang.NoSuchFieldException from label5 to label6 with label9;
        catch java.lang.IllegalAccessException from label1 to label2 with label8;
        catch java.lang.IllegalAccessException from label3 to label4 with label8;
        catch java.lang.IllegalAccessException from label5 to label6 with label8;
    }

    static androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator makeFadeAnimation(android.content.Context, float, float)
    {
        android.content.Context $r0;
        float $f0, $f1;
        android.view.animation.AlphaAnimation $r1;
        android.view.animation.Interpolator $r2;
        androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator $r3;

        $r0 := @parameter0: android.content.Context;

        $f0 := @parameter1: float;

        $f1 := @parameter2: float;

        $r1 = new android.view.animation.AlphaAnimation;

        specialinvoke $r1.<android.view.animation.AlphaAnimation: void <init>(float,float)>($f0, $f1);

        $r2 = <androidx.fragment.app.FragmentManagerImpl: android.view.animation.Interpolator DECELERATE_CUBIC>;

        virtualinvoke $r1.<android.view.animation.AlphaAnimation: void setInterpolator(android.view.animation.Interpolator)>($r2);

        virtualinvoke $r1.<android.view.animation.AlphaAnimation: void setDuration(long)>(220L);

        $r3 = new androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator;

        specialinvoke $r3.<androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator: void <init>(android.view.animation.Animation)>($r1);

        return $r3;
    }

    static androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator makeOpenCloseAnimation(android.content.Context, float, float, float, float)
    {
        android.content.Context $r0;
        float $f0, $f1, $f2, $f3;
        android.view.animation.AnimationSet $r1;
        android.view.animation.ScaleAnimation $r2;
        android.view.animation.Interpolator $r3;
        android.view.animation.AlphaAnimation $r4;
        androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator $r5;

        $r0 := @parameter0: android.content.Context;

        $f0 := @parameter1: float;

        $f1 := @parameter2: float;

        $f2 := @parameter3: float;

        $f3 := @parameter4: float;

        $r1 = new android.view.animation.AnimationSet;

        specialinvoke $r1.<android.view.animation.AnimationSet: void <init>(boolean)>(0);

        $r2 = new android.view.animation.ScaleAnimation;

        specialinvoke $r2.<android.view.animation.ScaleAnimation: void <init>(float,float,float,float,int,float,int,float)>($f0, $f1, $f0, $f1, 1, 0.5F, 1, 0.5F);

        $r3 = <androidx.fragment.app.FragmentManagerImpl: android.view.animation.Interpolator DECELERATE_QUINT>;

        virtualinvoke $r2.<android.view.animation.ScaleAnimation: void setInterpolator(android.view.animation.Interpolator)>($r3);

        virtualinvoke $r2.<android.view.animation.ScaleAnimation: void setDuration(long)>(220L);

        virtualinvoke $r1.<android.view.animation.AnimationSet: void addAnimation(android.view.animation.Animation)>($r2);

        $r4 = new android.view.animation.AlphaAnimation;

        specialinvoke $r4.<android.view.animation.AlphaAnimation: void <init>(float,float)>($f2, $f3);

        $r3 = <androidx.fragment.app.FragmentManagerImpl: android.view.animation.Interpolator DECELERATE_CUBIC>;

        virtualinvoke $r4.<android.view.animation.AlphaAnimation: void setInterpolator(android.view.animation.Interpolator)>($r3);

        virtualinvoke $r4.<android.view.animation.AlphaAnimation: void setDuration(long)>(220L);

        virtualinvoke $r1.<android.view.animation.AnimationSet: void addAnimation(android.view.animation.Animation)>($r4);

        $r5 = new androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator;

        specialinvoke $r5.<androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator: void <init>(android.view.animation.Animation)>($r1);

        return $r5;
    }

    private void makeRemovedFragmentsInvisible(androidx.collection.ArraySet)
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        androidx.collection.ArraySet $r1;
        int $i0, $i1;
        java.lang.Object $r2;
        androidx.fragment.app.Fragment $r3;
        boolean $z0;
        android.view.View $r4;
        float $f0;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 := @parameter0: androidx.collection.ArraySet;

        $i0 = virtualinvoke $r1.<androidx.collection.ArraySet: int size()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r2 = virtualinvoke $r1.<androidx.collection.ArraySet: java.lang.Object valueAt(int)>($i1);

        $r3 = (androidx.fragment.app.Fragment) $r2;

        $z0 = $r3.<androidx.fragment.app.Fragment: boolean mAdded>;

        if $z0 != 0 goto label2;

        $r4 = virtualinvoke $r3.<androidx.fragment.app.Fragment: android.view.View getView()>();

        $f0 = virtualinvoke $r4.<android.view.View: float getAlpha()>();

        $r3.<androidx.fragment.app.Fragment: float mPostponedAlpha> = $f0;

        virtualinvoke $r4.<android.view.View: void setAlpha(float)>(0.0F);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return;
    }

    static boolean modifiesAlpha(android.animation.Animator)
    {
        android.animation.Animator $r0;
        java.lang.String $r1, $r5;
        boolean $z0;
        android.animation.ValueAnimator $r2;
        android.animation.PropertyValuesHolder[] $r3;
        int $i0, $i1;
        android.animation.PropertyValuesHolder $r4;
        android.animation.AnimatorSet $r6;
        java.util.ArrayList $r7;
        java.lang.Object $r8;

        $r0 := @parameter0: android.animation.Animator;

        if $r0 != null goto label1;

        return 0;

     label1:
        $z0 = $r0 instanceof android.animation.ValueAnimator;

        if $z0 == 0 goto label4;

        $r2 = (android.animation.ValueAnimator) $r0;

        $r3 = virtualinvoke $r2.<android.animation.ValueAnimator: android.animation.PropertyValuesHolder[] getValues()>();

        $i0 = 0;

     label2:
        $i1 = lengthof $r3;

        if $i0 >= $i1 goto label7;

        $r4 = $r3[$i0];

        $r5 = virtualinvoke $r4.<android.animation.PropertyValuesHolder: java.lang.String getPropertyName()>();

        $r1 = "alpha";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        $i0 = $i0 + 1;

        goto label2;

     label4:
        $z0 = $r0 instanceof android.animation.AnimatorSet;

        if $z0 == 0 goto label7;

        $r6 = (android.animation.AnimatorSet) $r0;

        $r7 = virtualinvoke $r6.<android.animation.AnimatorSet: java.util.ArrayList getChildAnimations()>();

        $i0 = 0;

     label5:
        $i1 = interfaceinvoke $r7.<java.util.List: int size()>();

        if $i0 >= $i1 goto label7;

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>($i0);

        $r0 = (android.animation.Animator) $r8;

        $z0 = staticinvoke <androidx.fragment.app.FragmentManagerImpl: boolean modifiesAlpha(android.animation.Animator)>($r0);

        if $z0 == 0 goto label6;

        return 1;

     label6:
        $i0 = $i0 + 1;

        goto label5;

     label7:
        return 0;
    }

    static boolean modifiesAlpha(androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator)
    {
        androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator $r0;
        android.view.animation.Animation $r1;
        boolean $z0;
        android.view.animation.AnimationSet $r2;
        java.util.List $r3;
        int $i0, $i1;
        java.lang.Object $r4;
        android.animation.Animator $r5;

        $r0 := @parameter0: androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator;

        $r1 = $r0.<androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator: android.view.animation.Animation animation>;

        $z0 = $r1 instanceof android.view.animation.AlphaAnimation;

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r1 = $r0.<androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator: android.view.animation.Animation animation>;

        $z0 = $r1 instanceof android.view.animation.AnimationSet;

        if $z0 == 0 goto label5;

        $r1 = $r0.<androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator: android.view.animation.Animation animation>;

        $r2 = (android.view.animation.AnimationSet) $r1;

        $r3 = virtualinvoke $r2.<android.view.animation.AnimationSet: java.util.List getAnimations()>();

        $i0 = 0;

     label2:
        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i0 >= $i1 goto label4;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>($i0);

        $z0 = $r4 instanceof android.view.animation.AlphaAnimation;

        if $z0 == 0 goto label3;

        return 1;

     label3:
        $i0 = $i0 + 1;

        goto label2;

     label4:
        return 0;

     label5:
        $r5 = $r0.<androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator: android.animation.Animator animator>;

        $z0 = staticinvoke <androidx.fragment.app.FragmentManagerImpl: boolean modifiesAlpha(android.animation.Animator)>($r5);

        return $z0;
    }

    private boolean popBackStackImmediate(java.lang.String, int, int)
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        java.lang.String $r1;
        int $i0, $i1;
        java.util.ArrayList $r2, $r3;
        androidx.fragment.app.Fragment $r4;
        androidx.fragment.app.FragmentManager $r5;
        boolean $z0;
        java.lang.Throwable $r6;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        virtualinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: boolean execPendingActions()>();

        specialinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void ensureExecReady(boolean)>(1);

        $r4 = $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment mPrimaryNav>;

        if $r4 == null goto label1;

        if $i0 >= 0 goto label1;

        if $r1 != null goto label1;

        $r5 = virtualinvoke $r4.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager peekChildFragmentManager()>();

        if $r5 == null goto label1;

        $z0 = virtualinvoke $r5.<androidx.fragment.app.FragmentManager: boolean popBackStackImmediate()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r2 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mTmpRecords>;

        $r3 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mTmpIsPop>;

        $z0 = virtualinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: boolean popBackStackState(java.util.ArrayList,java.util.ArrayList,java.lang.String,int,int)>($r2, $r3, $r1, $i0, $i1);

        if $z0 == 0 goto label5;

        $r0.<androidx.fragment.app.FragmentManagerImpl: boolean mExecutingActions> = 1;

     label2:
        $r2 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mTmpRecords>;

        $r3 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mTmpIsPop>;

        specialinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList)>($r2, $r3);

     label3:
        specialinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void cleanupExec()>();

        goto label5;

     label4:
        $r6 := @caughtexception;

        specialinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void cleanupExec()>();

        throw $r6;

     label5:
        virtualinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void doPendingDeferredStart()>();

        specialinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void burpActive()>();

        return $z0;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    private int postponePostponableTransactions(java.util.ArrayList, java.util.ArrayList, int, int, androidx.collection.ArraySet)
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        java.util.ArrayList $r1, $r2, $r4;
        int $i0, $i1, $i2, $i3, $i4;
        androidx.collection.ArraySet $r3;
        java.lang.Object $r5;
        androidx.fragment.app.BackStackRecord $r6;
        java.lang.Boolean $r7;
        boolean $z0, $z1;
        androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener $r8;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 := @parameter0: java.util.ArrayList;

        $r2 := @parameter1: java.util.ArrayList;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $r3 := @parameter4: androidx.collection.ArraySet;

        $i2 = $i1;

        $i3 = $i1 + -1;

     label1:
        if $i3 < $i0 goto label9;

        $r5 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i3);

        $r6 = (androidx.fragment.app.BackStackRecord) $r5;

        $r5 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i3);

        $r7 = (java.lang.Boolean) $r5;

        $z0 = virtualinvoke $r7.<java.lang.Boolean: boolean booleanValue()>();

        $z1 = virtualinvoke $r6.<androidx.fragment.app.BackStackRecord: boolean isPostponed()>();

        if $z1 == 0 goto label2;

        $i4 = $i3 + 1;

        $z1 = virtualinvoke $r6.<androidx.fragment.app.BackStackRecord: boolean interactsWith(java.util.ArrayList,int,int)>($r1, $i4, $i1);

        if $z1 != 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        if $z1 == 0 goto label8;

        $r4 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mPostponedTransactions>;

        if $r4 != null goto label4;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mPostponedTransactions> = $r4;

     label4:
        $r8 = new androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener;

        specialinvoke $r8.<androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener: void <init>(androidx.fragment.app.BackStackRecord,boolean)>($r6, $z0);

        $r4 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mPostponedTransactions>;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r8);

        virtualinvoke $r6.<androidx.fragment.app.BackStackRecord: void setOnStartPostponedListener(androidx.fragment.app.Fragment$OnStartEnterTransitionListener)>($r8);

        if $z0 == 0 goto label5;

        virtualinvoke $r6.<androidx.fragment.app.BackStackRecord: void executeOps()>();

        goto label6;

     label5:
        virtualinvoke $r6.<androidx.fragment.app.BackStackRecord: void executePopOps(boolean)>(0);

     label6:
        $i2 = $i2 + -1;

        if $i3 == $i2 goto label7;

        virtualinvoke $r1.<java.util.ArrayList: java.lang.Object remove(int)>($i3);

        virtualinvoke $r1.<java.util.ArrayList: void add(int,java.lang.Object)>($i2, $r6);

     label7:
        specialinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void addAddedFragments(androidx.collection.ArraySet)>($r3);

     label8:
        $i3 = $i3 + -1;

        goto label1;

     label9:
        return $i2;
    }

    private void removeRedundantOperationsAndExecute(java.util.ArrayList, java.util.ArrayList)
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        java.util.ArrayList $r1, $r2;
        boolean $z0;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r3;
        androidx.fragment.app.BackStackRecord $r4;
        java.lang.Boolean $r5;
        java.lang.IllegalStateException $r6;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 := @parameter0: java.util.ArrayList;

        $r2 := @parameter1: java.util.ArrayList;

        if $r1 == null goto label9;

        $z0 = virtualinvoke $r1.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        if $r2 == null goto label8;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if $i0 != $i1 goto label8;

        specialinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void executePostponedTransaction(java.util.ArrayList,java.util.ArrayList)>($r1, $r2);

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $i1 = 0;

        $i2 = 0;

     label2:
        if $i2 >= $i0 goto label7;

        $r3 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r4 = (androidx.fragment.app.BackStackRecord) $r3;

        $z0 = $r4.<androidx.fragment.app.BackStackRecord: boolean mReorderingAllowed>;

        if $z0 != 0 goto label6;

        if $i1 == $i2 goto label3;

        specialinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)>($r1, $r2, $i1, $i2);

     label3:
        $i3 = $i2 + 1;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r5 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label5;

     label4:
        if $i3 >= $i0 goto label5;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i3);

        $r5 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label5;

        $r3 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i3);

        $r4 = (androidx.fragment.app.BackStackRecord) $r3;

        $z0 = $r4.<androidx.fragment.app.BackStackRecord: boolean mReorderingAllowed>;

        if $z0 != 0 goto label5;

        $i3 = $i3 + 1;

        goto label4;

     label5:
        specialinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)>($r1, $r2, $i2, $i3);

        $i1 = $i3;

        $i2 = $i3 + -1;

     label6:
        $i2 = $i2 + 1;

        goto label2;

     label7:
        if $i1 == $i0 goto label9;

        specialinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)>($r1, $r2, $i1, $i0);

        return;

     label8:
        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Internal error with the back stack records");

        throw $r6;

     label9:
        return;
    }

    public static int reverseTransit(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        if $i0 == 4097 goto label3;

        if $i0 == 4099 goto label2;

        if $i0 == 8194 goto label1;

        return 0;

     label1:
        return 4097;

     label2:
        return 4099;

     label3:
        return 8194;
    }

    private static void setHWLayerAnimListenerIfAlpha(android.view.View, androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator)
    {
        android.view.View $r0;
        androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator $r1;
        boolean $z0;
        android.animation.Animator $r2;
        androidx.fragment.app.FragmentManagerImpl$AnimatorOnHWLayerIfNeededListener $r3;
        android.view.animation.Animation $r4;
        android.view.animation.Animation$AnimationListener $r5;
        androidx.fragment.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener $r6;

        $r0 := @parameter0: android.view.View;

        $r1 := @parameter1: androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator;

        if $r0 == null goto label3;

        if $r1 != null goto label1;

        return;

     label1:
        $z0 = staticinvoke <androidx.fragment.app.FragmentManagerImpl: boolean shouldRunOnHWLayer(android.view.View,androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator)>($r0, $r1);

        if $z0 == 0 goto label3;

        $r2 = $r1.<androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator: android.animation.Animator animator>;

        if $r2 == null goto label2;

        $r2 = $r1.<androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator: android.animation.Animator animator>;

        $r3 = new androidx.fragment.app.FragmentManagerImpl$AnimatorOnHWLayerIfNeededListener;

        specialinvoke $r3.<androidx.fragment.app.FragmentManagerImpl$AnimatorOnHWLayerIfNeededListener: void <init>(android.view.View)>($r0);

        virtualinvoke $r2.<android.animation.Animator: void addListener(android.animation.Animator$AnimatorListener)>($r3);

        return;

     label2:
        $r4 = $r1.<androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator: android.view.animation.Animation animation>;

        $r5 = staticinvoke <androidx.fragment.app.FragmentManagerImpl: android.view.animation.Animation$AnimationListener getAnimationListener(android.view.animation.Animation)>($r4);

        virtualinvoke $r0.<android.view.View: void setLayerType(int,android.graphics.Paint)>(2, null);

        $r4 = $r1.<androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator: android.view.animation.Animation animation>;

        $r6 = new androidx.fragment.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener;

        specialinvoke $r6.<androidx.fragment.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener: void <init>(android.view.View,android.view.animation.Animation$AnimationListener)>($r0, $r5);

        virtualinvoke $r4.<android.view.animation.Animation: void setAnimationListener(android.view.animation.Animation$AnimationListener)>($r6);

     label3:
        return;
    }

    private static void setRetaining(androidx.fragment.app.FragmentManagerNonConfig)
    {
        androidx.fragment.app.FragmentManagerNonConfig $r0;
        java.util.List $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        androidx.fragment.app.Fragment $r4;

        $r0 := @parameter0: androidx.fragment.app.FragmentManagerNonConfig;

        if $r0 != null goto label1;

        return;

     label1:
        $r1 = virtualinvoke $r0.<androidx.fragment.app.FragmentManagerNonConfig: java.util.List getFragments()>();

        if $r1 == null goto label3;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (androidx.fragment.app.Fragment) $r3;

        $r4.<androidx.fragment.app.Fragment: boolean mRetaining> = 1;

        goto label2;

     label3:
        $r1 = virtualinvoke $r0.<androidx.fragment.app.FragmentManagerNonConfig: java.util.List getChildNonConfigs()>();

        if $r1 == null goto label5;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r0 = (androidx.fragment.app.FragmentManagerNonConfig) $r3;

        staticinvoke <androidx.fragment.app.FragmentManagerImpl: void setRetaining(androidx.fragment.app.FragmentManagerNonConfig)>($r0);

        goto label4;

     label5:
        return;
    }

    static boolean shouldRunOnHWLayer(android.view.View, androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator)
    {
        android.view.View $r0;
        androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator $r1;
        int $i0;
        boolean $z0;

        $r0 := @parameter0: android.view.View;

        $r1 := @parameter1: androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator;

        if $r0 == null goto label2;

        if $r1 != null goto label1;

        return 0;

     label1:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 19 goto label2;

        $i0 = virtualinvoke $r0.<android.view.View: int getLayerType()>();

        if $i0 != 0 goto label2;

        $z0 = staticinvoke <androidx.core.view.ViewCompat: boolean hasOverlappingRendering(android.view.View)>($r0);

        if $z0 == 0 goto label2;

        $z0 = staticinvoke <androidx.fragment.app.FragmentManagerImpl: boolean modifiesAlpha(androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator)>($r1);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private void throwException(java.lang.RuntimeException)
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        java.lang.RuntimeException $r1;
        java.io.PrintWriter $r2;
        java.lang.String $r3;
        androidx.core.util.LogWriter $r4;
        androidx.fragment.app.FragmentHostCallback $r5;
        java.lang.String[] $r6;
        java.lang.Exception $r7, $r8;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 := @parameter0: java.lang.RuntimeException;

        $r3 = virtualinvoke $r1.<java.lang.RuntimeException: java.lang.String getMessage()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("FragmentManager", $r3);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("FragmentManager", "Activity state:");

        $r4 = new androidx.core.util.LogWriter;

        specialinvoke $r4.<androidx.core.util.LogWriter: void <init>(java.lang.String)>("FragmentManager");

        $r2 = new java.io.PrintWriter;

        specialinvoke $r2.<java.io.PrintWriter: void <init>(java.io.Writer)>($r4);

        $r5 = $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost>;

        if $r5 == null goto label4;

     label1:
        $r6 = newarray (java.lang.String)[0];

        virtualinvoke $r5.<androidx.fragment.app.FragmentHostCallback: void onDump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>("  ", null, $r2, $r6);

     label2:
        goto label7;

     label3:
        $r7 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("FragmentManager", "Failed dumping state", $r7);

        goto label7;

     label4:
        $r6 = newarray (java.lang.String)[0];

        virtualinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>("  ", null, $r2, $r6);

     label5:
        goto label7;

     label6:
        $r8 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("FragmentManager", "Failed dumping state", $r8);

     label7:
        throw $r1;

        catch java.lang.Exception from label1 to label2 with label3;
        catch java.lang.Exception from label4 to label5 with label6;
    }

    public static int transitToStyleIndex(int, boolean)
    {
        int $i0;
        boolean $z0;
        byte $b1;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        if $i0 == 4097 goto label7;

        if $i0 == 4099 goto label4;

        if $i0 == 8194 goto label1;

        return -1;

     label1:
        if $z0 == 0 goto label2;

        $b1 = 3;

        goto label3;

     label2:
        $b1 = 4;

     label3:
        return $b1;

     label4:
        if $z0 == 0 goto label5;

        $b1 = 5;

        goto label6;

     label5:
        $b1 = 6;

     label6:
        return $b1;

     label7:
        if $z0 == 0 goto label8;

        $b1 = 1;

        goto label9;

     label8:
        $b1 = 2;

     label9:
        return $b1;
    }

    void addBackStackState(androidx.fragment.app.BackStackRecord)
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        androidx.fragment.app.BackStackRecord $r1;
        java.util.ArrayList $r2;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 := @parameter0: androidx.fragment.app.BackStackRecord;

        $r2 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStack>;

        if $r2 != null goto label1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStack> = $r2;

     label1:
        $r2 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStack>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        return;
    }

    public void addFragment(androidx.fragment.app.Fragment, boolean)
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        androidx.fragment.app.Fragment $r1;
        boolean $z0, $z1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        java.util.ArrayList $r4, $r5;
        android.view.View $r6;
        java.lang.Throwable $r7;
        java.lang.IllegalStateException $r8;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 := @parameter0: androidx.fragment.app.Fragment;

        $z0 := @parameter1: boolean;

        $z1 = <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG>;

        if $z1 == 0 goto label01;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("add: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r3);

     label01:
        virtualinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void makeActive(androidx.fragment.app.Fragment)>($r1);

        $z1 = $r1.<androidx.fragment.app.Fragment: boolean mDetached>;

        if $z1 != 0 goto label10;

        $r4 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $z1 = virtualinvoke $r4.<java.util.ArrayList: boolean contains(java.lang.Object)>($r1);

        if $z1 != 0 goto label09;

        $r4 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        entermonitor $r4;

     label02:
        $r5 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        exitmonitor $r4;

     label03:
        $r1.<androidx.fragment.app.Fragment: boolean mAdded> = 1;

        $r1.<androidx.fragment.app.Fragment: boolean mRemoving> = 0;

        $r6 = $r1.<androidx.fragment.app.Fragment: android.view.View mView>;

        if $r6 != null goto label04;

        $r1.<androidx.fragment.app.Fragment: boolean mHiddenChanged> = 0;

     label04:
        $z1 = $r1.<androidx.fragment.app.Fragment: boolean mHasMenu>;

        if $z1 == 0 goto label05;

        $z1 = $r1.<androidx.fragment.app.Fragment: boolean mMenuVisible>;

        if $z1 == 0 goto label05;

        $r0.<androidx.fragment.app.FragmentManagerImpl: boolean mNeedMenuInvalidate> = 1;

     label05:
        if $z0 == 0 goto label10;

        virtualinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void moveToState(androidx.fragment.app.Fragment)>($r1);

        return;

     label06:
        $r7 := @caughtexception;

     label07:
        exitmonitor $r4;

     label08:
        throw $r7;

     label09:
        $r8 = new java.lang.IllegalStateException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fragment already added: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r3);

        throw $r8;

     label10:
        return;

        catch java.lang.Throwable from label02 to label03 with label06;
        catch java.lang.Throwable from label07 to label08 with label06;
    }

    public void addOnBackStackChangedListener(androidx.fragment.app.FragmentManager$OnBackStackChangedListener)
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        androidx.fragment.app.FragmentManager$OnBackStackChangedListener $r1;
        java.util.ArrayList $r2;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 := @parameter0: androidx.fragment.app.FragmentManager$OnBackStackChangedListener;

        $r2 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStackChangeListeners>;

        if $r2 != null goto label1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStackChangeListeners> = $r2;

     label1:
        $r2 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStackChangeListeners>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        return;
    }

    public int allocBackStackIndex(androidx.fragment.app.BackStackRecord)
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        androidx.fragment.app.BackStackRecord $r1;
        java.util.ArrayList $r2, $r3;
        int $i0;
        java.lang.Object $r4;
        java.lang.Integer $r5;
        boolean $z0;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;
        java.lang.Throwable $r8;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 := @parameter0: androidx.fragment.app.BackStackRecord;

        entermonitor $r0;

     label01:
        $r2 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAvailBackStackIndices>;

        if $r2 == null goto label05;

        $r2 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAvailBackStackIndices>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if $i0 > 0 goto label02;

        goto label05;

     label02:
        $r2 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAvailBackStackIndices>;

        $r3 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAvailBackStackIndices>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        $i0 = $i0 + -1;

        $r4 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object remove(int)>($i0);

        $r5 = (java.lang.Integer) $r4;

        $i0 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        $z0 = <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG>;

        if $z0 == 0 goto label03;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Adding back stack index ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r7);

     label03:
        $r2 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStackIndices>;

        virtualinvoke $r2.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>($i0, $r1);

        exitmonitor $r0;

     label04:
        return $i0;

     label05:
        $r2 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStackIndices>;

        if $r2 != null goto label06;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStackIndices> = $r2;

     label06:
        $r2 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStackIndices>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        $z0 = <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG>;

        if $z0 == 0 goto label07;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting back stack index ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r7);

     label07:
        $r2 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStackIndices>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        exitmonitor $r0;

     label08:
        return $i0;

     label09:
        $r8 := @caughtexception;

        exitmonitor $r0;

     label10:
        throw $r8;

        catch java.lang.Throwable from label01 to label04 with label09;
        catch java.lang.Throwable from label05 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public void attachController(androidx.fragment.app.FragmentHostCallback, androidx.fragment.app.FragmentContainer, androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        androidx.fragment.app.FragmentHostCallback $r1, $r4;
        androidx.fragment.app.FragmentContainer $r2;
        androidx.fragment.app.Fragment $r3;
        java.lang.IllegalStateException $r5;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 := @parameter0: androidx.fragment.app.FragmentHostCallback;

        $r2 := @parameter1: androidx.fragment.app.FragmentContainer;

        $r3 := @parameter2: androidx.fragment.app.Fragment;

        $r4 = $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost>;

        if $r4 != null goto label1;

        $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost> = $r1;

        $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentContainer mContainer> = $r2;

        $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment mParent> = $r3;

        return;

     label1:
        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Already attached");

        throw $r5;
    }

    public void attachFragment(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        androidx.fragment.app.Fragment $r1;
        boolean $z0;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        java.util.ArrayList $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.IllegalStateException $r7;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 := @parameter0: androidx.fragment.app.Fragment;

        $z0 = <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("attach: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r3);

     label1:
        $z0 = $r1.<androidx.fragment.app.Fragment: boolean mDetached>;

        if $z0 == 0 goto label9;

        $r1.<androidx.fragment.app.Fragment: boolean mDetached> = 0;

        $z0 = $r1.<androidx.fragment.app.Fragment: boolean mAdded>;

        if $z0 != 0 goto label9;

        $r4 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $z0 = virtualinvoke $r4.<java.util.ArrayList: boolean contains(java.lang.Object)>($r1);

        if $z0 != 0 goto label8;

        $z0 = <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG>;

        if $z0 == 0 goto label2;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("add from attach: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r3);

     label2:
        $r4 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        entermonitor $r4;

     label3:
        $r5 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        exitmonitor $r4;

     label4:
        $r1.<androidx.fragment.app.Fragment: boolean mAdded> = 1;

        $z0 = $r1.<androidx.fragment.app.Fragment: boolean mHasMenu>;

        if $z0 == 0 goto label9;

        $z0 = $r1.<androidx.fragment.app.Fragment: boolean mMenuVisible>;

        if $z0 == 0 goto label9;

        $r0.<androidx.fragment.app.FragmentManagerImpl: boolean mNeedMenuInvalidate> = 1;

        return;

     label5:
        $r6 := @caughtexception;

     label6:
        exitmonitor $r4;

     label7:
        throw $r6;

     label8:
        $r7 = new java.lang.IllegalStateException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fragment already added: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r3);

        throw $r7;

     label9:
        return;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public androidx.fragment.app.FragmentTransaction beginTransaction()
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        androidx.fragment.app.BackStackRecord $r1;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 = new androidx.fragment.app.BackStackRecord;

        specialinvoke $r1.<androidx.fragment.app.BackStackRecord: void <init>(androidx.fragment.app.FragmentManagerImpl)>($r0);

        return $r1;
    }

    void completeExecute(androidx.fragment.app.BackStackRecord, boolean, boolean, boolean)
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        androidx.fragment.app.BackStackRecord $r1;
        boolean $z0, $z1, $z2;
        java.util.ArrayList $r2, $r3;
        java.lang.Boolean $r4;
        int $i0, $i1, $i2;
        android.util.SparseArray $r5;
        java.lang.Object $r6;
        androidx.fragment.app.Fragment $r7;
        android.view.View $r8;
        float $f0;
        byte $b3;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 := @parameter0: androidx.fragment.app.BackStackRecord;

        $z0 := @parameter1: boolean;

        $z1 := @parameter2: boolean;

        $z2 := @parameter3: boolean;

        if $z0 == 0 goto label1;

        virtualinvoke $r1.<androidx.fragment.app.BackStackRecord: void executePopOps(boolean)>($z2);

        goto label2;

     label1:
        virtualinvoke $r1.<androidx.fragment.app.BackStackRecord: void executeOps()>();

     label2:
        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>(1);

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>(1);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        if $z1 == 0 goto label3;

        staticinvoke <androidx.fragment.app.FragmentTransition: void startTransitions(androidx.fragment.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean)>($r0, $r2, $r3, 0, 1, 1);

     label3:
        if $z2 == 0 goto label4;

        $i0 = $r0.<androidx.fragment.app.FragmentManagerImpl: int mCurState>;

        virtualinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void moveToState(int,boolean)>($i0, 1);

     label4:
        $r5 = $r0.<androidx.fragment.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        if $r5 == null goto label9;

        $i0 = virtualinvoke $r5.<android.util.SparseArray: int size()>();

        $i1 = 0;

     label5:
        if $i1 >= $i0 goto label9;

        $r5 = $r0.<androidx.fragment.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object valueAt(int)>($i1);

        $r7 = (androidx.fragment.app.Fragment) $r6;

        if $r7 == null goto label8;

        $r8 = $r7.<androidx.fragment.app.Fragment: android.view.View mView>;

        if $r8 == null goto label8;

        $z0 = $r7.<androidx.fragment.app.Fragment: boolean mIsNewlyAdded>;

        if $z0 == 0 goto label8;

        $i2 = $r7.<androidx.fragment.app.Fragment: int mContainerId>;

        $z0 = virtualinvoke $r1.<androidx.fragment.app.BackStackRecord: boolean interactsWith(int)>($i2);

        if $z0 == 0 goto label8;

        $f0 = $r7.<androidx.fragment.app.Fragment: float mPostponedAlpha>;

        $b3 = $f0 cmpl 0.0F;

        if $b3 <= 0 goto label6;

        $r8 = $r7.<androidx.fragment.app.Fragment: android.view.View mView>;

        $f0 = $r7.<androidx.fragment.app.Fragment: float mPostponedAlpha>;

        virtualinvoke $r8.<android.view.View: void setAlpha(float)>($f0);

     label6:
        if $z2 == 0 goto label7;

        $r7.<androidx.fragment.app.Fragment: float mPostponedAlpha> = 0.0F;

        goto label8;

     label7:
        $r7.<androidx.fragment.app.Fragment: float mPostponedAlpha> = -1.0F;

        $r7.<androidx.fragment.app.Fragment: boolean mIsNewlyAdded> = 0;

     label8:
        $i1 = $i1 + 1;

        goto label5;

     label9:
        return;
    }

    void completeShowHideFragment(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        androidx.fragment.app.Fragment $r1;
        android.animation.Animator $r2;
        androidx.fragment.app.FragmentManagerImpl$4 $r3;
        android.view.View $r4;
        int $i0, $i1;
        boolean $z0;
        androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator $r5;
        android.view.ViewGroup $r6;
        android.view.animation.Animation $r7;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 := @parameter0: androidx.fragment.app.Fragment;

        $r4 = $r1.<androidx.fragment.app.Fragment: android.view.View mView>;

        if $r4 == null goto label8;

        $i0 = virtualinvoke $r1.<androidx.fragment.app.Fragment: int getNextTransition()>();

        $z0 = $r1.<androidx.fragment.app.Fragment: boolean mHidden>;

        $z0 = $z0 ^ 1;

        $i1 = virtualinvoke $r1.<androidx.fragment.app.Fragment: int getNextTransitionStyle()>();

        $r5 = virtualinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator loadAnimation(androidx.fragment.app.Fragment,int,boolean,int)>($r1, $i0, $z0, $i1);

        if $r5 == null goto label4;

        $r2 = $r5.<androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator: android.animation.Animator animator>;

        if $r2 == null goto label4;

        $r2 = $r5.<androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator: android.animation.Animator animator>;

        $r4 = $r1.<androidx.fragment.app.Fragment: android.view.View mView>;

        virtualinvoke $r2.<android.animation.Animator: void setTarget(java.lang.Object)>($r4);

        $z0 = $r1.<androidx.fragment.app.Fragment: boolean mHidden>;

        if $z0 == 0 goto label2;

        $z0 = virtualinvoke $r1.<androidx.fragment.app.Fragment: boolean isHideReplaced()>();

        if $z0 == 0 goto label1;

        virtualinvoke $r1.<androidx.fragment.app.Fragment: void setHideReplaced(boolean)>(0);

        goto label3;

     label1:
        $r6 = $r1.<androidx.fragment.app.Fragment: android.view.ViewGroup mContainer>;

        $r4 = $r1.<androidx.fragment.app.Fragment: android.view.View mView>;

        virtualinvoke $r6.<android.view.ViewGroup: void startViewTransition(android.view.View)>($r4);

        $r2 = $r5.<androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator: android.animation.Animator animator>;

        $r3 = new androidx.fragment.app.FragmentManagerImpl$4;

        specialinvoke $r3.<androidx.fragment.app.FragmentManagerImpl$4: void <init>(androidx.fragment.app.FragmentManagerImpl,android.view.ViewGroup,android.view.View,androidx.fragment.app.Fragment)>($r0, $r6, $r4, $r1);

        virtualinvoke $r2.<android.animation.Animator: void addListener(android.animation.Animator$AnimatorListener)>($r3);

        goto label3;

     label2:
        $r4 = $r1.<androidx.fragment.app.Fragment: android.view.View mView>;

        virtualinvoke $r4.<android.view.View: void setVisibility(int)>(0);

     label3:
        $r4 = $r1.<androidx.fragment.app.Fragment: android.view.View mView>;

        staticinvoke <androidx.fragment.app.FragmentManagerImpl: void setHWLayerAnimListenerIfAlpha(android.view.View,androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator)>($r4, $r5);

        $r2 = $r5.<androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator: android.animation.Animator animator>;

        virtualinvoke $r2.<android.animation.Animator: void start()>();

        goto label8;

     label4:
        if $r5 == null goto label5;

        $r4 = $r1.<androidx.fragment.app.Fragment: android.view.View mView>;

        staticinvoke <androidx.fragment.app.FragmentManagerImpl: void setHWLayerAnimListenerIfAlpha(android.view.View,androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator)>($r4, $r5);

        $r4 = $r1.<androidx.fragment.app.Fragment: android.view.View mView>;

        $r7 = $r5.<androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator: android.view.animation.Animation animation>;

        virtualinvoke $r4.<android.view.View: void startAnimation(android.view.animation.Animation)>($r7);

        $r7 = $r5.<androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator: android.view.animation.Animation animation>;

        virtualinvoke $r7.<android.view.animation.Animation: void start()>();

     label5:
        $z0 = $r1.<androidx.fragment.app.Fragment: boolean mHidden>;

        if $z0 == 0 goto label6;

        $z0 = virtualinvoke $r1.<androidx.fragment.app.Fragment: boolean isHideReplaced()>();

        if $z0 != 0 goto label6;

        $i0 = 8;

        goto label7;

     label6:
        $i0 = 0;

     label7:
        $r4 = $r1.<androidx.fragment.app.Fragment: android.view.View mView>;

        virtualinvoke $r4.<android.view.View: void setVisibility(int)>($i0);

        $z0 = virtualinvoke $r1.<androidx.fragment.app.Fragment: boolean isHideReplaced()>();

        if $z0 == 0 goto label8;

        virtualinvoke $r1.<androidx.fragment.app.Fragment: void setHideReplaced(boolean)>(0);

     label8:
        $z0 = $r1.<androidx.fragment.app.Fragment: boolean mAdded>;

        if $z0 == 0 goto label9;

        $z0 = $r1.<androidx.fragment.app.Fragment: boolean mHasMenu>;

        if $z0 == 0 goto label9;

        $z0 = $r1.<androidx.fragment.app.Fragment: boolean mMenuVisible>;

        if $z0 == 0 goto label9;

        $r0.<androidx.fragment.app.FragmentManagerImpl: boolean mNeedMenuInvalidate> = 1;

     label9:
        $r1.<androidx.fragment.app.Fragment: boolean mHiddenChanged> = 0;

        $z0 = $r1.<androidx.fragment.app.Fragment: boolean mHidden>;

        virtualinvoke $r1.<androidx.fragment.app.Fragment: void onHiddenChanged(boolean)>($z0);

        return;
    }

    public void detachFragment(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        androidx.fragment.app.Fragment $r1;
        boolean $z0;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        java.util.ArrayList $r4, $r5;
        java.lang.Throwable $r6;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 := @parameter0: androidx.fragment.app.Fragment;

        $z0 = <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("detach: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r3);

     label1:
        $z0 = $r1.<androidx.fragment.app.Fragment: boolean mDetached>;

        if $z0 != 0 goto label9;

        $r1.<androidx.fragment.app.Fragment: boolean mDetached> = 1;

        $z0 = $r1.<androidx.fragment.app.Fragment: boolean mAdded>;

        if $z0 == 0 goto label9;

        $z0 = <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG>;

        if $z0 == 0 goto label2;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("remove from detach: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r3);

     label2:
        $r4 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        entermonitor $r4;

     label3:
        $r5 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        virtualinvoke $r5.<java.util.ArrayList: boolean remove(java.lang.Object)>($r1);

        exitmonitor $r4;

     label4:
        $z0 = $r1.<androidx.fragment.app.Fragment: boolean mHasMenu>;

        if $z0 == 0 goto label5;

        $z0 = $r1.<androidx.fragment.app.Fragment: boolean mMenuVisible>;

        if $z0 == 0 goto label5;

        $r0.<androidx.fragment.app.FragmentManagerImpl: boolean mNeedMenuInvalidate> = 1;

     label5:
        $r1.<androidx.fragment.app.Fragment: boolean mAdded> = 0;

        return;

     label6:
        $r6 := @caughtexception;

     label7:
        exitmonitor $r4;

     label8:
        throw $r6;

     label9:
        return;

        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void dispatchActivityCreated()
    {
        androidx.fragment.app.FragmentManagerImpl $r0;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r0.<androidx.fragment.app.FragmentManagerImpl: boolean mStateSaved> = 0;

        $r0.<androidx.fragment.app.FragmentManagerImpl: boolean mStopped> = 0;

        specialinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void dispatchStateChange(int)>(2);

        return;
    }

    public void dispatchConfigurationChanged(android.content.res.Configuration)
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        android.content.res.Configuration $r1;
        int $i0, $i1;
        java.util.ArrayList $r2;
        java.lang.Object $r3;
        androidx.fragment.app.Fragment $r4;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 := @parameter0: android.content.res.Configuration;

        $i0 = 0;

     label1:
        $r2 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if $i0 >= $i1 goto label3;

        $r2 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r4 = (androidx.fragment.app.Fragment) $r3;

        if $r4 == null goto label2;

        virtualinvoke $r4.<androidx.fragment.app.Fragment: void performConfigurationChanged(android.content.res.Configuration)>($r1);

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        return;
    }

    public boolean dispatchContextItemSelected(android.view.MenuItem)
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        android.view.MenuItem $r1;
        int $i0, $i1;
        java.util.ArrayList $r2;
        java.lang.Object $r3;
        androidx.fragment.app.Fragment $r4;
        boolean $z0;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 := @parameter0: android.view.MenuItem;

        $i0 = $r0.<androidx.fragment.app.FragmentManagerImpl: int mCurState>;

        if $i0 >= 1 goto label1;

        return 0;

     label1:
        $i0 = 0;

     label2:
        $r2 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if $i0 >= $i1 goto label4;

        $r2 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r4 = (androidx.fragment.app.Fragment) $r3;

        if $r4 == null goto label3;

        $z0 = virtualinvoke $r4.<androidx.fragment.app.Fragment: boolean performContextItemSelected(android.view.MenuItem)>($r1);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        $i0 = $i0 + 1;

        goto label2;

     label4:
        return 0;
    }

    public void dispatchCreate()
    {
        androidx.fragment.app.FragmentManagerImpl $r0;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r0.<androidx.fragment.app.FragmentManagerImpl: boolean mStateSaved> = 0;

        $r0.<androidx.fragment.app.FragmentManagerImpl: boolean mStopped> = 0;

        specialinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void dispatchStateChange(int)>(1);

        return;
    }

    public boolean dispatchCreateOptionsMenu(android.view.Menu, android.view.MenuInflater)
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        android.view.Menu $r1;
        android.view.MenuInflater $r2;
        int $i0, $i1;
        boolean $z0, $z1;
        java.util.ArrayList $r3, $r4;
        java.lang.Object $r5;
        androidx.fragment.app.Fragment $r6;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 := @parameter0: android.view.Menu;

        $r2 := @parameter1: android.view.MenuInflater;

        $i0 = $r0.<androidx.fragment.app.FragmentManagerImpl: int mCurState>;

        if $i0 >= 1 goto label1;

        return 0;

     label1:
        $z0 = 0;

        $r3 = null;

        $i0 = 0;

     label2:
        $r4 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $i1 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        if $i0 >= $i1 goto label5;

        $r4 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r6 = (androidx.fragment.app.Fragment) $r5;

        if $r6 == null goto label4;

        $z1 = virtualinvoke $r6.<androidx.fragment.app.Fragment: boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>($r1, $r2);

        if $z1 == 0 goto label4;

        $z0 = 1;

        if $r3 != null goto label3;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

     label3:
        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

     label4:
        $i0 = $i0 + 1;

        goto label2;

     label5:
        $r4 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mCreatedMenus>;

        if $r4 == null goto label9;

        $i0 = 0;

     label6:
        $r4 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mCreatedMenus>;

        $i1 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        if $i0 >= $i1 goto label9;

        $r4 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mCreatedMenus>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r6 = (androidx.fragment.app.Fragment) $r5;

        if $r3 == null goto label7;

        $z1 = virtualinvoke $r3.<java.util.ArrayList: boolean contains(java.lang.Object)>($r6);

        if $z1 != 0 goto label8;

     label7:
        virtualinvoke $r6.<androidx.fragment.app.Fragment: void onDestroyOptionsMenu()>();

     label8:
        $i0 = $i0 + 1;

        goto label6;

     label9:
        $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mCreatedMenus> = $r3;

        return $z0;
    }

    public void dispatchDestroy()
    {
        androidx.fragment.app.FragmentManagerImpl $r0;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r0.<androidx.fragment.app.FragmentManagerImpl: boolean mDestroyed> = 1;

        virtualinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: boolean execPendingActions()>();

        specialinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void dispatchStateChange(int)>(0);

        $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost> = null;

        $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentContainer mContainer> = null;

        $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment mParent> = null;

        return;
    }

    public void dispatchDestroyView()
    {
        androidx.fragment.app.FragmentManagerImpl $r0;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        specialinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void dispatchStateChange(int)>(1);

        return;
    }

    public void dispatchLowMemory()
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        int $i0, $i1;
        java.util.ArrayList $r1;
        java.lang.Object $r2;
        androidx.fragment.app.Fragment $r3;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $i0 = 0;

     label1:
        $r1 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $i1 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $i0 >= $i1 goto label3;

        $r1 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r3 = (androidx.fragment.app.Fragment) $r2;

        if $r3 == null goto label2;

        virtualinvoke $r3.<androidx.fragment.app.Fragment: void performLowMemory()>();

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        return;
    }

    public void dispatchMultiWindowModeChanged(boolean)
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        boolean $z0;
        java.util.ArrayList $r1;
        int $i0;
        java.lang.Object $r2;
        androidx.fragment.app.Fragment $r3;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $z0 := @parameter0: boolean;

        $r1 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $i0 = $i0 + -1;

     label1:
        if $i0 < 0 goto label3;

        $r1 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r3 = (androidx.fragment.app.Fragment) $r2;

        if $r3 == null goto label2;

        virtualinvoke $r3.<androidx.fragment.app.Fragment: void performMultiWindowModeChanged(boolean)>($z0);

     label2:
        $i0 = $i0 + -1;

        goto label1;

     label3:
        return;
    }

    void dispatchOnFragmentActivityCreated(androidx.fragment.app.Fragment, android.os.Bundle, boolean)
    {
        androidx.fragment.app.FragmentManagerImpl $r0, $r5;
        androidx.fragment.app.Fragment $r1, $r3;
        android.os.Bundle $r2;
        boolean $z0, $z1;
        androidx.fragment.app.FragmentManager $r4;
        java.util.concurrent.CopyOnWriteArrayList $r6;
        java.util.Iterator $r7;
        java.lang.Object $r8;
        androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder $r9;
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks $r10;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 := @parameter0: androidx.fragment.app.Fragment;

        $r2 := @parameter1: android.os.Bundle;

        $z0 := @parameter2: boolean;

        $r3 = $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment mParent>;

        if $r3 == null goto label1;

        $r4 = virtualinvoke $r3.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getFragmentManager()>();

        $z1 = $r4 instanceof androidx.fragment.app.FragmentManagerImpl;

        if $z1 == 0 goto label1;

        $r5 = (androidx.fragment.app.FragmentManagerImpl) $r4;

        virtualinvoke $r5.<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentActivityCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean)>($r1, $r2, 1);

     label1:
        $r6 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks>;

        $r7 = virtualinvoke $r6.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder) $r8;

        if $z0 == 0 goto label3;

        $z1 = $r9.<androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder: boolean mRecursive>;

        if $z1 == 0 goto label2;

     label3:
        $r10 = $r9.<androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks mCallback>;

        virtualinvoke $r10.<androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentActivityCreated(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.os.Bundle)>($r0, $r1, $r2);

        goto label2;

     label4:
        return;
    }

    void dispatchOnFragmentAttached(androidx.fragment.app.Fragment, android.content.Context, boolean)
    {
        androidx.fragment.app.FragmentManagerImpl $r0, $r5;
        androidx.fragment.app.Fragment $r1, $r3;
        android.content.Context $r2;
        boolean $z0, $z1;
        androidx.fragment.app.FragmentManager $r4;
        java.util.concurrent.CopyOnWriteArrayList $r6;
        java.util.Iterator $r7;
        java.lang.Object $r8;
        androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder $r9;
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks $r10;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 := @parameter0: androidx.fragment.app.Fragment;

        $r2 := @parameter1: android.content.Context;

        $z0 := @parameter2: boolean;

        $r3 = $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment mParent>;

        if $r3 == null goto label1;

        $r4 = virtualinvoke $r3.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getFragmentManager()>();

        $z1 = $r4 instanceof androidx.fragment.app.FragmentManagerImpl;

        if $z1 == 0 goto label1;

        $r5 = (androidx.fragment.app.FragmentManagerImpl) $r4;

        virtualinvoke $r5.<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentAttached(androidx.fragment.app.Fragment,android.content.Context,boolean)>($r1, $r2, 1);

     label1:
        $r6 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks>;

        $r7 = virtualinvoke $r6.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder) $r8;

        if $z0 == 0 goto label3;

        $z1 = $r9.<androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder: boolean mRecursive>;

        if $z1 == 0 goto label2;

     label3:
        $r10 = $r9.<androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks mCallback>;

        virtualinvoke $r10.<androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentAttached(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.content.Context)>($r0, $r1, $r2);

        goto label2;

     label4:
        return;
    }

    void dispatchOnFragmentCreated(androidx.fragment.app.Fragment, android.os.Bundle, boolean)
    {
        androidx.fragment.app.FragmentManagerImpl $r0, $r5;
        androidx.fragment.app.Fragment $r1, $r3;
        android.os.Bundle $r2;
        boolean $z0, $z1;
        androidx.fragment.app.FragmentManager $r4;
        java.util.concurrent.CopyOnWriteArrayList $r6;
        java.util.Iterator $r7;
        java.lang.Object $r8;
        androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder $r9;
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks $r10;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 := @parameter0: androidx.fragment.app.Fragment;

        $r2 := @parameter1: android.os.Bundle;

        $z0 := @parameter2: boolean;

        $r3 = $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment mParent>;

        if $r3 == null goto label1;

        $r4 = virtualinvoke $r3.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getFragmentManager()>();

        $z1 = $r4 instanceof androidx.fragment.app.FragmentManagerImpl;

        if $z1 == 0 goto label1;

        $r5 = (androidx.fragment.app.FragmentManagerImpl) $r4;

        virtualinvoke $r5.<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean)>($r1, $r2, 1);

     label1:
        $r6 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks>;

        $r7 = virtualinvoke $r6.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder) $r8;

        if $z0 == 0 goto label3;

        $z1 = $r9.<androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder: boolean mRecursive>;

        if $z1 == 0 goto label2;

     label3:
        $r10 = $r9.<androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks mCallback>;

        virtualinvoke $r10.<androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentCreated(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.os.Bundle)>($r0, $r1, $r2);

        goto label2;

     label4:
        return;
    }

    void dispatchOnFragmentDestroyed(androidx.fragment.app.Fragment, boolean)
    {
        androidx.fragment.app.FragmentManagerImpl $r0, $r4;
        androidx.fragment.app.Fragment $r1, $r2;
        boolean $z0, $z1;
        androidx.fragment.app.FragmentManager $r3;
        java.util.concurrent.CopyOnWriteArrayList $r5;
        java.util.Iterator $r6;
        java.lang.Object $r7;
        androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder $r8;
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks $r9;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 := @parameter0: androidx.fragment.app.Fragment;

        $z0 := @parameter1: boolean;

        $r2 = $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment mParent>;

        if $r2 == null goto label1;

        $r3 = virtualinvoke $r2.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getFragmentManager()>();

        $z1 = $r3 instanceof androidx.fragment.app.FragmentManagerImpl;

        if $z1 == 0 goto label1;

        $r4 = (androidx.fragment.app.FragmentManagerImpl) $r3;

        virtualinvoke $r4.<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentDestroyed(androidx.fragment.app.Fragment,boolean)>($r1, 1);

     label1:
        $r5 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks>;

        $r6 = virtualinvoke $r5.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder) $r7;

        if $z0 == 0 goto label3;

        $z1 = $r8.<androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder: boolean mRecursive>;

        if $z1 == 0 goto label2;

     label3:
        $r9 = $r8.<androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks mCallback>;

        virtualinvoke $r9.<androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentDestroyed(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)>($r0, $r1);

        goto label2;

     label4:
        return;
    }

    void dispatchOnFragmentDetached(androidx.fragment.app.Fragment, boolean)
    {
        androidx.fragment.app.FragmentManagerImpl $r0, $r4;
        androidx.fragment.app.Fragment $r1, $r2;
        boolean $z0, $z1;
        androidx.fragment.app.FragmentManager $r3;
        java.util.concurrent.CopyOnWriteArrayList $r5;
        java.util.Iterator $r6;
        java.lang.Object $r7;
        androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder $r8;
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks $r9;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 := @parameter0: androidx.fragment.app.Fragment;

        $z0 := @parameter1: boolean;

        $r2 = $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment mParent>;

        if $r2 == null goto label1;

        $r3 = virtualinvoke $r2.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getFragmentManager()>();

        $z1 = $r3 instanceof androidx.fragment.app.FragmentManagerImpl;

        if $z1 == 0 goto label1;

        $r4 = (androidx.fragment.app.FragmentManagerImpl) $r3;

        virtualinvoke $r4.<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentDetached(androidx.fragment.app.Fragment,boolean)>($r1, 1);

     label1:
        $r5 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks>;

        $r6 = virtualinvoke $r5.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder) $r7;

        if $z0 == 0 goto label3;

        $z1 = $r8.<androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder: boolean mRecursive>;

        if $z1 == 0 goto label2;

     label3:
        $r9 = $r8.<androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks mCallback>;

        virtualinvoke $r9.<androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentDetached(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)>($r0, $r1);

        goto label2;

     label4:
        return;
    }

    void dispatchOnFragmentPaused(androidx.fragment.app.Fragment, boolean)
    {
        androidx.fragment.app.FragmentManagerImpl $r0, $r4;
        androidx.fragment.app.Fragment $r1, $r2;
        boolean $z0, $z1;
        androidx.fragment.app.FragmentManager $r3;
        java.util.concurrent.CopyOnWriteArrayList $r5;
        java.util.Iterator $r6;
        java.lang.Object $r7;
        androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder $r8;
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks $r9;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 := @parameter0: androidx.fragment.app.Fragment;

        $z0 := @parameter1: boolean;

        $r2 = $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment mParent>;

        if $r2 == null goto label1;

        $r3 = virtualinvoke $r2.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getFragmentManager()>();

        $z1 = $r3 instanceof androidx.fragment.app.FragmentManagerImpl;

        if $z1 == 0 goto label1;

        $r4 = (androidx.fragment.app.FragmentManagerImpl) $r3;

        virtualinvoke $r4.<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentPaused(androidx.fragment.app.Fragment,boolean)>($r1, 1);

     label1:
        $r5 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks>;

        $r6 = virtualinvoke $r5.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder) $r7;

        if $z0 == 0 goto label3;

        $z1 = $r8.<androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder: boolean mRecursive>;

        if $z1 == 0 goto label2;

     label3:
        $r9 = $r8.<androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks mCallback>;

        virtualinvoke $r9.<androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentPaused(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)>($r0, $r1);

        goto label2;

     label4:
        return;
    }

    void dispatchOnFragmentPreAttached(androidx.fragment.app.Fragment, android.content.Context, boolean)
    {
        androidx.fragment.app.FragmentManagerImpl $r0, $r5;
        androidx.fragment.app.Fragment $r1, $r3;
        android.content.Context $r2;
        boolean $z0, $z1;
        androidx.fragment.app.FragmentManager $r4;
        java.util.concurrent.CopyOnWriteArrayList $r6;
        java.util.Iterator $r7;
        java.lang.Object $r8;
        androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder $r9;
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks $r10;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 := @parameter0: androidx.fragment.app.Fragment;

        $r2 := @parameter1: android.content.Context;

        $z0 := @parameter2: boolean;

        $r3 = $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment mParent>;

        if $r3 == null goto label1;

        $r4 = virtualinvoke $r3.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getFragmentManager()>();

        $z1 = $r4 instanceof androidx.fragment.app.FragmentManagerImpl;

        if $z1 == 0 goto label1;

        $r5 = (androidx.fragment.app.FragmentManagerImpl) $r4;

        virtualinvoke $r5.<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentPreAttached(androidx.fragment.app.Fragment,android.content.Context,boolean)>($r1, $r2, 1);

     label1:
        $r6 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks>;

        $r7 = virtualinvoke $r6.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder) $r8;

        if $z0 == 0 goto label3;

        $z1 = $r9.<androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder: boolean mRecursive>;

        if $z1 == 0 goto label2;

     label3:
        $r10 = $r9.<androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks mCallback>;

        virtualinvoke $r10.<androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentPreAttached(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.content.Context)>($r0, $r1, $r2);

        goto label2;

     label4:
        return;
    }

    void dispatchOnFragmentPreCreated(androidx.fragment.app.Fragment, android.os.Bundle, boolean)
    {
        androidx.fragment.app.FragmentManagerImpl $r0, $r5;
        androidx.fragment.app.Fragment $r1, $r3;
        android.os.Bundle $r2;
        boolean $z0, $z1;
        androidx.fragment.app.FragmentManager $r4;
        java.util.concurrent.CopyOnWriteArrayList $r6;
        java.util.Iterator $r7;
        java.lang.Object $r8;
        androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder $r9;
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks $r10;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 := @parameter0: androidx.fragment.app.Fragment;

        $r2 := @parameter1: android.os.Bundle;

        $z0 := @parameter2: boolean;

        $r3 = $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment mParent>;

        if $r3 == null goto label1;

        $r4 = virtualinvoke $r3.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getFragmentManager()>();

        $z1 = $r4 instanceof androidx.fragment.app.FragmentManagerImpl;

        if $z1 == 0 goto label1;

        $r5 = (androidx.fragment.app.FragmentManagerImpl) $r4;

        virtualinvoke $r5.<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentPreCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean)>($r1, $r2, 1);

     label1:
        $r6 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks>;

        $r7 = virtualinvoke $r6.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder) $r8;

        if $z0 == 0 goto label3;

        $z1 = $r9.<androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder: boolean mRecursive>;

        if $z1 == 0 goto label2;

     label3:
        $r10 = $r9.<androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks mCallback>;

        virtualinvoke $r10.<androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentPreCreated(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.os.Bundle)>($r0, $r1, $r2);

        goto label2;

     label4:
        return;
    }

    void dispatchOnFragmentResumed(androidx.fragment.app.Fragment, boolean)
    {
        androidx.fragment.app.FragmentManagerImpl $r0, $r4;
        androidx.fragment.app.Fragment $r1, $r2;
        boolean $z0, $z1;
        androidx.fragment.app.FragmentManager $r3;
        java.util.concurrent.CopyOnWriteArrayList $r5;
        java.util.Iterator $r6;
        java.lang.Object $r7;
        androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder $r8;
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks $r9;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 := @parameter0: androidx.fragment.app.Fragment;

        $z0 := @parameter1: boolean;

        $r2 = $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment mParent>;

        if $r2 == null goto label1;

        $r3 = virtualinvoke $r2.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getFragmentManager()>();

        $z1 = $r3 instanceof androidx.fragment.app.FragmentManagerImpl;

        if $z1 == 0 goto label1;

        $r4 = (androidx.fragment.app.FragmentManagerImpl) $r3;

        virtualinvoke $r4.<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentResumed(androidx.fragment.app.Fragment,boolean)>($r1, 1);

     label1:
        $r5 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks>;

        $r6 = virtualinvoke $r5.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder) $r7;

        if $z0 == 0 goto label3;

        $z1 = $r8.<androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder: boolean mRecursive>;

        if $z1 == 0 goto label2;

     label3:
        $r9 = $r8.<androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks mCallback>;

        virtualinvoke $r9.<androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentResumed(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)>($r0, $r1);

        goto label2;

     label4:
        return;
    }

    void dispatchOnFragmentSaveInstanceState(androidx.fragment.app.Fragment, android.os.Bundle, boolean)
    {
        androidx.fragment.app.FragmentManagerImpl $r0, $r5;
        androidx.fragment.app.Fragment $r1, $r3;
        android.os.Bundle $r2;
        boolean $z0, $z1;
        androidx.fragment.app.FragmentManager $r4;
        java.util.concurrent.CopyOnWriteArrayList $r6;
        java.util.Iterator $r7;
        java.lang.Object $r8;
        androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder $r9;
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks $r10;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 := @parameter0: androidx.fragment.app.Fragment;

        $r2 := @parameter1: android.os.Bundle;

        $z0 := @parameter2: boolean;

        $r3 = $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment mParent>;

        if $r3 == null goto label1;

        $r4 = virtualinvoke $r3.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getFragmentManager()>();

        $z1 = $r4 instanceof androidx.fragment.app.FragmentManagerImpl;

        if $z1 == 0 goto label1;

        $r5 = (androidx.fragment.app.FragmentManagerImpl) $r4;

        virtualinvoke $r5.<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentSaveInstanceState(androidx.fragment.app.Fragment,android.os.Bundle,boolean)>($r1, $r2, 1);

     label1:
        $r6 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks>;

        $r7 = virtualinvoke $r6.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder) $r8;

        if $z0 == 0 goto label3;

        $z1 = $r9.<androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder: boolean mRecursive>;

        if $z1 == 0 goto label2;

     label3:
        $r10 = $r9.<androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks mCallback>;

        virtualinvoke $r10.<androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentSaveInstanceState(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.os.Bundle)>($r0, $r1, $r2);

        goto label2;

     label4:
        return;
    }

    void dispatchOnFragmentStarted(androidx.fragment.app.Fragment, boolean)
    {
        androidx.fragment.app.FragmentManagerImpl $r0, $r4;
        androidx.fragment.app.Fragment $r1, $r2;
        boolean $z0, $z1;
        androidx.fragment.app.FragmentManager $r3;
        java.util.concurrent.CopyOnWriteArrayList $r5;
        java.util.Iterator $r6;
        java.lang.Object $r7;
        androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder $r8;
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks $r9;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 := @parameter0: androidx.fragment.app.Fragment;

        $z0 := @parameter1: boolean;

        $r2 = $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment mParent>;

        if $r2 == null goto label1;

        $r3 = virtualinvoke $r2.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getFragmentManager()>();

        $z1 = $r3 instanceof androidx.fragment.app.FragmentManagerImpl;

        if $z1 == 0 goto label1;

        $r4 = (androidx.fragment.app.FragmentManagerImpl) $r3;

        virtualinvoke $r4.<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentStarted(androidx.fragment.app.Fragment,boolean)>($r1, 1);

     label1:
        $r5 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks>;

        $r6 = virtualinvoke $r5.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder) $r7;

        if $z0 == 0 goto label3;

        $z1 = $r8.<androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder: boolean mRecursive>;

        if $z1 == 0 goto label2;

     label3:
        $r9 = $r8.<androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks mCallback>;

        virtualinvoke $r9.<androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentStarted(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)>($r0, $r1);

        goto label2;

     label4:
        return;
    }

    void dispatchOnFragmentStopped(androidx.fragment.app.Fragment, boolean)
    {
        androidx.fragment.app.FragmentManagerImpl $r0, $r4;
        androidx.fragment.app.Fragment $r1, $r2;
        boolean $z0, $z1;
        androidx.fragment.app.FragmentManager $r3;
        java.util.concurrent.CopyOnWriteArrayList $r5;
        java.util.Iterator $r6;
        java.lang.Object $r7;
        androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder $r8;
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks $r9;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 := @parameter0: androidx.fragment.app.Fragment;

        $z0 := @parameter1: boolean;

        $r2 = $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment mParent>;

        if $r2 == null goto label1;

        $r3 = virtualinvoke $r2.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getFragmentManager()>();

        $z1 = $r3 instanceof androidx.fragment.app.FragmentManagerImpl;

        if $z1 == 0 goto label1;

        $r4 = (androidx.fragment.app.FragmentManagerImpl) $r3;

        virtualinvoke $r4.<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentStopped(androidx.fragment.app.Fragment,boolean)>($r1, 1);

     label1:
        $r5 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks>;

        $r6 = virtualinvoke $r5.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder) $r7;

        if $z0 == 0 goto label3;

        $z1 = $r8.<androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder: boolean mRecursive>;

        if $z1 == 0 goto label2;

     label3:
        $r9 = $r8.<androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks mCallback>;

        virtualinvoke $r9.<androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentStopped(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)>($r0, $r1);

        goto label2;

     label4:
        return;
    }

    void dispatchOnFragmentViewCreated(androidx.fragment.app.Fragment, android.view.View, android.os.Bundle, boolean)
    {
        androidx.fragment.app.FragmentManagerImpl $r0, $r6;
        androidx.fragment.app.Fragment $r1, $r4;
        android.view.View $r2;
        android.os.Bundle $r3;
        boolean $z0, $z1;
        androidx.fragment.app.FragmentManager $r5;
        java.util.concurrent.CopyOnWriteArrayList $r7;
        java.util.Iterator $r8;
        java.lang.Object $r9;
        androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder $r10;
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks $r11;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 := @parameter0: androidx.fragment.app.Fragment;

        $r2 := @parameter1: android.view.View;

        $r3 := @parameter2: android.os.Bundle;

        $z0 := @parameter3: boolean;

        $r4 = $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment mParent>;

        if $r4 == null goto label1;

        $r5 = virtualinvoke $r4.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getFragmentManager()>();

        $z1 = $r5 instanceof androidx.fragment.app.FragmentManagerImpl;

        if $z1 == 0 goto label1;

        $r6 = (androidx.fragment.app.FragmentManagerImpl) $r5;

        virtualinvoke $r6.<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentViewCreated(androidx.fragment.app.Fragment,android.view.View,android.os.Bundle,boolean)>($r1, $r2, $r3, 1);

     label1:
        $r7 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks>;

        $r8 = virtualinvoke $r7.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder) $r9;

        if $z0 == 0 goto label3;

        $z1 = $r10.<androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder: boolean mRecursive>;

        if $z1 == 0 goto label2;

     label3:
        $r11 = $r10.<androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks mCallback>;

        virtualinvoke $r11.<androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentViewCreated(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.view.View,android.os.Bundle)>($r0, $r1, $r2, $r3);

        goto label2;

     label4:
        return;
    }

    void dispatchOnFragmentViewDestroyed(androidx.fragment.app.Fragment, boolean)
    {
        androidx.fragment.app.FragmentManagerImpl $r0, $r4;
        androidx.fragment.app.Fragment $r1, $r2;
        boolean $z0, $z1;
        androidx.fragment.app.FragmentManager $r3;
        java.util.concurrent.CopyOnWriteArrayList $r5;
        java.util.Iterator $r6;
        java.lang.Object $r7;
        androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder $r8;
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks $r9;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 := @parameter0: androidx.fragment.app.Fragment;

        $z0 := @parameter1: boolean;

        $r2 = $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment mParent>;

        if $r2 == null goto label1;

        $r3 = virtualinvoke $r2.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getFragmentManager()>();

        $z1 = $r3 instanceof androidx.fragment.app.FragmentManagerImpl;

        if $z1 == 0 goto label1;

        $r4 = (androidx.fragment.app.FragmentManagerImpl) $r3;

        virtualinvoke $r4.<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentViewDestroyed(androidx.fragment.app.Fragment,boolean)>($r1, 1);

     label1:
        $r5 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks>;

        $r6 = virtualinvoke $r5.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder) $r7;

        if $z0 == 0 goto label3;

        $z1 = $r8.<androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder: boolean mRecursive>;

        if $z1 == 0 goto label2;

     label3:
        $r9 = $r8.<androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks mCallback>;

        virtualinvoke $r9.<androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentViewDestroyed(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)>($r0, $r1);

        goto label2;

     label4:
        return;
    }

    public boolean dispatchOptionsItemSelected(android.view.MenuItem)
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        android.view.MenuItem $r1;
        int $i0, $i1;
        java.util.ArrayList $r2;
        java.lang.Object $r3;
        androidx.fragment.app.Fragment $r4;
        boolean $z0;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 := @parameter0: android.view.MenuItem;

        $i0 = $r0.<androidx.fragment.app.FragmentManagerImpl: int mCurState>;

        if $i0 >= 1 goto label1;

        return 0;

     label1:
        $i0 = 0;

     label2:
        $r2 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if $i0 >= $i1 goto label4;

        $r2 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r4 = (androidx.fragment.app.Fragment) $r3;

        if $r4 == null goto label3;

        $z0 = virtualinvoke $r4.<androidx.fragment.app.Fragment: boolean performOptionsItemSelected(android.view.MenuItem)>($r1);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        $i0 = $i0 + 1;

        goto label2;

     label4:
        return 0;
    }

    public void dispatchOptionsMenuClosed(android.view.Menu)
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        android.view.Menu $r1;
        int $i0, $i1;
        java.util.ArrayList $r2;
        java.lang.Object $r3;
        androidx.fragment.app.Fragment $r4;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 := @parameter0: android.view.Menu;

        $i0 = $r0.<androidx.fragment.app.FragmentManagerImpl: int mCurState>;

        if $i0 >= 1 goto label1;

        return;

     label1:
        $i0 = 0;

     label2:
        $r2 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if $i0 >= $i1 goto label4;

        $r2 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r4 = (androidx.fragment.app.Fragment) $r3;

        if $r4 == null goto label3;

        virtualinvoke $r4.<androidx.fragment.app.Fragment: void performOptionsMenuClosed(android.view.Menu)>($r1);

     label3:
        $i0 = $i0 + 1;

        goto label2;

     label4:
        return;
    }

    public void dispatchPause()
    {
        androidx.fragment.app.FragmentManagerImpl $r0;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        specialinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void dispatchStateChange(int)>(3);

        return;
    }

    public void dispatchPictureInPictureModeChanged(boolean)
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        boolean $z0;
        java.util.ArrayList $r1;
        int $i0;
        java.lang.Object $r2;
        androidx.fragment.app.Fragment $r3;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $z0 := @parameter0: boolean;

        $r1 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $i0 = $i0 + -1;

     label1:
        if $i0 < 0 goto label3;

        $r1 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r3 = (androidx.fragment.app.Fragment) $r2;

        if $r3 == null goto label2;

        virtualinvoke $r3.<androidx.fragment.app.Fragment: void performPictureInPictureModeChanged(boolean)>($z0);

     label2:
        $i0 = $i0 + -1;

        goto label1;

     label3:
        return;
    }

    public boolean dispatchPrepareOptionsMenu(android.view.Menu)
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        android.view.Menu $r1;
        int $i0, $i1;
        boolean $z0, $z1;
        java.util.ArrayList $r2;
        java.lang.Object $r3;
        androidx.fragment.app.Fragment $r4;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 := @parameter0: android.view.Menu;

        $i0 = $r0.<androidx.fragment.app.FragmentManagerImpl: int mCurState>;

        if $i0 >= 1 goto label1;

        return 0;

     label1:
        $z0 = 0;

        $i0 = 0;

     label2:
        $r2 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if $i0 >= $i1 goto label4;

        $r2 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r4 = (androidx.fragment.app.Fragment) $r3;

        if $r4 == null goto label3;

        $z1 = virtualinvoke $r4.<androidx.fragment.app.Fragment: boolean performPrepareOptionsMenu(android.view.Menu)>($r1);

        if $z1 == 0 goto label3;

        $z0 = 1;

     label3:
        $i0 = $i0 + 1;

        goto label2;

     label4:
        return $z0;
    }

    public void dispatchResume()
    {
        androidx.fragment.app.FragmentManagerImpl $r0;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r0.<androidx.fragment.app.FragmentManagerImpl: boolean mStateSaved> = 0;

        $r0.<androidx.fragment.app.FragmentManagerImpl: boolean mStopped> = 0;

        specialinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void dispatchStateChange(int)>(4);

        return;
    }

    public void dispatchStart()
    {
        androidx.fragment.app.FragmentManagerImpl $r0;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r0.<androidx.fragment.app.FragmentManagerImpl: boolean mStateSaved> = 0;

        $r0.<androidx.fragment.app.FragmentManagerImpl: boolean mStopped> = 0;

        specialinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void dispatchStateChange(int)>(3);

        return;
    }

    public void dispatchStop()
    {
        androidx.fragment.app.FragmentManagerImpl $r0;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r0.<androidx.fragment.app.FragmentManagerImpl: boolean mStopped> = 1;

        specialinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void dispatchStateChange(int)>(2);

        return;
    }

    void doPendingDeferredStart()
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        boolean $z0;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $z0 = $r0.<androidx.fragment.app.FragmentManagerImpl: boolean mHavePendingDeferredStart>;

        if $z0 == 0 goto label1;

        $r0.<androidx.fragment.app.FragmentManagerImpl: boolean mHavePendingDeferredStart> = 0;

        virtualinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void startPendingDeferredFragments()>();

     label1:
        return;
    }

    public void dump(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        java.lang.String $r1, $r6, $r8;
        java.io.FileDescriptor $r2;
        java.io.PrintWriter $r3;
        java.lang.String[] $r4;
        java.lang.StringBuilder $r5;
        android.util.SparseArray $r7;
        int $i0, $i1;
        java.lang.Object $r9;
        androidx.fragment.app.Fragment $r10;
        java.util.ArrayList $r11;
        androidx.fragment.app.BackStackRecord $r12;
        java.lang.Object[] $r13;
        androidx.fragment.app.FragmentManagerImpl$OpGenerator $r14;
        androidx.fragment.app.FragmentHostCallback $r15;
        androidx.fragment.app.FragmentContainer $r16;
        boolean $z0;
        java.lang.Throwable $r17;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.io.FileDescriptor;

        $r3 := @parameter2: java.io.PrintWriter;

        $r4 := @parameter3: java.lang.String[];

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = $r0.<androidx.fragment.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        if $r7 == null goto label03;

        $i0 = virtualinvoke $r7.<android.util.SparseArray: int size()>();

        if $i0 <= 0 goto label03;

        virtualinvoke $r3.<java.io.PrintWriter: void print(java.lang.String)>($r1);

        virtualinvoke $r3.<java.io.PrintWriter: void print(java.lang.String)>("Active Fragments in ");

        $i1 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>($r0);

        $r8 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i1);

        virtualinvoke $r3.<java.io.PrintWriter: void print(java.lang.String)>($r8);

        virtualinvoke $r3.<java.io.PrintWriter: void println(java.lang.String)>(":");

        $i1 = 0;

     label01:
        if $i1 >= $i0 goto label03;

        $r7 = $r0.<androidx.fragment.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        $r9 = virtualinvoke $r7.<android.util.SparseArray: java.lang.Object valueAt(int)>($i1);

        $r10 = (androidx.fragment.app.Fragment) $r9;

        virtualinvoke $r3.<java.io.PrintWriter: void print(java.lang.String)>($r1);

        virtualinvoke $r3.<java.io.PrintWriter: void print(java.lang.String)>("  #");

        virtualinvoke $r3.<java.io.PrintWriter: void print(int)>($i1);

        virtualinvoke $r3.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        virtualinvoke $r3.<java.io.PrintWriter: void println(java.lang.Object)>($r10);

        if $r10 == null goto label02;

        virtualinvoke $r10.<androidx.fragment.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>($r6, $r2, $r3, $r4);

     label02:
        $i1 = $i1 + 1;

        goto label01;

     label03:
        $r11 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $i0 = virtualinvoke $r11.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label05;

        virtualinvoke $r3.<java.io.PrintWriter: void print(java.lang.String)>($r1);

        virtualinvoke $r3.<java.io.PrintWriter: void println(java.lang.String)>("Added Fragments:");

        $i1 = 0;

     label04:
        if $i1 >= $i0 goto label05;

        $r11 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $r9 = virtualinvoke $r11.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r10 = (androidx.fragment.app.Fragment) $r9;

        virtualinvoke $r3.<java.io.PrintWriter: void print(java.lang.String)>($r1);

        virtualinvoke $r3.<java.io.PrintWriter: void print(java.lang.String)>("  #");

        virtualinvoke $r3.<java.io.PrintWriter: void print(int)>($i1);

        virtualinvoke $r3.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        $r8 = virtualinvoke $r10.<androidx.fragment.app.Fragment: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintWriter: void println(java.lang.String)>($r8);

        $i1 = $i1 + 1;

        goto label04;

     label05:
        $r11 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mCreatedMenus>;

        if $r11 == null goto label07;

        $i0 = virtualinvoke $r11.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label07;

        virtualinvoke $r3.<java.io.PrintWriter: void print(java.lang.String)>($r1);

        virtualinvoke $r3.<java.io.PrintWriter: void println(java.lang.String)>("Fragments Created Menus:");

        $i1 = 0;

     label06:
        if $i1 >= $i0 goto label07;

        $r11 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mCreatedMenus>;

        $r9 = virtualinvoke $r11.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r10 = (androidx.fragment.app.Fragment) $r9;

        virtualinvoke $r3.<java.io.PrintWriter: void print(java.lang.String)>($r1);

        virtualinvoke $r3.<java.io.PrintWriter: void print(java.lang.String)>("  #");

        virtualinvoke $r3.<java.io.PrintWriter: void print(int)>($i1);

        virtualinvoke $r3.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        $r8 = virtualinvoke $r10.<androidx.fragment.app.Fragment: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintWriter: void println(java.lang.String)>($r8);

        $i1 = $i1 + 1;

        goto label06;

     label07:
        $r11 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStack>;

        if $r11 == null goto label09;

        $i0 = virtualinvoke $r11.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label09;

        virtualinvoke $r3.<java.io.PrintWriter: void print(java.lang.String)>($r1);

        virtualinvoke $r3.<java.io.PrintWriter: void println(java.lang.String)>("Back Stack:");

        $i1 = 0;

     label08:
        if $i1 >= $i0 goto label09;

        $r11 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStack>;

        $r9 = virtualinvoke $r11.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r12 = (androidx.fragment.app.BackStackRecord) $r9;

        virtualinvoke $r3.<java.io.PrintWriter: void print(java.lang.String)>($r1);

        virtualinvoke $r3.<java.io.PrintWriter: void print(java.lang.String)>("  #");

        virtualinvoke $r3.<java.io.PrintWriter: void print(int)>($i1);

        virtualinvoke $r3.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        $r8 = virtualinvoke $r12.<androidx.fragment.app.BackStackRecord: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintWriter: void println(java.lang.String)>($r8);

        virtualinvoke $r12.<androidx.fragment.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>($r6, $r2, $r3, $r4);

        $i1 = $i1 + 1;

        goto label08;

     label09:
        entermonitor $r0;

     label10:
        $r11 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStackIndices>;

        if $r11 == null goto label12;

        $r11 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStackIndices>;

        $i0 = virtualinvoke $r11.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label12;

        virtualinvoke $r3.<java.io.PrintWriter: void print(java.lang.String)>($r1);

        virtualinvoke $r3.<java.io.PrintWriter: void println(java.lang.String)>("Back Stack Indices:");

        $i1 = 0;

     label11:
        if $i1 >= $i0 goto label12;

        $r11 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStackIndices>;

        $r9 = virtualinvoke $r11.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r12 = (androidx.fragment.app.BackStackRecord) $r9;

        virtualinvoke $r3.<java.io.PrintWriter: void print(java.lang.String)>($r1);

        virtualinvoke $r3.<java.io.PrintWriter: void print(java.lang.String)>("  #");

        virtualinvoke $r3.<java.io.PrintWriter: void print(int)>($i1);

        virtualinvoke $r3.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        virtualinvoke $r3.<java.io.PrintWriter: void println(java.lang.Object)>($r12);

        $i1 = $i1 + 1;

        goto label11;

     label12:
        $r11 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAvailBackStackIndices>;

        if $r11 == null goto label13;

        $r11 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAvailBackStackIndices>;

        $i0 = virtualinvoke $r11.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label13;

        virtualinvoke $r3.<java.io.PrintWriter: void print(java.lang.String)>($r1);

        virtualinvoke $r3.<java.io.PrintWriter: void print(java.lang.String)>("mAvailBackStackIndices: ");

        $r11 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAvailBackStackIndices>;

        $r13 = virtualinvoke $r11.<java.util.ArrayList: java.lang.Object[] toArray()>();

        $r6 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>($r13);

        virtualinvoke $r3.<java.io.PrintWriter: void println(java.lang.String)>($r6);

     label13:
        exitmonitor $r0;

     label14:
        $r11 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mPendingActions>;

        if $r11 == null goto label16;

        $i0 = virtualinvoke $r11.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label16;

        virtualinvoke $r3.<java.io.PrintWriter: void print(java.lang.String)>($r1);

        virtualinvoke $r3.<java.io.PrintWriter: void println(java.lang.String)>("Pending Actions:");

        $i1 = 0;

     label15:
        if $i1 >= $i0 goto label16;

        $r11 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mPendingActions>;

        $r9 = virtualinvoke $r11.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r14 = (androidx.fragment.app.FragmentManagerImpl$OpGenerator) $r9;

        virtualinvoke $r3.<java.io.PrintWriter: void print(java.lang.String)>($r1);

        virtualinvoke $r3.<java.io.PrintWriter: void print(java.lang.String)>("  #");

        virtualinvoke $r3.<java.io.PrintWriter: void print(int)>($i1);

        virtualinvoke $r3.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        virtualinvoke $r3.<java.io.PrintWriter: void println(java.lang.Object)>($r14);

        $i1 = $i1 + 1;

        goto label15;

     label16:
        virtualinvoke $r3.<java.io.PrintWriter: void print(java.lang.String)>($r1);

        virtualinvoke $r3.<java.io.PrintWriter: void println(java.lang.String)>("FragmentManager misc state:");

        virtualinvoke $r3.<java.io.PrintWriter: void print(java.lang.String)>($r1);

        virtualinvoke $r3.<java.io.PrintWriter: void print(java.lang.String)>("  mHost=");

        $r15 = $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost>;

        virtualinvoke $r3.<java.io.PrintWriter: void println(java.lang.Object)>($r15);

        virtualinvoke $r3.<java.io.PrintWriter: void print(java.lang.String)>($r1);

        virtualinvoke $r3.<java.io.PrintWriter: void print(java.lang.String)>("  mContainer=");

        $r16 = $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentContainer mContainer>;

        virtualinvoke $r3.<java.io.PrintWriter: void println(java.lang.Object)>($r16);

        $r10 = $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment mParent>;

        if $r10 == null goto label17;

        virtualinvoke $r3.<java.io.PrintWriter: void print(java.lang.String)>($r1);

        virtualinvoke $r3.<java.io.PrintWriter: void print(java.lang.String)>("  mParent=");

        $r10 = $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment mParent>;

        virtualinvoke $r3.<java.io.PrintWriter: void println(java.lang.Object)>($r10);

     label17:
        virtualinvoke $r3.<java.io.PrintWriter: void print(java.lang.String)>($r1);

        virtualinvoke $r3.<java.io.PrintWriter: void print(java.lang.String)>("  mCurState=");

        $i0 = $r0.<androidx.fragment.app.FragmentManagerImpl: int mCurState>;

        virtualinvoke $r3.<java.io.PrintWriter: void print(int)>($i0);

        virtualinvoke $r3.<java.io.PrintWriter: void print(java.lang.String)>(" mStateSaved=");

        $z0 = $r0.<androidx.fragment.app.FragmentManagerImpl: boolean mStateSaved>;

        virtualinvoke $r3.<java.io.PrintWriter: void print(boolean)>($z0);

        virtualinvoke $r3.<java.io.PrintWriter: void print(java.lang.String)>(" mStopped=");

        $z0 = $r0.<androidx.fragment.app.FragmentManagerImpl: boolean mStopped>;

        virtualinvoke $r3.<java.io.PrintWriter: void print(boolean)>($z0);

        virtualinvoke $r3.<java.io.PrintWriter: void print(java.lang.String)>(" mDestroyed=");

        $z0 = $r0.<androidx.fragment.app.FragmentManagerImpl: boolean mDestroyed>;

        virtualinvoke $r3.<java.io.PrintWriter: void println(boolean)>($z0);

        $z0 = $r0.<androidx.fragment.app.FragmentManagerImpl: boolean mNeedMenuInvalidate>;

        if $z0 == 0 goto label18;

        virtualinvoke $r3.<java.io.PrintWriter: void print(java.lang.String)>($r1);

        virtualinvoke $r3.<java.io.PrintWriter: void print(java.lang.String)>("  mNeedMenuInvalidate=");

        $z0 = $r0.<androidx.fragment.app.FragmentManagerImpl: boolean mNeedMenuInvalidate>;

        virtualinvoke $r3.<java.io.PrintWriter: void println(boolean)>($z0);

     label18:
        $r6 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.lang.String mNoTransactionsBecause>;

        if $r6 == null goto label22;

        virtualinvoke $r3.<java.io.PrintWriter: void print(java.lang.String)>($r1);

        virtualinvoke $r3.<java.io.PrintWriter: void print(java.lang.String)>("  mNoTransactionsBecause=");

        $r1 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.lang.String mNoTransactionsBecause>;

        virtualinvoke $r3.<java.io.PrintWriter: void println(java.lang.String)>($r1);

        return;

     label19:
        $r17 := @caughtexception;

     label20:
        exitmonitor $r0;

     label21:
        throw $r17;

     label22:
        return;

        catch java.lang.Throwable from label10 to label14 with label19;
        catch java.lang.Throwable from label20 to label21 with label19;
    }

    public void enqueueAction(androidx.fragment.app.FragmentManagerImpl$OpGenerator, boolean)
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        androidx.fragment.app.FragmentManagerImpl$OpGenerator $r1;
        boolean $z0, $z1;
        androidx.fragment.app.FragmentHostCallback $r2;
        java.util.ArrayList $r3;
        java.lang.IllegalStateException $r4;
        java.lang.Throwable $r5;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 := @parameter0: androidx.fragment.app.FragmentManagerImpl$OpGenerator;

        $z0 := @parameter1: boolean;

        if $z0 != 0 goto label01;

        specialinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void checkStateLoss()>();

     label01:
        entermonitor $r0;

     label02:
        $z1 = $r0.<androidx.fragment.app.FragmentManagerImpl: boolean mDestroyed>;

        if $z1 != 0 goto label06;

        $r2 = $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost>;

        if $r2 != null goto label03;

        goto label06;

     label03:
        $r3 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mPendingActions>;

        if $r3 != null goto label04;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mPendingActions> = $r3;

     label04:
        $r3 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mPendingActions>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        virtualinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void scheduleCommit()>();

        exitmonitor $r0;

     label05:
        return;

     label06:
        if $z0 == 0 goto label08;

        exitmonitor $r0;

     label07:
        return;

     label08:
        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Activity has been destroyed");

        throw $r4;

     label09:
        $r5 := @caughtexception;

        exitmonitor $r0;

     label10:
        throw $r5;

        catch java.lang.Throwable from label02 to label05 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label08 to label10 with label09;
    }

    void ensureInflatedFragmentView(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        androidx.fragment.app.Fragment $r1;
        android.view.LayoutInflater $r2;
        boolean $z0;
        android.os.Bundle $r3;
        android.view.View $r4;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 := @parameter0: androidx.fragment.app.Fragment;

        $z0 = $r1.<androidx.fragment.app.Fragment: boolean mFromLayout>;

        if $z0 == 0 goto label3;

        $z0 = $r1.<androidx.fragment.app.Fragment: boolean mPerformedCreateView>;

        if $z0 != 0 goto label3;

        $r3 = $r1.<androidx.fragment.app.Fragment: android.os.Bundle mSavedFragmentState>;

        $r2 = virtualinvoke $r1.<androidx.fragment.app.Fragment: android.view.LayoutInflater performGetLayoutInflater(android.os.Bundle)>($r3);

        $r3 = $r1.<androidx.fragment.app.Fragment: android.os.Bundle mSavedFragmentState>;

        virtualinvoke $r1.<androidx.fragment.app.Fragment: void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>($r2, null, $r3);

        $r4 = $r1.<androidx.fragment.app.Fragment: android.view.View mView>;

        if $r4 == null goto label2;

        $r4 = $r1.<androidx.fragment.app.Fragment: android.view.View mView>;

        $r1.<androidx.fragment.app.Fragment: android.view.View mInnerView> = $r4;

        $r4 = $r1.<androidx.fragment.app.Fragment: android.view.View mView>;

        virtualinvoke $r4.<android.view.View: void setSaveFromParentEnabled(boolean)>(0);

        $z0 = $r1.<androidx.fragment.app.Fragment: boolean mHidden>;

        if $z0 == 0 goto label1;

        $r4 = $r1.<androidx.fragment.app.Fragment: android.view.View mView>;

        virtualinvoke $r4.<android.view.View: void setVisibility(int)>(8);

     label1:
        $r4 = $r1.<androidx.fragment.app.Fragment: android.view.View mView>;

        $r3 = $r1.<androidx.fragment.app.Fragment: android.os.Bundle mSavedFragmentState>;

        virtualinvoke $r1.<androidx.fragment.app.Fragment: void onViewCreated(android.view.View,android.os.Bundle)>($r4, $r3);

        $r4 = $r1.<androidx.fragment.app.Fragment: android.view.View mView>;

        $r3 = $r1.<androidx.fragment.app.Fragment: android.os.Bundle mSavedFragmentState>;

        virtualinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentViewCreated(androidx.fragment.app.Fragment,android.view.View,android.os.Bundle,boolean)>($r1, $r4, $r3, 0);

        return;

     label2:
        $r1.<androidx.fragment.app.Fragment: android.view.View mInnerView> = null;

     label3:
        return;
    }

    public boolean execPendingActions()
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        boolean $z0, $z1;
        java.util.ArrayList $r1, $r2;
        java.lang.Throwable $r3;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        specialinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void ensureExecReady(boolean)>(1);

        $z1 = 0;

     label1:
        $r1 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mTmpRecords>;

        $r2 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mTmpIsPop>;

        $z0 = specialinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: boolean generateOpsForPendingActions(java.util.ArrayList,java.util.ArrayList)>($r1, $r2);

        if $z0 == 0 goto label5;

        $r0.<androidx.fragment.app.FragmentManagerImpl: boolean mExecutingActions> = 1;

     label2:
        $r1 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mTmpRecords>;

        $r2 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mTmpIsPop>;

        specialinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList)>($r1, $r2);

     label3:
        specialinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void cleanupExec()>();

        $z1 = 1;

        goto label1;

     label4:
        $r3 := @caughtexception;

        specialinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void cleanupExec()>();

        throw $r3;

     label5:
        virtualinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void doPendingDeferredStart()>();

        specialinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void burpActive()>();

        return $z1;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public void execSingleAction(androidx.fragment.app.FragmentManagerImpl$OpGenerator, boolean)
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        androidx.fragment.app.FragmentManagerImpl$OpGenerator $r1;
        boolean $z0, $z1;
        androidx.fragment.app.FragmentHostCallback $r2;
        java.util.ArrayList $r3, $r4;
        java.lang.Throwable $r5;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 := @parameter0: androidx.fragment.app.FragmentManagerImpl$OpGenerator;

        $z0 := @parameter1: boolean;

        if $z0 == 0 goto label1;

        $r2 = $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost>;

        if $r2 == null goto label6;

        $z1 = $r0.<androidx.fragment.app.FragmentManagerImpl: boolean mDestroyed>;

        if $z1 == 0 goto label1;

        return;

     label1:
        specialinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void ensureExecReady(boolean)>($z0);

        $r3 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mTmpRecords>;

        $r4 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mTmpIsPop>;

        $z0 = interfaceinvoke $r1.<androidx.fragment.app.FragmentManagerImpl$OpGenerator: boolean generateOps(java.util.ArrayList,java.util.ArrayList)>($r3, $r4);

        if $z0 == 0 goto label5;

        $r0.<androidx.fragment.app.FragmentManagerImpl: boolean mExecutingActions> = 1;

     label2:
        $r3 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mTmpRecords>;

        $r4 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mTmpIsPop>;

        specialinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList)>($r3, $r4);

     label3:
        specialinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void cleanupExec()>();

        goto label5;

     label4:
        $r5 := @caughtexception;

        specialinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void cleanupExec()>();

        throw $r5;

     label5:
        virtualinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void doPendingDeferredStart()>();

        specialinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void burpActive()>();

     label6:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public boolean executePendingTransactions()
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        boolean $z0;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $z0 = virtualinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: boolean execPendingActions()>();

        specialinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void forcePostponedTransactions()>();

        return $z0;
    }

    public androidx.fragment.app.Fragment findFragmentById(int)
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        int $i0, $i1, $i2;
        java.util.ArrayList $r1;
        java.lang.Object $r2;
        androidx.fragment.app.Fragment $r3;
        android.util.SparseArray $r4;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $i0 := @parameter0: int;

        $r1 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $i1 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $i1 = $i1 + -1;

     label1:
        if $i1 < 0 goto label3;

        $r1 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r3 = (androidx.fragment.app.Fragment) $r2;

        if $r3 == null goto label2;

        $i2 = $r3.<androidx.fragment.app.Fragment: int mFragmentId>;

        if $i2 != $i0 goto label2;

        return $r3;

     label2:
        $i1 = $i1 + -1;

        goto label1;

     label3:
        $r4 = $r0.<androidx.fragment.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        if $r4 == null goto label6;

        $i1 = virtualinvoke $r4.<android.util.SparseArray: int size()>();

        $i1 = $i1 + -1;

     label4:
        if $i1 < 0 goto label6;

        $r4 = $r0.<androidx.fragment.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        $r2 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object valueAt(int)>($i1);

        $r3 = (androidx.fragment.app.Fragment) $r2;

        if $r3 == null goto label5;

        $i2 = $r3.<androidx.fragment.app.Fragment: int mFragmentId>;

        if $i2 != $i0 goto label5;

        return $r3;

     label5:
        $i1 = $i1 + -1;

        goto label4;

     label6:
        return null;
    }

    public androidx.fragment.app.Fragment findFragmentByTag(java.lang.String)
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        java.lang.String $r1, $r5;
        java.util.ArrayList $r2;
        int $i0;
        java.lang.Object $r3;
        androidx.fragment.app.Fragment $r4;
        boolean $z0;
        android.util.SparseArray $r6;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 := @parameter0: java.lang.String;

        if $r1 == null goto label3;

        $r2 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        $i0 = $i0 + -1;

     label1:
        if $i0 < 0 goto label3;

        $r2 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r4 = (androidx.fragment.app.Fragment) $r3;

        if $r4 == null goto label2;

        $r5 = $r4.<androidx.fragment.app.Fragment: java.lang.String mTag>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label2;

        return $r4;

     label2:
        $i0 = $i0 + -1;

        goto label1;

     label3:
        $r6 = $r0.<androidx.fragment.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        if $r6 == null goto label6;

        if $r1 == null goto label6;

        $i0 = virtualinvoke $r6.<android.util.SparseArray: int size()>();

        $i0 = $i0 + -1;

     label4:
        if $i0 < 0 goto label6;

        $r6 = $r0.<androidx.fragment.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        $r3 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object valueAt(int)>($i0);

        $r4 = (androidx.fragment.app.Fragment) $r3;

        if $r4 == null goto label5;

        $r5 = $r4.<androidx.fragment.app.Fragment: java.lang.String mTag>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label5;

        return $r4;

     label5:
        $i0 = $i0 + -1;

        goto label4;

     label6:
        return null;
    }

    public androidx.fragment.app.Fragment findFragmentByWho(java.lang.String)
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        java.lang.String $r1;
        android.util.SparseArray $r2;
        int $i0;
        java.lang.Object $r3;
        androidx.fragment.app.Fragment $r4;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<androidx.fragment.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        if $r2 == null goto label3;

        if $r1 == null goto label3;

        $i0 = virtualinvoke $r2.<android.util.SparseArray: int size()>();

        $i0 = $i0 + -1;

     label1:
        if $i0 < 0 goto label3;

        $r2 = $r0.<androidx.fragment.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object valueAt(int)>($i0);

        $r4 = (androidx.fragment.app.Fragment) $r3;

        if $r4 == null goto label2;

        $r4 = virtualinvoke $r4.<androidx.fragment.app.Fragment: androidx.fragment.app.Fragment findFragmentByWho(java.lang.String)>($r1);

        if $r4 == null goto label2;

        return $r4;

     label2:
        $i0 = $i0 + -1;

        goto label1;

     label3:
        return null;
    }

    public void freeBackStackIndex(int)
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        int $i0;
        java.util.ArrayList $r1;
        boolean $z0;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        java.lang.Integer $r4;
        java.lang.Throwable $r5;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $i0 := @parameter0: int;

        entermonitor $r0;

     label1:
        $r1 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStackIndices>;

        virtualinvoke $r1.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>($i0, null);

        $r1 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAvailBackStackIndices>;

        if $r1 != null goto label2;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAvailBackStackIndices> = $r1;

     label2:
        $z0 = <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG>;

        if $z0 == 0 goto label3;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Freeing back stack index ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r3);

     label3:
        $r1 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAvailBackStackIndices>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        exitmonitor $r0;

     label4:
        return;

     label5:
        $r5 := @caughtexception;

        exitmonitor $r0;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    int getActiveFragmentCount()
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        int $i0;
        android.util.SparseArray $r1;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 = $r0.<androidx.fragment.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $i0 = virtualinvoke $r1.<android.util.SparseArray: int size()>();

        return $i0;
    }

    java.util.List getActiveFragments()
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        java.util.ArrayList $r1;
        android.util.SparseArray $r2;
        int $i0, $i1;
        java.lang.Object $r3;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r2 = $r0.<androidx.fragment.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        if $r2 != null goto label1;

        return null;

     label1:
        $i0 = virtualinvoke $r2.<android.util.SparseArray: int size()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>($i0);

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label3;

        $r2 = $r0.<androidx.fragment.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object valueAt(int)>($i1);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        $i1 = $i1 + 1;

        goto label2;

     label3:
        return $r1;
    }

    public androidx.fragment.app.FragmentManager$BackStackEntry getBackStackEntryAt(int)
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        int $i0;
        java.lang.Object $r1;
        java.util.ArrayList $r2;
        androidx.fragment.app.FragmentManager$BackStackEntry $r3;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $i0 := @parameter0: int;

        $r2 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStack>;

        $r1 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r3 = (androidx.fragment.app.FragmentManager$BackStackEntry) $r1;

        return $r3;
    }

    public int getBackStackEntryCount()
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        int $i0;
        java.util.ArrayList $r1;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStack>;

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        return $i0;

     label1:
        return 0;
    }

    public androidx.fragment.app.Fragment getFragment(android.os.Bundle, java.lang.String)
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        android.os.Bundle $r1;
        java.lang.String $r2;
        java.lang.IllegalStateException $r3;
        int $i0;
        android.util.SparseArray $r4;
        java.lang.Object $r5;
        androidx.fragment.app.Fragment $r6;
        java.lang.StringBuilder $r7;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 := @parameter0: android.os.Bundle;

        $r2 := @parameter1: java.lang.String;

        $i0 = virtualinvoke $r1.<android.os.Bundle: int getInt(java.lang.String,int)>("android:target_state", -1);

        if $i0 != -1 goto label1;

        return null;

     label1:
        $r4 = $r0.<androidx.fragment.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>($i0);

        $r6 = (androidx.fragment.app.Fragment) $r5;

        if $r6 != null goto label2;

        $r3 = new java.lang.IllegalStateException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fragment no longer exists for key ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android:target_state");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": index ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r2);

        specialinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void throwException(java.lang.RuntimeException)>($r3);

     label2:
        return $r6;
    }

    public java.util.List getFragments()
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        java.util.ArrayList $r1, $r3;
        boolean $z0;
        java.util.List $r2;
        java.lang.Object $r4;
        java.lang.Throwable $r5;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $z0 = virtualinvoke $r1.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r2 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r2;

     label1:
        $r1 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        entermonitor $r1;

     label2:
        $r3 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object clone()>();

        $r2 = (java.util.List) $r4;

        exitmonitor $r1;

     label3:
        return $r2;

     label4:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    android.view.LayoutInflater$Factory2 getLayoutInflaterFactory()
    {
        androidx.fragment.app.FragmentManagerImpl $r0;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        return $r0;
    }

    public androidx.fragment.app.Fragment getPrimaryNavigationFragment()
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        androidx.fragment.app.Fragment r1;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        r1 = $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment mPrimaryNav>;

        return r1;
    }

    public void hideFragment(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        androidx.fragment.app.Fragment $r1;
        java.lang.String $r2;
        boolean $z0;
        java.lang.StringBuilder $r3;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 := @parameter0: androidx.fragment.app.Fragment;

        $z0 = <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("hide: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r2);

     label1:
        $z0 = $r1.<androidx.fragment.app.Fragment: boolean mHidden>;

        if $z0 != 0 goto label2;

        $r1.<androidx.fragment.app.Fragment: boolean mHidden> = 1;

        $z0 = $r1.<androidx.fragment.app.Fragment: boolean mHiddenChanged>;

        $z0 = 1 ^ $z0;

        $r1.<androidx.fragment.app.Fragment: boolean mHiddenChanged> = $z0;

     label2:
        return;
    }

    public boolean isDestroyed()
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        boolean z0;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        z0 = $r0.<androidx.fragment.app.FragmentManagerImpl: boolean mDestroyed>;

        return z0;
    }

    boolean isStateAtLeast(int)
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        int $i0, $i1;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $i0 := @parameter0: int;

        $i1 = $r0.<androidx.fragment.app.FragmentManagerImpl: int mCurState>;

        if $i1 < 1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isStateSaved()
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        boolean $z0;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $z0 = $r0.<androidx.fragment.app.FragmentManagerImpl: boolean mStateSaved>;

        if $z0 != 0 goto label2;

        $z0 = $r0.<androidx.fragment.app.FragmentManagerImpl: boolean mStopped>;

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator loadAnimation(androidx.fragment.app.Fragment, int, boolean, int)
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        androidx.fragment.app.Fragment $r1;
        int $i0, $i1, $i2;
        boolean $z0, $z1, $z2;
        android.view.animation.Animation $r2;
        androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator $r3;
        android.animation.Animator $r4;
        androidx.fragment.app.FragmentHostCallback $r5;
        android.content.Context $r6;
        android.content.res.Resources $r7;
        java.lang.String $r8, $r9;
        java.lang.RuntimeException $r10, $r12;
        java.lang.Throwable $r11;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 := @parameter0: androidx.fragment.app.Fragment;

        $i0 := @parameter1: int;

        $z0 := @parameter2: boolean;

        $i1 := @parameter3: int;

        $i2 = virtualinvoke $r1.<androidx.fragment.app.Fragment: int getNextAnim()>();

        $r2 = virtualinvoke $r1.<androidx.fragment.app.Fragment: android.view.animation.Animation onCreateAnimation(int,boolean,int)>($i0, $z0, $i2);

        if $r2 == null goto label01;

        $r3 = new androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator;

        specialinvoke $r3.<androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator: void <init>(android.view.animation.Animation)>($r2);

        return $r3;

     label01:
        $r4 = virtualinvoke $r1.<androidx.fragment.app.Fragment: android.animation.Animator onCreateAnimator(int,boolean,int)>($i0, $z0, $i2);

        if $r4 == null goto label02;

        $r3 = new androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator;

        specialinvoke $r3.<androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator: void <init>(android.animation.Animator)>($r4);

        return $r3;

     label02:
        if $i2 == 0 goto label18;

        $r5 = $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost>;

        $r6 = virtualinvoke $r5.<androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()>();

        $r7 = virtualinvoke $r6.<android.content.Context: android.content.res.Resources getResources()>();

        $r8 = virtualinvoke $r7.<android.content.res.Resources: java.lang.String getResourceTypeName(int)>($i2);

        $r9 = "anim";

        $z1 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        $z2 = 0;

        if $z1 == 0 goto label11;

     label03:
        $r5 = $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost>;

     label04:
        $r6 = virtualinvoke $r5.<androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()>();

        $r2 = staticinvoke <android.view.animation.AnimationUtils: android.view.animation.Animation loadAnimation(android.content.Context,int)>($r6, $i2);

     label05:
        if $r2 == null goto label08;

        $r3 = new androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator;

     label06:
        specialinvoke $r3.<androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator: void <init>(android.view.animation.Animation)>($r2);

     label07:
        return $r3;

     label08:
        $z2 = 1;

        goto label11;

     label09:
        $r10 := @caughtexception;

        goto label11;

     label10:
        $r11 := @caughtexception;

        throw $r11;

     label11:
        if $z2 != 0 goto label18;

     label12:
        $r5 = $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost>;

        $r6 = virtualinvoke $r5.<androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()>();

        $r4 = staticinvoke <android.animation.AnimatorInflater: android.animation.Animator loadAnimator(android.content.Context,int)>($r6, $i2);

     label13:
        if $r4 == null goto label18;

        $r3 = new androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator;

     label14:
        specialinvoke $r3.<androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator: void <init>(android.animation.Animator)>($r4);

     label15:
        return $r3;

     label16:
        $r12 := @caughtexception;

        if $z1 != 0 goto label17;

        $r5 = $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost>;

        $r6 = virtualinvoke $r5.<androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()>();

        $r2 = staticinvoke <android.view.animation.AnimationUtils: android.view.animation.Animation loadAnimation(android.content.Context,int)>($r6, $i2);

        if $r2 == null goto label18;

        $r3 = new androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator;

        specialinvoke $r3.<androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator: void <init>(android.view.animation.Animation)>($r2);

        return $r3;

     label17:
        throw $r12;

     label18:
        if $i0 != 0 goto label19;

        return null;

     label19:
        $i0 = staticinvoke <androidx.fragment.app.FragmentManagerImpl: int transitToStyleIndex(int,boolean)>($i0, $z0);

        if $i0 >= 0 goto label20;

        return null;

     label20:
        lookupswitch($i0)
        {
            case 1: goto label27;
            case 2: goto label26;
            case 3: goto label25;
            case 4: goto label24;
            case 5: goto label23;
            case 6: goto label22;
            default: goto label21;
        };

     label21:
        if $i1 != 0 goto label28;

        $r5 = $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost>;

        $z0 = virtualinvoke $r5.<androidx.fragment.app.FragmentHostCallback: boolean onHasWindowAnimations()>();

        if $z0 == 0 goto label28;

        $r5 = $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost>;

        $i1 = virtualinvoke $r5.<androidx.fragment.app.FragmentHostCallback: int onGetWindowAnimations()>();

        goto label28;

     label22:
        $r5 = $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost>;

        $r6 = virtualinvoke $r5.<androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()>();

        $r3 = staticinvoke <androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator makeFadeAnimation(android.content.Context,float,float)>($r6, 1.0F, 0.0F);

        return $r3;

     label23:
        $r5 = $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost>;

        $r6 = virtualinvoke $r5.<androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()>();

        $r3 = staticinvoke <androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator makeFadeAnimation(android.content.Context,float,float)>($r6, 0.0F, 1.0F);

        return $r3;

     label24:
        $r5 = $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost>;

        $r6 = virtualinvoke $r5.<androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()>();

        $r3 = staticinvoke <androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator makeOpenCloseAnimation(android.content.Context,float,float,float,float)>($r6, 1.0F, 1.075F, 1.0F, 0.0F);

        return $r3;

     label25:
        $r5 = $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost>;

        $r6 = virtualinvoke $r5.<androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()>();

        $r3 = staticinvoke <androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator makeOpenCloseAnimation(android.content.Context,float,float,float,float)>($r6, 0.975F, 1.0F, 0.0F, 1.0F);

        return $r3;

     label26:
        $r5 = $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost>;

        $r6 = virtualinvoke $r5.<androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()>();

        $r3 = staticinvoke <androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator makeOpenCloseAnimation(android.content.Context,float,float,float,float)>($r6, 1.0F, 0.975F, 1.0F, 0.0F);

        return $r3;

     label27:
        $r5 = $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost>;

        $r6 = virtualinvoke $r5.<androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()>();

        $r3 = staticinvoke <androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator makeOpenCloseAnimation(android.content.Context,float,float,float,float)>($r6, 1.125F, 1.0F, 0.0F, 1.0F);

        return $r3;

     label28:
        if $i1 != 0 goto label29;

     label29:
        return null;

        catch android.content.res.Resources$NotFoundException from label04 to label05 with label10;
        catch android.content.res.Resources$NotFoundException from label06 to label07 with label10;
        catch java.lang.RuntimeException from label03 to label05 with label09;
        catch java.lang.RuntimeException from label06 to label07 with label09;
        catch java.lang.RuntimeException from label12 to label13 with label16;
        catch java.lang.RuntimeException from label14 to label15 with label16;
    }

    void makeActive(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        androidx.fragment.app.Fragment $r1, $r3;
        java.lang.String $r2;
        int $i0, $i1;
        android.util.SparseArray $r4;
        boolean $z0;
        java.lang.StringBuilder $r5;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 := @parameter0: androidx.fragment.app.Fragment;

        $i0 = $r1.<androidx.fragment.app.Fragment: int mIndex>;

        if $i0 < 0 goto label1;

        return;

     label1:
        $i0 = $r0.<androidx.fragment.app.FragmentManagerImpl: int mNextFragmentIndex>;

        $i1 = $i0 + 1;

        $r0.<androidx.fragment.app.FragmentManagerImpl: int mNextFragmentIndex> = $i1;

        $r3 = $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment mParent>;

        virtualinvoke $r1.<androidx.fragment.app.Fragment: void setIndex(int,androidx.fragment.app.Fragment)>($i0, $r3);

        $r4 = $r0.<androidx.fragment.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        if $r4 != null goto label2;

        $r4 = new android.util.SparseArray;

        specialinvoke $r4.<android.util.SparseArray: void <init>()>();

        $r0.<androidx.fragment.app.FragmentManagerImpl: android.util.SparseArray mActive> = $r4;

     label2:
        $r4 = $r0.<androidx.fragment.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        $i0 = $r1.<androidx.fragment.app.Fragment: int mIndex>;

        virtualinvoke $r4.<android.util.SparseArray: void put(int,java.lang.Object)>($i0, $r1);

        $z0 = <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG>;

        if $z0 == 0 goto label3;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Allocated fragment index ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r2);

     label3:
        return;
    }

    void makeInactive(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        androidx.fragment.app.Fragment $r1;
        java.lang.String $r2;
        int $i0;
        boolean $z0;
        java.lang.StringBuilder $r3;
        android.util.SparseArray $r4;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 := @parameter0: androidx.fragment.app.Fragment;

        $i0 = $r1.<androidx.fragment.app.Fragment: int mIndex>;

        if $i0 >= 0 goto label1;

        return;

     label1:
        $z0 = <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG>;

        if $z0 == 0 goto label2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Freeing fragment index ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r2);

     label2:
        $r4 = $r0.<androidx.fragment.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        $i0 = $r1.<androidx.fragment.app.Fragment: int mIndex>;

        virtualinvoke $r4.<android.util.SparseArray: void put(int,java.lang.Object)>($i0, null);

        virtualinvoke $r1.<androidx.fragment.app.Fragment: void initState()>();

        return;
    }

    void moveFragmentToExpectedState(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        androidx.fragment.app.Fragment $r1, $r3;
        int $i0, $i1, $i2;
        boolean $z0;
        android.view.View $r2;
        android.view.ViewGroup $r4;
        float $f0;
        byte $b3;
        androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator $r5;
        android.view.animation.Animation $r6;
        android.animation.Animator $r7;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 := @parameter0: androidx.fragment.app.Fragment;

        if $r1 != null goto label1;

        return;

     label1:
        $i0 = $r0.<androidx.fragment.app.FragmentManagerImpl: int mCurState>;

        $z0 = $r1.<androidx.fragment.app.Fragment: boolean mRemoving>;

        if $z0 == 0 goto label3;

        $z0 = virtualinvoke $r1.<androidx.fragment.app.Fragment: boolean isInBackStack()>();

        if $z0 == 0 goto label2;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, 1);

        goto label3;

     label2:
        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, 0);

     label3:
        $i1 = virtualinvoke $r1.<androidx.fragment.app.Fragment: int getNextTransition()>();

        $i2 = virtualinvoke $r1.<androidx.fragment.app.Fragment: int getNextTransitionStyle()>();

        virtualinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)>($r1, $i0, $i1, $i2, 0);

        $r2 = $r1.<androidx.fragment.app.Fragment: android.view.View mView>;

        if $r2 == null goto label7;

        $r3 = specialinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment findFragmentUnder(androidx.fragment.app.Fragment)>($r1);

        if $r3 == null goto label4;

        $r2 = $r3.<androidx.fragment.app.Fragment: android.view.View mView>;

        $r4 = $r1.<androidx.fragment.app.Fragment: android.view.ViewGroup mContainer>;

        $i0 = virtualinvoke $r4.<android.view.ViewGroup: int indexOfChild(android.view.View)>($r2);

        $r2 = $r1.<androidx.fragment.app.Fragment: android.view.View mView>;

        $i1 = virtualinvoke $r4.<android.view.ViewGroup: int indexOfChild(android.view.View)>($r2);

        if $i1 >= $i0 goto label4;

        virtualinvoke $r4.<android.view.ViewGroup: void removeViewAt(int)>($i1);

        $r2 = $r1.<androidx.fragment.app.Fragment: android.view.View mView>;

        virtualinvoke $r4.<android.view.ViewGroup: void addView(android.view.View,int)>($r2, $i0);

     label4:
        $z0 = $r1.<androidx.fragment.app.Fragment: boolean mIsNewlyAdded>;

        if $z0 == 0 goto label7;

        $r4 = $r1.<androidx.fragment.app.Fragment: android.view.ViewGroup mContainer>;

        if $r4 == null goto label7;

        $f0 = $r1.<androidx.fragment.app.Fragment: float mPostponedAlpha>;

        $b3 = $f0 cmpl 0.0F;

        if $b3 <= 0 goto label5;

        $r2 = $r1.<androidx.fragment.app.Fragment: android.view.View mView>;

        $f0 = $r1.<androidx.fragment.app.Fragment: float mPostponedAlpha>;

        virtualinvoke $r2.<android.view.View: void setAlpha(float)>($f0);

     label5:
        $r1.<androidx.fragment.app.Fragment: float mPostponedAlpha> = 0.0F;

        $r1.<androidx.fragment.app.Fragment: boolean mIsNewlyAdded> = 0;

        $i0 = virtualinvoke $r1.<androidx.fragment.app.Fragment: int getNextTransition()>();

        $i1 = virtualinvoke $r1.<androidx.fragment.app.Fragment: int getNextTransitionStyle()>();

        $r5 = virtualinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator loadAnimation(androidx.fragment.app.Fragment,int,boolean,int)>($r1, $i0, 1, $i1);

        if $r5 == null goto label7;

        $r2 = $r1.<androidx.fragment.app.Fragment: android.view.View mView>;

        staticinvoke <androidx.fragment.app.FragmentManagerImpl: void setHWLayerAnimListenerIfAlpha(android.view.View,androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator)>($r2, $r5);

        $r6 = $r5.<androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator: android.view.animation.Animation animation>;

        if $r6 == null goto label6;

        $r2 = $r1.<androidx.fragment.app.Fragment: android.view.View mView>;

        $r6 = $r5.<androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator: android.view.animation.Animation animation>;

        virtualinvoke $r2.<android.view.View: void startAnimation(android.view.animation.Animation)>($r6);

        goto label7;

     label6:
        $r7 = $r5.<androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator: android.animation.Animator animator>;

        $r2 = $r1.<androidx.fragment.app.Fragment: android.view.View mView>;

        virtualinvoke $r7.<android.animation.Animator: void setTarget(java.lang.Object)>($r2);

        $r7 = $r5.<androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator: android.animation.Animator animator>;

        virtualinvoke $r7.<android.animation.Animator: void start()>();

     label7:
        $z0 = $r1.<androidx.fragment.app.Fragment: boolean mHiddenChanged>;

        if $z0 == 0 goto label8;

        virtualinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void completeShowHideFragment(androidx.fragment.app.Fragment)>($r1);

     label8:
        return;
    }

    void moveToState(int, boolean)
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        int $i0, $i1;
        boolean $z0;
        androidx.fragment.app.FragmentHostCallback $r1;
        java.lang.IllegalStateException $r2;
        android.util.SparseArray $r3;
        java.util.ArrayList $r4;
        java.lang.Object $r5;
        androidx.fragment.app.Fragment $r6;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        $r1 = $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost>;

        if $r1 != null goto label02;

        if $i0 != 0 goto label01;

        goto label02;

     label01:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No activity");

        throw $r2;

     label02:
        if $z0 != 0 goto label03;

        $i1 = $r0.<androidx.fragment.app.FragmentManagerImpl: int mCurState>;

        if $i0 != $i1 goto label03;

        return;

     label03:
        $r0.<androidx.fragment.app.FragmentManagerImpl: int mCurState> = $i0;

        $r3 = $r0.<androidx.fragment.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        if $r3 == null goto label10;

        $r4 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $i0 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        $i1 = 0;

     label04:
        if $i1 >= $i0 goto label05;

        $r4 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r6 = (androidx.fragment.app.Fragment) $r5;

        virtualinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void moveFragmentToExpectedState(androidx.fragment.app.Fragment)>($r6);

        $i1 = $i1 + 1;

        goto label04;

     label05:
        $r3 = $r0.<androidx.fragment.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        $i0 = virtualinvoke $r3.<android.util.SparseArray: int size()>();

        $i1 = 0;

     label06:
        if $i1 >= $i0 goto label09;

        $r3 = $r0.<androidx.fragment.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        $r5 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object valueAt(int)>($i1);

        $r6 = (androidx.fragment.app.Fragment) $r5;

        if $r6 == null goto label08;

        $z0 = $r6.<androidx.fragment.app.Fragment: boolean mRemoving>;

        if $z0 != 0 goto label07;

        $z0 = $r6.<androidx.fragment.app.Fragment: boolean mDetached>;

        if $z0 == 0 goto label08;

     label07:
        $z0 = $r6.<androidx.fragment.app.Fragment: boolean mIsNewlyAdded>;

        if $z0 != 0 goto label08;

        virtualinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void moveFragmentToExpectedState(androidx.fragment.app.Fragment)>($r6);

     label08:
        $i1 = $i1 + 1;

        goto label06;

     label09:
        virtualinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void startPendingDeferredFragments()>();

        $z0 = $r0.<androidx.fragment.app.FragmentManagerImpl: boolean mNeedMenuInvalidate>;

        if $z0 == 0 goto label10;

        $r1 = $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost>;

        if $r1 == null goto label10;

        $i0 = $r0.<androidx.fragment.app.FragmentManagerImpl: int mCurState>;

        if $i0 != 4 goto label10;

        virtualinvoke $r1.<androidx.fragment.app.FragmentHostCallback: void onSupportInvalidateOptionsMenu()>();

        $r0.<androidx.fragment.app.FragmentManagerImpl: boolean mNeedMenuInvalidate> = 0;

     label10:
        return;
    }

    void moveToState(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        androidx.fragment.app.Fragment $r1;
        int $i0;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 := @parameter0: androidx.fragment.app.Fragment;

        $i0 = $r0.<androidx.fragment.app.FragmentManagerImpl: int mCurState>;

        virtualinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)>($r1, $i0, 0, 0, 0);

        return;
    }

    void moveToState(androidx.fragment.app.Fragment, int, int, int, boolean)
    {
        androidx.fragment.app.FragmentManagerImpl $r0, $r13;
        androidx.fragment.app.Fragment $r1, $r11;
        int $i0, $i1, $i2, $i3;
        boolean $z0, $z1, $z2;
        android.view.View $r2;
        android.animation.Animator $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5, $r22;
        android.os.Bundle $r6;
        androidx.fragment.app.FragmentHostCallback $r7;
        android.content.Context $r8;
        java.lang.ClassLoader $r9;
        android.util.SparseArray $r10;
        java.lang.Boolean $r12;
        java.lang.Object $r14;
        java.lang.IllegalStateException $r15;
        androidx.fragment.app.SuperNotCalledException $r16;
        android.view.ViewGroup $r17;
        java.lang.IllegalArgumentException $r18;
        androidx.fragment.app.FragmentContainer $r19;
        android.content.res.Resources $r20;
        java.lang.Throwable $r21;
        android.view.LayoutInflater $r23;
        androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator $r24;
        float $f0;
        byte $b4;
        androidx.lifecycle.MutableLiveData $r25;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 := @parameter0: androidx.fragment.app.Fragment;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $z0 := @parameter4: boolean;

        $z1 = $r1.<androidx.fragment.app.Fragment: boolean mAdded>;

        $z2 = 1;

        if $z1 == 0 goto label02;

        $z1 = $r1.<androidx.fragment.app.Fragment: boolean mDetached>;

        if $z1 == 0 goto label01;

        goto label02;

     label01:
        $i3 = $i0;

        goto label03;

     label02:
        $i3 = $i0;

        if $i0 <= 1 goto label03;

        $i3 = 1;

     label03:
        $z1 = $r1.<androidx.fragment.app.Fragment: boolean mRemoving>;

        if $z1 == 0 goto label05;

        $i0 = $r1.<androidx.fragment.app.Fragment: int mState>;

        if $i3 <= $i0 goto label05;

        $i0 = $r1.<androidx.fragment.app.Fragment: int mState>;

        if $i0 != 0 goto label04;

        $z1 = virtualinvoke $r1.<androidx.fragment.app.Fragment: boolean isInBackStack()>();

        if $z1 == 0 goto label04;

        $i3 = 1;

        goto label05;

     label04:
        $i3 = $r1.<androidx.fragment.app.Fragment: int mState>;

     label05:
        $z1 = $r1.<androidx.fragment.app.Fragment: boolean mDeferStart>;

        if $z1 == 0 goto label06;

        $i0 = $r1.<androidx.fragment.app.Fragment: int mState>;

        if $i0 >= 3 goto label06;

        if $i3 <= 2 goto label06;

        $i3 = 2;

     label06:
        $i0 = $r1.<androidx.fragment.app.Fragment: int mState>;

        if $i0 > $i3 goto label48;

        $z0 = $r1.<androidx.fragment.app.Fragment: boolean mFromLayout>;

        if $z0 == 0 goto label07;

        $z0 = $r1.<androidx.fragment.app.Fragment: boolean mInLayout>;

        if $z0 != 0 goto label07;

        return;

     label07:
        $r2 = virtualinvoke $r1.<androidx.fragment.app.Fragment: android.view.View getAnimatingAway()>();

        if $r2 != null goto label08;

        $r3 = virtualinvoke $r1.<androidx.fragment.app.Fragment: android.animation.Animator getAnimator()>();

        if $r3 == null goto label09;

     label08:
        virtualinvoke $r1.<androidx.fragment.app.Fragment: void setAnimatingAway(android.view.View)>(null);

        virtualinvoke $r1.<androidx.fragment.app.Fragment: void setAnimator(android.animation.Animator)>(null);

        $i0 = virtualinvoke $r1.<androidx.fragment.app.Fragment: int getStateAfterAnimating()>();

        virtualinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)>($r1, $i0, 0, 0, 1);

     label09:
        $i0 = $r1.<androidx.fragment.app.Fragment: int mState>;

        if $i0 == 0 goto label10;

        if $i0 == 1 goto label25;

        if $i0 == 2 goto label44;

        if $i0 == 3 goto label46;

        goto label68;

     label10:
        if $i3 <= 0 goto label25;

        $z0 = <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG>;

        if $z0 == 0 goto label11;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("moveto CREATED: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r5);

     label11:
        $r6 = $r1.<androidx.fragment.app.Fragment: android.os.Bundle mSavedFragmentState>;

        if $r6 == null goto label15;

        $r6 = $r1.<androidx.fragment.app.Fragment: android.os.Bundle mSavedFragmentState>;

        $r7 = $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost>;

        $r8 = virtualinvoke $r7.<androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()>();

        $r9 = virtualinvoke $r8.<android.content.Context: java.lang.ClassLoader getClassLoader()>();

        virtualinvoke $r6.<android.os.Bundle: void setClassLoader(java.lang.ClassLoader)>($r9);

        $r6 = $r1.<androidx.fragment.app.Fragment: android.os.Bundle mSavedFragmentState>;

        $r10 = virtualinvoke $r6.<android.os.Bundle: android.util.SparseArray getSparseParcelableArray(java.lang.String)>("android:view_state");

        $r1.<androidx.fragment.app.Fragment: android.util.SparseArray mSavedViewState> = $r10;

        $r6 = $r1.<androidx.fragment.app.Fragment: android.os.Bundle mSavedFragmentState>;

        $r11 = virtualinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment getFragment(android.os.Bundle,java.lang.String)>($r6, "android:target_state");

        $r1.<androidx.fragment.app.Fragment: androidx.fragment.app.Fragment mTarget> = $r11;

        $r11 = $r1.<androidx.fragment.app.Fragment: androidx.fragment.app.Fragment mTarget>;

        if $r11 == null goto label12;

        $r6 = $r1.<androidx.fragment.app.Fragment: android.os.Bundle mSavedFragmentState>;

        $i0 = virtualinvoke $r6.<android.os.Bundle: int getInt(java.lang.String,int)>("android:target_req_state", 0);

        $r1.<androidx.fragment.app.Fragment: int mTargetRequestCode> = $i0;

     label12:
        $r12 = $r1.<androidx.fragment.app.Fragment: java.lang.Boolean mSavedUserVisibleHint>;

        if $r12 == null goto label13;

        $r12 = $r1.<androidx.fragment.app.Fragment: java.lang.Boolean mSavedUserVisibleHint>;

        $z0 = virtualinvoke $r12.<java.lang.Boolean: boolean booleanValue()>();

        $r1.<androidx.fragment.app.Fragment: boolean mUserVisibleHint> = $z0;

        $r1.<androidx.fragment.app.Fragment: java.lang.Boolean mSavedUserVisibleHint> = null;

        goto label14;

     label13:
        $r6 = $r1.<androidx.fragment.app.Fragment: android.os.Bundle mSavedFragmentState>;

        $z0 = virtualinvoke $r6.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>("android:user_visible_hint", 1);

        $r1.<androidx.fragment.app.Fragment: boolean mUserVisibleHint> = $z0;

     label14:
        $z0 = $r1.<androidx.fragment.app.Fragment: boolean mUserVisibleHint>;

        if $z0 != 0 goto label15;

        $r1.<androidx.fragment.app.Fragment: boolean mDeferStart> = 1;

        if $i3 <= 2 goto label15;

        $i3 = 2;

     label15:
        $r7 = $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost>;

        $r1.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentHostCallback mHost> = $r7;

        $r11 = $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment mParent>;

        $r1.<androidx.fragment.app.Fragment: androidx.fragment.app.Fragment mParentFragment> = $r11;

        if $r11 == null goto label16;

        $r13 = $r11.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManagerImpl mChildFragmentManager>;

        goto label17;

     label16:
        $r13 = virtualinvoke $r7.<androidx.fragment.app.FragmentHostCallback: androidx.fragment.app.FragmentManagerImpl getFragmentManagerImpl()>();

     label17:
        $r1.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManagerImpl mFragmentManager> = $r13;

        $r11 = $r1.<androidx.fragment.app.Fragment: androidx.fragment.app.Fragment mTarget>;

        if $r11 == null goto label19;

        $r10 = $r0.<androidx.fragment.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        $r11 = $r1.<androidx.fragment.app.Fragment: androidx.fragment.app.Fragment mTarget>;

        $i0 = $r11.<androidx.fragment.app.Fragment: int mIndex>;

        $r14 = virtualinvoke $r10.<android.util.SparseArray: java.lang.Object get(int)>($i0);

        $r11 = $r1.<androidx.fragment.app.Fragment: androidx.fragment.app.Fragment mTarget>;

        if $r14 != $r11 goto label18;

        $r11 = $r1.<androidx.fragment.app.Fragment: androidx.fragment.app.Fragment mTarget>;

        $i0 = $r11.<androidx.fragment.app.Fragment: int mState>;

        if $i0 >= 1 goto label19;

        $r11 = $r1.<androidx.fragment.app.Fragment: androidx.fragment.app.Fragment mTarget>;

        virtualinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)>($r11, 1, 0, 0, 1);

        goto label19;

     label18:
        $r15 = new java.lang.IllegalStateException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fragment ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" declared target fragment ");

        $r1 = $r1.<androidx.fragment.app.Fragment: androidx.fragment.app.Fragment mTarget>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" that does not belong to this FragmentManager!");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5);

        throw $r15;

     label19:
        $r7 = $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost>;

        $r8 = virtualinvoke $r7.<androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()>();

        virtualinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentPreAttached(androidx.fragment.app.Fragment,android.content.Context,boolean)>($r1, $r8, 0);

        $r1.<androidx.fragment.app.Fragment: boolean mCalled> = 0;

        $r7 = $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost>;

        $r8 = virtualinvoke $r7.<androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()>();

        virtualinvoke $r1.<androidx.fragment.app.Fragment: void onAttach(android.content.Context)>($r8);

        $z0 = $r1.<androidx.fragment.app.Fragment: boolean mCalled>;

        if $z0 == 0 goto label24;

        $r11 = $r1.<androidx.fragment.app.Fragment: androidx.fragment.app.Fragment mParentFragment>;

        if $r11 != null goto label20;

        $r7 = $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost>;

        virtualinvoke $r7.<androidx.fragment.app.FragmentHostCallback: void onAttachFragment(androidx.fragment.app.Fragment)>($r1);

        goto label21;

     label20:
        $r11 = $r1.<androidx.fragment.app.Fragment: androidx.fragment.app.Fragment mParentFragment>;

        virtualinvoke $r11.<androidx.fragment.app.Fragment: void onAttachFragment(androidx.fragment.app.Fragment)>($r1);

     label21:
        $r7 = $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost>;

        $r8 = virtualinvoke $r7.<androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()>();

        virtualinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentAttached(androidx.fragment.app.Fragment,android.content.Context,boolean)>($r1, $r8, 0);

        $z0 = $r1.<androidx.fragment.app.Fragment: boolean mIsCreated>;

        if $z0 != 0 goto label22;

        $r6 = $r1.<androidx.fragment.app.Fragment: android.os.Bundle mSavedFragmentState>;

        virtualinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentPreCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean)>($r1, $r6, 0);

        $r6 = $r1.<androidx.fragment.app.Fragment: android.os.Bundle mSavedFragmentState>;

        virtualinvoke $r1.<androidx.fragment.app.Fragment: void performCreate(android.os.Bundle)>($r6);

        $r6 = $r1.<androidx.fragment.app.Fragment: android.os.Bundle mSavedFragmentState>;

        virtualinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean)>($r1, $r6, 0);

        goto label23;

     label22:
        $r6 = $r1.<androidx.fragment.app.Fragment: android.os.Bundle mSavedFragmentState>;

        virtualinvoke $r1.<androidx.fragment.app.Fragment: void restoreChildFragmentState(android.os.Bundle)>($r6);

        $r1.<androidx.fragment.app.Fragment: int mState> = 1;

     label23:
        $r1.<androidx.fragment.app.Fragment: boolean mRetaining> = 0;

        $i0 = $i3;

        goto label26;

     label24:
        $r16 = new androidx.fragment.app.SuperNotCalledException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fragment ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" did not call through to super.onAttach()");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<androidx.fragment.app.SuperNotCalledException: void <init>(java.lang.String)>($r5);

        throw $r16;

     label25:
        $i0 = $i3;

     label26:
        virtualinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void ensureInflatedFragmentView(androidx.fragment.app.Fragment)>($r1);

        if $i0 <= 1 goto label43;

        $z0 = <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG>;

        if $z0 == 0 goto label27;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("moveto ACTIVITY_CREATED: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r5);

     label27:
        $z0 = $r1.<androidx.fragment.app.Fragment: boolean mFromLayout>;

        if $z0 != 0 goto label41;

        $r17 = null;

        $i1 = $r1.<androidx.fragment.app.Fragment: int mContainerId>;

        if $i1 == 0 goto label35;

        $i1 = $r1.<androidx.fragment.app.Fragment: int mContainerId>;

        if $i1 != -1 goto label28;

        $r18 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot create fragment ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for a container view with no id");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        specialinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void throwException(java.lang.RuntimeException)>($r18);

     label28:
        $r19 = $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentContainer mContainer>;

        $i1 = $r1.<androidx.fragment.app.Fragment: int mContainerId>;

        $r2 = virtualinvoke $r19.<androidx.fragment.app.FragmentContainer: android.view.View onFindViewById(int)>($i1);

        $r17 = (android.view.ViewGroup) $r2;

        if $r17 != null goto label35;

        $z0 = $r1.<androidx.fragment.app.Fragment: boolean mRestored>;

        if $z0 != 0 goto label35;

     label29:
        $r20 = virtualinvoke $r1.<androidx.fragment.app.Fragment: android.content.res.Resources getResources()>();

     label30:
        $i1 = $r1.<androidx.fragment.app.Fragment: int mContainerId>;

     label31:
        $r5 = virtualinvoke $r20.<android.content.res.Resources: java.lang.String getResourceName(int)>($i1);

     label32:
        goto label34;

     label33:
        $r21 := @caughtexception;

        $r5 = "unknown";

     label34:
        $r18 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No view found for id 0x");

        $i1 = $r1.<androidx.fragment.app.Fragment: int mContainerId>;

        $r22 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") for fragment ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        specialinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void throwException(java.lang.RuntimeException)>($r18);

     label35:
        $r1.<androidx.fragment.app.Fragment: android.view.ViewGroup mContainer> = $r17;

        $r6 = $r1.<androidx.fragment.app.Fragment: android.os.Bundle mSavedFragmentState>;

        $r23 = virtualinvoke $r1.<androidx.fragment.app.Fragment: android.view.LayoutInflater performGetLayoutInflater(android.os.Bundle)>($r6);

        $r6 = $r1.<androidx.fragment.app.Fragment: android.os.Bundle mSavedFragmentState>;

        virtualinvoke $r1.<androidx.fragment.app.Fragment: void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>($r23, $r17, $r6);

        $r2 = $r1.<androidx.fragment.app.Fragment: android.view.View mView>;

        if $r2 == null goto label40;

        $r2 = $r1.<androidx.fragment.app.Fragment: android.view.View mView>;

        $r1.<androidx.fragment.app.Fragment: android.view.View mInnerView> = $r2;

        $r2 = $r1.<androidx.fragment.app.Fragment: android.view.View mView>;

        virtualinvoke $r2.<android.view.View: void setSaveFromParentEnabled(boolean)>(0);

        if $r17 == null goto label36;

        $r2 = $r1.<androidx.fragment.app.Fragment: android.view.View mView>;

        virtualinvoke $r17.<android.view.ViewGroup: void addView(android.view.View)>($r2);

     label36:
        $z0 = $r1.<androidx.fragment.app.Fragment: boolean mHidden>;

        if $z0 == 0 goto label37;

        $r2 = $r1.<androidx.fragment.app.Fragment: android.view.View mView>;

        virtualinvoke $r2.<android.view.View: void setVisibility(int)>(8);

     label37:
        $r2 = $r1.<androidx.fragment.app.Fragment: android.view.View mView>;

        $r6 = $r1.<androidx.fragment.app.Fragment: android.os.Bundle mSavedFragmentState>;

        virtualinvoke $r1.<androidx.fragment.app.Fragment: void onViewCreated(android.view.View,android.os.Bundle)>($r2, $r6);

        $r2 = $r1.<androidx.fragment.app.Fragment: android.view.View mView>;

        $r6 = $r1.<androidx.fragment.app.Fragment: android.os.Bundle mSavedFragmentState>;

        virtualinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentViewCreated(androidx.fragment.app.Fragment,android.view.View,android.os.Bundle,boolean)>($r1, $r2, $r6, 0);

        $r2 = $r1.<androidx.fragment.app.Fragment: android.view.View mView>;

        $i1 = virtualinvoke $r2.<android.view.View: int getVisibility()>();

        if $i1 != 0 goto label38;

        $r17 = $r1.<androidx.fragment.app.Fragment: android.view.ViewGroup mContainer>;

        if $r17 == null goto label38;

        goto label39;

     label38:
        $z2 = 0;

     label39:
        $r1.<androidx.fragment.app.Fragment: boolean mIsNewlyAdded> = $z2;

        goto label41;

     label40:
        $r1.<androidx.fragment.app.Fragment: android.view.View mInnerView> = null;

     label41:
        $r6 = $r1.<androidx.fragment.app.Fragment: android.os.Bundle mSavedFragmentState>;

        virtualinvoke $r1.<androidx.fragment.app.Fragment: void performActivityCreated(android.os.Bundle)>($r6);

        $r6 = $r1.<androidx.fragment.app.Fragment: android.os.Bundle mSavedFragmentState>;

        virtualinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentActivityCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean)>($r1, $r6, 0);

        $r2 = $r1.<androidx.fragment.app.Fragment: android.view.View mView>;

        if $r2 == null goto label42;

        $r6 = $r1.<androidx.fragment.app.Fragment: android.os.Bundle mSavedFragmentState>;

        virtualinvoke $r1.<androidx.fragment.app.Fragment: void restoreViewState(android.os.Bundle)>($r6);

     label42:
        $r1.<androidx.fragment.app.Fragment: android.os.Bundle mSavedFragmentState> = null;

     label43:
        $i3 = $i0;

     label44:
        if $i3 <= 2 goto label46;

        $z0 = <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG>;

        if $z0 == 0 goto label45;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("moveto STARTED: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r5);

     label45:
        virtualinvoke $r1.<androidx.fragment.app.Fragment: void performStart()>();

        virtualinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentStarted(androidx.fragment.app.Fragment,boolean)>($r1, 0);

     label46:
        if $i3 <= 3 goto label68;

        $z0 = <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG>;

        if $z0 == 0 goto label47;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("moveto RESUMED: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r5);

     label47:
        virtualinvoke $r1.<androidx.fragment.app.Fragment: void performResume()>();

        virtualinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentResumed(androidx.fragment.app.Fragment,boolean)>($r1, 0);

        $r1.<androidx.fragment.app.Fragment: android.os.Bundle mSavedFragmentState> = null;

        $r1.<androidx.fragment.app.Fragment: android.util.SparseArray mSavedViewState> = null;

        goto label68;

     label48:
        $i0 = $r1.<androidx.fragment.app.Fragment: int mState>;

        if $i0 <= $i3 goto label68;

        $i0 = $r1.<androidx.fragment.app.Fragment: int mState>;

        if $i0 == 1 goto label59;

        if $i0 == 2 goto label53;

        if $i0 == 3 goto label51;

        if $i0 == 4 goto label49;

        goto label68;

     label49:
        if $i3 >= 4 goto label51;

        $z2 = <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG>;

        if $z2 == 0 goto label50;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("movefrom RESUMED: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r5);

     label50:
        virtualinvoke $r1.<androidx.fragment.app.Fragment: void performPause()>();

        virtualinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentPaused(androidx.fragment.app.Fragment,boolean)>($r1, 0);

     label51:
        if $i3 >= 3 goto label53;

        $z2 = <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG>;

        if $z2 == 0 goto label52;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("movefrom STARTED: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r5);

     label52:
        virtualinvoke $r1.<androidx.fragment.app.Fragment: void performStop()>();

        virtualinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentStopped(androidx.fragment.app.Fragment,boolean)>($r1, 0);

     label53:
        if $i3 >= 2 goto label59;

        $z2 = <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG>;

        if $z2 == 0 goto label54;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("movefrom ACTIVITY_CREATED: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r5);

     label54:
        $r2 = $r1.<androidx.fragment.app.Fragment: android.view.View mView>;

        if $r2 == null goto label55;

        $r7 = $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost>;

        $z2 = virtualinvoke $r7.<androidx.fragment.app.FragmentHostCallback: boolean onShouldSaveFragmentState(androidx.fragment.app.Fragment)>($r1);

        if $z2 == 0 goto label55;

        $r10 = $r1.<androidx.fragment.app.Fragment: android.util.SparseArray mSavedViewState>;

        if $r10 != null goto label55;

        virtualinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void saveFragmentViewState(androidx.fragment.app.Fragment)>($r1);

     label55:
        virtualinvoke $r1.<androidx.fragment.app.Fragment: void performDestroyView()>();

        virtualinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentViewDestroyed(androidx.fragment.app.Fragment,boolean)>($r1, 0);

        $r2 = $r1.<androidx.fragment.app.Fragment: android.view.View mView>;

        if $r2 == null goto label58;

        $r17 = $r1.<androidx.fragment.app.Fragment: android.view.ViewGroup mContainer>;

        if $r17 == null goto label58;

        $r17 = $r1.<androidx.fragment.app.Fragment: android.view.ViewGroup mContainer>;

        $r2 = $r1.<androidx.fragment.app.Fragment: android.view.View mView>;

        virtualinvoke $r17.<android.view.ViewGroup: void endViewTransition(android.view.View)>($r2);

        $r2 = $r1.<androidx.fragment.app.Fragment: android.view.View mView>;

        virtualinvoke $r2.<android.view.View: void clearAnimation()>();

        $r24 = null;

        $i0 = $r0.<androidx.fragment.app.FragmentManagerImpl: int mCurState>;

        if $i0 <= 0 goto label56;

        $z2 = $r0.<androidx.fragment.app.FragmentManagerImpl: boolean mDestroyed>;

        if $z2 != 0 goto label56;

        $r2 = $r1.<androidx.fragment.app.Fragment: android.view.View mView>;

        $i0 = virtualinvoke $r2.<android.view.View: int getVisibility()>();

        if $i0 != 0 goto label56;

        $f0 = $r1.<androidx.fragment.app.Fragment: float mPostponedAlpha>;

        $b4 = $f0 cmpl 0.0F;

        if $b4 < 0 goto label56;

        $r24 = virtualinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator loadAnimation(androidx.fragment.app.Fragment,int,boolean,int)>($r1, $i1, 0, $i2);

        goto label56;

     label56:
        $r1.<androidx.fragment.app.Fragment: float mPostponedAlpha> = 0.0F;

        if $r24 == null goto label57;

        specialinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void animateRemoveFragment(androidx.fragment.app.Fragment,androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator,int)>($r1, $r24, $i3);

     label57:
        $r17 = $r1.<androidx.fragment.app.Fragment: android.view.ViewGroup mContainer>;

        $r2 = $r1.<androidx.fragment.app.Fragment: android.view.View mView>;

        virtualinvoke $r17.<android.view.ViewGroup: void removeView(android.view.View)>($r2);

     label58:
        $r1.<androidx.fragment.app.Fragment: android.view.ViewGroup mContainer> = null;

        $r1.<androidx.fragment.app.Fragment: android.view.View mView> = null;

        $r1.<androidx.fragment.app.Fragment: androidx.lifecycle.LifecycleOwner mViewLifecycleOwner> = null;

        $r25 = $r1.<androidx.fragment.app.Fragment: androidx.lifecycle.MutableLiveData mViewLifecycleOwnerLiveData>;

        virtualinvoke $r25.<androidx.lifecycle.MutableLiveData: void setValue(java.lang.Object)>(null);

        $r1.<androidx.fragment.app.Fragment: android.view.View mInnerView> = null;

        $r1.<androidx.fragment.app.Fragment: boolean mInLayout> = 0;

        goto label59;

     label59:
        if $i3 >= 1 goto label68;

        $z2 = $r0.<androidx.fragment.app.FragmentManagerImpl: boolean mDestroyed>;

        if $z2 == 0 goto label61;

        $r2 = virtualinvoke $r1.<androidx.fragment.app.Fragment: android.view.View getAnimatingAway()>();

        if $r2 == null goto label60;

        $r2 = virtualinvoke $r1.<androidx.fragment.app.Fragment: android.view.View getAnimatingAway()>();

        virtualinvoke $r1.<androidx.fragment.app.Fragment: void setAnimatingAway(android.view.View)>(null);

        virtualinvoke $r2.<android.view.View: void clearAnimation()>();

        goto label61;

     label60:
        $r3 = virtualinvoke $r1.<androidx.fragment.app.Fragment: android.animation.Animator getAnimator()>();

        if $r3 == null goto label61;

        $r3 = virtualinvoke $r1.<androidx.fragment.app.Fragment: android.animation.Animator getAnimator()>();

        virtualinvoke $r1.<androidx.fragment.app.Fragment: void setAnimator(android.animation.Animator)>(null);

        virtualinvoke $r3.<android.animation.Animator: void cancel()>();

     label61:
        $r2 = virtualinvoke $r1.<androidx.fragment.app.Fragment: android.view.View getAnimatingAway()>();

        if $r2 != null goto label67;

        $r3 = virtualinvoke $r1.<androidx.fragment.app.Fragment: android.animation.Animator getAnimator()>();

        if $r3 == null goto label62;

        goto label67;

     label62:
        $z2 = <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG>;

        if $z2 == 0 goto label63;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("movefrom CREATED: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r5);

     label63:
        $z2 = $r1.<androidx.fragment.app.Fragment: boolean mRetaining>;

        if $z2 != 0 goto label64;

        virtualinvoke $r1.<androidx.fragment.app.Fragment: void performDestroy()>();

        virtualinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentDestroyed(androidx.fragment.app.Fragment,boolean)>($r1, 0);

        goto label65;

     label64:
        $r1.<androidx.fragment.app.Fragment: int mState> = 0;

     label65:
        virtualinvoke $r1.<androidx.fragment.app.Fragment: void performDetach()>();

        virtualinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentDetached(androidx.fragment.app.Fragment,boolean)>($r1, 0);

        if $z0 != 0 goto label68;

        $z0 = $r1.<androidx.fragment.app.Fragment: boolean mRetaining>;

        if $z0 != 0 goto label66;

        virtualinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void makeInactive(androidx.fragment.app.Fragment)>($r1);

        goto label68;

     label66:
        $r1.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentHostCallback mHost> = null;

        $r1.<androidx.fragment.app.Fragment: androidx.fragment.app.Fragment mParentFragment> = null;

        $r1.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManagerImpl mFragmentManager> = null;

        goto label68;

     label67:
        virtualinvoke $r1.<androidx.fragment.app.Fragment: void setStateAfterAnimating(int)>($i3);

        $i3 = 1;

     label68:
        $i0 = $r1.<androidx.fragment.app.Fragment: int mState>;

        if $i0 == $i3 goto label69;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("moveToState: Fragment state for ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not updated inline; ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("expected state ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" found ");

        $i0 = $r1.<androidx.fragment.app.Fragment: int mState>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("FragmentManager", $r5);

        $r1.<androidx.fragment.app.Fragment: int mState> = $i3;

     label69:
        return;

        catch android.content.res.Resources$NotFoundException from label29 to label30 with label33;
        catch android.content.res.Resources$NotFoundException from label31 to label32 with label33;
    }

    public void noteStateNotSaved()
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        java.util.ArrayList $r1;
        int $i0, $i1;
        java.lang.Object $r2;
        androidx.fragment.app.Fragment $r3;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentManagerNonConfig mSavedNonConfig> = null;

        $r0.<androidx.fragment.app.FragmentManagerImpl: boolean mStateSaved> = 0;

        $r0.<androidx.fragment.app.FragmentManagerImpl: boolean mStopped> = 0;

        $r1 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r1 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r3 = (androidx.fragment.app.Fragment) $r2;

        if $r3 == null goto label2;

        virtualinvoke $r3.<androidx.fragment.app.Fragment: void noteStateNotSaved()>();

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return;
    }

    public android.view.View onCreateView(android.view.View, java.lang.String, android.content.Context, android.util.AttributeSet)
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        android.view.View $r1;
        java.lang.String $r2, $r5, $r13;
        android.content.Context $r3, $r9;
        android.util.AttributeSet $r4;
        int $i0, $i1, $i2;
        boolean $z0;
        int[] $r6;
        android.content.res.TypedArray $r7;
        androidx.fragment.app.FragmentHostCallback $r8;
        java.lang.IllegalArgumentException $r10;
        java.lang.StringBuilder $r11;
        androidx.fragment.app.Fragment $r12;
        androidx.fragment.app.FragmentContainer $r14;
        android.os.Bundle $r15;
        java.lang.Object $r16;
        java.lang.IllegalStateException $r17;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: android.content.Context;

        $r4 := @parameter3: android.util.AttributeSet;

        $r5 = "fragment";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label01;

        return null;

     label01:
        $r2 = interfaceinvoke $r4.<android.util.AttributeSet: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "class");

        $r6 = <androidx.fragment.app.FragmentManagerImpl$FragmentTag: int[] Fragment>;

        $r7 = virtualinvoke $r3.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>($r4, $r6);

        $i1 = 0;

        if $r2 != null goto label02;

        $r2 = virtualinvoke $r7.<android.content.res.TypedArray: java.lang.String getString(int)>(0);

        goto label02;

     label02:
        $i2 = virtualinvoke $r7.<android.content.res.TypedArray: int getResourceId(int,int)>(1, -1);

        $r5 = virtualinvoke $r7.<android.content.res.TypedArray: java.lang.String getString(int)>(2);

        virtualinvoke $r7.<android.content.res.TypedArray: void recycle()>();

        $r8 = $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost>;

        $r9 = virtualinvoke $r8.<androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()>();

        $z0 = staticinvoke <androidx.fragment.app.Fragment: boolean isSupportFragmentClass(android.content.Context,java.lang.String)>($r9, $r2);

        if $z0 != 0 goto label03;

        return null;

     label03:
        if $r1 == null goto label04;

        $i1 = virtualinvoke $r1.<android.view.View: int getId()>();

     label04:
        $i0 = $i1;

        if $i1 != -1 goto label06;

        if $i2 != -1 goto label06;

        if $r5 == null goto label05;

        goto label06;

     label05:
        $r10 = new java.lang.IllegalArgumentException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r5 = interfaceinvoke $r4.<android.util.AttributeSet: java.lang.String getPositionDescription()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Must specify unique android:id, android:tag, or have a parent with an id for ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        throw $r10;

     label06:
        if $i2 == -1 goto label07;

        $r12 = virtualinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment findFragmentById(int)>($i2);

        goto label08;

     label07:
        $r12 = null;

     label08:
        if $r12 != null goto label09;

        if $r5 == null goto label09;

        $r12 = virtualinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment findFragmentByTag(java.lang.String)>($r5);

     label09:
        if $r12 != null goto label10;

        if $i0 == -1 goto label10;

        $r12 = virtualinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment findFragmentById(int)>($i0);

     label10:
        $z0 = <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG>;

        if $z0 == 0 goto label11;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onCreateView: id=0x");

        $r13 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i2);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" fname=");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" existing=");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r13);

     label11:
        if $r12 != null goto label14;

        $r14 = $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentContainer mContainer>;

        $r12 = virtualinvoke $r14.<androidx.fragment.app.FragmentContainer: androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)>($r3, $r2, null);

        $r12.<androidx.fragment.app.Fragment: boolean mFromLayout> = 1;

        if $i2 == 0 goto label12;

        $i1 = $i2;

        goto label13;

     label12:
        $i1 = $i0;

     label13:
        $r12.<androidx.fragment.app.Fragment: int mFragmentId> = $i1;

        $r12.<androidx.fragment.app.Fragment: int mContainerId> = $i0;

        $r12.<androidx.fragment.app.Fragment: java.lang.String mTag> = $r5;

        $r12.<androidx.fragment.app.Fragment: boolean mInLayout> = 1;

        $r12.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManagerImpl mFragmentManager> = $r0;

        $r8 = $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost>;

        $r12.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentHostCallback mHost> = $r8;

        $r3 = virtualinvoke $r8.<androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()>();

        $r15 = $r12.<androidx.fragment.app.Fragment: android.os.Bundle mSavedFragmentState>;

        virtualinvoke $r12.<androidx.fragment.app.Fragment: void onInflate(android.content.Context,android.util.AttributeSet,android.os.Bundle)>($r3, $r4, $r15);

        virtualinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void addFragment(androidx.fragment.app.Fragment,boolean)>($r12, 1);

        goto label15;

     label14:
        $z0 = $r12.<androidx.fragment.app.Fragment: boolean mInLayout>;

        if $z0 != 0 goto label21;

        $r12.<androidx.fragment.app.Fragment: boolean mInLayout> = 1;

        $r8 = $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost>;

        $r12.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentHostCallback mHost> = $r8;

        $z0 = $r12.<androidx.fragment.app.Fragment: boolean mRetaining>;

        if $z0 != 0 goto label15;

        $r8 = $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost>;

        $r3 = virtualinvoke $r8.<androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()>();

        $r15 = $r12.<androidx.fragment.app.Fragment: android.os.Bundle mSavedFragmentState>;

        virtualinvoke $r12.<androidx.fragment.app.Fragment: void onInflate(android.content.Context,android.util.AttributeSet,android.os.Bundle)>($r3, $r4, $r15);

     label15:
        $i0 = $r0.<androidx.fragment.app.FragmentManagerImpl: int mCurState>;

        if $i0 >= 1 goto label16;

        $z0 = $r12.<androidx.fragment.app.Fragment: boolean mFromLayout>;

        if $z0 == 0 goto label16;

        virtualinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)>($r12, 1, 0, 0, 0);

        goto label17;

     label16:
        virtualinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void moveToState(androidx.fragment.app.Fragment)>($r12);

     label17:
        $r1 = $r12.<androidx.fragment.app.Fragment: android.view.View mView>;

        if $r1 == null goto label20;

        if $i2 == 0 goto label18;

        $r1 = $r12.<androidx.fragment.app.Fragment: android.view.View mView>;

        virtualinvoke $r1.<android.view.View: void setId(int)>($i2);

     label18:
        $r1 = $r12.<androidx.fragment.app.Fragment: android.view.View mView>;

        $r16 = virtualinvoke $r1.<android.view.View: java.lang.Object getTag()>();

        if $r16 != null goto label19;

        $r1 = $r12.<androidx.fragment.app.Fragment: android.view.View mView>;

        virtualinvoke $r1.<android.view.View: void setTag(java.lang.Object)>($r5);

     label19:
        $r1 = $r12.<androidx.fragment.app.Fragment: android.view.View mView>;

        return $r1;

     label20:
        $r17 = new java.lang.IllegalStateException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fragment ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" did not create a view.");

        $r2 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r2);

        throw $r17;

     label21:
        $r10 = new java.lang.IllegalArgumentException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = interfaceinvoke $r4.<android.util.AttributeSet: java.lang.String getPositionDescription()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Duplicate id 0x");

        $r13 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i2);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", tag ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", or parent id 0x");

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with another fragment for ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        throw $r10;
    }

    public android.view.View onCreateView(java.lang.String, android.content.Context, android.util.AttributeSet)
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        java.lang.String $r1;
        android.content.Context $r2;
        android.util.AttributeSet $r3;
        android.view.View $r4;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.content.Context;

        $r3 := @parameter2: android.util.AttributeSet;

        $r4 = virtualinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)>(null, $r1, $r2, $r3);

        return $r4;
    }

    public void performPendingDeferredStart(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        androidx.fragment.app.Fragment $r1;
        int $i0;
        boolean $z0;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 := @parameter0: androidx.fragment.app.Fragment;

        $z0 = $r1.<androidx.fragment.app.Fragment: boolean mDeferStart>;

        if $z0 == 0 goto label2;

        $z0 = $r0.<androidx.fragment.app.FragmentManagerImpl: boolean mExecutingActions>;

        if $z0 == 0 goto label1;

        $r0.<androidx.fragment.app.FragmentManagerImpl: boolean mHavePendingDeferredStart> = 1;

        return;

     label1:
        $r1.<androidx.fragment.app.Fragment: boolean mDeferStart> = 0;

        $i0 = $r0.<androidx.fragment.app.FragmentManagerImpl: int mCurState>;

        virtualinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)>($r1, $i0, 0, 0, 0);

     label2:
        return;
    }

    public void popBackStack()
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        androidx.fragment.app.FragmentManagerImpl$PopBackStackState $r1;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 = new androidx.fragment.app.FragmentManagerImpl$PopBackStackState;

        specialinvoke $r1.<androidx.fragment.app.FragmentManagerImpl$PopBackStackState: void <init>(androidx.fragment.app.FragmentManagerImpl,java.lang.String,int,int)>($r0, null, -1, 0);

        virtualinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void enqueueAction(androidx.fragment.app.FragmentManagerImpl$OpGenerator,boolean)>($r1, 0);

        return;
    }

    public void popBackStack(int, int)
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        int $i0, $i1;
        java.lang.String $r1;
        androidx.fragment.app.FragmentManagerImpl$PopBackStackState $r2;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        if $i0 < 0 goto label1;

        $r2 = new androidx.fragment.app.FragmentManagerImpl$PopBackStackState;

        specialinvoke $r2.<androidx.fragment.app.FragmentManagerImpl$PopBackStackState: void <init>(androidx.fragment.app.FragmentManagerImpl,java.lang.String,int,int)>($r0, null, $i0, $i1);

        virtualinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void enqueueAction(androidx.fragment.app.FragmentManagerImpl$OpGenerator,boolean)>($r2, 0);

        return;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad id: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r3;
    }

    public void popBackStack(java.lang.String, int)
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        java.lang.String $r1;
        int $i0;
        androidx.fragment.app.FragmentManagerImpl$PopBackStackState $r2;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 = new androidx.fragment.app.FragmentManagerImpl$PopBackStackState;

        specialinvoke $r2.<androidx.fragment.app.FragmentManagerImpl$PopBackStackState: void <init>(androidx.fragment.app.FragmentManagerImpl,java.lang.String,int,int)>($r0, $r1, -1, $i0);

        virtualinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void enqueueAction(androidx.fragment.app.FragmentManagerImpl$OpGenerator,boolean)>($r2, 0);

        return;
    }

    public boolean popBackStackImmediate()
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        boolean $z0;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        specialinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void checkStateLoss()>();

        $z0 = specialinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: boolean popBackStackImmediate(java.lang.String,int,int)>(null, -1, 0);

        return $z0;
    }

    public boolean popBackStackImmediate(int, int)
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        int $i0, $i1;
        boolean $z0;
        java.lang.IllegalArgumentException $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        specialinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void checkStateLoss()>();

        virtualinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: boolean execPendingActions()>();

        if $i0 < 0 goto label1;

        $z0 = specialinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: boolean popBackStackImmediate(java.lang.String,int,int)>(null, $i0, $i1);

        return $z0;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad id: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r1;
    }

    public boolean popBackStackImmediate(java.lang.String, int)
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        java.lang.String $r1;
        int $i0;
        boolean $z0;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void checkStateLoss()>();

        $z0 = specialinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: boolean popBackStackImmediate(java.lang.String,int,int)>($r1, -1, $i0);

        return $z0;
    }

    boolean popBackStackState(java.util.ArrayList, java.util.ArrayList, java.lang.String, int, int)
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        java.util.ArrayList $r1, $r2, $r4;
        java.lang.String $r3, $r8;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r5;
        java.lang.Boolean $r6;
        androidx.fragment.app.BackStackRecord $r7;
        boolean $z0;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 := @parameter0: java.util.ArrayList;

        $r2 := @parameter1: java.util.ArrayList;

        $r3 := @parameter2: java.lang.String;

        $i0 := @parameter3: int;

        $i1 := @parameter4: int;

        $r4 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStack>;

        if $r4 != null goto label01;

        return 0;

     label01:
        if $r3 != null goto label03;

        if $i0 >= 0 goto label03;

        $i2 = $i1 & 1;

        if $i2 != 0 goto label03;

        $i0 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        $i0 = $i0 - 1;

        if $i0 >= 0 goto label02;

        return 0;

     label02:
        $r4 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStack>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object remove(int)>($i0);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        return 1;

     label03:
        $i2 = -1;

        if $r3 != null goto label04;

        if $i0 < 0 goto label13;

     label04:
        $r4 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStack>;

        $i2 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        $i2 = $i2 - 1;

     label05:
        if $i2 < 0 goto label08;

        $r4 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStack>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r7 = (androidx.fragment.app.BackStackRecord) $r5;

        if $r3 == null goto label06;

        $r8 = virtualinvoke $r7.<androidx.fragment.app.BackStackRecord: java.lang.String getName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 == 0 goto label06;

        goto label08;

     label06:
        if $i0 < 0 goto label07;

        $i3 = $r7.<androidx.fragment.app.BackStackRecord: int mIndex>;

        if $i0 != $i3 goto label07;

        goto label08;

     label07:
        $i2 = $i2 + -1;

        goto label05;

     label08:
        if $i2 >= 0 goto label09;

        return 0;

     label09:
        $i1 = $i1 & 1;

        if $i1 == 0 goto label13;

        $i2 = $i2 + -1;

     label10:
        if $i2 < 0 goto label13;

        $r4 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStack>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r7 = (androidx.fragment.app.BackStackRecord) $r5;

        if $r3 == null goto label11;

        $r8 = virtualinvoke $r7.<androidx.fragment.app.BackStackRecord: java.lang.String getName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 != 0 goto label12;

     label11:
        if $i0 < 0 goto label13;

        $i1 = $r7.<androidx.fragment.app.BackStackRecord: int mIndex>;

        if $i0 != $i1 goto label13;

     label12:
        $i2 = $i2 + -1;

        goto label10;

     label13:
        $r4 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStack>;

        $i0 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        $i0 = $i0 - 1;

        if $i2 != $i0 goto label14;

        return 0;

     label14:
        $r4 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStack>;

        $i0 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        $i0 = $i0 - 1;

     label15:
        if $i0 <= $i2 goto label16;

        $r4 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStack>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object remove(int)>($i0);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        $i0 = $i0 + -1;

        goto label15;

     label16:
        return 1;
    }

    public void putFragment(android.os.Bundle, java.lang.String, androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        android.os.Bundle $r1;
        java.lang.String $r2, $r4;
        androidx.fragment.app.Fragment $r3;
        int $i0;
        java.lang.IllegalStateException $r5;
        java.lang.StringBuilder $r6;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 := @parameter0: android.os.Bundle;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: androidx.fragment.app.Fragment;

        $i0 = $r3.<androidx.fragment.app.Fragment: int mIndex>;

        if $i0 >= 0 goto label1;

        $r5 = new java.lang.IllegalStateException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fragment ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not currently in the FragmentManager");

        $r4 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r4);

        specialinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void throwException(java.lang.RuntimeException)>($r5);

     label1:
        $i0 = $r3.<androidx.fragment.app.Fragment: int mIndex>;

        virtualinvoke $r1.<android.os.Bundle: void putInt(java.lang.String,int)>("android:target_state", $i0);

        return;
    }

    public void registerFragmentLifecycleCallbacks(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks, boolean)
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks $r1;
        boolean $z0;
        java.util.concurrent.CopyOnWriteArrayList $r2;
        androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder $r3;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 := @parameter0: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks;

        $z0 := @parameter1: boolean;

        $r2 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks>;

        $r3 = new androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder;

        specialinvoke $r3.<androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder: void <init>(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks,boolean)>($r1, $z0);

        virtualinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>($r3);

        return;
    }

    public void removeFragment(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        androidx.fragment.app.Fragment $r1;
        java.util.ArrayList $r2, $r5;
        boolean $z0, $z1;
        java.lang.StringBuilder $r3;
        int $i0;
        java.lang.String $r4;
        java.lang.Throwable $r6;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 := @parameter0: androidx.fragment.app.Fragment;

        $z0 = <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("remove: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" nesting=");

        $i0 = $r1.<androidx.fragment.app.Fragment: int mBackStackNesting>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r4);

     label1:
        $z0 = virtualinvoke $r1.<androidx.fragment.app.Fragment: boolean isInBackStack()>();

        $z0 = $z0 ^ 1;

        $z1 = $r1.<androidx.fragment.app.Fragment: boolean mDetached>;

        if $z1 == 0 goto label2;

        if $z0 == 0 goto label9;

     label2:
        $r5 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        entermonitor $r5;

     label3:
        $r2 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>($r1);

        exitmonitor $r5;

     label4:
        $z0 = $r1.<androidx.fragment.app.Fragment: boolean mHasMenu>;

        if $z0 == 0 goto label5;

        $z0 = $r1.<androidx.fragment.app.Fragment: boolean mMenuVisible>;

        if $z0 == 0 goto label5;

        $r0.<androidx.fragment.app.FragmentManagerImpl: boolean mNeedMenuInvalidate> = 1;

     label5:
        $r1.<androidx.fragment.app.Fragment: boolean mAdded> = 0;

        $r1.<androidx.fragment.app.Fragment: boolean mRemoving> = 1;

        return;

     label6:
        $r6 := @caughtexception;

     label7:
        exitmonitor $r5;

     label8:
        throw $r6;

     label9:
        return;

        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void removeOnBackStackChangedListener(androidx.fragment.app.FragmentManager$OnBackStackChangedListener)
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        androidx.fragment.app.FragmentManager$OnBackStackChangedListener $r1;
        java.util.ArrayList $r2;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 := @parameter0: androidx.fragment.app.FragmentManager$OnBackStackChangedListener;

        $r2 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStackChangeListeners>;

        if $r2 == null goto label1;

        virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>($r1);

     label1:
        return;
    }

    void reportBackStackChanged()
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        java.util.ArrayList $r1;
        int $i0, $i1;
        java.lang.Object $r2;
        androidx.fragment.app.FragmentManager$OnBackStackChangedListener $r3;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStackChangeListeners>;

        if $r1 == null goto label2;

        $i0 = 0;

     label1:
        $r1 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStackChangeListeners>;

        $i1 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $i0 >= $i1 goto label2;

        $r1 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStackChangeListeners>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r3 = (androidx.fragment.app.FragmentManager$OnBackStackChangedListener) $r2;

        interfaceinvoke $r3.<androidx.fragment.app.FragmentManager$OnBackStackChangedListener: void onBackStackChanged()>();

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return;
    }

    void restoreAllState(android.os.Parcelable, androidx.fragment.app.FragmentManagerNonConfig)
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        android.os.Parcelable $r1;
        androidx.fragment.app.FragmentManagerNonConfig $r2, $r19;
        androidx.fragment.app.FragmentManagerState $r3;
        androidx.fragment.app.FragmentState[] $r4;
        java.util.List $r5, $r6, $r7;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.Object $r8;
        androidx.fragment.app.Fragment $r9, $r22;
        boolean $z0;
        java.lang.StringBuilder $r10;
        java.lang.String $r11;
        androidx.fragment.app.FragmentState $r12;
        java.lang.IllegalStateException $r13;
        android.os.Bundle $r14;
        androidx.fragment.app.FragmentHostCallback $r15;
        android.content.Context $r16;
        java.lang.ClassLoader $r17;
        android.util.SparseArray $r18;
        androidx.lifecycle.ViewModelStore $r20;
        androidx.fragment.app.FragmentContainer $r21;
        java.util.ArrayList $r23, $r25;
        int[] $r24;
        java.lang.Throwable $r26;
        androidx.fragment.app.BackStackState[] $r27;
        androidx.fragment.app.BackStackState $r28;
        androidx.fragment.app.BackStackRecord $r29;
        androidx.core.util.LogWriter $r30;
        java.io.PrintWriter $r31;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 := @parameter0: android.os.Parcelable;

        $r2 := @parameter1: androidx.fragment.app.FragmentManagerNonConfig;

        if $r1 != null goto label01;

        return;

     label01:
        $r3 = (androidx.fragment.app.FragmentManagerState) $r1;

        $r4 = $r3.<androidx.fragment.app.FragmentManagerState: androidx.fragment.app.FragmentState[] mActive>;

        if $r4 != null goto label02;

        return;

     label02:
        if $r2 == null goto label12;

        $r5 = virtualinvoke $r2.<androidx.fragment.app.FragmentManagerNonConfig: java.util.List getFragments()>();

        $r6 = virtualinvoke $r2.<androidx.fragment.app.FragmentManagerNonConfig: java.util.List getChildNonConfigs()>();

        $r7 = virtualinvoke $r2.<androidx.fragment.app.FragmentManagerNonConfig: java.util.List getViewModelStores()>();

        if $r5 == null goto label03;

        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        goto label04;

     label03:
        $i0 = 0;

     label04:
        $i1 = 0;

     label05:
        if $i1 >= $i0 goto label11;

        $r8 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>($i1);

        $r9 = (androidx.fragment.app.Fragment) $r8;

        $z0 = <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG>;

        if $z0 == 0 goto label06;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("restoreAllState: re-attaching retained ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r11);

     label06:
        $i2 = 0;

     label07:
        $r4 = $r3.<androidx.fragment.app.FragmentManagerState: androidx.fragment.app.FragmentState[] mActive>;

        $i3 = lengthof $r4;

        if $i2 >= $i3 goto label08;

        $r4 = $r3.<androidx.fragment.app.FragmentManagerState: androidx.fragment.app.FragmentState[] mActive>;

        $r12 = $r4[$i2];

        $i3 = $r12.<androidx.fragment.app.FragmentState: int mIndex>;

        $i4 = $r9.<androidx.fragment.app.Fragment: int mIndex>;

        if $i3 == $i4 goto label08;

        $i2 = $i2 + 1;

        goto label07;

     label08:
        $r4 = $r3.<androidx.fragment.app.FragmentManagerState: androidx.fragment.app.FragmentState[] mActive>;

        $i3 = lengthof $r4;

        if $i2 != $i3 goto label09;

        $r13 = new java.lang.IllegalStateException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not find active fragment with index ");

        $i3 = $r9.<androidx.fragment.app.Fragment: int mIndex>;

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r11);

        specialinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void throwException(java.lang.RuntimeException)>($r13);

     label09:
        $r4 = $r3.<androidx.fragment.app.FragmentManagerState: androidx.fragment.app.FragmentState[] mActive>;

        $r12 = $r4[$i2];

        $r12.<androidx.fragment.app.FragmentState: androidx.fragment.app.Fragment mInstance> = $r9;

        $r9.<androidx.fragment.app.Fragment: android.util.SparseArray mSavedViewState> = null;

        $r9.<androidx.fragment.app.Fragment: int mBackStackNesting> = 0;

        $r9.<androidx.fragment.app.Fragment: boolean mInLayout> = 0;

        $r9.<androidx.fragment.app.Fragment: boolean mAdded> = 0;

        $r9.<androidx.fragment.app.Fragment: androidx.fragment.app.Fragment mTarget> = null;

        $r14 = $r12.<androidx.fragment.app.FragmentState: android.os.Bundle mSavedFragmentState>;

        if $r14 == null goto label10;

        $r14 = $r12.<androidx.fragment.app.FragmentState: android.os.Bundle mSavedFragmentState>;

        $r15 = $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost>;

        $r16 = virtualinvoke $r15.<androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()>();

        $r17 = virtualinvoke $r16.<android.content.Context: java.lang.ClassLoader getClassLoader()>();

        virtualinvoke $r14.<android.os.Bundle: void setClassLoader(java.lang.ClassLoader)>($r17);

        $r14 = $r12.<androidx.fragment.app.FragmentState: android.os.Bundle mSavedFragmentState>;

        $r18 = virtualinvoke $r14.<android.os.Bundle: android.util.SparseArray getSparseParcelableArray(java.lang.String)>("android:view_state");

        $r9.<androidx.fragment.app.Fragment: android.util.SparseArray mSavedViewState> = $r18;

        $r14 = $r12.<androidx.fragment.app.FragmentState: android.os.Bundle mSavedFragmentState>;

        $r9.<androidx.fragment.app.Fragment: android.os.Bundle mSavedFragmentState> = $r14;

     label10:
        $i1 = $i1 + 1;

        goto label05;

     label11:
        $r5 = $r7;

        goto label13;

     label12:
        $r5 = null;

        $r6 = null;

     label13:
        $r18 = new android.util.SparseArray;

        $r4 = $r3.<androidx.fragment.app.FragmentManagerState: androidx.fragment.app.FragmentState[] mActive>;

        $i0 = lengthof $r4;

        specialinvoke $r18.<android.util.SparseArray: void <init>(int)>($i0);

        $r0.<androidx.fragment.app.FragmentManagerImpl: android.util.SparseArray mActive> = $r18;

        $i0 = 0;

     label14:
        $r4 = $r3.<androidx.fragment.app.FragmentManagerState: androidx.fragment.app.FragmentState[] mActive>;

        $i1 = lengthof $r4;

        if $i0 >= $i1 goto label21;

        $r4 = $r3.<androidx.fragment.app.FragmentManagerState: androidx.fragment.app.FragmentState[] mActive>;

        $r12 = $r4[$i0];

        if $r12 == null goto label20;

        if $r6 == null goto label15;

        $i1 = interfaceinvoke $r6.<java.util.List: int size()>();

        if $i0 >= $i1 goto label15;

        $r8 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>($i0);

        $r19 = (androidx.fragment.app.FragmentManagerNonConfig) $r8;

        goto label16;

     label15:
        $r19 = null;

     label16:
        if $r5 == null goto label17;

        $i1 = interfaceinvoke $r5.<java.util.List: int size()>();

        if $i0 >= $i1 goto label17;

        $r8 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>($i0);

        $r20 = (androidx.lifecycle.ViewModelStore) $r8;

        goto label18;

     label17:
        $r20 = null;

     label18:
        $r15 = $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost>;

        $r21 = $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentContainer mContainer>;

        $r9 = $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment mParent>;

        $r9 = virtualinvoke $r12.<androidx.fragment.app.FragmentState: androidx.fragment.app.Fragment instantiate(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment,androidx.fragment.app.FragmentManagerNonConfig,androidx.lifecycle.ViewModelStore)>($r15, $r21, $r9, $r19, $r20);

        $z0 = <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG>;

        if $z0 == 0 goto label19;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("restoreAllState: active #");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r11);

     label19:
        $r18 = $r0.<androidx.fragment.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        $i1 = $r9.<androidx.fragment.app.Fragment: int mIndex>;

        virtualinvoke $r18.<android.util.SparseArray: void put(int,java.lang.Object)>($i1, $r9);

        $r12.<androidx.fragment.app.FragmentState: androidx.fragment.app.Fragment mInstance> = null;

     label20:
        $i0 = $i0 + 1;

        goto label14;

     label21:
        if $r2 == null goto label26;

        $r6 = virtualinvoke $r2.<androidx.fragment.app.FragmentManagerNonConfig: java.util.List getFragments()>();

        if $r6 == null goto label22;

        $i0 = interfaceinvoke $r6.<java.util.List: int size()>();

        goto label23;

     label22:
        $i0 = 0;

     label23:
        $i1 = 0;

     label24:
        if $i1 >= $i0 goto label26;

        $r8 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>($i1);

        $r9 = (androidx.fragment.app.Fragment) $r8;

        $i2 = $r9.<androidx.fragment.app.Fragment: int mTargetIndex>;

        if $i2 < 0 goto label25;

        $r18 = $r0.<androidx.fragment.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        $i2 = $r9.<androidx.fragment.app.Fragment: int mTargetIndex>;

        $r8 = virtualinvoke $r18.<android.util.SparseArray: java.lang.Object get(int)>($i2);

        $r22 = (androidx.fragment.app.Fragment) $r8;

        $r9.<androidx.fragment.app.Fragment: androidx.fragment.app.Fragment mTarget> = $r22;

        $r22 = $r9.<androidx.fragment.app.Fragment: androidx.fragment.app.Fragment mTarget>;

        if $r22 != null goto label25;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Re-attaching retained fragment ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" target no longer exists: ");

        $i2 = $r9.<androidx.fragment.app.Fragment: int mTargetIndex>;

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("FragmentManager", $r11);

     label25:
        $i1 = $i1 + 1;

        goto label24;

     label26:
        $r23 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        virtualinvoke $r23.<java.util.ArrayList: void clear()>();

        $r24 = $r3.<androidx.fragment.app.FragmentManagerState: int[] mAdded>;

        if $r24 == null goto label35;

        $i0 = 0;

     label27:
        $r24 = $r3.<androidx.fragment.app.FragmentManagerState: int[] mAdded>;

        $i1 = lengthof $r24;

        if $i0 >= $i1 goto label35;

        $r18 = $r0.<androidx.fragment.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        $r24 = $r3.<androidx.fragment.app.FragmentManagerState: int[] mAdded>;

        $i1 = $r24[$i0];

        $r8 = virtualinvoke $r18.<android.util.SparseArray: java.lang.Object get(int)>($i1);

        $r9 = (androidx.fragment.app.Fragment) $r8;

        if $r9 != null goto label28;

        $r13 = new java.lang.IllegalStateException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No instantiated fragment for index #");

        $r24 = $r3.<androidx.fragment.app.FragmentManagerState: int[] mAdded>;

        $i1 = $r24[$i0];

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r11);

        specialinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void throwException(java.lang.RuntimeException)>($r13);

     label28:
        $r9.<androidx.fragment.app.Fragment: boolean mAdded> = 1;

        $z0 = <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG>;

        if $z0 == 0 goto label29;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("restoreAllState: added #");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r11);

     label29:
        $r23 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $z0 = virtualinvoke $r23.<java.util.ArrayList: boolean contains(java.lang.Object)>($r9);

        if $z0 != 0 goto label34;

        $r23 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        entermonitor $r23;

     label30:
        $r25 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        virtualinvoke $r25.<java.util.ArrayList: boolean add(java.lang.Object)>($r9);

        exitmonitor $r23;

     label31:
        $i0 = $i0 + 1;

        goto label27;

     label32:
        $r26 := @caughtexception;

        exitmonitor $r23;

     label33:
        throw $r26;

     label34:
        $r13 = new java.lang.IllegalStateException;

        specialinvoke $r13.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Already added!");

        throw $r13;

     label35:
        $r27 = $r3.<androidx.fragment.app.FragmentManagerState: androidx.fragment.app.BackStackState[] mBackStack>;

        if $r27 == null goto label39;

        $r23 = new java.util.ArrayList;

        $r27 = $r3.<androidx.fragment.app.FragmentManagerState: androidx.fragment.app.BackStackState[] mBackStack>;

        $i0 = lengthof $r27;

        specialinvoke $r23.<java.util.ArrayList: void <init>(int)>($i0);

        $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStack> = $r23;

        $i0 = 0;

     label36:
        $r27 = $r3.<androidx.fragment.app.FragmentManagerState: androidx.fragment.app.BackStackState[] mBackStack>;

        $i1 = lengthof $r27;

        if $i0 >= $i1 goto label40;

        $r27 = $r3.<androidx.fragment.app.FragmentManagerState: androidx.fragment.app.BackStackState[] mBackStack>;

        $r28 = $r27[$i0];

        $r29 = virtualinvoke $r28.<androidx.fragment.app.BackStackState: androidx.fragment.app.BackStackRecord instantiate(androidx.fragment.app.FragmentManagerImpl)>($r0);

        $z0 = <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG>;

        if $z0 == 0 goto label37;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("restoreAllState: back stack #");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (index ");

        $i1 = $r29.<androidx.fragment.app.BackStackRecord: int mIndex>;

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r29);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r11);

        $r30 = new androidx.core.util.LogWriter;

        specialinvoke $r30.<androidx.core.util.LogWriter: void <init>(java.lang.String)>("FragmentManager");

        $r31 = new java.io.PrintWriter;

        specialinvoke $r31.<java.io.PrintWriter: void <init>(java.io.Writer)>($r30);

        virtualinvoke $r29.<androidx.fragment.app.BackStackRecord: void dump(java.lang.String,java.io.PrintWriter,boolean)>("  ", $r31, 0);

        virtualinvoke $r31.<java.io.PrintWriter: void close()>();

     label37:
        $r23 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStack>;

        virtualinvoke $r23.<java.util.ArrayList: boolean add(java.lang.Object)>($r29);

        $i1 = $r29.<androidx.fragment.app.BackStackRecord: int mIndex>;

        if $i1 < 0 goto label38;

        $i1 = $r29.<androidx.fragment.app.BackStackRecord: int mIndex>;

        virtualinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void setBackStackIndex(int,androidx.fragment.app.BackStackRecord)>($i1, $r29);

     label38:
        $i0 = $i0 + 1;

        goto label36;

     label39:
        $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStack> = null;

     label40:
        $i0 = $r3.<androidx.fragment.app.FragmentManagerState: int mPrimaryNavActiveIndex>;

        if $i0 < 0 goto label41;

        $r18 = $r0.<androidx.fragment.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        $i0 = $r3.<androidx.fragment.app.FragmentManagerState: int mPrimaryNavActiveIndex>;

        $r8 = virtualinvoke $r18.<android.util.SparseArray: java.lang.Object get(int)>($i0);

        $r9 = (androidx.fragment.app.Fragment) $r8;

        $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment mPrimaryNav> = $r9;

     label41:
        $i0 = $r3.<androidx.fragment.app.FragmentManagerState: int mNextFragmentIndex>;

        $r0.<androidx.fragment.app.FragmentManagerImpl: int mNextFragmentIndex> = $i0;

        return;

        catch java.lang.Throwable from label30 to label31 with label32;
        catch java.lang.Throwable from label32 to label33 with label32;
    }

    androidx.fragment.app.FragmentManagerNonConfig retainNonConfig()
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        androidx.fragment.app.FragmentManagerNonConfig $r1;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 = $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentManagerNonConfig mSavedNonConfig>;

        staticinvoke <androidx.fragment.app.FragmentManagerImpl: void setRetaining(androidx.fragment.app.FragmentManagerNonConfig)>($r1);

        $r1 = $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentManagerNonConfig mSavedNonConfig>;

        return $r1;
    }

    android.os.Parcelable saveAllState()
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        androidx.fragment.app.FragmentState[] $r1;
        android.util.SparseArray $r2;
        int $i0, $i1, $i2;
        boolean $z0, $z1;
        java.lang.Object $r3;
        androidx.fragment.app.Fragment $r4, $r10;
        java.lang.IllegalStateException $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;
        androidx.fragment.app.FragmentState $r8;
        android.os.Bundle $r9;
        int[] $r11;
        androidx.fragment.app.BackStackState[] $r12;
        java.util.ArrayList $r13;
        androidx.fragment.app.BackStackState $r14;
        androidx.fragment.app.BackStackRecord $r15;
        androidx.fragment.app.FragmentManagerState $r16;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        specialinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void forcePostponedTransactions()>();

        specialinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void endAnimatingAwayFragments()>();

        virtualinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: boolean execPendingActions()>();

        $r0.<androidx.fragment.app.FragmentManagerImpl: boolean mStateSaved> = 1;

        $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentManagerNonConfig mSavedNonConfig> = null;

        $r2 = $r0.<androidx.fragment.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        if $r2 == null goto label19;

        $i0 = virtualinvoke $r2.<android.util.SparseArray: int size()>();

        if $i0 > 0 goto label01;

        return null;

     label01:
        $r2 = $r0.<androidx.fragment.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        $i0 = virtualinvoke $r2.<android.util.SparseArray: int size()>();

        $r1 = newarray (androidx.fragment.app.FragmentState)[$i0];

        $z0 = 0;

        $i1 = 0;

     label02:
        if $i1 >= $i0 goto label09;

        $r2 = $r0.<androidx.fragment.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object valueAt(int)>($i1);

        $r4 = (androidx.fragment.app.Fragment) $r3;

        if $r4 == null goto label08;

        $i2 = $r4.<androidx.fragment.app.Fragment: int mIndex>;

        if $i2 >= 0 goto label03;

        $r5 = new java.lang.IllegalStateException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure saving state: active ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has cleared index: ");

        $i2 = $r4.<androidx.fragment.app.Fragment: int mIndex>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        specialinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void throwException(java.lang.RuntimeException)>($r5);

     label03:
        $z0 = 1;

        $r8 = new androidx.fragment.app.FragmentState;

        specialinvoke $r8.<androidx.fragment.app.FragmentState: void <init>(androidx.fragment.app.Fragment)>($r4);

        $r1[$i1] = $r8;

        $i2 = $r4.<androidx.fragment.app.Fragment: int mState>;

        if $i2 <= 0 goto label06;

        $r9 = $r8.<androidx.fragment.app.FragmentState: android.os.Bundle mSavedFragmentState>;

        if $r9 != null goto label06;

        $r9 = virtualinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: android.os.Bundle saveFragmentBasicState(androidx.fragment.app.Fragment)>($r4);

        $r8.<androidx.fragment.app.FragmentState: android.os.Bundle mSavedFragmentState> = $r9;

        $r10 = $r4.<androidx.fragment.app.Fragment: androidx.fragment.app.Fragment mTarget>;

        if $r10 == null goto label07;

        $r10 = $r4.<androidx.fragment.app.Fragment: androidx.fragment.app.Fragment mTarget>;

        $i2 = $r10.<androidx.fragment.app.Fragment: int mIndex>;

        if $i2 >= 0 goto label04;

        $r5 = new java.lang.IllegalStateException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure saving state: ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has target not in fragment manager: ");

        $r10 = $r4.<androidx.fragment.app.Fragment: androidx.fragment.app.Fragment mTarget>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        specialinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void throwException(java.lang.RuntimeException)>($r5);

     label04:
        $r9 = $r8.<androidx.fragment.app.FragmentState: android.os.Bundle mSavedFragmentState>;

        if $r9 != null goto label05;

        $r9 = new android.os.Bundle;

        specialinvoke $r9.<android.os.Bundle: void <init>()>();

        $r8.<androidx.fragment.app.FragmentState: android.os.Bundle mSavedFragmentState> = $r9;

     label05:
        $r9 = $r8.<androidx.fragment.app.FragmentState: android.os.Bundle mSavedFragmentState>;

        $r10 = $r4.<androidx.fragment.app.Fragment: androidx.fragment.app.Fragment mTarget>;

        virtualinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void putFragment(android.os.Bundle,java.lang.String,androidx.fragment.app.Fragment)>($r9, "android:target_state", $r10);

        $i2 = $r4.<androidx.fragment.app.Fragment: int mTargetRequestCode>;

        if $i2 == 0 goto label07;

        $r9 = $r8.<androidx.fragment.app.FragmentState: android.os.Bundle mSavedFragmentState>;

        $i2 = $r4.<androidx.fragment.app.Fragment: int mTargetRequestCode>;

        virtualinvoke $r9.<android.os.Bundle: void putInt(java.lang.String,int)>("android:target_req_state", $i2);

        goto label07;

     label06:
        $r9 = $r4.<androidx.fragment.app.Fragment: android.os.Bundle mSavedFragmentState>;

        $r8.<androidx.fragment.app.FragmentState: android.os.Bundle mSavedFragmentState> = $r9;

     label07:
        $z1 = <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG>;

        if $z1 == 0 goto label08;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Saved state of ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r9 = $r8.<androidx.fragment.app.FragmentState: android.os.Bundle mSavedFragmentState>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r7);

     label08:
        $i1 = $i1 + 1;

        goto label02;

     label09:
        if $z0 != 0 goto label10;

        $z0 = <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG>;

        if $z0 == 0 goto label19;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", "saveAllState: no fragments!");

        return null;

     label10:
        $r11 = null;

        $r12 = null;

        $r13 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $i0 = virtualinvoke $r13.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label14;

        $r11 = newarray (int)[$i0];

        $i1 = 0;

     label11:
        if $i1 >= $i0 goto label14;

        $r13 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $r3 = virtualinvoke $r13.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r4 = (androidx.fragment.app.Fragment) $r3;

        $i2 = $r4.<androidx.fragment.app.Fragment: int mIndex>;

        $r11[$i1] = $i2;

        $i2 = $r11[$i1];

        if $i2 >= 0 goto label12;

        $r5 = new java.lang.IllegalStateException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure saving state: active ");

        $r13 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $r3 = virtualinvoke $r13.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has cleared index: ");

        $i2 = $r11[$i1];

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        specialinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void throwException(java.lang.RuntimeException)>($r5);

     label12:
        $z0 = <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG>;

        if $z0 == 0 goto label13;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("saveAllState: adding fragment #");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r13 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded>;

        $r3 = virtualinvoke $r13.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r7);

     label13:
        $i1 = $i1 + 1;

        goto label11;

     label14:
        $r13 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStack>;

        if $r13 == null goto label17;

        $i0 = virtualinvoke $r13.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label17;

        $r12 = newarray (androidx.fragment.app.BackStackState)[$i0];

        $i1 = 0;

     label15:
        if $i1 >= $i0 goto label17;

        $r14 = new androidx.fragment.app.BackStackState;

        $r13 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStack>;

        $r3 = virtualinvoke $r13.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r15 = (androidx.fragment.app.BackStackRecord) $r3;

        specialinvoke $r14.<androidx.fragment.app.BackStackState: void <init>(androidx.fragment.app.BackStackRecord)>($r15);

        $r12[$i1] = $r14;

        $z0 = <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG>;

        if $z0 == 0 goto label16;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("saveAllState: adding back stack #");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r13 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStack>;

        $r3 = virtualinvoke $r13.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r7);

     label16:
        $i1 = $i1 + 1;

        goto label15;

     label17:
        $r16 = new androidx.fragment.app.FragmentManagerState;

        specialinvoke $r16.<androidx.fragment.app.FragmentManagerState: void <init>()>();

        $r16.<androidx.fragment.app.FragmentManagerState: androidx.fragment.app.FragmentState[] mActive> = $r1;

        $r16.<androidx.fragment.app.FragmentManagerState: int[] mAdded> = $r11;

        $r16.<androidx.fragment.app.FragmentManagerState: androidx.fragment.app.BackStackState[] mBackStack> = $r12;

        $r4 = $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment mPrimaryNav>;

        if $r4 == null goto label18;

        $i0 = $r4.<androidx.fragment.app.Fragment: int mIndex>;

        $r16.<androidx.fragment.app.FragmentManagerState: int mPrimaryNavActiveIndex> = $i0;

     label18:
        $i0 = $r0.<androidx.fragment.app.FragmentManagerImpl: int mNextFragmentIndex>;

        $r16.<androidx.fragment.app.FragmentManagerState: int mNextFragmentIndex> = $i0;

        virtualinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void saveNonConfig()>();

        return $r16;

     label19:
        return null;
    }

    android.os.Bundle saveFragmentBasicState(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        androidx.fragment.app.Fragment $r1;
        boolean $z0;
        android.os.Bundle $r2, $r3;
        android.view.View $r4;
        android.util.SparseArray $r5;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 := @parameter0: androidx.fragment.app.Fragment;

        $r2 = null;

        $r3 = $r0.<androidx.fragment.app.FragmentManagerImpl: android.os.Bundle mStateBundle>;

        if $r3 != null goto label1;

        $r3 = new android.os.Bundle;

        specialinvoke $r3.<android.os.Bundle: void <init>()>();

        $r0.<androidx.fragment.app.FragmentManagerImpl: android.os.Bundle mStateBundle> = $r3;

     label1:
        $r3 = $r0.<androidx.fragment.app.FragmentManagerImpl: android.os.Bundle mStateBundle>;

        virtualinvoke $r1.<androidx.fragment.app.Fragment: void performSaveInstanceState(android.os.Bundle)>($r3);

        $r3 = $r0.<androidx.fragment.app.FragmentManagerImpl: android.os.Bundle mStateBundle>;

        virtualinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentSaveInstanceState(androidx.fragment.app.Fragment,android.os.Bundle,boolean)>($r1, $r3, 0);

        $r3 = $r0.<androidx.fragment.app.FragmentManagerImpl: android.os.Bundle mStateBundle>;

        $z0 = virtualinvoke $r3.<android.os.Bundle: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        $r2 = $r0.<androidx.fragment.app.FragmentManagerImpl: android.os.Bundle mStateBundle>;

        $r0.<androidx.fragment.app.FragmentManagerImpl: android.os.Bundle mStateBundle> = null;

     label2:
        $r4 = $r1.<androidx.fragment.app.Fragment: android.view.View mView>;

        if $r4 == null goto label3;

        virtualinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void saveFragmentViewState(androidx.fragment.app.Fragment)>($r1);

     label3:
        $r5 = $r1.<androidx.fragment.app.Fragment: android.util.SparseArray mSavedViewState>;

        if $r5 == null goto label5;

        if $r2 != null goto label4;

        $r2 = new android.os.Bundle;

        specialinvoke $r2.<android.os.Bundle: void <init>()>();

     label4:
        $r5 = $r1.<androidx.fragment.app.Fragment: android.util.SparseArray mSavedViewState>;

        virtualinvoke $r2.<android.os.Bundle: void putSparseParcelableArray(java.lang.String,android.util.SparseArray)>("android:view_state", $r5);

     label5:
        $z0 = $r1.<androidx.fragment.app.Fragment: boolean mUserVisibleHint>;

        if $z0 != 0 goto label7;

        if $r2 != null goto label6;

        $r2 = new android.os.Bundle;

        specialinvoke $r2.<android.os.Bundle: void <init>()>();

     label6:
        $z0 = $r1.<androidx.fragment.app.Fragment: boolean mUserVisibleHint>;

        virtualinvoke $r2.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("android:user_visible_hint", $z0);

     label7:
        return $r2;
    }

    public androidx.fragment.app.Fragment$SavedState saveFragmentInstanceState(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        androidx.fragment.app.Fragment $r1;
        int $i0;
        java.lang.IllegalStateException $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        android.os.Bundle $r5;
        androidx.fragment.app.Fragment$SavedState $r6;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 := @parameter0: androidx.fragment.app.Fragment;

        $i0 = $r1.<androidx.fragment.app.Fragment: int mIndex>;

        if $i0 >= 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fragment ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not currently in the FragmentManager");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r4);

        specialinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void throwException(java.lang.RuntimeException)>($r2);

     label1:
        $i0 = $r1.<androidx.fragment.app.Fragment: int mState>;

        if $i0 <= 0 goto label2;

        $r5 = virtualinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: android.os.Bundle saveFragmentBasicState(androidx.fragment.app.Fragment)>($r1);

        if $r5 == null goto label2;

        $r6 = new androidx.fragment.app.Fragment$SavedState;

        specialinvoke $r6.<androidx.fragment.app.Fragment$SavedState: void <init>(android.os.Bundle)>($r5);

        return $r6;

     label2:
        return null;
    }

    void saveFragmentViewState(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        androidx.fragment.app.Fragment $r1;
        android.util.SparseArray $r2;
        int $i0;
        android.view.View $r3;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 := @parameter0: androidx.fragment.app.Fragment;

        $r3 = $r1.<androidx.fragment.app.Fragment: android.view.View mInnerView>;

        if $r3 != null goto label1;

        return;

     label1:
        $r2 = $r0.<androidx.fragment.app.FragmentManagerImpl: android.util.SparseArray mStateArray>;

        if $r2 != null goto label2;

        $r2 = new android.util.SparseArray;

        specialinvoke $r2.<android.util.SparseArray: void <init>()>();

        $r0.<androidx.fragment.app.FragmentManagerImpl: android.util.SparseArray mStateArray> = $r2;

        goto label3;

     label2:
        virtualinvoke $r2.<android.util.SparseArray: void clear()>();

     label3:
        $r3 = $r1.<androidx.fragment.app.Fragment: android.view.View mInnerView>;

        $r2 = $r0.<androidx.fragment.app.FragmentManagerImpl: android.util.SparseArray mStateArray>;

        virtualinvoke $r3.<android.view.View: void saveHierarchyState(android.util.SparseArray)>($r2);

        $r2 = $r0.<androidx.fragment.app.FragmentManagerImpl: android.util.SparseArray mStateArray>;

        $i0 = virtualinvoke $r2.<android.util.SparseArray: int size()>();

        if $i0 <= 0 goto label4;

        $r2 = $r0.<androidx.fragment.app.FragmentManagerImpl: android.util.SparseArray mStateArray>;

        $r1.<androidx.fragment.app.Fragment: android.util.SparseArray mSavedViewState> = $r2;

        $r0.<androidx.fragment.app.FragmentManagerImpl: android.util.SparseArray mStateArray> = null;

     label4:
        return;
    }

    void saveNonConfig()
    {
        androidx.fragment.app.FragmentManagerImpl $r0, $r10;
        java.util.ArrayList $r1, $r2, $r3, $r12;
        android.util.SparseArray $r4;
        int $i0, $i1;
        java.lang.Object $r5;
        androidx.fragment.app.Fragment $r6, $r7;
        boolean $z0;
        java.lang.StringBuilder $r8;
        java.lang.String $r9;
        androidx.fragment.app.FragmentManagerNonConfig $r11;
        androidx.lifecycle.ViewModelStore $r13;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 = null;

        $r2 = null;

        $r3 = null;

        $r4 = $r0.<androidx.fragment.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        if $r4 == null goto label14;

        $i0 = 0;

     label01:
        $r4 = $r0.<androidx.fragment.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        $i1 = virtualinvoke $r4.<android.util.SparseArray: int size()>();

        if $i0 >= $i1 goto label14;

        $r4 = $r0.<androidx.fragment.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object valueAt(int)>($i0);

        $r6 = (androidx.fragment.app.Fragment) $r5;

        if $r6 == null goto label13;

        $z0 = $r6.<androidx.fragment.app.Fragment: boolean mRetainInstance>;

        if $z0 == 0 goto label05;

        if $r1 != null goto label02;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

     label02:
        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        $r7 = $r6.<androidx.fragment.app.Fragment: androidx.fragment.app.Fragment mTarget>;

        if $r7 == null goto label03;

        $r7 = $r6.<androidx.fragment.app.Fragment: androidx.fragment.app.Fragment mTarget>;

        $i1 = $r7.<androidx.fragment.app.Fragment: int mIndex>;

        goto label04;

     label03:
        $i1 = -1;

     label04:
        $r6.<androidx.fragment.app.Fragment: int mTargetIndex> = $i1;

        $z0 = <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG>;

        if $z0 == 0 goto label05;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("retainNonConfig: keeping retained ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r9);

     label05:
        $r10 = $r6.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManagerImpl mChildFragmentManager>;

        if $r10 == null goto label06;

        $r10 = $r6.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManagerImpl mChildFragmentManager>;

        virtualinvoke $r10.<androidx.fragment.app.FragmentManagerImpl: void saveNonConfig()>();

        $r10 = $r6.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManagerImpl mChildFragmentManager>;

        $r11 = $r10.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentManagerNonConfig mSavedNonConfig>;

        goto label07;

     label06:
        $r11 = $r6.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManagerNonConfig mChildNonConfig>;

     label07:
        if $r2 != null goto label09;

        if $r11 == null goto label09;

        $r12 = new java.util.ArrayList;

        $r4 = $r0.<androidx.fragment.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        $i1 = virtualinvoke $r4.<android.util.SparseArray: int size()>();

        specialinvoke $r12.<java.util.ArrayList: void <init>(int)>($i1);

        $r2 = $r12;

        $i1 = 0;

     label08:
        if $i1 >= $i0 goto label09;

        virtualinvoke $r12.<java.util.ArrayList: boolean add(java.lang.Object)>(null);

        $i1 = $i1 + 1;

        goto label08;

     label09:
        if $r2 == null goto label10;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r11);

     label10:
        if $r3 != null goto label12;

        $r13 = $r6.<androidx.fragment.app.Fragment: androidx.lifecycle.ViewModelStore mViewModelStore>;

        if $r13 == null goto label12;

        $r12 = new java.util.ArrayList;

        $r4 = $r0.<androidx.fragment.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        $i1 = virtualinvoke $r4.<android.util.SparseArray: int size()>();

        specialinvoke $r12.<java.util.ArrayList: void <init>(int)>($i1);

        $r3 = $r12;

        $i1 = 0;

     label11:
        if $i1 >= $i0 goto label12;

        virtualinvoke $r12.<java.util.ArrayList: boolean add(java.lang.Object)>(null);

        $i1 = $i1 + 1;

        goto label11;

     label12:
        if $r3 == null goto label13;

        $r13 = $r6.<androidx.fragment.app.Fragment: androidx.lifecycle.ViewModelStore mViewModelStore>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r13);

     label13:
        $i0 = $i0 + 1;

        goto label01;

     label14:
        if $r1 != null goto label15;

        if $r2 != null goto label15;

        if $r3 != null goto label15;

        $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentManagerNonConfig mSavedNonConfig> = null;

        return;

     label15:
        $r11 = new androidx.fragment.app.FragmentManagerNonConfig;

        specialinvoke $r11.<androidx.fragment.app.FragmentManagerNonConfig: void <init>(java.util.List,java.util.List,java.util.List)>($r1, $r2, $r3);

        $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentManagerNonConfig mSavedNonConfig> = $r11;

        return;
    }

    void scheduleCommit()
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        java.util.ArrayList $r1;
        boolean $z0, $z1;
        int $i0;
        androidx.fragment.app.FragmentHostCallback $r2;
        android.os.Handler $r3;
        java.lang.Runnable $r4;
        java.lang.Throwable $r5;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        entermonitor $r0;

     label1:
        $r1 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mPostponedTransactions>;

        $z0 = 0;

        if $r1 == null goto label2;

        $r1 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mPostponedTransactions>;

        $z1 = virtualinvoke $r1.<java.util.ArrayList: boolean isEmpty()>();

        if $z1 != 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        $r1 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mPendingActions>;

        if $r1 == null goto label4;

        $r1 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mPendingActions>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $i0 != 1 goto label4;

        $z0 = 1;

     label4:
        if $z1 != 0 goto label5;

        if $z0 == 0 goto label6;

     label5:
        $r2 = $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost>;

        $r3 = virtualinvoke $r2.<androidx.fragment.app.FragmentHostCallback: android.os.Handler getHandler()>();

        $r4 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.lang.Runnable mExecCommit>;

        virtualinvoke $r3.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r4);

        $r2 = $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost>;

        $r3 = virtualinvoke $r2.<androidx.fragment.app.FragmentHostCallback: android.os.Handler getHandler()>();

        $r4 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.lang.Runnable mExecCommit>;

        virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>($r4);

     label6:
        exitmonitor $r0;

     label7:
        return;

     label8:
        $r5 := @caughtexception;

        exitmonitor $r0;

     label9:
        throw $r5;

        catch java.lang.Throwable from label1 to label7 with label8;
        catch java.lang.Throwable from label8 to label9 with label8;
    }

    public void setBackStackIndex(int, androidx.fragment.app.BackStackRecord)
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        int $i0, $i1, $i2;
        androidx.fragment.app.BackStackRecord $r1;
        java.util.ArrayList $r2;
        boolean $z0;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        java.lang.Integer $r5;
        java.lang.Throwable $r6;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $i0 := @parameter0: int;

        $r1 := @parameter1: androidx.fragment.app.BackStackRecord;

        entermonitor $r0;

     label01:
        $r2 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStackIndices>;

        if $r2 != null goto label02;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStackIndices> = $r2;

     label02:
        $r2 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStackIndices>;

        $i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        $i2 = $i1;

        if $i0 >= $i1 goto label04;

        $z0 = <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG>;

        if $z0 == 0 goto label03;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting back stack index ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r4);

     label03:
        $r2 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStackIndices>;

        virtualinvoke $r2.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>($i0, $r1);

        goto label09;

     label04:
        if $i2 >= $i0 goto label07;

        $r2 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStackIndices>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>(null);

        $r2 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAvailBackStackIndices>;

        if $r2 != null goto label05;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAvailBackStackIndices> = $r2;

     label05:
        $z0 = <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG>;

        if $z0 == 0 goto label06;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Adding available back stack index ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r4);

     label06:
        $r2 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAvailBackStackIndices>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        $i2 = $i2 + 1;

        goto label04;

     label07:
        $z0 = <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG>;

        if $z0 == 0 goto label08;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Adding back stack index ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r4);

     label08:
        $r2 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStackIndices>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

     label09:
        exitmonitor $r0;

     label10:
        return;

     label11:
        $r6 := @caughtexception;

        exitmonitor $r0;

     label12:
        throw $r6;

        catch java.lang.Throwable from label01 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    public void setPrimaryNavigationFragment(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        androidx.fragment.app.Fragment $r1;
        android.util.SparseArray $r2;
        int $i0;
        java.lang.Object $r3;
        androidx.fragment.app.FragmentHostCallback $r4;
        androidx.fragment.app.FragmentManager $r5;
        java.lang.IllegalArgumentException $r6;
        java.lang.StringBuilder $r7;
        java.lang.String $r8;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 := @parameter0: androidx.fragment.app.Fragment;

        if $r1 == null goto label2;

        $r2 = $r0.<androidx.fragment.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        $i0 = $r1.<androidx.fragment.app.Fragment: int mIndex>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>($i0);

        if $r3 != $r1 goto label1;

        $r4 = $r1.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentHostCallback mHost>;

        if $r4 == null goto label2;

        $r5 = virtualinvoke $r1.<androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getFragmentManager()>();

        if $r5 != $r0 goto label1;

        goto label2;

     label1:
        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fragment ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not an active fragment of FragmentManager ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r6;

     label2:
        $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment mPrimaryNav> = $r1;

        return;
    }

    public void showFragment(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        androidx.fragment.app.Fragment $r1;
        java.lang.String $r2;
        boolean $z0;
        java.lang.StringBuilder $r3;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 := @parameter0: androidx.fragment.app.Fragment;

        $z0 = <androidx.fragment.app.FragmentManagerImpl: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("show: ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r2);

     label1:
        $z0 = $r1.<androidx.fragment.app.Fragment: boolean mHidden>;

        if $z0 == 0 goto label2;

        $r1.<androidx.fragment.app.Fragment: boolean mHidden> = 0;

        $z0 = $r1.<androidx.fragment.app.Fragment: boolean mHiddenChanged>;

        $z0 = $z0 ^ 1;

        $r1.<androidx.fragment.app.Fragment: boolean mHiddenChanged> = $z0;

     label2:
        return;
    }

    void startPendingDeferredFragments()
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        android.util.SparseArray $r1;
        int $i0, $i1;
        java.lang.Object $r2;
        androidx.fragment.app.Fragment $r3;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 = $r0.<androidx.fragment.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        if $r1 != null goto label1;

        return;

     label1:
        $i0 = 0;

     label2:
        $r1 = $r0.<androidx.fragment.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        $i1 = virtualinvoke $r1.<android.util.SparseArray: int size()>();

        if $i0 >= $i1 goto label4;

        $r1 = $r0.<androidx.fragment.app.FragmentManagerImpl: android.util.SparseArray mActive>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object valueAt(int)>($i0);

        $r3 = (androidx.fragment.app.Fragment) $r2;

        if $r3 == null goto label3;

        virtualinvoke $r0.<androidx.fragment.app.FragmentManagerImpl: void performPendingDeferredStart(androidx.fragment.app.Fragment)>($r3);

     label3:
        $i0 = $i0 + 1;

        goto label2;

     label4:
        return;
    }

    public java.lang.String toString()
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        java.lang.StringBuilder $r1;
        int $i0;
        java.lang.String $r2;
        androidx.fragment.app.Fragment $r3;
        androidx.fragment.app.FragmentHostCallback $r4;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>(128);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FragmentManager{");

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>($r0);

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $r3 = $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment mParent>;

        if $r3 == null goto label1;

        staticinvoke <androidx.core.util.DebugUtils: void buildShortClassTag(java.lang.Object,java.lang.StringBuilder)>($r3, $r1);

        goto label2;

     label1:
        $r4 = $r0.<androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost>;

        staticinvoke <androidx.core.util.DebugUtils: void buildShortClassTag(java.lang.Object,java.lang.StringBuilder)>($r4, $r1);

     label2:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}}");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public void unregisterFragmentLifecycleCallbacks(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks)
    {
        androidx.fragment.app.FragmentManagerImpl $r0;
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks $r1, $r6;
        java.util.concurrent.CopyOnWriteArrayList $r2, $r3;
        int $i0, $i1;
        java.lang.Object $r4;
        androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder $r5;
        java.lang.Throwable $r7;

        $r0 := @this: androidx.fragment.app.FragmentManagerImpl;

        $r1 := @parameter0: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks;

        $r2 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks>;

        entermonitor $r2;

        $i0 = 0;

     label1:
        $r3 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks>;

        $i1 = virtualinvoke $r3.<java.util.concurrent.CopyOnWriteArrayList: int size()>();

     label2:
        if $i0 >= $i1 goto label4;

        $r3 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks>;

        $r4 = virtualinvoke $r3.<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object get(int)>($i0);

        $r5 = (androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder) $r4;

        $r6 = $r5.<androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks mCallback>;

        if $r6 != $r1 goto label3;

        $r3 = $r0.<androidx.fragment.app.FragmentManagerImpl: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks>;

        virtualinvoke $r3.<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object remove(int)>($i0);

        goto label4;

     label3:
        $i0 = $i0 + 1;

        goto label2;

     label4:
        exitmonitor $r2;

     label5:
        return;

     label6:
        $r7 := @caughtexception;

        exitmonitor $r2;

     label7:
        throw $r7;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }
}
