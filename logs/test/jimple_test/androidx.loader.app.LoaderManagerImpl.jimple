class androidx.loader.app.LoaderManagerImpl extends androidx.loader.app.LoaderManager
{
    static boolean DEBUG;
    static final java.lang.String TAG;
    private final androidx.lifecycle.LifecycleOwner mLifecycleOwner;
    private final androidx.loader.app.LoaderManagerImpl$LoaderViewModel mLoaderViewModel;

    static void <clinit>()
    {
        <androidx.loader.app.LoaderManagerImpl: java.lang.String TAG> = "LoaderManager";

        <androidx.loader.app.LoaderManagerImpl: boolean DEBUG> = 0;

        <androidx.loader.app.LoaderManagerImpl: boolean DEBUG> = 0;

        return;
    }

    void <init>(androidx.lifecycle.LifecycleOwner, androidx.lifecycle.ViewModelStore)
    {
        androidx.loader.app.LoaderManagerImpl $r0;
        androidx.lifecycle.LifecycleOwner $r1;
        androidx.lifecycle.ViewModelStore $r2;
        androidx.loader.app.LoaderManagerImpl$LoaderViewModel $r3;

        $r0 := @this: androidx.loader.app.LoaderManagerImpl;

        $r1 := @parameter0: androidx.lifecycle.LifecycleOwner;

        $r2 := @parameter1: androidx.lifecycle.ViewModelStore;

        specialinvoke $r0.<androidx.loader.app.LoaderManager: void <init>()>();

        $r0.<androidx.loader.app.LoaderManagerImpl: androidx.lifecycle.LifecycleOwner mLifecycleOwner> = $r1;

        $r3 = staticinvoke <androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)>($r2);

        $r0.<androidx.loader.app.LoaderManagerImpl: androidx.loader.app.LoaderManagerImpl$LoaderViewModel mLoaderViewModel> = $r3;

        return;
    }

    private androidx.loader.content.Loader createAndInstallLoader(int, android.os.Bundle, androidx.loader.app.LoaderManager$LoaderCallbacks, androidx.loader.content.Loader)
    {
        androidx.loader.app.LoaderManagerImpl $r0;
        int $i0, $i1;
        android.os.Bundle $r1;
        androidx.loader.app.LoaderManager$LoaderCallbacks $r2;
        androidx.loader.content.Loader $r3, $r5;
        androidx.loader.app.LoaderManagerImpl$LoaderViewModel $r4;
        java.lang.Class $r6;
        boolean $z0;
        java.lang.IllegalArgumentException $r7;
        java.lang.StringBuilder $r8;
        java.lang.String $r9;
        androidx.loader.app.LoaderManagerImpl$LoaderInfo $r10;
        androidx.lifecycle.LifecycleOwner $r11;
        java.lang.Throwable $r12;

        $r0 := @this: androidx.loader.app.LoaderManagerImpl;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.os.Bundle;

        $r2 := @parameter2: androidx.loader.app.LoaderManager$LoaderCallbacks;

        $r3 := @parameter3: androidx.loader.content.Loader;

     label01:
        $r4 = $r0.<androidx.loader.app.LoaderManagerImpl: androidx.loader.app.LoaderManagerImpl$LoaderViewModel mLoaderViewModel>;

        virtualinvoke $r4.<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void startCreatingLoader()>();

        $r5 = interfaceinvoke $r2.<androidx.loader.app.LoaderManager$LoaderCallbacks: androidx.loader.content.Loader onCreateLoader(int,android.os.Bundle)>($i0, $r1);

     label02:
        if $r5 == null goto label15;

     label03:
        $r6 = virtualinvoke $r5.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r6.<java.lang.Class: boolean isMemberClass()>();

     label04:
        if $z0 == 0 goto label08;

     label05:
        $r6 = virtualinvoke $r5.<java.lang.Object: java.lang.Class getClass()>();

        $i1 = virtualinvoke $r6.<java.lang.Class: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>($i1);

     label06:
        if $z0 == 0 goto label07;

        goto label08;

     label07:
        $r7 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Object returned from onCreateLoader must not be a non-static inner member class: ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r7;

     label08:
        $r10 = new androidx.loader.app.LoaderManagerImpl$LoaderInfo;

        specialinvoke $r10.<androidx.loader.app.LoaderManagerImpl$LoaderInfo: void <init>(int,android.os.Bundle,androidx.loader.content.Loader,androidx.loader.content.Loader)>($i0, $r1, $r5, $r3);

     label09:
        $z0 = <androidx.loader.app.LoaderManagerImpl: boolean DEBUG>;

     label10:
        if $z0 == 0 goto label12;

     label11:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Created new loader ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("LoaderManager", $r9);

     label12:
        $r4 = $r0.<androidx.loader.app.LoaderManagerImpl: androidx.loader.app.LoaderManagerImpl$LoaderViewModel mLoaderViewModel>;

        virtualinvoke $r4.<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void putLoader(int,androidx.loader.app.LoaderManagerImpl$LoaderInfo)>($i0, $r10);

     label13:
        $r4 = $r0.<androidx.loader.app.LoaderManagerImpl: androidx.loader.app.LoaderManagerImpl$LoaderViewModel mLoaderViewModel>;

        virtualinvoke $r4.<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void finishCreatingLoader()>();

        $r11 = $r0.<androidx.loader.app.LoaderManagerImpl: androidx.lifecycle.LifecycleOwner mLifecycleOwner>;

        $r3 = virtualinvoke $r10.<androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.content.Loader setCallback(androidx.lifecycle.LifecycleOwner,androidx.loader.app.LoaderManager$LoaderCallbacks)>($r11, $r2);

        return $r3;

     label14:
        $r12 := @caughtexception;

        goto label17;

     label15:
        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Object returned from onCreateLoader must not be null");

        throw $r7;

     label16:
        $r12 := @caughtexception;

     label17:
        $r4 = $r0.<androidx.loader.app.LoaderManagerImpl: androidx.loader.app.LoaderManagerImpl$LoaderViewModel mLoaderViewModel>;

        virtualinvoke $r4.<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void finishCreatingLoader()>();

        throw $r12;

        catch java.lang.Throwable from label01 to label02 with label16;
        catch java.lang.Throwable from label03 to label04 with label16;
        catch java.lang.Throwable from label05 to label06 with label16;
        catch java.lang.Throwable from label07 to label09 with label16;
        catch java.lang.Throwable from label09 to label10 with label14;
        catch java.lang.Throwable from label11 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label16;
    }

    public void destroyLoader(int)
    {
        androidx.loader.app.LoaderManagerImpl $r0;
        int $i0;
        androidx.loader.app.LoaderManagerImpl$LoaderViewModel $r1;
        boolean $z0;
        android.os.Looper $r2, $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;
        androidx.loader.app.LoaderManagerImpl$LoaderInfo $r6;
        java.lang.IllegalStateException $r7;

        $r0 := @this: androidx.loader.app.LoaderManagerImpl;

        $i0 := @parameter0: int;

        $r1 = $r0.<androidx.loader.app.LoaderManagerImpl: androidx.loader.app.LoaderManagerImpl$LoaderViewModel mLoaderViewModel>;

        $z0 = virtualinvoke $r1.<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: boolean isCreatingLoader()>();

        if $z0 != 0 goto label3;

        $r2 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        $r3 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        if $r2 != $r3 goto label2;

        $z0 = <androidx.loader.app.LoaderManagerImpl: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("destroyLoader in ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("LoaderManager", $r5);

     label1:
        $r1 = $r0.<androidx.loader.app.LoaderManagerImpl: androidx.loader.app.LoaderManagerImpl$LoaderViewModel mLoaderViewModel>;

        $r6 = virtualinvoke $r1.<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderInfo getLoader(int)>($i0);

        if $r6 == null goto label4;

        virtualinvoke $r6.<androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.content.Loader destroy(boolean)>(1);

        $r1 = $r0.<androidx.loader.app.LoaderManagerImpl: androidx.loader.app.LoaderManagerImpl$LoaderViewModel mLoaderViewModel>;

        virtualinvoke $r1.<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void removeLoader(int)>($i0);

        return;

     label2:
        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("destroyLoader must be called on the main thread");

        throw $r7;

     label3:
        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Called while creating a loader");

        throw $r7;

     label4:
        return;
    }

    public void dump(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        androidx.loader.app.LoaderManagerImpl $r0;
        java.lang.String $r1;
        java.io.FileDescriptor $r2;
        java.io.PrintWriter $r3;
        java.lang.String[] $r4;
        androidx.loader.app.LoaderManagerImpl$LoaderViewModel $r5;

        $r0 := @this: androidx.loader.app.LoaderManagerImpl;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.io.FileDescriptor;

        $r3 := @parameter2: java.io.PrintWriter;

        $r4 := @parameter3: java.lang.String[];

        $r5 = $r0.<androidx.loader.app.LoaderManagerImpl: androidx.loader.app.LoaderManagerImpl$LoaderViewModel mLoaderViewModel>;

        virtualinvoke $r5.<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>($r1, $r2, $r3, $r4);

        return;
    }

    public androidx.loader.content.Loader getLoader(int)
    {
        androidx.loader.app.LoaderManagerImpl $r0;
        int $i0;
        androidx.loader.app.LoaderManagerImpl$LoaderViewModel $r1;
        boolean $z0;
        androidx.loader.app.LoaderManagerImpl$LoaderInfo $r2;
        androidx.loader.content.Loader $r3;
        java.lang.IllegalStateException $r4;

        $r0 := @this: androidx.loader.app.LoaderManagerImpl;

        $i0 := @parameter0: int;

        $r1 = $r0.<androidx.loader.app.LoaderManagerImpl: androidx.loader.app.LoaderManagerImpl$LoaderViewModel mLoaderViewModel>;

        $z0 = virtualinvoke $r1.<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: boolean isCreatingLoader()>();

        if $z0 != 0 goto label2;

        $r1 = $r0.<androidx.loader.app.LoaderManagerImpl: androidx.loader.app.LoaderManagerImpl$LoaderViewModel mLoaderViewModel>;

        $r2 = virtualinvoke $r1.<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderInfo getLoader(int)>($i0);

        if $r2 == null goto label1;

        $r3 = virtualinvoke $r2.<androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.content.Loader getLoader()>();

        return $r3;

     label1:
        return null;

     label2:
        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Called while creating a loader");

        throw $r4;
    }

    public boolean hasRunningLoaders()
    {
        androidx.loader.app.LoaderManagerImpl $r0;
        boolean $z0;
        androidx.loader.app.LoaderManagerImpl$LoaderViewModel $r1;

        $r0 := @this: androidx.loader.app.LoaderManagerImpl;

        $r1 = $r0.<androidx.loader.app.LoaderManagerImpl: androidx.loader.app.LoaderManagerImpl$LoaderViewModel mLoaderViewModel>;

        $z0 = virtualinvoke $r1.<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: boolean hasRunningLoaders()>();

        return $z0;
    }

    public androidx.loader.content.Loader initLoader(int, android.os.Bundle, androidx.loader.app.LoaderManager$LoaderCallbacks)
    {
        androidx.loader.app.LoaderManagerImpl $r0;
        int $i0;
        android.os.Bundle $r1;
        androidx.loader.app.LoaderManager$LoaderCallbacks $r2;
        androidx.loader.app.LoaderManagerImpl$LoaderViewModel $r3;
        boolean $z0;
        android.os.Looper $r4, $r5;
        androidx.loader.app.LoaderManagerImpl$LoaderInfo $r6;
        java.lang.StringBuilder $r7;
        java.lang.String $r8;
        androidx.loader.content.Loader $r9;
        androidx.lifecycle.LifecycleOwner $r10;
        java.lang.IllegalStateException $r11;

        $r0 := @this: androidx.loader.app.LoaderManagerImpl;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.os.Bundle;

        $r2 := @parameter2: androidx.loader.app.LoaderManager$LoaderCallbacks;

        $r3 = $r0.<androidx.loader.app.LoaderManagerImpl: androidx.loader.app.LoaderManagerImpl$LoaderViewModel mLoaderViewModel>;

        $z0 = virtualinvoke $r3.<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: boolean isCreatingLoader()>();

        if $z0 != 0 goto label5;

        $r4 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        $r5 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        if $r4 != $r5 goto label4;

        $r3 = $r0.<androidx.loader.app.LoaderManagerImpl: androidx.loader.app.LoaderManagerImpl$LoaderViewModel mLoaderViewModel>;

        $r6 = virtualinvoke $r3.<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderInfo getLoader(int)>($i0);

        $z0 = <androidx.loader.app.LoaderManagerImpl: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("initLoader in ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": args=");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("LoaderManager", $r8);

     label1:
        if $r6 != null goto label2;

        $r9 = specialinvoke $r0.<androidx.loader.app.LoaderManagerImpl: androidx.loader.content.Loader createAndInstallLoader(int,android.os.Bundle,androidx.loader.app.LoaderManager$LoaderCallbacks,androidx.loader.content.Loader)>($i0, $r1, $r2, null);

        return $r9;

     label2:
        $z0 = <androidx.loader.app.LoaderManagerImpl: boolean DEBUG>;

        if $z0 == 0 goto label3;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Re-using existing loader ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("LoaderManager", $r8);

     label3:
        $r10 = $r0.<androidx.loader.app.LoaderManagerImpl: androidx.lifecycle.LifecycleOwner mLifecycleOwner>;

        $r9 = virtualinvoke $r6.<androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.content.Loader setCallback(androidx.lifecycle.LifecycleOwner,androidx.loader.app.LoaderManager$LoaderCallbacks)>($r10, $r2);

        return $r9;

     label4:
        $r11 = new java.lang.IllegalStateException;

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>("initLoader must be called on the main thread");

        throw $r11;

     label5:
        $r11 = new java.lang.IllegalStateException;

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Called while creating a loader");

        throw $r11;
    }

    public void markForRedelivery()
    {
        androidx.loader.app.LoaderManagerImpl $r0;
        androidx.loader.app.LoaderManagerImpl$LoaderViewModel $r1;

        $r0 := @this: androidx.loader.app.LoaderManagerImpl;

        $r1 = $r0.<androidx.loader.app.LoaderManagerImpl: androidx.loader.app.LoaderManagerImpl$LoaderViewModel mLoaderViewModel>;

        virtualinvoke $r1.<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void markForRedelivery()>();

        return;
    }

    public androidx.loader.content.Loader restartLoader(int, android.os.Bundle, androidx.loader.app.LoaderManager$LoaderCallbacks)
    {
        androidx.loader.app.LoaderManagerImpl $r0;
        int $i0;
        android.os.Bundle $r1;
        androidx.loader.app.LoaderManager$LoaderCallbacks $r2;
        androidx.loader.app.LoaderManagerImpl$LoaderViewModel $r3;
        boolean $z0;
        android.os.Looper $r4, $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;
        androidx.loader.app.LoaderManagerImpl$LoaderInfo $r8;
        androidx.loader.content.Loader $r9;
        java.lang.IllegalStateException $r10;

        $r0 := @this: androidx.loader.app.LoaderManagerImpl;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.os.Bundle;

        $r2 := @parameter2: androidx.loader.app.LoaderManager$LoaderCallbacks;

        $r3 = $r0.<androidx.loader.app.LoaderManagerImpl: androidx.loader.app.LoaderManagerImpl$LoaderViewModel mLoaderViewModel>;

        $z0 = virtualinvoke $r3.<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: boolean isCreatingLoader()>();

        if $z0 != 0 goto label4;

        $r4 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        $r5 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        if $r4 != $r5 goto label3;

        $z0 = <androidx.loader.app.LoaderManagerImpl: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("restartLoader in ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": args=");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("LoaderManager", $r7);

     label1:
        $r3 = $r0.<androidx.loader.app.LoaderManagerImpl: androidx.loader.app.LoaderManagerImpl$LoaderViewModel mLoaderViewModel>;

        $r8 = virtualinvoke $r3.<androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderInfo getLoader(int)>($i0);

        $r9 = null;

        if $r8 == null goto label2;

        $r9 = virtualinvoke $r8.<androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.content.Loader destroy(boolean)>(0);

     label2:
        $r9 = specialinvoke $r0.<androidx.loader.app.LoaderManagerImpl: androidx.loader.content.Loader createAndInstallLoader(int,android.os.Bundle,androidx.loader.app.LoaderManager$LoaderCallbacks,androidx.loader.content.Loader)>($i0, $r1, $r2, $r9);

        return $r9;

     label3:
        $r10 = new java.lang.IllegalStateException;

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>("restartLoader must be called on the main thread");

        throw $r10;

     label4:
        $r10 = new java.lang.IllegalStateException;

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Called while creating a loader");

        throw $r10;
    }

    public java.lang.String toString()
    {
        androidx.loader.app.LoaderManagerImpl $r0;
        java.lang.StringBuilder $r1;
        int $i0;
        java.lang.String $r2;
        androidx.lifecycle.LifecycleOwner $r3;

        $r0 := @this: androidx.loader.app.LoaderManagerImpl;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>(128);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LoaderManager{");

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>($r0);

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $r3 = $r0.<androidx.loader.app.LoaderManagerImpl: androidx.lifecycle.LifecycleOwner mLifecycleOwner>;

        staticinvoke <androidx.core.util.DebugUtils: void buildShortClassTag(java.lang.Object,java.lang.StringBuilder)>($r3, $r1);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}}");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
}
