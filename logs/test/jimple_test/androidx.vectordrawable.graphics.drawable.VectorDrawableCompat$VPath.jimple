abstract class androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath extends androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject
{
    int mChangingConfigurations;
    protected androidx.core.graphics.PathParser$PathDataNode[] mNodes;
    java.lang.String mPathName;

    public void <init>()
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath $r0;

        $r0 := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath;

        specialinvoke $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject: void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$1)>(null);

        $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: androidx.core.graphics.PathParser$PathDataNode[] mNodes> = null;

        return;
    }

    public void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath)
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath $r0, $r1;
        androidx.core.graphics.PathParser$PathDataNode[] $r2;
        java.lang.String $r3;
        int $i0;

        $r0 := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath;

        $r1 := @parameter0: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath;

        specialinvoke $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject: void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$1)>(null);

        $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: androidx.core.graphics.PathParser$PathDataNode[] mNodes> = null;

        $r3 = $r1.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: java.lang.String mPathName>;

        $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: java.lang.String mPathName> = $r3;

        $i0 = $r1.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: int mChangingConfigurations>;

        $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: int mChangingConfigurations> = $i0;

        $r2 = $r1.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: androidx.core.graphics.PathParser$PathDataNode[] mNodes>;

        $r2 = staticinvoke <androidx.core.graphics.PathParser: androidx.core.graphics.PathParser$PathDataNode[] deepCopyNodes(androidx.core.graphics.PathParser$PathDataNode[])>($r2);

        $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: androidx.core.graphics.PathParser$PathDataNode[] mNodes> = $r2;

        return;
    }

    public void applyTheme(android.content.res.Resources$Theme)
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath $r0;
        android.content.res.Resources$Theme $r1;

        $r0 := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath;

        $r1 := @parameter0: android.content.res.Resources$Theme;

        return;
    }

    public boolean canApplyTheme()
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath $r0;

        $r0 := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath;

        return 0;
    }

    public androidx.core.graphics.PathParser$PathDataNode[] getPathData()
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath $r0;
        androidx.core.graphics.PathParser$PathDataNode[] r1;

        $r0 := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath;

        r1 = $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: androidx.core.graphics.PathParser$PathDataNode[] mNodes>;

        return r1;
    }

    public java.lang.String getPathName()
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath $r0;
        java.lang.String r1;

        $r0 := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath;

        r1 = $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: java.lang.String mPathName>;

        return r1;
    }

    public boolean isClipPath()
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath $r0;

        $r0 := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath;

        return 0;
    }

    public java.lang.String nodesToString(androidx.core.graphics.PathParser$PathDataNode[])
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath $r0;
        androidx.core.graphics.PathParser$PathDataNode[] $r1;
        java.lang.String $r2;
        int $i0, $i1, $i3;
        java.lang.StringBuilder $r3;
        androidx.core.graphics.PathParser$PathDataNode $r4;
        char $c2;
        float[] $r5;
        float $f0;

        $r0 := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath;

        $r1 := @parameter0: androidx.core.graphics.PathParser$PathDataNode[];

        $r2 = " ";

        $i0 = 0;

     label1:
        $i1 = lengthof $r1;

        if $i0 >= $i1 goto label4;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = $r1[$i0];

        $c2 = $r4.<androidx.core.graphics.PathParser$PathDataNode: char mType>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = $r1[$i0];

        $r5 = $r4.<androidx.core.graphics.PathParser$PathDataNode: float[] mParams>;

        $i1 = 0;

     label2:
        $i3 = lengthof $r5;

        if $i1 >= $i3 goto label3;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $f0 = $r5[$i1];

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $i1 = $i1 + 1;

        goto label2;

     label3:
        $i0 = $i0 + 1;

        goto label1;

     label4:
        return $r2;
    }

    public void printVPath(int)
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath $r0;
        int $i0, $i1;
        java.lang.String $r1;
        java.lang.StringBuilder $r2;
        androidx.core.graphics.PathParser$PathDataNode[] $r3;

        $r0 := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath;

        $i0 := @parameter0: int;

        $r1 = "";

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $i1 = $i1 + 1;

        goto label1;

     label2:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("current path is :");

        $r1 = $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: java.lang.String mPathName>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" pathData is ");

        $r3 = $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: androidx.core.graphics.PathParser$PathDataNode[] mNodes>;

        $r1 = virtualinvoke $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: java.lang.String nodesToString(androidx.core.graphics.PathParser$PathDataNode[])>($r3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("VectorDrawableCompat", $r1);

        return;
    }

    public void setPathData(androidx.core.graphics.PathParser$PathDataNode[])
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath $r0;
        androidx.core.graphics.PathParser$PathDataNode[] $r1, $r2;
        boolean $z0;

        $r0 := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath;

        $r1 := @parameter0: androidx.core.graphics.PathParser$PathDataNode[];

        $r2 = $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: androidx.core.graphics.PathParser$PathDataNode[] mNodes>;

        $z0 = staticinvoke <androidx.core.graphics.PathParser: boolean canMorph(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[])>($r2, $r1);

        if $z0 != 0 goto label1;

        $r1 = staticinvoke <androidx.core.graphics.PathParser: androidx.core.graphics.PathParser$PathDataNode[] deepCopyNodes(androidx.core.graphics.PathParser$PathDataNode[])>($r1);

        $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: androidx.core.graphics.PathParser$PathDataNode[] mNodes> = $r1;

        return;

     label1:
        $r2 = $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: androidx.core.graphics.PathParser$PathDataNode[] mNodes>;

        staticinvoke <androidx.core.graphics.PathParser: void updateNodes(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[])>($r2, $r1);

        return;
    }

    public void toPath(android.graphics.Path)
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath $r0;
        android.graphics.Path $r1;
        androidx.core.graphics.PathParser$PathDataNode[] $r2;

        $r0 := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath;

        $r1 := @parameter0: android.graphics.Path;

        virtualinvoke $r1.<android.graphics.Path: void reset()>();

        $r2 = $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: androidx.core.graphics.PathParser$PathDataNode[] mNodes>;

        if $r2 == null goto label1;

        staticinvoke <androidx.core.graphics.PathParser$PathDataNode: void nodesToPath(androidx.core.graphics.PathParser$PathDataNode[],android.graphics.Path)>($r2, $r1);

     label1:
        return;
    }
}
