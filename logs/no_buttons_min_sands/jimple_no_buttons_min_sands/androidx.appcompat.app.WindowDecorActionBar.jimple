public class androidx.appcompat.app.WindowDecorActionBar extends androidx.appcompat.app.ActionBar implements androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback
{
    static final boolean $assertionsDisabled;
    private static final long FADE_IN_DURATION_MS;
    private static final long FADE_OUT_DURATION_MS;
    private static final int INVALID_POSITION;
    private static final java.lang.String TAG;
    private static final android.view.animation.Interpolator sHideInterpolator;
    private static final android.view.animation.Interpolator sShowInterpolator;
    androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl mActionMode;
    private android.app.Activity mActivity;
    androidx.appcompat.widget.ActionBarContainer mContainerView;
    boolean mContentAnimations;
    android.view.View mContentView;
    android.content.Context mContext;
    androidx.appcompat.widget.ActionBarContextView mContextView;
    private int mCurWindowVisibility;
    androidx.appcompat.view.ViewPropertyAnimatorCompatSet mCurrentShowAnim;
    androidx.appcompat.widget.DecorToolbar mDecorToolbar;
    androidx.appcompat.view.ActionMode mDeferredDestroyActionMode;
    androidx.appcompat.view.ActionMode$Callback mDeferredModeDestroyCallback;
    private android.app.Dialog mDialog;
    private boolean mDisplayHomeAsUpSet;
    private boolean mHasEmbeddedTabs;
    boolean mHiddenByApp;
    boolean mHiddenBySystem;
    final androidx.core.view.ViewPropertyAnimatorListener mHideListener;
    boolean mHideOnContentScroll;
    private boolean mLastMenuVisibility;
    private java.util.ArrayList mMenuVisibilityListeners;
    private boolean mNowShowing;
    androidx.appcompat.widget.ActionBarOverlayLayout mOverlayLayout;
    private int mSavedTabPosition;
    private androidx.appcompat.app.WindowDecorActionBar$TabImpl mSelectedTab;
    private boolean mShowHideAnimationEnabled;
    final androidx.core.view.ViewPropertyAnimatorListener mShowListener;
    private boolean mShowingForMode;
    androidx.appcompat.widget.ScrollingTabContainerView mTabScrollView;
    private java.util.ArrayList mTabs;
    private android.content.Context mThemedContext;
    final androidx.core.view.ViewPropertyAnimatorUpdateListener mUpdateListener;

    static void <clinit>()
    {
        android.view.animation.AccelerateInterpolator $r0;
        android.view.animation.DecelerateInterpolator $r1;

        <androidx.appcompat.app.WindowDecorActionBar: java.lang.String TAG> = "WindowDecorActionBar";

        <androidx.appcompat.app.WindowDecorActionBar: int INVALID_POSITION> = -1;

        <androidx.appcompat.app.WindowDecorActionBar: long FADE_OUT_DURATION_MS> = 100L;

        <androidx.appcompat.app.WindowDecorActionBar: long FADE_IN_DURATION_MS> = 200L;

        <androidx.appcompat.app.WindowDecorActionBar: boolean $assertionsDisabled> = 0;

        $r0 = new android.view.animation.AccelerateInterpolator;

        specialinvoke $r0.<android.view.animation.AccelerateInterpolator: void <init>()>();

        <androidx.appcompat.app.WindowDecorActionBar: android.view.animation.Interpolator sHideInterpolator> = $r0;

        $r1 = new android.view.animation.DecelerateInterpolator;

        specialinvoke $r1.<android.view.animation.DecelerateInterpolator: void <init>()>();

        <androidx.appcompat.app.WindowDecorActionBar: android.view.animation.Interpolator sShowInterpolator> = $r1;

        return;
    }

    public void <init>(android.app.Activity, boolean)
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        android.app.Activity $r1;
        boolean $z0;
        java.util.ArrayList $r2;
        androidx.appcompat.app.WindowDecorActionBar$1 $r3;
        androidx.appcompat.app.WindowDecorActionBar$2 $r4;
        androidx.appcompat.app.WindowDecorActionBar$3 $r5;
        android.view.Window $r6;
        android.view.View $r7;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $r1 := @parameter0: android.app.Activity;

        $z0 := @parameter1: boolean;

        specialinvoke $r0.<androidx.appcompat.app.ActionBar: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r0.<androidx.appcompat.app.WindowDecorActionBar: java.util.ArrayList mTabs> = $r2;

        $r0.<androidx.appcompat.app.WindowDecorActionBar: int mSavedTabPosition> = -1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r0.<androidx.appcompat.app.WindowDecorActionBar: java.util.ArrayList mMenuVisibilityListeners> = $r2;

        $r0.<androidx.appcompat.app.WindowDecorActionBar: int mCurWindowVisibility> = 0;

        $r0.<androidx.appcompat.app.WindowDecorActionBar: boolean mContentAnimations> = 1;

        $r0.<androidx.appcompat.app.WindowDecorActionBar: boolean mNowShowing> = 1;

        $r3 = new androidx.appcompat.app.WindowDecorActionBar$1;

        specialinvoke $r3.<androidx.appcompat.app.WindowDecorActionBar$1: void <init>(androidx.appcompat.app.WindowDecorActionBar)>($r0);

        $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.core.view.ViewPropertyAnimatorListener mHideListener> = $r3;

        $r4 = new androidx.appcompat.app.WindowDecorActionBar$2;

        specialinvoke $r4.<androidx.appcompat.app.WindowDecorActionBar$2: void <init>(androidx.appcompat.app.WindowDecorActionBar)>($r0);

        $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.core.view.ViewPropertyAnimatorListener mShowListener> = $r4;

        $r5 = new androidx.appcompat.app.WindowDecorActionBar$3;

        specialinvoke $r5.<androidx.appcompat.app.WindowDecorActionBar$3: void <init>(androidx.appcompat.app.WindowDecorActionBar)>($r0);

        $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.core.view.ViewPropertyAnimatorUpdateListener mUpdateListener> = $r5;

        $r0.<androidx.appcompat.app.WindowDecorActionBar: android.app.Activity mActivity> = $r1;

        $r6 = virtualinvoke $r1.<android.app.Activity: android.view.Window getWindow()>();

        $r7 = virtualinvoke $r6.<android.view.Window: android.view.View getDecorView()>();

        specialinvoke $r0.<androidx.appcompat.app.WindowDecorActionBar: void init(android.view.View)>($r7);

        if $z0 != 0 goto label1;

        $r7 = virtualinvoke $r7.<android.view.View: android.view.View findViewById(int)>(16908290);

        $r0.<androidx.appcompat.app.WindowDecorActionBar: android.view.View mContentView> = $r7;

     label1:
        return;
    }

    public void <init>(android.app.Dialog)
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        android.app.Dialog $r1;
        java.util.ArrayList $r2;
        androidx.appcompat.app.WindowDecorActionBar$1 $r3;
        androidx.appcompat.app.WindowDecorActionBar$2 $r4;
        androidx.appcompat.app.WindowDecorActionBar$3 $r5;
        android.view.Window $r6;
        android.view.View $r7;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $r1 := @parameter0: android.app.Dialog;

        specialinvoke $r0.<androidx.appcompat.app.ActionBar: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r0.<androidx.appcompat.app.WindowDecorActionBar: java.util.ArrayList mTabs> = $r2;

        $r0.<androidx.appcompat.app.WindowDecorActionBar: int mSavedTabPosition> = -1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r0.<androidx.appcompat.app.WindowDecorActionBar: java.util.ArrayList mMenuVisibilityListeners> = $r2;

        $r0.<androidx.appcompat.app.WindowDecorActionBar: int mCurWindowVisibility> = 0;

        $r0.<androidx.appcompat.app.WindowDecorActionBar: boolean mContentAnimations> = 1;

        $r0.<androidx.appcompat.app.WindowDecorActionBar: boolean mNowShowing> = 1;

        $r3 = new androidx.appcompat.app.WindowDecorActionBar$1;

        specialinvoke $r3.<androidx.appcompat.app.WindowDecorActionBar$1: void <init>(androidx.appcompat.app.WindowDecorActionBar)>($r0);

        $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.core.view.ViewPropertyAnimatorListener mHideListener> = $r3;

        $r4 = new androidx.appcompat.app.WindowDecorActionBar$2;

        specialinvoke $r4.<androidx.appcompat.app.WindowDecorActionBar$2: void <init>(androidx.appcompat.app.WindowDecorActionBar)>($r0);

        $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.core.view.ViewPropertyAnimatorListener mShowListener> = $r4;

        $r5 = new androidx.appcompat.app.WindowDecorActionBar$3;

        specialinvoke $r5.<androidx.appcompat.app.WindowDecorActionBar$3: void <init>(androidx.appcompat.app.WindowDecorActionBar)>($r0);

        $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.core.view.ViewPropertyAnimatorUpdateListener mUpdateListener> = $r5;

        $r0.<androidx.appcompat.app.WindowDecorActionBar: android.app.Dialog mDialog> = $r1;

        $r6 = virtualinvoke $r1.<android.app.Dialog: android.view.Window getWindow()>();

        $r7 = virtualinvoke $r6.<android.view.Window: android.view.View getDecorView()>();

        specialinvoke $r0.<androidx.appcompat.app.WindowDecorActionBar: void init(android.view.View)>($r7);

        return;
    }

    public void <init>(android.view.View)
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        android.view.View $r1;
        java.util.ArrayList $r2;
        androidx.appcompat.app.WindowDecorActionBar$1 $r3;
        androidx.appcompat.app.WindowDecorActionBar$2 $r4;
        androidx.appcompat.app.WindowDecorActionBar$3 $r5;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $r1 := @parameter0: android.view.View;

        specialinvoke $r0.<androidx.appcompat.app.ActionBar: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r0.<androidx.appcompat.app.WindowDecorActionBar: java.util.ArrayList mTabs> = $r2;

        $r0.<androidx.appcompat.app.WindowDecorActionBar: int mSavedTabPosition> = -1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r0.<androidx.appcompat.app.WindowDecorActionBar: java.util.ArrayList mMenuVisibilityListeners> = $r2;

        $r0.<androidx.appcompat.app.WindowDecorActionBar: int mCurWindowVisibility> = 0;

        $r0.<androidx.appcompat.app.WindowDecorActionBar: boolean mContentAnimations> = 1;

        $r0.<androidx.appcompat.app.WindowDecorActionBar: boolean mNowShowing> = 1;

        $r3 = new androidx.appcompat.app.WindowDecorActionBar$1;

        specialinvoke $r3.<androidx.appcompat.app.WindowDecorActionBar$1: void <init>(androidx.appcompat.app.WindowDecorActionBar)>($r0);

        $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.core.view.ViewPropertyAnimatorListener mHideListener> = $r3;

        $r4 = new androidx.appcompat.app.WindowDecorActionBar$2;

        specialinvoke $r4.<androidx.appcompat.app.WindowDecorActionBar$2: void <init>(androidx.appcompat.app.WindowDecorActionBar)>($r0);

        $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.core.view.ViewPropertyAnimatorListener mShowListener> = $r4;

        $r5 = new androidx.appcompat.app.WindowDecorActionBar$3;

        specialinvoke $r5.<androidx.appcompat.app.WindowDecorActionBar$3: void <init>(androidx.appcompat.app.WindowDecorActionBar)>($r0);

        $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.core.view.ViewPropertyAnimatorUpdateListener mUpdateListener> = $r5;

        specialinvoke $r0.<androidx.appcompat.app.WindowDecorActionBar: void init(android.view.View)>($r1);

        return;
    }

    static boolean checkShowingFlags(boolean, boolean, boolean)
    {
        boolean $z0, $z1, $z2;

        $z0 := @parameter0: boolean;

        $z1 := @parameter1: boolean;

        $z2 := @parameter2: boolean;

        if $z2 == 0 goto label1;

        return 1;

     label1:
        if $z0 != 0 goto label3;

        if $z1 == 0 goto label2;

        goto label3;

     label2:
        return 1;

     label3:
        return 0;
    }

    private void cleanupTabs()
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        androidx.appcompat.app.WindowDecorActionBar$TabImpl $r1;
        java.util.ArrayList $r2;
        androidx.appcompat.widget.ScrollingTabContainerView $r3;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $r1 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.app.WindowDecorActionBar$TabImpl mSelectedTab>;

        if $r1 == null goto label1;

        virtualinvoke $r0.<androidx.appcompat.app.WindowDecorActionBar: void selectTab(androidx.appcompat.app.ActionBar$Tab)>(null);

     label1:
        $r2 = $r0.<androidx.appcompat.app.WindowDecorActionBar: java.util.ArrayList mTabs>;

        virtualinvoke $r2.<java.util.ArrayList: void clear()>();

        $r3 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ScrollingTabContainerView mTabScrollView>;

        if $r3 == null goto label2;

        virtualinvoke $r3.<androidx.appcompat.widget.ScrollingTabContainerView: void removeAllTabs()>();

     label2:
        $r0.<androidx.appcompat.app.WindowDecorActionBar: int mSavedTabPosition> = -1;

        return;
    }

    private void configureTab(androidx.appcompat.app.ActionBar$Tab, int)
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        androidx.appcompat.app.ActionBar$Tab $r1;
        int $i0, $i1;
        androidx.appcompat.app.WindowDecorActionBar$TabImpl $r2;
        androidx.appcompat.app.ActionBar$TabListener $r3;
        java.util.ArrayList $r4;
        java.lang.Object $r5;
        java.lang.IllegalStateException $r6;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $r1 := @parameter0: androidx.appcompat.app.ActionBar$Tab;

        $i0 := @parameter1: int;

        $r2 = (androidx.appcompat.app.WindowDecorActionBar$TabImpl) $r1;

        $r3 = virtualinvoke $r2.<androidx.appcompat.app.WindowDecorActionBar$TabImpl: androidx.appcompat.app.ActionBar$TabListener getCallback()>();

        if $r3 == null goto label3;

        virtualinvoke $r2.<androidx.appcompat.app.WindowDecorActionBar$TabImpl: void setPosition(int)>($i0);

        $r4 = $r0.<androidx.appcompat.app.WindowDecorActionBar: java.util.ArrayList mTabs>;

        virtualinvoke $r4.<java.util.ArrayList: void add(int,java.lang.Object)>($i0, $r2);

        $r4 = $r0.<androidx.appcompat.app.WindowDecorActionBar: java.util.ArrayList mTabs>;

        $i1 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        $i0 = $i0 + 1;

     label1:
        if $i0 >= $i1 goto label2;

        $r4 = $r0.<androidx.appcompat.app.WindowDecorActionBar: java.util.ArrayList mTabs>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r2 = (androidx.appcompat.app.WindowDecorActionBar$TabImpl) $r5;

        virtualinvoke $r2.<androidx.appcompat.app.WindowDecorActionBar$TabImpl: void setPosition(int)>($i0);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return;

     label3:
        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Action Bar Tab must have a Callback");

        throw $r6;
    }

    private void ensureTabsExist()
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        int $i0;
        androidx.appcompat.widget.ScrollingTabContainerView $r1;
        android.content.Context $r2;
        boolean $z0;
        androidx.appcompat.widget.DecorToolbar $r3;
        androidx.appcompat.widget.ActionBarOverlayLayout $r4;
        androidx.appcompat.widget.ActionBarContainer $r5;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $r1 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ScrollingTabContainerView mTabScrollView>;

        if $r1 == null goto label1;

        return;

     label1:
        $r1 = new androidx.appcompat.widget.ScrollingTabContainerView;

        $r2 = $r0.<androidx.appcompat.app.WindowDecorActionBar: android.content.Context mContext>;

        specialinvoke $r1.<androidx.appcompat.widget.ScrollingTabContainerView: void <init>(android.content.Context)>($r2);

        $z0 = $r0.<androidx.appcompat.app.WindowDecorActionBar: boolean mHasEmbeddedTabs>;

        if $z0 == 0 goto label2;

        virtualinvoke $r1.<androidx.appcompat.widget.ScrollingTabContainerView: void setVisibility(int)>(0);

        $r3 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r3.<androidx.appcompat.widget.DecorToolbar: void setEmbeddedTabView(androidx.appcompat.widget.ScrollingTabContainerView)>($r1);

        goto label5;

     label2:
        $i0 = virtualinvoke $r0.<androidx.appcompat.app.WindowDecorActionBar: int getNavigationMode()>();

        if $i0 != 2 goto label3;

        virtualinvoke $r1.<androidx.appcompat.widget.ScrollingTabContainerView: void setVisibility(int)>(0);

        $r4 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarOverlayLayout mOverlayLayout>;

        if $r4 == null goto label4;

        staticinvoke <androidx.core.view.ViewCompat: void requestApplyInsets(android.view.View)>($r4);

        goto label4;

     label3:
        virtualinvoke $r1.<androidx.appcompat.widget.ScrollingTabContainerView: void setVisibility(int)>(8);

     label4:
        $r5 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarContainer mContainerView>;

        virtualinvoke $r5.<androidx.appcompat.widget.ActionBarContainer: void setTabContainer(androidx.appcompat.widget.ScrollingTabContainerView)>($r1);

     label5:
        $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ScrollingTabContainerView mTabScrollView> = $r1;

        return;
    }

    private androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View)
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        android.view.View $r1;
        boolean $z0;
        androidx.appcompat.widget.DecorToolbar $r2;
        androidx.appcompat.widget.Toolbar $r3;
        java.lang.IllegalStateException $r4;
        java.lang.StringBuilder $r5;
        java.lang.Class $r6;
        java.lang.String $r7;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $r1 := @parameter0: android.view.View;

        $z0 = $r1 instanceof androidx.appcompat.widget.DecorToolbar;

        if $z0 == 0 goto label1;

        $r2 = (androidx.appcompat.widget.DecorToolbar) $r1;

        return $r2;

     label1:
        $z0 = $r1 instanceof androidx.appcompat.widget.Toolbar;

        if $z0 == 0 goto label2;

        $r3 = (androidx.appcompat.widget.Toolbar) $r1;

        $r2 = virtualinvoke $r3.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.DecorToolbar getWrapper()>();

        return $r2;

     label2:
        $r4 = new java.lang.IllegalStateException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t make a decor toolbar out of ");

        if $r1 == null goto label3;

        $r6 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getSimpleName()>();

        goto label4;

     label3:
        $r7 = "null";

     label4:
        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        throw $r4;
    }

    private void hideForActionMode()
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        androidx.appcompat.widget.ActionBarOverlayLayout $r1;
        boolean $z0;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $z0 = $r0.<androidx.appcompat.app.WindowDecorActionBar: boolean mShowingForMode>;

        if $z0 == 0 goto label2;

        $r0.<androidx.appcompat.app.WindowDecorActionBar: boolean mShowingForMode> = 0;

        $r1 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarOverlayLayout mOverlayLayout>;

        if $r1 == null goto label1;

        virtualinvoke $r1.<androidx.appcompat.widget.ActionBarOverlayLayout: void setShowingForActionMode(boolean)>(0);

     label1:
        specialinvoke $r0.<androidx.appcompat.app.WindowDecorActionBar: void updateVisibility(boolean)>(0);

     label2:
        return;
    }

    private void init(android.view.View)
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        android.view.View $r1, $r3;
        int[] $r2;
        int $i0;
        androidx.appcompat.widget.ActionBarOverlayLayout $r4;
        androidx.appcompat.widget.DecorToolbar $r5;
        androidx.appcompat.widget.ActionBarContextView $r6;
        androidx.appcompat.widget.ActionBarContainer $r7;
        android.content.Context $r8;
        boolean $z0, $z1;
        androidx.appcompat.view.ActionBarPolicy $r9;
        android.content.res.TypedArray $r10;
        float $f0;
        java.lang.IllegalStateException $r11;
        java.lang.StringBuilder $r12;
        java.lang.Class $r13;
        java.lang.String $r14;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $r1 := @parameter0: android.view.View;

        $i0 = <androidx.appcompat.R$id: int decor_content_parent>;

        $r3 = virtualinvoke $r1.<android.view.View: android.view.View findViewById(int)>($i0);

        $r4 = (androidx.appcompat.widget.ActionBarOverlayLayout) $r3;

        $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarOverlayLayout mOverlayLayout> = $r4;

        $r4 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarOverlayLayout mOverlayLayout>;

        if $r4 == null goto label01;

        virtualinvoke $r4.<androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback)>($r0);

     label01:
        $i0 = <androidx.appcompat.R$id: int action_bar>;

        $r3 = virtualinvoke $r1.<android.view.View: android.view.View findViewById(int)>($i0);

        $r5 = specialinvoke $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View)>($r3);

        $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar> = $r5;

        $i0 = <androidx.appcompat.R$id: int action_context_bar>;

        $r3 = virtualinvoke $r1.<android.view.View: android.view.View findViewById(int)>($i0);

        $r6 = (androidx.appcompat.widget.ActionBarContextView) $r3;

        $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarContextView mContextView> = $r6;

        $i0 = <androidx.appcompat.R$id: int action_bar_container>;

        $r1 = virtualinvoke $r1.<android.view.View: android.view.View findViewById(int)>($i0);

        $r7 = (androidx.appcompat.widget.ActionBarContainer) $r1;

        $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarContainer mContainerView> = $r7;

        $r5 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        if $r5 == null goto label10;

        $r6 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarContextView mContextView>;

        if $r6 == null goto label10;

        $r7 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarContainer mContainerView>;

        if $r7 == null goto label10;

        $r8 = interfaceinvoke $r5.<androidx.appcompat.widget.DecorToolbar: android.content.Context getContext()>();

        $r0.<androidx.appcompat.app.WindowDecorActionBar: android.content.Context mContext> = $r8;

        $r5 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        $i0 = interfaceinvoke $r5.<androidx.appcompat.widget.DecorToolbar: int getDisplayOptions()>();

        $i0 = $i0 & 4;

        if $i0 == 0 goto label02;

        $z0 = 1;

        goto label03;

     label02:
        $z0 = 0;

     label03:
        if $z0 == 0 goto label04;

        $r0.<androidx.appcompat.app.WindowDecorActionBar: boolean mDisplayHomeAsUpSet> = 1;

     label04:
        $r8 = $r0.<androidx.appcompat.app.WindowDecorActionBar: android.content.Context mContext>;

        $r9 = staticinvoke <androidx.appcompat.view.ActionBarPolicy: androidx.appcompat.view.ActionBarPolicy get(android.content.Context)>($r8);

        $z1 = virtualinvoke $r9.<androidx.appcompat.view.ActionBarPolicy: boolean enableHomeButtonByDefault()>();

        if $z1 != 0 goto label06;

        if $z0 == 0 goto label05;

        goto label06;

     label05:
        $z0 = 0;

        goto label07;

     label06:
        $z0 = 1;

     label07:
        virtualinvoke $r0.<androidx.appcompat.app.WindowDecorActionBar: void setHomeButtonEnabled(boolean)>($z0);

        $z0 = virtualinvoke $r9.<androidx.appcompat.view.ActionBarPolicy: boolean hasEmbeddedTabs()>();

        specialinvoke $r0.<androidx.appcompat.app.WindowDecorActionBar: void setHasEmbeddedTabs(boolean)>($z0);

        $r8 = $r0.<androidx.appcompat.app.WindowDecorActionBar: android.content.Context mContext>;

        $r2 = <androidx.appcompat.R$styleable: int[] ActionBar>;

        $i0 = <androidx.appcompat.R$attr: int actionBarStyle>;

        $r10 = virtualinvoke $r8.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(null, $r2, $i0, 0);

        $i0 = <androidx.appcompat.R$styleable: int ActionBar_hideOnContentScroll>;

        $z0 = virtualinvoke $r10.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i0, 0);

        if $z0 == 0 goto label08;

        virtualinvoke $r0.<androidx.appcompat.app.WindowDecorActionBar: void setHideOnContentScrollEnabled(boolean)>(1);

     label08:
        $i0 = <androidx.appcompat.R$styleable: int ActionBar_elevation>;

        $i0 = virtualinvoke $r10.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>($i0, 0);

        if $i0 == 0 goto label09;

        $f0 = (float) $i0;

        virtualinvoke $r0.<androidx.appcompat.app.WindowDecorActionBar: void setElevation(float)>($f0);

     label09:
        virtualinvoke $r10.<android.content.res.TypedArray: void recycle()>();

        return;

     label10:
        $r11 = new java.lang.IllegalStateException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r14 = virtualinvoke $r13.<java.lang.Class: java.lang.String getSimpleName()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" can only be used ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("with a compatible window decor layout");

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r14);

        throw $r11;
    }

    private void setHasEmbeddedTabs(boolean)
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        boolean $z0, $z1, $z2;
        int $i0;
        androidx.appcompat.widget.DecorToolbar $r1;
        androidx.appcompat.widget.ActionBarContainer $r2;
        androidx.appcompat.widget.ScrollingTabContainerView $r3;
        androidx.appcompat.widget.ActionBarOverlayLayout $r4;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $z0 := @parameter0: boolean;

        $r0.<androidx.appcompat.app.WindowDecorActionBar: boolean mHasEmbeddedTabs> = $z0;

        $z0 = $r0.<androidx.appcompat.app.WindowDecorActionBar: boolean mHasEmbeddedTabs>;

        if $z0 != 0 goto label01;

        $r1 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r1.<androidx.appcompat.widget.DecorToolbar: void setEmbeddedTabView(androidx.appcompat.widget.ScrollingTabContainerView)>(null);

        $r2 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarContainer mContainerView>;

        $r3 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ScrollingTabContainerView mTabScrollView>;

        virtualinvoke $r2.<androidx.appcompat.widget.ActionBarContainer: void setTabContainer(androidx.appcompat.widget.ScrollingTabContainerView)>($r3);

        goto label02;

     label01:
        $r2 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarContainer mContainerView>;

        virtualinvoke $r2.<androidx.appcompat.widget.ActionBarContainer: void setTabContainer(androidx.appcompat.widget.ScrollingTabContainerView)>(null);

        $r1 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        $r3 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ScrollingTabContainerView mTabScrollView>;

        interfaceinvoke $r1.<androidx.appcompat.widget.DecorToolbar: void setEmbeddedTabView(androidx.appcompat.widget.ScrollingTabContainerView)>($r3);

     label02:
        $i0 = virtualinvoke $r0.<androidx.appcompat.app.WindowDecorActionBar: int getNavigationMode()>();

        $z0 = 1;

        if $i0 != 2 goto label03;

        $z1 = 1;

        goto label04;

     label03:
        $z1 = 0;

     label04:
        $r3 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ScrollingTabContainerView mTabScrollView>;

        if $r3 == null goto label06;

        if $z1 == 0 goto label05;

        virtualinvoke $r3.<androidx.appcompat.widget.ScrollingTabContainerView: void setVisibility(int)>(0);

        $r4 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarOverlayLayout mOverlayLayout>;

        if $r4 == null goto label06;

        staticinvoke <androidx.core.view.ViewCompat: void requestApplyInsets(android.view.View)>($r4);

        goto label06;

     label05:
        virtualinvoke $r3.<androidx.appcompat.widget.ScrollingTabContainerView: void setVisibility(int)>(8);

     label06:
        $r1 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        $z2 = $r0.<androidx.appcompat.app.WindowDecorActionBar: boolean mHasEmbeddedTabs>;

        if $z2 != 0 goto label07;

        if $z1 == 0 goto label07;

        $z2 = 1;

        goto label08;

     label07:
        $z2 = 0;

     label08:
        interfaceinvoke $r1.<androidx.appcompat.widget.DecorToolbar: void setCollapsible(boolean)>($z2);

        $r4 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarOverlayLayout mOverlayLayout>;

        $z2 = $r0.<androidx.appcompat.app.WindowDecorActionBar: boolean mHasEmbeddedTabs>;

        if $z2 != 0 goto label09;

        if $z1 == 0 goto label09;

        goto label10;

     label09:
        $z0 = 0;

     label10:
        virtualinvoke $r4.<androidx.appcompat.widget.ActionBarOverlayLayout: void setHasNonEmbeddedTabs(boolean)>($z0);

        return;
    }

    private boolean shouldAnimateContextView()
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        boolean $z0;
        androidx.appcompat.widget.ActionBarContainer $r1;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $r1 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarContainer mContainerView>;

        $z0 = staticinvoke <androidx.core.view.ViewCompat: boolean isLaidOut(android.view.View)>($r1);

        return $z0;
    }

    private void showForActionMode()
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        androidx.appcompat.widget.ActionBarOverlayLayout $r1;
        boolean $z0;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $z0 = $r0.<androidx.appcompat.app.WindowDecorActionBar: boolean mShowingForMode>;

        if $z0 != 0 goto label2;

        $r0.<androidx.appcompat.app.WindowDecorActionBar: boolean mShowingForMode> = 1;

        $r1 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarOverlayLayout mOverlayLayout>;

        if $r1 == null goto label1;

        virtualinvoke $r1.<androidx.appcompat.widget.ActionBarOverlayLayout: void setShowingForActionMode(boolean)>(1);

     label1:
        specialinvoke $r0.<androidx.appcompat.app.WindowDecorActionBar: void updateVisibility(boolean)>(0);

     label2:
        return;
    }

    private void updateVisibility(boolean)
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        boolean $z0, $z1, $z2, $z3;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $z0 := @parameter0: boolean;

        $z2 = $r0.<androidx.appcompat.app.WindowDecorActionBar: boolean mHiddenByApp>;

        $z3 = $r0.<androidx.appcompat.app.WindowDecorActionBar: boolean mHiddenBySystem>;

        $z1 = $r0.<androidx.appcompat.app.WindowDecorActionBar: boolean mShowingForMode>;

        $z1 = staticinvoke <androidx.appcompat.app.WindowDecorActionBar: boolean checkShowingFlags(boolean,boolean,boolean)>($z2, $z3, $z1);

        if $z1 == 0 goto label1;

        $z1 = $r0.<androidx.appcompat.app.WindowDecorActionBar: boolean mNowShowing>;

        if $z1 != 0 goto label2;

        $r0.<androidx.appcompat.app.WindowDecorActionBar: boolean mNowShowing> = 1;

        virtualinvoke $r0.<androidx.appcompat.app.WindowDecorActionBar: void doShow(boolean)>($z0);

        return;

     label1:
        $z1 = $r0.<androidx.appcompat.app.WindowDecorActionBar: boolean mNowShowing>;

        if $z1 == 0 goto label2;

        $r0.<androidx.appcompat.app.WindowDecorActionBar: boolean mNowShowing> = 0;

        virtualinvoke $r0.<androidx.appcompat.app.WindowDecorActionBar: void doHide(boolean)>($z0);

     label2:
        return;
    }

    public void addOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener)
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        androidx.appcompat.app.ActionBar$OnMenuVisibilityListener $r1;
        java.util.ArrayList $r2;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $r1 := @parameter0: androidx.appcompat.app.ActionBar$OnMenuVisibilityListener;

        $r2 = $r0.<androidx.appcompat.app.WindowDecorActionBar: java.util.ArrayList mMenuVisibilityListeners>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        return;
    }

    public void addTab(androidx.appcompat.app.ActionBar$Tab)
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        androidx.appcompat.app.ActionBar$Tab $r1;
        boolean $z0;
        java.util.ArrayList $r2;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $r1 := @parameter0: androidx.appcompat.app.ActionBar$Tab;

        $r2 = $r0.<androidx.appcompat.app.WindowDecorActionBar: java.util.ArrayList mTabs>;

        $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean isEmpty()>();

        virtualinvoke $r0.<androidx.appcompat.app.WindowDecorActionBar: void addTab(androidx.appcompat.app.ActionBar$Tab,boolean)>($r1, $z0);

        return;
    }

    public void addTab(androidx.appcompat.app.ActionBar$Tab, int)
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        androidx.appcompat.app.ActionBar$Tab $r1;
        int $i0;
        boolean $z0;
        java.util.ArrayList $r2;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $r1 := @parameter0: androidx.appcompat.app.ActionBar$Tab;

        $i0 := @parameter1: int;

        $r2 = $r0.<androidx.appcompat.app.WindowDecorActionBar: java.util.ArrayList mTabs>;

        $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean isEmpty()>();

        virtualinvoke $r0.<androidx.appcompat.app.WindowDecorActionBar: void addTab(androidx.appcompat.app.ActionBar$Tab,int,boolean)>($r1, $i0, $z0);

        return;
    }

    public void addTab(androidx.appcompat.app.ActionBar$Tab, int, boolean)
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        androidx.appcompat.app.ActionBar$Tab $r1;
        int $i0;
        boolean $z0;
        androidx.appcompat.widget.ScrollingTabContainerView $r2;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $r1 := @parameter0: androidx.appcompat.app.ActionBar$Tab;

        $i0 := @parameter1: int;

        $z0 := @parameter2: boolean;

        specialinvoke $r0.<androidx.appcompat.app.WindowDecorActionBar: void ensureTabsExist()>();

        $r2 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ScrollingTabContainerView mTabScrollView>;

        virtualinvoke $r2.<androidx.appcompat.widget.ScrollingTabContainerView: void addTab(androidx.appcompat.app.ActionBar$Tab,int,boolean)>($r1, $i0, $z0);

        specialinvoke $r0.<androidx.appcompat.app.WindowDecorActionBar: void configureTab(androidx.appcompat.app.ActionBar$Tab,int)>($r1, $i0);

        if $z0 == 0 goto label1;

        virtualinvoke $r0.<androidx.appcompat.app.WindowDecorActionBar: void selectTab(androidx.appcompat.app.ActionBar$Tab)>($r1);

     label1:
        return;
    }

    public void addTab(androidx.appcompat.app.ActionBar$Tab, boolean)
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        androidx.appcompat.app.ActionBar$Tab $r1;
        boolean $z0;
        int $i0;
        androidx.appcompat.widget.ScrollingTabContainerView $r2;
        java.util.ArrayList $r3;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $r1 := @parameter0: androidx.appcompat.app.ActionBar$Tab;

        $z0 := @parameter1: boolean;

        specialinvoke $r0.<androidx.appcompat.app.WindowDecorActionBar: void ensureTabsExist()>();

        $r2 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ScrollingTabContainerView mTabScrollView>;

        virtualinvoke $r2.<androidx.appcompat.widget.ScrollingTabContainerView: void addTab(androidx.appcompat.app.ActionBar$Tab,boolean)>($r1, $z0);

        $r3 = $r0.<androidx.appcompat.app.WindowDecorActionBar: java.util.ArrayList mTabs>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        specialinvoke $r0.<androidx.appcompat.app.WindowDecorActionBar: void configureTab(androidx.appcompat.app.ActionBar$Tab,int)>($r1, $i0);

        if $z0 == 0 goto label1;

        virtualinvoke $r0.<androidx.appcompat.app.WindowDecorActionBar: void selectTab(androidx.appcompat.app.ActionBar$Tab)>($r1);

     label1:
        return;
    }

    public void animateToMode(boolean)
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        boolean $z0, $z1;
        androidx.appcompat.widget.DecorToolbar $r1;
        androidx.core.view.ViewPropertyAnimatorCompat $r2, $r4;
        androidx.appcompat.widget.ActionBarContextView $r3;
        androidx.appcompat.view.ViewPropertyAnimatorCompatSet $r5;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $z0 := @parameter0: boolean;

        if $z0 == 0 goto label1;

        specialinvoke $r0.<androidx.appcompat.app.WindowDecorActionBar: void showForActionMode()>();

        goto label2;

     label1:
        specialinvoke $r0.<androidx.appcompat.app.WindowDecorActionBar: void hideForActionMode()>();

     label2:
        $z1 = specialinvoke $r0.<androidx.appcompat.app.WindowDecorActionBar: boolean shouldAnimateContextView()>();

        if $z1 == 0 goto label5;

        if $z0 == 0 goto label3;

        $r1 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        $r2 = interfaceinvoke $r1.<androidx.appcompat.widget.DecorToolbar: androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long)>(4, 100L);

        $r3 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarContextView mContextView>;

        $r4 = virtualinvoke $r3.<androidx.appcompat.widget.ActionBarContextView: androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long)>(0, 200L);

        goto label4;

     label3:
        $r1 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        $r4 = interfaceinvoke $r1.<androidx.appcompat.widget.DecorToolbar: androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long)>(0, 200L);

        $r3 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarContextView mContextView>;

        $r2 = virtualinvoke $r3.<androidx.appcompat.widget.ActionBarContextView: androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long)>(8, 100L);

     label4:
        $r5 = new androidx.appcompat.view.ViewPropertyAnimatorCompatSet;

        specialinvoke $r5.<androidx.appcompat.view.ViewPropertyAnimatorCompatSet: void <init>()>();

        virtualinvoke $r5.<androidx.appcompat.view.ViewPropertyAnimatorCompatSet: androidx.appcompat.view.ViewPropertyAnimatorCompatSet playSequentially(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorCompat)>($r2, $r4);

        virtualinvoke $r5.<androidx.appcompat.view.ViewPropertyAnimatorCompatSet: void start()>();

        return;

     label5:
        if $z0 == 0 goto label6;

        $r1 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r1.<androidx.appcompat.widget.DecorToolbar: void setVisibility(int)>(4);

        $r3 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarContextView mContextView>;

        virtualinvoke $r3.<androidx.appcompat.widget.ActionBarContextView: void setVisibility(int)>(0);

        return;

     label6:
        $r1 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r1.<androidx.appcompat.widget.DecorToolbar: void setVisibility(int)>(0);

        $r3 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarContextView mContextView>;

        virtualinvoke $r3.<androidx.appcompat.widget.ActionBarContextView: void setVisibility(int)>(8);

        return;
    }

    public boolean collapseActionView()
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        boolean $z0;
        androidx.appcompat.widget.DecorToolbar $r1;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $r1 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        if $r1 == null goto label1;

        $z0 = interfaceinvoke $r1.<androidx.appcompat.widget.DecorToolbar: boolean hasExpandedActionView()>();

        if $z0 == 0 goto label1;

        $r1 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r1.<androidx.appcompat.widget.DecorToolbar: void collapseActionView()>();

        return 1;

     label1:
        return 0;
    }

    void completeDeferredDestroyActionMode()
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        androidx.appcompat.view.ActionMode $r1;
        androidx.appcompat.view.ActionMode$Callback $r2;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $r2 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.view.ActionMode$Callback mDeferredModeDestroyCallback>;

        if $r2 == null goto label1;

        $r1 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.view.ActionMode mDeferredDestroyActionMode>;

        interfaceinvoke $r2.<androidx.appcompat.view.ActionMode$Callback: void onDestroyActionMode(androidx.appcompat.view.ActionMode)>($r1);

        $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.view.ActionMode mDeferredDestroyActionMode> = null;

        $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.view.ActionMode$Callback mDeferredModeDestroyCallback> = null;

     label1:
        return;
    }

    public void dispatchMenuVisibilityChanged(boolean)
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        boolean $z0, $z1;
        java.util.ArrayList $r1;
        int $i0, $i1;
        java.lang.Object $r2;
        androidx.appcompat.app.ActionBar$OnMenuVisibilityListener $r3;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $z0 := @parameter0: boolean;

        $z1 = $r0.<androidx.appcompat.app.WindowDecorActionBar: boolean mLastMenuVisibility>;

        if 0 != $z1 goto label1;

        return;

     label1:
        $r0.<androidx.appcompat.app.WindowDecorActionBar: boolean mLastMenuVisibility> = 0;

        $r1 = $r0.<androidx.appcompat.app.WindowDecorActionBar: java.util.ArrayList mMenuVisibilityListeners>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label3;

        $r1 = $r0.<androidx.appcompat.app.WindowDecorActionBar: java.util.ArrayList mMenuVisibilityListeners>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r3 = (androidx.appcompat.app.ActionBar$OnMenuVisibilityListener) $r2;

        interfaceinvoke $r3.<androidx.appcompat.app.ActionBar$OnMenuVisibilityListener: void onMenuVisibilityChanged(boolean)>(0);

        $i1 = $i1 + 1;

        goto label2;

     label3:
        return;
    }

    public void doHide(boolean)
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        boolean $z0, $z1;
        androidx.appcompat.widget.ActionBarContainer $r1;
        androidx.appcompat.view.ViewPropertyAnimatorCompatSet $r2;
        int $i0;
        float $f0, $f1;
        int[] $r3;
        androidx.core.view.ViewPropertyAnimatorCompat $r4;
        androidx.core.view.ViewPropertyAnimatorUpdateListener $r5;
        android.view.View $r6;
        android.view.animation.Interpolator $r7;
        androidx.core.view.ViewPropertyAnimatorListener $r8;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $z0 := @parameter0: boolean;

        $r2 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.view.ViewPropertyAnimatorCompatSet mCurrentShowAnim>;

        if $r2 == null goto label1;

        virtualinvoke $r2.<androidx.appcompat.view.ViewPropertyAnimatorCompatSet: void cancel()>();

     label1:
        $i0 = $r0.<androidx.appcompat.app.WindowDecorActionBar: int mCurWindowVisibility>;

        if $i0 != 0 goto label5;

        $z1 = $r0.<androidx.appcompat.app.WindowDecorActionBar: boolean mShowHideAnimationEnabled>;

        if $z1 != 0 goto label2;

        if $z0 == 0 goto label5;

     label2:
        $r1 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarContainer mContainerView>;

        virtualinvoke $r1.<androidx.appcompat.widget.ActionBarContainer: void setAlpha(float)>(1.0F);

        $r1 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarContainer mContainerView>;

        virtualinvoke $r1.<androidx.appcompat.widget.ActionBarContainer: void setTransitioning(boolean)>(1);

        $r2 = new androidx.appcompat.view.ViewPropertyAnimatorCompatSet;

        specialinvoke $r2.<androidx.appcompat.view.ViewPropertyAnimatorCompatSet: void <init>()>();

        $r1 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarContainer mContainerView>;

        $i0 = virtualinvoke $r1.<androidx.appcompat.widget.ActionBarContainer: int getHeight()>();

        $i0 = neg $i0;

        $f0 = (float) $i0;

        if $z0 == 0 goto label3;

        $r3 = newarray (int)[2];

        $r3[0] = 0;

        $r3[1] = 0;

        $r1 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarContainer mContainerView>;

        virtualinvoke $r1.<androidx.appcompat.widget.ActionBarContainer: void getLocationInWindow(int[])>($r3);

        $i0 = $r3[1];

        $f1 = (float) $i0;

        $f0 = $f0 - $f1;

     label3:
        $r1 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarContainer mContainerView>;

        $r4 = staticinvoke <androidx.core.view.ViewCompat: androidx.core.view.ViewPropertyAnimatorCompat animate(android.view.View)>($r1);

        $r4 = virtualinvoke $r4.<androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat translationY(float)>($f0);

        $r5 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.core.view.ViewPropertyAnimatorUpdateListener mUpdateListener>;

        virtualinvoke $r4.<androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat setUpdateListener(androidx.core.view.ViewPropertyAnimatorUpdateListener)>($r5);

        virtualinvoke $r2.<androidx.appcompat.view.ViewPropertyAnimatorCompatSet: androidx.appcompat.view.ViewPropertyAnimatorCompatSet play(androidx.core.view.ViewPropertyAnimatorCompat)>($r4);

        $z0 = $r0.<androidx.appcompat.app.WindowDecorActionBar: boolean mContentAnimations>;

        if $z0 == 0 goto label4;

        $r6 = $r0.<androidx.appcompat.app.WindowDecorActionBar: android.view.View mContentView>;

        if $r6 == null goto label4;

        $r4 = staticinvoke <androidx.core.view.ViewCompat: androidx.core.view.ViewPropertyAnimatorCompat animate(android.view.View)>($r6);

        $r4 = virtualinvoke $r4.<androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat translationY(float)>($f0);

        virtualinvoke $r2.<androidx.appcompat.view.ViewPropertyAnimatorCompatSet: androidx.appcompat.view.ViewPropertyAnimatorCompatSet play(androidx.core.view.ViewPropertyAnimatorCompat)>($r4);

     label4:
        $r7 = <androidx.appcompat.app.WindowDecorActionBar: android.view.animation.Interpolator sHideInterpolator>;

        virtualinvoke $r2.<androidx.appcompat.view.ViewPropertyAnimatorCompatSet: androidx.appcompat.view.ViewPropertyAnimatorCompatSet setInterpolator(android.view.animation.Interpolator)>($r7);

        virtualinvoke $r2.<androidx.appcompat.view.ViewPropertyAnimatorCompatSet: androidx.appcompat.view.ViewPropertyAnimatorCompatSet setDuration(long)>(250L);

        $r8 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.core.view.ViewPropertyAnimatorListener mHideListener>;

        virtualinvoke $r2.<androidx.appcompat.view.ViewPropertyAnimatorCompatSet: androidx.appcompat.view.ViewPropertyAnimatorCompatSet setListener(androidx.core.view.ViewPropertyAnimatorListener)>($r8);

        $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.view.ViewPropertyAnimatorCompatSet mCurrentShowAnim> = $r2;

        virtualinvoke $r2.<androidx.appcompat.view.ViewPropertyAnimatorCompatSet: void start()>();

        return;

     label5:
        $r8 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.core.view.ViewPropertyAnimatorListener mHideListener>;

        interfaceinvoke $r8.<androidx.core.view.ViewPropertyAnimatorListener: void onAnimationEnd(android.view.View)>(null);

        return;
    }

    public void doShow(boolean)
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        boolean $z0, $z1;
        androidx.appcompat.view.ViewPropertyAnimatorCompatSet $r1;
        androidx.appcompat.widget.ActionBarContainer $r2;
        int $i0;
        float $f0, $f1;
        int[] $r3;
        androidx.core.view.ViewPropertyAnimatorCompat $r4;
        androidx.core.view.ViewPropertyAnimatorUpdateListener $r5;
        android.view.View $r6;
        android.view.animation.Interpolator $r7;
        androidx.core.view.ViewPropertyAnimatorListener $r8;
        androidx.appcompat.widget.ActionBarOverlayLayout $r9;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $z0 := @parameter0: boolean;

        $r1 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.view.ViewPropertyAnimatorCompatSet mCurrentShowAnim>;

        if $r1 == null goto label1;

        virtualinvoke $r1.<androidx.appcompat.view.ViewPropertyAnimatorCompatSet: void cancel()>();

     label1:
        $r2 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarContainer mContainerView>;

        virtualinvoke $r2.<androidx.appcompat.widget.ActionBarContainer: void setVisibility(int)>(0);

        $i0 = $r0.<androidx.appcompat.app.WindowDecorActionBar: int mCurWindowVisibility>;

        if $i0 != 0 goto label5;

        $z1 = $r0.<androidx.appcompat.app.WindowDecorActionBar: boolean mShowHideAnimationEnabled>;

        if $z1 != 0 goto label2;

        if $z0 == 0 goto label5;

     label2:
        $r2 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarContainer mContainerView>;

        virtualinvoke $r2.<androidx.appcompat.widget.ActionBarContainer: void setTranslationY(float)>(0.0F);

        $r2 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarContainer mContainerView>;

        $i0 = virtualinvoke $r2.<androidx.appcompat.widget.ActionBarContainer: int getHeight()>();

        $i0 = neg $i0;

        $f0 = (float) $i0;

        if $z0 == 0 goto label3;

        $r3 = newarray (int)[2];

        $r3[0] = 0;

        $r3[1] = 0;

        $r2 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarContainer mContainerView>;

        virtualinvoke $r2.<androidx.appcompat.widget.ActionBarContainer: void getLocationInWindow(int[])>($r3);

        $i0 = $r3[1];

        $f1 = (float) $i0;

        $f0 = $f0 - $f1;

     label3:
        $r2 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarContainer mContainerView>;

        virtualinvoke $r2.<androidx.appcompat.widget.ActionBarContainer: void setTranslationY(float)>($f0);

        $r1 = new androidx.appcompat.view.ViewPropertyAnimatorCompatSet;

        specialinvoke $r1.<androidx.appcompat.view.ViewPropertyAnimatorCompatSet: void <init>()>();

        $r2 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarContainer mContainerView>;

        $r4 = staticinvoke <androidx.core.view.ViewCompat: androidx.core.view.ViewPropertyAnimatorCompat animate(android.view.View)>($r2);

        $r4 = virtualinvoke $r4.<androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat translationY(float)>(0.0F);

        $r5 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.core.view.ViewPropertyAnimatorUpdateListener mUpdateListener>;

        virtualinvoke $r4.<androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat setUpdateListener(androidx.core.view.ViewPropertyAnimatorUpdateListener)>($r5);

        virtualinvoke $r1.<androidx.appcompat.view.ViewPropertyAnimatorCompatSet: androidx.appcompat.view.ViewPropertyAnimatorCompatSet play(androidx.core.view.ViewPropertyAnimatorCompat)>($r4);

        $z0 = $r0.<androidx.appcompat.app.WindowDecorActionBar: boolean mContentAnimations>;

        if $z0 == 0 goto label4;

        $r6 = $r0.<androidx.appcompat.app.WindowDecorActionBar: android.view.View mContentView>;

        if $r6 == null goto label4;

        virtualinvoke $r6.<android.view.View: void setTranslationY(float)>($f0);

        $r6 = $r0.<androidx.appcompat.app.WindowDecorActionBar: android.view.View mContentView>;

        $r4 = staticinvoke <androidx.core.view.ViewCompat: androidx.core.view.ViewPropertyAnimatorCompat animate(android.view.View)>($r6);

        $r4 = virtualinvoke $r4.<androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat translationY(float)>(0.0F);

        virtualinvoke $r1.<androidx.appcompat.view.ViewPropertyAnimatorCompatSet: androidx.appcompat.view.ViewPropertyAnimatorCompatSet play(androidx.core.view.ViewPropertyAnimatorCompat)>($r4);

     label4:
        $r7 = <androidx.appcompat.app.WindowDecorActionBar: android.view.animation.Interpolator sShowInterpolator>;

        virtualinvoke $r1.<androidx.appcompat.view.ViewPropertyAnimatorCompatSet: androidx.appcompat.view.ViewPropertyAnimatorCompatSet setInterpolator(android.view.animation.Interpolator)>($r7);

        virtualinvoke $r1.<androidx.appcompat.view.ViewPropertyAnimatorCompatSet: androidx.appcompat.view.ViewPropertyAnimatorCompatSet setDuration(long)>(250L);

        $r8 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.core.view.ViewPropertyAnimatorListener mShowListener>;

        virtualinvoke $r1.<androidx.appcompat.view.ViewPropertyAnimatorCompatSet: androidx.appcompat.view.ViewPropertyAnimatorCompatSet setListener(androidx.core.view.ViewPropertyAnimatorListener)>($r8);

        $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.view.ViewPropertyAnimatorCompatSet mCurrentShowAnim> = $r1;

        virtualinvoke $r1.<androidx.appcompat.view.ViewPropertyAnimatorCompatSet: void start()>();

        goto label7;

     label5:
        $r2 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarContainer mContainerView>;

        virtualinvoke $r2.<androidx.appcompat.widget.ActionBarContainer: void setAlpha(float)>(1.0F);

        $r2 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarContainer mContainerView>;

        virtualinvoke $r2.<androidx.appcompat.widget.ActionBarContainer: void setTranslationY(float)>(0.0F);

        $z0 = $r0.<androidx.appcompat.app.WindowDecorActionBar: boolean mContentAnimations>;

        if $z0 == 0 goto label6;

        $r6 = $r0.<androidx.appcompat.app.WindowDecorActionBar: android.view.View mContentView>;

        if $r6 == null goto label6;

        virtualinvoke $r6.<android.view.View: void setTranslationY(float)>(0.0F);

     label6:
        $r8 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.core.view.ViewPropertyAnimatorListener mShowListener>;

        interfaceinvoke $r8.<androidx.core.view.ViewPropertyAnimatorListener: void onAnimationEnd(android.view.View)>(null);

     label7:
        $r9 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarOverlayLayout mOverlayLayout>;

        if $r9 == null goto label8;

        staticinvoke <androidx.core.view.ViewCompat: void requestApplyInsets(android.view.View)>($r9);

     label8:
        return;
    }

    public void enableContentAnimations(boolean)
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        boolean $z0;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $z0 := @parameter0: boolean;

        $r0.<androidx.appcompat.app.WindowDecorActionBar: boolean mContentAnimations> = $z0;

        return;
    }

    public android.view.View getCustomView()
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        android.view.View $r1;
        androidx.appcompat.widget.DecorToolbar $r2;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $r2 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        $r1 = interfaceinvoke $r2.<androidx.appcompat.widget.DecorToolbar: android.view.View getCustomView()>();

        return $r1;
    }

    public int getDisplayOptions()
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        int $i0;
        androidx.appcompat.widget.DecorToolbar $r1;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $r1 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        $i0 = interfaceinvoke $r1.<androidx.appcompat.widget.DecorToolbar: int getDisplayOptions()>();

        return $i0;
    }

    public float getElevation()
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        float $f0;
        androidx.appcompat.widget.ActionBarContainer $r1;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $r1 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarContainer mContainerView>;

        $f0 = staticinvoke <androidx.core.view.ViewCompat: float getElevation(android.view.View)>($r1);

        return $f0;
    }

    public int getHeight()
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        int $i0;
        androidx.appcompat.widget.ActionBarContainer $r1;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $r1 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarContainer mContainerView>;

        $i0 = virtualinvoke $r1.<androidx.appcompat.widget.ActionBarContainer: int getHeight()>();

        return $i0;
    }

    public int getHideOffset()
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        int $i0;
        androidx.appcompat.widget.ActionBarOverlayLayout $r1;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $r1 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarOverlayLayout mOverlayLayout>;

        $i0 = virtualinvoke $r1.<androidx.appcompat.widget.ActionBarOverlayLayout: int getActionBarHideOffset()>();

        return $i0;
    }

    public int getNavigationItemCount()
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        androidx.appcompat.widget.DecorToolbar $r1;
        int $i0;
        java.util.ArrayList $r2;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $r1 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        $i0 = interfaceinvoke $r1.<androidx.appcompat.widget.DecorToolbar: int getNavigationMode()>();

        if $i0 == 1 goto label2;

        if $i0 == 2 goto label1;

        return 0;

     label1:
        $r2 = $r0.<androidx.appcompat.app.WindowDecorActionBar: java.util.ArrayList mTabs>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        return $i0;

     label2:
        $r1 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        $i0 = interfaceinvoke $r1.<androidx.appcompat.widget.DecorToolbar: int getDropdownItemCount()>();

        return $i0;
    }

    public int getNavigationMode()
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        int $i0;
        androidx.appcompat.widget.DecorToolbar $r1;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $r1 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        $i0 = interfaceinvoke $r1.<androidx.appcompat.widget.DecorToolbar: int getNavigationMode()>();

        return $i0;
    }

    public int getSelectedNavigationIndex()
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        androidx.appcompat.widget.DecorToolbar $r1;
        int $i0;
        androidx.appcompat.app.WindowDecorActionBar$TabImpl $r2;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $r1 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        $i0 = interfaceinvoke $r1.<androidx.appcompat.widget.DecorToolbar: int getNavigationMode()>();

        if $i0 == 1 goto label2;

        if $i0 == 2 goto label1;

        return -1;

     label1:
        $r2 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.app.WindowDecorActionBar$TabImpl mSelectedTab>;

        if $r2 == null goto label3;

        $i0 = virtualinvoke $r2.<androidx.appcompat.app.WindowDecorActionBar$TabImpl: int getPosition()>();

        return $i0;

     label2:
        $r1 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        $i0 = interfaceinvoke $r1.<androidx.appcompat.widget.DecorToolbar: int getDropdownSelectedPosition()>();

        return $i0;

     label3:
        return -1;
    }

    public androidx.appcompat.app.ActionBar$Tab getSelectedTab()
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        androidx.appcompat.app.WindowDecorActionBar$TabImpl r1;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        r1 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.app.WindowDecorActionBar$TabImpl mSelectedTab>;

        return r1;
    }

    public java.lang.CharSequence getSubtitle()
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        java.lang.CharSequence $r1;
        androidx.appcompat.widget.DecorToolbar $r2;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $r2 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        $r1 = interfaceinvoke $r2.<androidx.appcompat.widget.DecorToolbar: java.lang.CharSequence getSubtitle()>();

        return $r1;
    }

    public androidx.appcompat.app.ActionBar$Tab getTabAt(int)
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        int $i0;
        java.lang.Object $r1;
        java.util.ArrayList $r2;
        androidx.appcompat.app.ActionBar$Tab $r3;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $i0 := @parameter0: int;

        $r2 = $r0.<androidx.appcompat.app.WindowDecorActionBar: java.util.ArrayList mTabs>;

        $r1 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r3 = (androidx.appcompat.app.ActionBar$Tab) $r1;

        return $r3;
    }

    public int getTabCount()
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        int $i0;
        java.util.ArrayList $r1;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $r1 = $r0.<androidx.appcompat.app.WindowDecorActionBar: java.util.ArrayList mTabs>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        return $i0;
    }

    public android.content.Context getThemedContext()
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        android.content.Context $r1;
        android.content.res.Resources$Theme $r2;
        android.util.TypedValue $r3;
        int $i0;
        android.view.ContextThemeWrapper $r4;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $r1 = $r0.<androidx.appcompat.app.WindowDecorActionBar: android.content.Context mThemedContext>;

        if $r1 != null goto label2;

        $r3 = new android.util.TypedValue;

        specialinvoke $r3.<android.util.TypedValue: void <init>()>();

        $r1 = $r0.<androidx.appcompat.app.WindowDecorActionBar: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $i0 = <androidx.appcompat.R$attr: int actionBarWidgetTheme>;

        virtualinvoke $r2.<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>($i0, $r3, 1);

        $i0 = $r3.<android.util.TypedValue: int resourceId>;

        if $i0 == 0 goto label1;

        $r4 = new android.view.ContextThemeWrapper;

        $r1 = $r0.<androidx.appcompat.app.WindowDecorActionBar: android.content.Context mContext>;

        specialinvoke $r4.<android.view.ContextThemeWrapper: void <init>(android.content.Context,int)>($r1, $i0);

        $r0.<androidx.appcompat.app.WindowDecorActionBar: android.content.Context mThemedContext> = $r4;

        goto label2;

     label1:
        $r1 = $r0.<androidx.appcompat.app.WindowDecorActionBar: android.content.Context mContext>;

        $r0.<androidx.appcompat.app.WindowDecorActionBar: android.content.Context mThemedContext> = $r1;

     label2:
        $r1 = $r0.<androidx.appcompat.app.WindowDecorActionBar: android.content.Context mThemedContext>;

        return $r1;
    }

    public java.lang.CharSequence getTitle()
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        java.lang.CharSequence $r1;
        androidx.appcompat.widget.DecorToolbar $r2;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $r2 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        $r1 = interfaceinvoke $r2.<androidx.appcompat.widget.DecorToolbar: java.lang.CharSequence getTitle()>();

        return $r1;
    }

    public boolean hasIcon()
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        boolean $z0;
        androidx.appcompat.widget.DecorToolbar $r1;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $r1 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        $z0 = interfaceinvoke $r1.<androidx.appcompat.widget.DecorToolbar: boolean hasIcon()>();

        return $z0;
    }

    public boolean hasLogo()
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        boolean $z0;
        androidx.appcompat.widget.DecorToolbar $r1;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $r1 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        $z0 = interfaceinvoke $r1.<androidx.appcompat.widget.DecorToolbar: boolean hasLogo()>();

        return $z0;
    }

    public void hide()
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        boolean $z0;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $z0 = $r0.<androidx.appcompat.app.WindowDecorActionBar: boolean mHiddenByApp>;

        if $z0 != 0 goto label1;

        $r0.<androidx.appcompat.app.WindowDecorActionBar: boolean mHiddenByApp> = 1;

        specialinvoke $r0.<androidx.appcompat.app.WindowDecorActionBar: void updateVisibility(boolean)>(0);

     label1:
        return;
    }

    public void hideForSystem()
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        boolean $z0;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $z0 = $r0.<androidx.appcompat.app.WindowDecorActionBar: boolean mHiddenBySystem>;

        if $z0 != 0 goto label1;

        $r0.<androidx.appcompat.app.WindowDecorActionBar: boolean mHiddenBySystem> = 1;

        specialinvoke $r0.<androidx.appcompat.app.WindowDecorActionBar: void updateVisibility(boolean)>(1);

     label1:
        return;
    }

    public boolean isHideOnContentScrollEnabled()
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        boolean $z0;
        androidx.appcompat.widget.ActionBarOverlayLayout $r1;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $r1 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarOverlayLayout mOverlayLayout>;

        $z0 = virtualinvoke $r1.<androidx.appcompat.widget.ActionBarOverlayLayout: boolean isHideOnContentScrollEnabled()>();

        return $z0;
    }

    public boolean isShowing()
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        int $i0, $i1;
        boolean $z0;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $i0 = virtualinvoke $r0.<androidx.appcompat.app.WindowDecorActionBar: int getHeight()>();

        $z0 = $r0.<androidx.appcompat.app.WindowDecorActionBar: boolean mNowShowing>;

        if $z0 == 0 goto label2;

        if $i0 == 0 goto label1;

        $i1 = virtualinvoke $r0.<androidx.appcompat.app.WindowDecorActionBar: int getHideOffset()>();

        if $i1 >= $i0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public boolean isTitleTruncated()
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        boolean $z0;
        androidx.appcompat.widget.DecorToolbar $r1;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $r1 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        if $r1 == null goto label1;

        $z0 = interfaceinvoke $r1.<androidx.appcompat.widget.DecorToolbar: boolean isTitleTruncated()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public androidx.appcompat.app.ActionBar$Tab newTab()
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        androidx.appcompat.app.WindowDecorActionBar$TabImpl $r1;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $r1 = new androidx.appcompat.app.WindowDecorActionBar$TabImpl;

        specialinvoke $r1.<androidx.appcompat.app.WindowDecorActionBar$TabImpl: void <init>(androidx.appcompat.app.WindowDecorActionBar)>($r0);

        return $r1;
    }

    public void onConfigurationChanged(android.content.res.Configuration)
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        android.content.res.Configuration $r1;
        android.content.Context $r2;
        androidx.appcompat.view.ActionBarPolicy $r3;
        boolean $z0;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $r1 := @parameter0: android.content.res.Configuration;

        $r2 = $r0.<androidx.appcompat.app.WindowDecorActionBar: android.content.Context mContext>;

        $r3 = staticinvoke <androidx.appcompat.view.ActionBarPolicy: androidx.appcompat.view.ActionBarPolicy get(android.content.Context)>($r2);

        $z0 = virtualinvoke $r3.<androidx.appcompat.view.ActionBarPolicy: boolean hasEmbeddedTabs()>();

        specialinvoke $r0.<androidx.appcompat.app.WindowDecorActionBar: void setHasEmbeddedTabs(boolean)>($z0);

        return;
    }

    public void onContentScrollStarted()
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        androidx.appcompat.view.ViewPropertyAnimatorCompatSet $r1;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $r1 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.view.ViewPropertyAnimatorCompatSet mCurrentShowAnim>;

        if $r1 == null goto label1;

        virtualinvoke $r1.<androidx.appcompat.view.ViewPropertyAnimatorCompatSet: void cancel()>();

        $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.view.ViewPropertyAnimatorCompatSet mCurrentShowAnim> = null;

     label1:
        return;
    }

    public void onContentScrollStopped()
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        return;
    }

    public boolean onKeyShortcut(int, android.view.KeyEvent)
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        int $i0, $i1;
        android.view.KeyEvent $r1;
        androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl $r2;
        android.view.Menu $r3;
        android.view.KeyCharacterMap $r4;
        boolean $z0;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.view.KeyEvent;

        $r2 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl mActionMode>;

        if $r2 != null goto label1;

        return 0;

     label1:
        $r3 = virtualinvoke $r2.<androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: android.view.Menu getMenu()>();

        if $r3 == null goto label6;

        if $r1 == null goto label2;

        $i1 = virtualinvoke $r1.<android.view.KeyEvent: int getDeviceId()>();

        goto label3;

     label2:
        $i1 = -1;

     label3:
        $r4 = staticinvoke <android.view.KeyCharacterMap: android.view.KeyCharacterMap load(int)>($i1);

        $i1 = virtualinvoke $r4.<android.view.KeyCharacterMap: int getKeyboardType()>();

        $z0 = 1;

        if $i1 == 1 goto label4;

        goto label5;

     label4:
        $z0 = 0;

     label5:
        interfaceinvoke $r3.<android.view.Menu: void setQwertyMode(boolean)>($z0);

        $z0 = interfaceinvoke $r3.<android.view.Menu: boolean performShortcut(int,android.view.KeyEvent,int)>($i0, $r1, 0);

        return $z0;

     label6:
        return 0;
    }

    public void onWindowVisibilityChanged(int)
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        int $i0;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $i0 := @parameter0: int;

        $r0.<androidx.appcompat.app.WindowDecorActionBar: int mCurWindowVisibility> = $i0;

        return;
    }

    public void removeAllTabs()
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        specialinvoke $r0.<androidx.appcompat.app.WindowDecorActionBar: void cleanupTabs()>();

        return;
    }

    public void removeOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener)
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        androidx.appcompat.app.ActionBar$OnMenuVisibilityListener $r1;
        java.util.ArrayList $r2;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $r1 := @parameter0: androidx.appcompat.app.ActionBar$OnMenuVisibilityListener;

        $r2 = $r0.<androidx.appcompat.app.WindowDecorActionBar: java.util.ArrayList mMenuVisibilityListeners>;

        virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>($r1);

        return;
    }

    public void removeTab(androidx.appcompat.app.ActionBar$Tab)
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        androidx.appcompat.app.ActionBar$Tab $r1;
        int $i0;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $r1 := @parameter0: androidx.appcompat.app.ActionBar$Tab;

        $i0 = virtualinvoke $r1.<androidx.appcompat.app.ActionBar$Tab: int getPosition()>();

        virtualinvoke $r0.<androidx.appcompat.app.WindowDecorActionBar: void removeTabAt(int)>($i0);

        return;
    }

    public void removeTabAt(int)
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        int $i0, $i1, $i2, $i3;
        androidx.appcompat.widget.ScrollingTabContainerView $r1;
        androidx.appcompat.app.WindowDecorActionBar$TabImpl $r2;
        java.util.ArrayList $r3;
        java.lang.Object $r4;
        boolean $z0;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $i0 := @parameter0: int;

        $r1 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ScrollingTabContainerView mTabScrollView>;

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.app.WindowDecorActionBar$TabImpl mSelectedTab>;

        if $r2 == null goto label2;

        $i1 = virtualinvoke $r2.<androidx.appcompat.app.WindowDecorActionBar$TabImpl: int getPosition()>();

        goto label3;

     label2:
        $i1 = $r0.<androidx.appcompat.app.WindowDecorActionBar: int mSavedTabPosition>;

     label3:
        $r1 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ScrollingTabContainerView mTabScrollView>;

        virtualinvoke $r1.<androidx.appcompat.widget.ScrollingTabContainerView: void removeTabAt(int)>($i0);

        $r3 = $r0.<androidx.appcompat.app.WindowDecorActionBar: java.util.ArrayList mTabs>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object remove(int)>($i0);

        $r2 = (androidx.appcompat.app.WindowDecorActionBar$TabImpl) $r4;

        if $r2 == null goto label4;

        virtualinvoke $r2.<androidx.appcompat.app.WindowDecorActionBar$TabImpl: void setPosition(int)>(-1);

     label4:
        $r3 = $r0.<androidx.appcompat.app.WindowDecorActionBar: java.util.ArrayList mTabs>;

        $i2 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        $i3 = $i0;

     label5:
        if $i3 >= $i2 goto label6;

        $r3 = $r0.<androidx.appcompat.app.WindowDecorActionBar: java.util.ArrayList mTabs>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>($i3);

        $r2 = (androidx.appcompat.app.WindowDecorActionBar$TabImpl) $r4;

        virtualinvoke $r2.<androidx.appcompat.app.WindowDecorActionBar$TabImpl: void setPosition(int)>($i3);

        $i3 = $i3 + 1;

        goto label5;

     label6:
        if $i1 != $i0 goto label9;

        $r3 = $r0.<androidx.appcompat.app.WindowDecorActionBar: java.util.ArrayList mTabs>;

        $z0 = virtualinvoke $r3.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label7;

        $r2 = null;

        goto label8;

     label7:
        $r3 = $r0.<androidx.appcompat.app.WindowDecorActionBar: java.util.ArrayList mTabs>;

        $i0 = $i0 + -1;

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i0);

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r2 = (androidx.appcompat.app.WindowDecorActionBar$TabImpl) $r4;

     label8:
        virtualinvoke $r0.<androidx.appcompat.app.WindowDecorActionBar: void selectTab(androidx.appcompat.app.ActionBar$Tab)>($r2);

     label9:
        return;
    }

    public boolean requestFocus()
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        androidx.appcompat.widget.DecorToolbar $r1;
        android.view.ViewGroup $r2;
        boolean $z0;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $r1 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        $r2 = interfaceinvoke $r1.<androidx.appcompat.widget.DecorToolbar: android.view.ViewGroup getViewGroup()>();

        if $r2 == null goto label1;

        $z0 = virtualinvoke $r2.<android.view.ViewGroup: boolean hasFocus()>();

        if $z0 != 0 goto label1;

        virtualinvoke $r2.<android.view.ViewGroup: boolean requestFocus()>();

        return 1;

     label1:
        return 0;
    }

    public void selectTab(androidx.appcompat.app.ActionBar$Tab)
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        androidx.appcompat.app.ActionBar$Tab $r1;
        int $i0, $i1;
        android.app.Activity $r2;
        boolean $z0;
        androidx.appcompat.widget.DecorToolbar $r3;
        android.view.ViewGroup $r4;
        androidx.fragment.app.FragmentActivity $r5;
        androidx.fragment.app.FragmentManager $r6;
        androidx.fragment.app.FragmentTransaction $r7;
        androidx.appcompat.app.WindowDecorActionBar$TabImpl $r8;
        androidx.appcompat.app.ActionBar$TabListener $r9;
        androidx.appcompat.widget.ScrollingTabContainerView $r10;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $r1 := @parameter0: androidx.appcompat.app.ActionBar$Tab;

        $i0 = virtualinvoke $r0.<androidx.appcompat.app.WindowDecorActionBar: int getNavigationMode()>();

        $i1 = -1;

        if $i0 == 2 goto label2;

        if $r1 == null goto label1;

        $i1 = virtualinvoke $r1.<androidx.appcompat.app.ActionBar$Tab: int getPosition()>();

     label1:
        $r0.<androidx.appcompat.app.WindowDecorActionBar: int mSavedTabPosition> = $i1;

        return;

     label2:
        $r2 = $r0.<androidx.appcompat.app.WindowDecorActionBar: android.app.Activity mActivity>;

        $z0 = $r2 instanceof androidx.fragment.app.FragmentActivity;

        if $z0 == 0 goto label3;

        $r3 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        $r4 = interfaceinvoke $r3.<androidx.appcompat.widget.DecorToolbar: android.view.ViewGroup getViewGroup()>();

        $z0 = virtualinvoke $r4.<android.view.ViewGroup: boolean isInEditMode()>();

        if $z0 != 0 goto label3;

        $r2 = $r0.<androidx.appcompat.app.WindowDecorActionBar: android.app.Activity mActivity>;

        $r5 = (androidx.fragment.app.FragmentActivity) $r2;

        $r6 = virtualinvoke $r5.<androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentManager getSupportFragmentManager()>();

        $r7 = virtualinvoke $r6.<androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()>();

        $r7 = virtualinvoke $r7.<androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction disallowAddToBackStack()>();

        goto label4;

     label3:
        $r7 = null;

     label4:
        $r8 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.app.WindowDecorActionBar$TabImpl mSelectedTab>;

        if $r8 != $r1 goto label5;

        if $r8 == null goto label8;

        $r9 = virtualinvoke $r8.<androidx.appcompat.app.WindowDecorActionBar$TabImpl: androidx.appcompat.app.ActionBar$TabListener getCallback()>();

        $r8 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.app.WindowDecorActionBar$TabImpl mSelectedTab>;

        interfaceinvoke $r9.<androidx.appcompat.app.ActionBar$TabListener: void onTabReselected(androidx.appcompat.app.ActionBar$Tab,androidx.fragment.app.FragmentTransaction)>($r8, $r7);

        $r10 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ScrollingTabContainerView mTabScrollView>;

        $i0 = virtualinvoke $r1.<androidx.appcompat.app.ActionBar$Tab: int getPosition()>();

        virtualinvoke $r10.<androidx.appcompat.widget.ScrollingTabContainerView: void animateToTab(int)>($i0);

        goto label8;

     label5:
        $r10 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ScrollingTabContainerView mTabScrollView>;

        if $r1 == null goto label6;

        $i1 = virtualinvoke $r1.<androidx.appcompat.app.ActionBar$Tab: int getPosition()>();

     label6:
        virtualinvoke $r10.<androidx.appcompat.widget.ScrollingTabContainerView: void setTabSelected(int)>($i1);

        $r8 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.app.WindowDecorActionBar$TabImpl mSelectedTab>;

        if $r8 == null goto label7;

        $r9 = virtualinvoke $r8.<androidx.appcompat.app.WindowDecorActionBar$TabImpl: androidx.appcompat.app.ActionBar$TabListener getCallback()>();

        $r8 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.app.WindowDecorActionBar$TabImpl mSelectedTab>;

        interfaceinvoke $r9.<androidx.appcompat.app.ActionBar$TabListener: void onTabUnselected(androidx.appcompat.app.ActionBar$Tab,androidx.fragment.app.FragmentTransaction)>($r8, $r7);

     label7:
        $r8 = (androidx.appcompat.app.WindowDecorActionBar$TabImpl) $r1;

        $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.app.WindowDecorActionBar$TabImpl mSelectedTab> = $r8;

        $r8 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.app.WindowDecorActionBar$TabImpl mSelectedTab>;

        if $r8 == null goto label8;

        $r9 = virtualinvoke $r8.<androidx.appcompat.app.WindowDecorActionBar$TabImpl: androidx.appcompat.app.ActionBar$TabListener getCallback()>();

        $r8 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.app.WindowDecorActionBar$TabImpl mSelectedTab>;

        interfaceinvoke $r9.<androidx.appcompat.app.ActionBar$TabListener: void onTabSelected(androidx.appcompat.app.ActionBar$Tab,androidx.fragment.app.FragmentTransaction)>($r8, $r7);

     label8:
        if $r7 == null goto label9;

        $z0 = virtualinvoke $r7.<androidx.fragment.app.FragmentTransaction: boolean isEmpty()>();

        if $z0 != 0 goto label9;

        virtualinvoke $r7.<androidx.fragment.app.FragmentTransaction: int commit()>();

     label9:
        return;
    }

    public void setBackgroundDrawable(android.graphics.drawable.Drawable)
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        android.graphics.drawable.Drawable $r1;
        androidx.appcompat.widget.ActionBarContainer $r2;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarContainer mContainerView>;

        virtualinvoke $r2.<androidx.appcompat.widget.ActionBarContainer: void setPrimaryBackground(android.graphics.drawable.Drawable)>($r1);

        return;
    }

    public void setCustomView(int)
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        int $i0;
        android.content.Context $r1;
        android.view.LayoutInflater $r2;
        androidx.appcompat.widget.DecorToolbar $r3;
        android.view.ViewGroup $r4;
        android.view.View $r5;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke $r0.<androidx.appcompat.app.WindowDecorActionBar: android.content.Context getThemedContext()>();

        $r2 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>($r1);

        $r3 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        $r4 = interfaceinvoke $r3.<androidx.appcompat.widget.DecorToolbar: android.view.ViewGroup getViewGroup()>();

        $r5 = virtualinvoke $r2.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>($i0, $r4, 0);

        virtualinvoke $r0.<androidx.appcompat.app.WindowDecorActionBar: void setCustomView(android.view.View)>($r5);

        return;
    }

    public void setCustomView(android.view.View)
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        android.view.View $r1;
        androidx.appcompat.widget.DecorToolbar $r2;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $r1 := @parameter0: android.view.View;

        $r2 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r2.<androidx.appcompat.widget.DecorToolbar: void setCustomView(android.view.View)>($r1);

        return;
    }

    public void setCustomView(android.view.View, androidx.appcompat.app.ActionBar$LayoutParams)
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        android.view.View $r1;
        androidx.appcompat.app.ActionBar$LayoutParams $r2;
        androidx.appcompat.widget.DecorToolbar $r3;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: androidx.appcompat.app.ActionBar$LayoutParams;

        virtualinvoke $r1.<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r2);

        $r3 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r3.<androidx.appcompat.widget.DecorToolbar: void setCustomView(android.view.View)>($r1);

        return;
    }

    public void setDefaultDisplayHomeAsUpEnabled(boolean)
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        boolean $z0, $z1;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $z0 := @parameter0: boolean;

        $z1 = $r0.<androidx.appcompat.app.WindowDecorActionBar: boolean mDisplayHomeAsUpSet>;

        if $z1 != 0 goto label1;

        virtualinvoke $r0.<androidx.appcompat.app.WindowDecorActionBar: void setDisplayHomeAsUpEnabled(boolean)>($z0);

     label1:
        return;
    }

    public void setDisplayHomeAsUpEnabled(boolean)
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        boolean $z0;
        byte $b0;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $z0 := @parameter0: boolean;

        if $z0 == 0 goto label1;

        $b0 = 4;

        goto label2;

     label1:
        $b0 = 0;

     label2:
        virtualinvoke $r0.<androidx.appcompat.app.WindowDecorActionBar: void setDisplayOptions(int,int)>($b0, 4);

        return;
    }

    public void setDisplayOptions(int)
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        int $i0, $i1;
        androidx.appcompat.widget.DecorToolbar $r1;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $i0 := @parameter0: int;

        $i1 = $i0 & 4;

        if $i1 == 0 goto label1;

        $r0.<androidx.appcompat.app.WindowDecorActionBar: boolean mDisplayHomeAsUpSet> = 1;

     label1:
        $r1 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r1.<androidx.appcompat.widget.DecorToolbar: void setDisplayOptions(int)>($i0);

        return;
    }

    public void setDisplayOptions(int, int)
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        int $i0, $i1, $i2;
        androidx.appcompat.widget.DecorToolbar $r1;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        $i2 = interfaceinvoke $r1.<androidx.appcompat.widget.DecorToolbar: int getDisplayOptions()>();

        $r0.<androidx.appcompat.app.WindowDecorActionBar: boolean mDisplayHomeAsUpSet> = 1;

        $r1 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        $i0 = $i0 & 4;

        $i1 = -5 & $i2;

        $i0 = $i0 | $i1;

        interfaceinvoke $r1.<androidx.appcompat.widget.DecorToolbar: void setDisplayOptions(int)>($i0);

        return;
    }

    public void setDisplayShowCustomEnabled(boolean)
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        boolean $z0;
        byte $b0;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $z0 := @parameter0: boolean;

        if $z0 == 0 goto label1;

        $b0 = 16;

        goto label2;

     label1:
        $b0 = 0;

     label2:
        virtualinvoke $r0.<androidx.appcompat.app.WindowDecorActionBar: void setDisplayOptions(int,int)>($b0, 16);

        return;
    }

    public void setDisplayShowHomeEnabled(boolean)
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        boolean $z0;
        byte $b0;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $z0 := @parameter0: boolean;

        if $z0 == 0 goto label1;

        $b0 = 2;

        goto label2;

     label1:
        $b0 = 0;

     label2:
        virtualinvoke $r0.<androidx.appcompat.app.WindowDecorActionBar: void setDisplayOptions(int,int)>($b0, 2);

        return;
    }

    public void setDisplayShowTitleEnabled(boolean)
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        boolean $z0;
        byte $b0;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $z0 := @parameter0: boolean;

        if $z0 == 0 goto label1;

        $b0 = 8;

        goto label2;

     label1:
        $b0 = 0;

     label2:
        virtualinvoke $r0.<androidx.appcompat.app.WindowDecorActionBar: void setDisplayOptions(int,int)>($b0, 8);

        return;
    }

    public void setDisplayUseLogoEnabled(boolean)
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        boolean $z0;
        int i0;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $z0 := @parameter0: boolean;

        i0 = (int) $z0;

        virtualinvoke $r0.<androidx.appcompat.app.WindowDecorActionBar: void setDisplayOptions(int,int)>(i0, 1);

        return;
    }

    public void setElevation(float)
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        float $f0;
        androidx.appcompat.widget.ActionBarContainer $r1;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $f0 := @parameter0: float;

        $r1 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarContainer mContainerView>;

        staticinvoke <androidx.core.view.ViewCompat: void setElevation(android.view.View,float)>($r1, $f0);

        return;
    }

    public void setHideOffset(int)
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        int $i0;
        boolean $z0;
        androidx.appcompat.widget.ActionBarOverlayLayout $r1;
        java.lang.IllegalStateException $r2;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $i0 := @parameter0: int;

        if $i0 == 0 goto label2;

        $r1 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarOverlayLayout mOverlayLayout>;

        $z0 = virtualinvoke $r1.<androidx.appcompat.widget.ActionBarOverlayLayout: boolean isInOverlayMode()>();

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Action bar must be in overlay mode (Window.FEATURE_OVERLAY_ACTION_BAR) to set a non-zero hide offset");

        throw $r2;

     label2:
        $r1 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarOverlayLayout mOverlayLayout>;

        virtualinvoke $r1.<androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)>($i0);

        return;
    }

    public void setHideOnContentScrollEnabled(boolean)
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        boolean $z0, $z1;
        androidx.appcompat.widget.ActionBarOverlayLayout $r1;
        java.lang.IllegalStateException $r2;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $z0 := @parameter0: boolean;

        $r1 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarOverlayLayout mOverlayLayout>;

        $z1 = virtualinvoke $r1.<androidx.appcompat.widget.ActionBarOverlayLayout: boolean isInOverlayMode()>();

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Action bar must be in overlay mode (Window.FEATURE_OVERLAY_ACTION_BAR) to enable hide on content scroll");

        throw $r2;

     label2:
        $r0.<androidx.appcompat.app.WindowDecorActionBar: boolean mHideOnContentScroll> = 1;

        $r1 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarOverlayLayout mOverlayLayout>;

        virtualinvoke $r1.<androidx.appcompat.widget.ActionBarOverlayLayout: void setHideOnContentScrollEnabled(boolean)>(1);

        return;
    }

    public void setHomeActionContentDescription(int)
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        int $i0;
        androidx.appcompat.widget.DecorToolbar $r1;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $i0 := @parameter0: int;

        $r1 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r1.<androidx.appcompat.widget.DecorToolbar: void setNavigationContentDescription(int)>($i0);

        return;
    }

    public void setHomeActionContentDescription(java.lang.CharSequence)
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        java.lang.CharSequence $r1;
        androidx.appcompat.widget.DecorToolbar $r2;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r2.<androidx.appcompat.widget.DecorToolbar: void setNavigationContentDescription(java.lang.CharSequence)>($r1);

        return;
    }

    public void setHomeAsUpIndicator(int)
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        int $i0;
        androidx.appcompat.widget.DecorToolbar $r1;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $i0 := @parameter0: int;

        $r1 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r1.<androidx.appcompat.widget.DecorToolbar: void setNavigationIcon(int)>($i0);

        return;
    }

    public void setHomeAsUpIndicator(android.graphics.drawable.Drawable)
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        android.graphics.drawable.Drawable $r1;
        androidx.appcompat.widget.DecorToolbar $r2;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r2.<androidx.appcompat.widget.DecorToolbar: void setNavigationIcon(android.graphics.drawable.Drawable)>($r1);

        return;
    }

    public void setHomeButtonEnabled(boolean)
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        boolean $z0;
        androidx.appcompat.widget.DecorToolbar $r1;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $z0 := @parameter0: boolean;

        $r1 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r1.<androidx.appcompat.widget.DecorToolbar: void setHomeButtonEnabled(boolean)>($z0);

        return;
    }

    public void setIcon(int)
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        int $i0;
        androidx.appcompat.widget.DecorToolbar $r1;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $i0 := @parameter0: int;

        $r1 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r1.<androidx.appcompat.widget.DecorToolbar: void setIcon(int)>($i0);

        return;
    }

    public void setIcon(android.graphics.drawable.Drawable)
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        android.graphics.drawable.Drawable $r1;
        androidx.appcompat.widget.DecorToolbar $r2;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r2.<androidx.appcompat.widget.DecorToolbar: void setIcon(android.graphics.drawable.Drawable)>($r1);

        return;
    }

    public void setListNavigationCallbacks(android.widget.SpinnerAdapter, androidx.appcompat.app.ActionBar$OnNavigationListener)
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        android.widget.SpinnerAdapter $r1;
        androidx.appcompat.app.ActionBar$OnNavigationListener $r2;
        androidx.appcompat.widget.DecorToolbar $r3;
        androidx.appcompat.app.NavItemSelectedListener $r4;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $r1 := @parameter0: android.widget.SpinnerAdapter;

        $r2 := @parameter1: androidx.appcompat.app.ActionBar$OnNavigationListener;

        $r3 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        $r4 = new androidx.appcompat.app.NavItemSelectedListener;

        specialinvoke $r4.<androidx.appcompat.app.NavItemSelectedListener: void <init>(androidx.appcompat.app.ActionBar$OnNavigationListener)>($r2);

        interfaceinvoke $r3.<androidx.appcompat.widget.DecorToolbar: void setDropdownParams(android.widget.SpinnerAdapter,android.widget.AdapterView$OnItemSelectedListener)>($r1, $r4);

        return;
    }

    public void setLogo(int)
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        int $i0;
        androidx.appcompat.widget.DecorToolbar $r1;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $i0 := @parameter0: int;

        $r1 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r1.<androidx.appcompat.widget.DecorToolbar: void setLogo(int)>($i0);

        return;
    }

    public void setLogo(android.graphics.drawable.Drawable)
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        android.graphics.drawable.Drawable $r1;
        androidx.appcompat.widget.DecorToolbar $r2;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r2.<androidx.appcompat.widget.DecorToolbar: void setLogo(android.graphics.drawable.Drawable)>($r1);

        return;
    }

    public void setNavigationMode(int)
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        int $i0, $i1, $i2;
        androidx.appcompat.widget.DecorToolbar $r1;
        androidx.appcompat.widget.ScrollingTabContainerView $r2;
        boolean $z0, $z1;
        androidx.appcompat.widget.ActionBarOverlayLayout $r3;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $i0 := @parameter0: int;

        $r1 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        $i1 = interfaceinvoke $r1.<androidx.appcompat.widget.DecorToolbar: int getNavigationMode()>();

        if $i1 == 2 goto label1;

        goto label2;

     label1:
        $i2 = virtualinvoke $r0.<androidx.appcompat.app.WindowDecorActionBar: int getSelectedNavigationIndex()>();

        $r0.<androidx.appcompat.app.WindowDecorActionBar: int mSavedTabPosition> = $i2;

        virtualinvoke $r0.<androidx.appcompat.app.WindowDecorActionBar: void selectTab(androidx.appcompat.app.ActionBar$Tab)>(null);

        $r2 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ScrollingTabContainerView mTabScrollView>;

        virtualinvoke $r2.<androidx.appcompat.widget.ScrollingTabContainerView: void setVisibility(int)>(8);

     label2:
        if $i1 == $i0 goto label3;

        $z0 = $r0.<androidx.appcompat.app.WindowDecorActionBar: boolean mHasEmbeddedTabs>;

        if $z0 != 0 goto label3;

        $r3 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarOverlayLayout mOverlayLayout>;

        if $r3 == null goto label3;

        staticinvoke <androidx.core.view.ViewCompat: void requestApplyInsets(android.view.View)>($r3);

     label3:
        $r1 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r1.<androidx.appcompat.widget.DecorToolbar: void setNavigationMode(int)>($i0);

        $z0 = 0;

        if $i0 == 2 goto label4;

        goto label5;

     label4:
        specialinvoke $r0.<androidx.appcompat.app.WindowDecorActionBar: void ensureTabsExist()>();

        $r2 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ScrollingTabContainerView mTabScrollView>;

        virtualinvoke $r2.<androidx.appcompat.widget.ScrollingTabContainerView: void setVisibility(int)>(0);

        $i1 = $r0.<androidx.appcompat.app.WindowDecorActionBar: int mSavedTabPosition>;

        if $i1 == -1 goto label5;

        virtualinvoke $r0.<androidx.appcompat.app.WindowDecorActionBar: void setSelectedNavigationItem(int)>($i1);

        $r0.<androidx.appcompat.app.WindowDecorActionBar: int mSavedTabPosition> = -1;

     label5:
        $r1 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        if $i0 != 2 goto label6;

        $z1 = $r0.<androidx.appcompat.app.WindowDecorActionBar: boolean mHasEmbeddedTabs>;

        if $z1 != 0 goto label6;

        $z1 = 1;

        goto label7;

     label6:
        $z1 = 0;

     label7:
        interfaceinvoke $r1.<androidx.appcompat.widget.DecorToolbar: void setCollapsible(boolean)>($z1);

        $r3 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarOverlayLayout mOverlayLayout>;

        if $i0 != 2 goto label8;

        $z1 = $r0.<androidx.appcompat.app.WindowDecorActionBar: boolean mHasEmbeddedTabs>;

        if $z1 != 0 goto label8;

        $z0 = 1;

     label8:
        virtualinvoke $r3.<androidx.appcompat.widget.ActionBarOverlayLayout: void setHasNonEmbeddedTabs(boolean)>($z0);

        return;
    }

    public void setSelectedNavigationItem(int)
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        int $i0, $i1;
        androidx.appcompat.widget.DecorToolbar $r1;
        java.util.ArrayList $r2;
        java.lang.Object $r3;
        androidx.appcompat.app.ActionBar$Tab $r4;
        java.lang.IllegalStateException $r5;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $i0 := @parameter0: int;

        $r1 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        $i1 = interfaceinvoke $r1.<androidx.appcompat.widget.DecorToolbar: int getNavigationMode()>();

        if $i1 == 1 goto label2;

        if $i1 != 2 goto label1;

        $r2 = $r0.<androidx.appcompat.app.WindowDecorActionBar: java.util.ArrayList mTabs>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r4 = (androidx.appcompat.app.ActionBar$Tab) $r3;

        virtualinvoke $r0.<androidx.appcompat.app.WindowDecorActionBar: void selectTab(androidx.appcompat.app.ActionBar$Tab)>($r4);

        return;

     label1:
        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setSelectedNavigationIndex not valid for current navigation mode");

        throw $r5;

     label2:
        $r1 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r1.<androidx.appcompat.widget.DecorToolbar: void setDropdownSelectedPosition(int)>($i0);

        return;
    }

    public void setShowHideAnimationEnabled(boolean)
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        boolean $z0;
        androidx.appcompat.view.ViewPropertyAnimatorCompatSet $r1;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $z0 := @parameter0: boolean;

        $r0.<androidx.appcompat.app.WindowDecorActionBar: boolean mShowHideAnimationEnabled> = $z0;

        if $z0 != 0 goto label1;

        $r1 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.view.ViewPropertyAnimatorCompatSet mCurrentShowAnim>;

        if $r1 == null goto label1;

        virtualinvoke $r1.<androidx.appcompat.view.ViewPropertyAnimatorCompatSet: void cancel()>();

     label1:
        return;
    }

    public void setSplitBackgroundDrawable(android.graphics.drawable.Drawable)
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        android.graphics.drawable.Drawable $r1;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        return;
    }

    public void setStackedBackgroundDrawable(android.graphics.drawable.Drawable)
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        android.graphics.drawable.Drawable $r1;
        androidx.appcompat.widget.ActionBarContainer $r2;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarContainer mContainerView>;

        virtualinvoke $r2.<androidx.appcompat.widget.ActionBarContainer: void setStackedBackground(android.graphics.drawable.Drawable)>($r1);

        return;
    }

    public void setSubtitle(int)
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        int $i0;
        java.lang.String $r1;
        android.content.Context $r2;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $i0 := @parameter0: int;

        $r2 = $r0.<androidx.appcompat.app.WindowDecorActionBar: android.content.Context mContext>;

        $r1 = virtualinvoke $r2.<android.content.Context: java.lang.String getString(int)>($i0);

        virtualinvoke $r0.<androidx.appcompat.app.WindowDecorActionBar: void setSubtitle(java.lang.CharSequence)>($r1);

        return;
    }

    public void setSubtitle(java.lang.CharSequence)
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        java.lang.CharSequence $r1;
        androidx.appcompat.widget.DecorToolbar $r2;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r2.<androidx.appcompat.widget.DecorToolbar: void setSubtitle(java.lang.CharSequence)>($r1);

        return;
    }

    public void setTitle(int)
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        int $i0;
        java.lang.String $r1;
        android.content.Context $r2;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $i0 := @parameter0: int;

        $r2 = $r0.<androidx.appcompat.app.WindowDecorActionBar: android.content.Context mContext>;

        $r1 = virtualinvoke $r2.<android.content.Context: java.lang.String getString(int)>($i0);

        virtualinvoke $r0.<androidx.appcompat.app.WindowDecorActionBar: void setTitle(java.lang.CharSequence)>($r1);

        return;
    }

    public void setTitle(java.lang.CharSequence)
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        java.lang.CharSequence $r1;
        androidx.appcompat.widget.DecorToolbar $r2;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r2.<androidx.appcompat.widget.DecorToolbar: void setTitle(java.lang.CharSequence)>($r1);

        return;
    }

    public void setWindowTitle(java.lang.CharSequence)
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        java.lang.CharSequence $r1;
        androidx.appcompat.widget.DecorToolbar $r2;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r2.<androidx.appcompat.widget.DecorToolbar: void setWindowTitle(java.lang.CharSequence)>($r1);

        return;
    }

    public void show()
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        boolean $z0;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $z0 = $r0.<androidx.appcompat.app.WindowDecorActionBar: boolean mHiddenByApp>;

        if $z0 == 0 goto label1;

        $r0.<androidx.appcompat.app.WindowDecorActionBar: boolean mHiddenByApp> = 0;

        specialinvoke $r0.<androidx.appcompat.app.WindowDecorActionBar: void updateVisibility(boolean)>(0);

     label1:
        return;
    }

    public void showForSystem()
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        boolean $z0;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $z0 = $r0.<androidx.appcompat.app.WindowDecorActionBar: boolean mHiddenBySystem>;

        if $z0 == 0 goto label1;

        $r0.<androidx.appcompat.app.WindowDecorActionBar: boolean mHiddenBySystem> = 0;

        specialinvoke $r0.<androidx.appcompat.app.WindowDecorActionBar: void updateVisibility(boolean)>(1);

     label1:
        return;
    }

    public androidx.appcompat.view.ActionMode startActionMode(androidx.appcompat.view.ActionMode$Callback)
    {
        androidx.appcompat.app.WindowDecorActionBar $r0;
        androidx.appcompat.view.ActionMode$Callback $r1;
        androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl $r2;
        androidx.appcompat.widget.ActionBarOverlayLayout $r3;
        androidx.appcompat.widget.ActionBarContextView $r4;
        android.content.Context $r5;
        boolean $z0;

        $r0 := @this: androidx.appcompat.app.WindowDecorActionBar;

        $r1 := @parameter0: androidx.appcompat.view.ActionMode$Callback;

        $r2 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl mActionMode>;

        if $r2 == null goto label1;

        virtualinvoke $r2.<androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: void finish()>();

     label1:
        $r3 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarOverlayLayout mOverlayLayout>;

        virtualinvoke $r3.<androidx.appcompat.widget.ActionBarOverlayLayout: void setHideOnContentScrollEnabled(boolean)>(0);

        $r4 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarContextView mContextView>;

        virtualinvoke $r4.<androidx.appcompat.widget.ActionBarContextView: void killMode()>();

        $r2 = new androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl;

        $r4 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarContextView mContextView>;

        $r5 = virtualinvoke $r4.<androidx.appcompat.widget.ActionBarContextView: android.content.Context getContext()>();

        specialinvoke $r2.<androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: void <init>(androidx.appcompat.app.WindowDecorActionBar,android.content.Context,androidx.appcompat.view.ActionMode$Callback)>($r0, $r5, $r1);

        $z0 = virtualinvoke $r2.<androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: boolean dispatchOnCreate()>();

        if $z0 == 0 goto label2;

        $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl mActionMode> = $r2;

        virtualinvoke $r2.<androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: void invalidate()>();

        $r4 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarContextView mContextView>;

        virtualinvoke $r4.<androidx.appcompat.widget.ActionBarContextView: void initForMode(androidx.appcompat.view.ActionMode)>($r2);

        virtualinvoke $r0.<androidx.appcompat.app.WindowDecorActionBar: void animateToMode(boolean)>(1);

        $r4 = $r0.<androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarContextView mContextView>;

        virtualinvoke $r4.<androidx.appcompat.widget.ActionBarContextView: void sendAccessibilityEvent(int)>(32);

        return $r2;

     label2:
        return null;
    }
}
