public class androidx.constraintlayout.solver.ArrayRow extends java.lang.Object implements androidx.constraintlayout.solver.LinearSystem$Row
{
    private static final boolean DEBUG;
    private static final float epsilon;
    float constantValue;
    boolean isSimpleDefinition;
    boolean used;
    androidx.constraintlayout.solver.SolverVariable variable;
    public final androidx.constraintlayout.solver.ArrayLinkedVariables variables;

    public void <init>(androidx.constraintlayout.solver.Cache)
    {
        androidx.constraintlayout.solver.ArrayRow $r0;
        androidx.constraintlayout.solver.Cache $r1;
        androidx.constraintlayout.solver.ArrayLinkedVariables $r2;

        $r0 := @this: androidx.constraintlayout.solver.ArrayRow;

        $r1 := @parameter0: androidx.constraintlayout.solver.Cache;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.SolverVariable variable> = null;

        $r0.<androidx.constraintlayout.solver.ArrayRow: float constantValue> = 0.0F;

        $r0.<androidx.constraintlayout.solver.ArrayRow: boolean used> = 0;

        $r0.<androidx.constraintlayout.solver.ArrayRow: boolean isSimpleDefinition> = 0;

        $r2 = new androidx.constraintlayout.solver.ArrayLinkedVariables;

        specialinvoke $r2.<androidx.constraintlayout.solver.ArrayLinkedVariables: void <init>(androidx.constraintlayout.solver.ArrayRow,androidx.constraintlayout.solver.Cache)>($r0, $r1);

        $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables> = $r2;

        return;
    }

    public androidx.constraintlayout.solver.ArrayRow addError(androidx.constraintlayout.solver.LinearSystem, int)
    {
        androidx.constraintlayout.solver.ArrayRow $r0;
        androidx.constraintlayout.solver.LinearSystem $r1;
        int $i0;
        androidx.constraintlayout.solver.ArrayLinkedVariables $r2;
        androidx.constraintlayout.solver.SolverVariable $r3;

        $r0 := @this: androidx.constraintlayout.solver.ArrayRow;

        $r1 := @parameter0: androidx.constraintlayout.solver.LinearSystem;

        $i0 := @parameter1: int;

        $r2 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        $r3 = virtualinvoke $r1.<androidx.constraintlayout.solver.LinearSystem: androidx.constraintlayout.solver.SolverVariable createErrorVariable(int,java.lang.String)>($i0, "ep");

        virtualinvoke $r2.<androidx.constraintlayout.solver.ArrayLinkedVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($r3, 1.0F);

        $r2 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        $r3 = virtualinvoke $r1.<androidx.constraintlayout.solver.LinearSystem: androidx.constraintlayout.solver.SolverVariable createErrorVariable(int,java.lang.String)>($i0, "em");

        virtualinvoke $r2.<androidx.constraintlayout.solver.ArrayLinkedVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($r3, -1.0F);

        return $r0;
    }

    public void addError(androidx.constraintlayout.solver.SolverVariable)
    {
        androidx.constraintlayout.solver.ArrayRow $r0;
        androidx.constraintlayout.solver.SolverVariable $r1;
        float $f0;
        int $i0;
        androidx.constraintlayout.solver.ArrayLinkedVariables $r2;

        $r0 := @this: androidx.constraintlayout.solver.ArrayRow;

        $r1 := @parameter0: androidx.constraintlayout.solver.SolverVariable;

        $f0 = 1.0F;

        $i0 = $r1.<androidx.constraintlayout.solver.SolverVariable: int strength>;

        if $i0 != 1 goto label1;

        $f0 = 1.0F;

        goto label5;

     label1:
        $i0 = $r1.<androidx.constraintlayout.solver.SolverVariable: int strength>;

        if $i0 != 2 goto label2;

        $f0 = 1000.0F;

        goto label5;

     label2:
        $i0 = $r1.<androidx.constraintlayout.solver.SolverVariable: int strength>;

        if $i0 != 3 goto label3;

        $f0 = 1000000.0F;

        goto label5;

     label3:
        $i0 = $r1.<androidx.constraintlayout.solver.SolverVariable: int strength>;

        if $i0 != 4 goto label4;

        $f0 = 1.0E9F;

        goto label5;

     label4:
        $i0 = $r1.<androidx.constraintlayout.solver.SolverVariable: int strength>;

        if $i0 != 5 goto label5;

        $f0 = 1.0E12F;

     label5:
        $r2 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r2.<androidx.constraintlayout.solver.ArrayLinkedVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($r1, $f0);

        return;
    }

    androidx.constraintlayout.solver.ArrayRow addSingleError(androidx.constraintlayout.solver.SolverVariable, int)
    {
        androidx.constraintlayout.solver.ArrayRow $r0;
        androidx.constraintlayout.solver.SolverVariable $r1;
        int $i0;
        androidx.constraintlayout.solver.ArrayLinkedVariables $r2;
        float $f0;

        $r0 := @this: androidx.constraintlayout.solver.ArrayRow;

        $r1 := @parameter0: androidx.constraintlayout.solver.SolverVariable;

        $i0 := @parameter1: int;

        $r2 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        $f0 = (float) $i0;

        virtualinvoke $r2.<androidx.constraintlayout.solver.ArrayLinkedVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($r1, $f0);

        return $r0;
    }

    boolean chooseSubject(androidx.constraintlayout.solver.LinearSystem)
    {
        androidx.constraintlayout.solver.ArrayRow $r0;
        androidx.constraintlayout.solver.LinearSystem $r1;
        androidx.constraintlayout.solver.SolverVariable $r2;
        boolean $z0;
        androidx.constraintlayout.solver.ArrayLinkedVariables $r3;
        int $i0;

        $r0 := @this: androidx.constraintlayout.solver.ArrayRow;

        $r1 := @parameter0: androidx.constraintlayout.solver.LinearSystem;

        $z0 = 0;

        $r3 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        $r2 = virtualinvoke $r3.<androidx.constraintlayout.solver.ArrayLinkedVariables: androidx.constraintlayout.solver.SolverVariable chooseSubject(androidx.constraintlayout.solver.LinearSystem)>($r1);

        if $r2 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        virtualinvoke $r0.<androidx.constraintlayout.solver.ArrayRow: void pivot(androidx.constraintlayout.solver.SolverVariable)>($r2);

     label2:
        $r3 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        $i0 = $r3.<androidx.constraintlayout.solver.ArrayLinkedVariables: int currentSize>;

        if $i0 != 0 goto label3;

        $r0.<androidx.constraintlayout.solver.ArrayRow: boolean isSimpleDefinition> = 1;

     label3:
        return $z0;
    }

    public void clear()
    {
        androidx.constraintlayout.solver.ArrayRow $r0;
        androidx.constraintlayout.solver.ArrayLinkedVariables $r1;

        $r0 := @this: androidx.constraintlayout.solver.ArrayRow;

        $r1 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r1.<androidx.constraintlayout.solver.ArrayLinkedVariables: void clear()>();

        $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.SolverVariable variable> = null;

        $r0.<androidx.constraintlayout.solver.ArrayRow: float constantValue> = 0.0F;

        return;
    }

    androidx.constraintlayout.solver.ArrayRow createRowCentering(androidx.constraintlayout.solver.SolverVariable, androidx.constraintlayout.solver.SolverVariable, int, float, androidx.constraintlayout.solver.SolverVariable, androidx.constraintlayout.solver.SolverVariable, int)
    {
        androidx.constraintlayout.solver.ArrayRow $r0;
        androidx.constraintlayout.solver.SolverVariable $r1, $r2, $r3, $r4;
        int $i0, $i1;
        float $f0, $f1, $f2;
        androidx.constraintlayout.solver.ArrayLinkedVariables $r5;
        byte $b2;

        $r0 := @this: androidx.constraintlayout.solver.ArrayRow;

        $r1 := @parameter0: androidx.constraintlayout.solver.SolverVariable;

        $r2 := @parameter1: androidx.constraintlayout.solver.SolverVariable;

        $i0 := @parameter2: int;

        $f0 := @parameter3: float;

        $r3 := @parameter4: androidx.constraintlayout.solver.SolverVariable;

        $r4 := @parameter5: androidx.constraintlayout.solver.SolverVariable;

        $i1 := @parameter6: int;

        if $r2 != $r3 goto label1;

        $r5 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r5.<androidx.constraintlayout.solver.ArrayLinkedVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($r1, 1.0F);

        $r5 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r5.<androidx.constraintlayout.solver.ArrayLinkedVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($r4, 1.0F);

        $r5 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r5.<androidx.constraintlayout.solver.ArrayLinkedVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($r2, -2.0F);

        return $r0;

     label1:
        $b2 = $f0 cmpl 0.5F;

        if $b2 != 0 goto label3;

        $r5 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r5.<androidx.constraintlayout.solver.ArrayLinkedVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($r1, 1.0F);

        $r5 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r5.<androidx.constraintlayout.solver.ArrayLinkedVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($r2, -1.0F);

        $r5 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r5.<androidx.constraintlayout.solver.ArrayLinkedVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($r3, -1.0F);

        $r5 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r5.<androidx.constraintlayout.solver.ArrayLinkedVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($r4, 1.0F);

        if $i0 > 0 goto label2;

        if $i1 <= 0 goto label7;

     label2:
        $i0 = neg $i0;

        $i0 = $i0 + $i1;

        $f0 = (float) $i0;

        $r0.<androidx.constraintlayout.solver.ArrayRow: float constantValue> = $f0;

        return $r0;

     label3:
        $b2 = $f0 cmpg 0.0F;

        if $b2 > 0 goto label4;

        $r5 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r5.<androidx.constraintlayout.solver.ArrayLinkedVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($r1, -1.0F);

        $r5 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r5.<androidx.constraintlayout.solver.ArrayLinkedVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($r2, 1.0F);

        $f0 = (float) $i0;

        $r0.<androidx.constraintlayout.solver.ArrayRow: float constantValue> = $f0;

        return $r0;

     label4:
        $b2 = $f0 cmpl 1.0F;

        if $b2 < 0 goto label5;

        $r5 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r5.<androidx.constraintlayout.solver.ArrayLinkedVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($r3, -1.0F);

        $r5 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r5.<androidx.constraintlayout.solver.ArrayLinkedVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($r4, 1.0F);

        $f0 = (float) $i1;

        $r0.<androidx.constraintlayout.solver.ArrayRow: float constantValue> = $f0;

        return $r0;

     label5:
        $r5 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        $f1 = 1.0F - $f0;

        $f1 = $f1 * 1.0F;

        virtualinvoke $r5.<androidx.constraintlayout.solver.ArrayLinkedVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($r1, $f1);

        $r5 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        $f1 = 1.0F - $f0;

        $f1 = $f1 * -1.0F;

        virtualinvoke $r5.<androidx.constraintlayout.solver.ArrayLinkedVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($r2, $f1);

        $r5 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        $f1 = -1.0F * $f0;

        virtualinvoke $r5.<androidx.constraintlayout.solver.ArrayLinkedVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($r3, $f1);

        $r5 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        $f1 = $f0 * 1.0F;

        virtualinvoke $r5.<androidx.constraintlayout.solver.ArrayLinkedVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($r4, $f1);

        if $i0 > 0 goto label6;

        if $i1 <= 0 goto label7;

     label6:
        $i0 = neg $i0;

        $f1 = (float) $i0;

        $f2 = 1.0F - $f0;

        $f1 = $f1 * $f2;

        $f2 = (float) $i1;

        $f0 = $f2 * $f0;

        $f0 = $f1 + $f0;

        $r0.<androidx.constraintlayout.solver.ArrayRow: float constantValue> = $f0;

     label7:
        return $r0;
    }

    androidx.constraintlayout.solver.ArrayRow createRowDefinition(androidx.constraintlayout.solver.SolverVariable, int)
    {
        androidx.constraintlayout.solver.ArrayRow $r0;
        androidx.constraintlayout.solver.SolverVariable $r1;
        int $i0;
        float $f0;

        $r0 := @this: androidx.constraintlayout.solver.ArrayRow;

        $r1 := @parameter0: androidx.constraintlayout.solver.SolverVariable;

        $i0 := @parameter1: int;

        $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.SolverVariable variable> = $r1;

        $f0 = (float) $i0;

        $r1.<androidx.constraintlayout.solver.SolverVariable: float computedValue> = $f0;

        $f0 = (float) $i0;

        $r0.<androidx.constraintlayout.solver.ArrayRow: float constantValue> = $f0;

        $r0.<androidx.constraintlayout.solver.ArrayRow: boolean isSimpleDefinition> = 1;

        return $r0;
    }

    androidx.constraintlayout.solver.ArrayRow createRowDimensionPercent(androidx.constraintlayout.solver.SolverVariable, androidx.constraintlayout.solver.SolverVariable, androidx.constraintlayout.solver.SolverVariable, float)
    {
        androidx.constraintlayout.solver.ArrayRow $r0;
        androidx.constraintlayout.solver.SolverVariable $r1, $r2, $r3;
        float $f0, $f1;
        androidx.constraintlayout.solver.ArrayLinkedVariables $r4;

        $r0 := @this: androidx.constraintlayout.solver.ArrayRow;

        $r1 := @parameter0: androidx.constraintlayout.solver.SolverVariable;

        $r2 := @parameter1: androidx.constraintlayout.solver.SolverVariable;

        $r3 := @parameter2: androidx.constraintlayout.solver.SolverVariable;

        $f0 := @parameter3: float;

        $r4 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r4.<androidx.constraintlayout.solver.ArrayLinkedVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($r1, -1.0F);

        $r4 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        $f1 = 1.0F - $f0;

        virtualinvoke $r4.<androidx.constraintlayout.solver.ArrayLinkedVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($r2, $f1);

        $r4 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r4.<androidx.constraintlayout.solver.ArrayLinkedVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($r3, $f0);

        return $r0;
    }

    public androidx.constraintlayout.solver.ArrayRow createRowDimensionRatio(androidx.constraintlayout.solver.SolverVariable, androidx.constraintlayout.solver.SolverVariable, androidx.constraintlayout.solver.SolverVariable, androidx.constraintlayout.solver.SolverVariable, float)
    {
        androidx.constraintlayout.solver.ArrayRow $r0;
        androidx.constraintlayout.solver.SolverVariable $r1, $r2, $r3, $r4;
        float $f0;
        androidx.constraintlayout.solver.ArrayLinkedVariables $r5;

        $r0 := @this: androidx.constraintlayout.solver.ArrayRow;

        $r1 := @parameter0: androidx.constraintlayout.solver.SolverVariable;

        $r2 := @parameter1: androidx.constraintlayout.solver.SolverVariable;

        $r3 := @parameter2: androidx.constraintlayout.solver.SolverVariable;

        $r4 := @parameter3: androidx.constraintlayout.solver.SolverVariable;

        $f0 := @parameter4: float;

        $r5 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r5.<androidx.constraintlayout.solver.ArrayLinkedVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($r1, -1.0F);

        $r5 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r5.<androidx.constraintlayout.solver.ArrayLinkedVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($r2, 1.0F);

        $r5 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r5.<androidx.constraintlayout.solver.ArrayLinkedVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($r3, $f0);

        $r5 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        $f0 = neg $f0;

        virtualinvoke $r5.<androidx.constraintlayout.solver.ArrayLinkedVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($r4, $f0);

        return $r0;
    }

    public androidx.constraintlayout.solver.ArrayRow createRowEqualDimension(float, float, float, androidx.constraintlayout.solver.SolverVariable, int, androidx.constraintlayout.solver.SolverVariable, int, androidx.constraintlayout.solver.SolverVariable, int, androidx.constraintlayout.solver.SolverVariable, int)
    {
        androidx.constraintlayout.solver.ArrayRow $r0;
        float $f0, $f1, $f2;
        androidx.constraintlayout.solver.SolverVariable $r1, $r2, $r3, $r4;
        int $i0, $i1, $i2, $i3;
        byte $b4;
        androidx.constraintlayout.solver.ArrayLinkedVariables $r5;

        $r0 := @this: androidx.constraintlayout.solver.ArrayRow;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $r1 := @parameter3: androidx.constraintlayout.solver.SolverVariable;

        $i0 := @parameter4: int;

        $r2 := @parameter5: androidx.constraintlayout.solver.SolverVariable;

        $i1 := @parameter6: int;

        $r3 := @parameter7: androidx.constraintlayout.solver.SolverVariable;

        $i2 := @parameter8: int;

        $r4 := @parameter9: androidx.constraintlayout.solver.SolverVariable;

        $i3 := @parameter10: int;

        $b4 = $f1 cmpl 0.0F;

        if $b4 == 0 goto label2;

        $b4 = $f0 cmpl $f2;

        if $b4 != 0 goto label1;

        goto label2;

     label1:
        $f0 = $f0 / $f1;

        $f1 = $f2 / $f1;

        $f0 = $f0 / $f1;

        $i0 = neg $i0;

        $i0 = $i0 - $i1;

        $f1 = (float) $i0;

        $f2 = (float) $i2;

        $f2 = $f2 * $f0;

        $f1 = $f1 + $f2;

        $f2 = (float) $i3;

        $f2 = $f2 * $f0;

        $f1 = $f1 + $f2;

        $r0.<androidx.constraintlayout.solver.ArrayRow: float constantValue> = $f1;

        $r5 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r5.<androidx.constraintlayout.solver.ArrayLinkedVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($r1, 1.0F);

        $r5 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r5.<androidx.constraintlayout.solver.ArrayLinkedVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($r2, -1.0F);

        $r5 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r5.<androidx.constraintlayout.solver.ArrayLinkedVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($r4, $f0);

        $r5 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        $f0 = neg $f0;

        virtualinvoke $r5.<androidx.constraintlayout.solver.ArrayLinkedVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($r3, $f0);

        return $r0;

     label2:
        $i0 = neg $i0;

        $i0 = $i0 - $i1;

        $i0 = $i0 + $i2;

        $i0 = $i0 + $i3;

        $f0 = (float) $i0;

        $r0.<androidx.constraintlayout.solver.ArrayRow: float constantValue> = $f0;

        $r5 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r5.<androidx.constraintlayout.solver.ArrayLinkedVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($r1, 1.0F);

        $r5 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r5.<androidx.constraintlayout.solver.ArrayLinkedVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($r2, -1.0F);

        $r5 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r5.<androidx.constraintlayout.solver.ArrayLinkedVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($r4, 1.0F);

        $r5 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r5.<androidx.constraintlayout.solver.ArrayLinkedVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($r3, -1.0F);

        return $r0;
    }

    public androidx.constraintlayout.solver.ArrayRow createRowEqualMatchDimensions(float, float, float, androidx.constraintlayout.solver.SolverVariable, androidx.constraintlayout.solver.SolverVariable, androidx.constraintlayout.solver.SolverVariable, androidx.constraintlayout.solver.SolverVariable)
    {
        androidx.constraintlayout.solver.ArrayRow $r0;
        float $f0, $f1, $f2;
        androidx.constraintlayout.solver.SolverVariable $r1, $r2, $r3, $r4;
        androidx.constraintlayout.solver.ArrayLinkedVariables $r5;
        byte $b0;

        $r0 := @this: androidx.constraintlayout.solver.ArrayRow;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $r1 := @parameter3: androidx.constraintlayout.solver.SolverVariable;

        $r2 := @parameter4: androidx.constraintlayout.solver.SolverVariable;

        $r3 := @parameter5: androidx.constraintlayout.solver.SolverVariable;

        $r4 := @parameter6: androidx.constraintlayout.solver.SolverVariable;

        $r0.<androidx.constraintlayout.solver.ArrayRow: float constantValue> = 0.0F;

        $b0 = $f1 cmpl 0.0F;

        if $b0 == 0 goto label4;

        $b0 = $f0 cmpl $f2;

        if $b0 != 0 goto label1;

        goto label4;

     label1:
        $b0 = $f0 cmpl 0.0F;

        if $b0 != 0 goto label2;

        $r5 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r5.<androidx.constraintlayout.solver.ArrayLinkedVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($r1, 1.0F);

        $r5 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r5.<androidx.constraintlayout.solver.ArrayLinkedVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($r2, -1.0F);

        return $r0;

     label2:
        $b0 = $f2 cmpl 0.0F;

        if $b0 != 0 goto label3;

        $r5 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r5.<androidx.constraintlayout.solver.ArrayLinkedVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($r3, 1.0F);

        $r5 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r5.<androidx.constraintlayout.solver.ArrayLinkedVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($r4, -1.0F);

        return $r0;

     label3:
        $f0 = $f0 / $f1;

        $f1 = $f2 / $f1;

        $f0 = $f0 / $f1;

        $r5 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r5.<androidx.constraintlayout.solver.ArrayLinkedVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($r1, 1.0F);

        $r5 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r5.<androidx.constraintlayout.solver.ArrayLinkedVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($r2, -1.0F);

        $r5 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r5.<androidx.constraintlayout.solver.ArrayLinkedVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($r4, $f0);

        $r5 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        $f0 = neg $f0;

        virtualinvoke $r5.<androidx.constraintlayout.solver.ArrayLinkedVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($r3, $f0);

        return $r0;

     label4:
        $r5 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r5.<androidx.constraintlayout.solver.ArrayLinkedVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($r1, 1.0F);

        $r5 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r5.<androidx.constraintlayout.solver.ArrayLinkedVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($r2, -1.0F);

        $r5 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r5.<androidx.constraintlayout.solver.ArrayLinkedVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($r4, 1.0F);

        $r5 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r5.<androidx.constraintlayout.solver.ArrayLinkedVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($r3, -1.0F);

        return $r0;
    }

    public androidx.constraintlayout.solver.ArrayRow createRowEquals(androidx.constraintlayout.solver.SolverVariable, int)
    {
        androidx.constraintlayout.solver.ArrayRow $r0;
        androidx.constraintlayout.solver.SolverVariable $r1;
        int $i0;
        float $f0;
        androidx.constraintlayout.solver.ArrayLinkedVariables $r2;

        $r0 := @this: androidx.constraintlayout.solver.ArrayRow;

        $r1 := @parameter0: androidx.constraintlayout.solver.SolverVariable;

        $i0 := @parameter1: int;

        if $i0 >= 0 goto label1;

        $i0 = $i0 * -1;

        $f0 = (float) $i0;

        $r0.<androidx.constraintlayout.solver.ArrayRow: float constantValue> = $f0;

        $r2 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r2.<androidx.constraintlayout.solver.ArrayLinkedVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($r1, 1.0F);

        return $r0;

     label1:
        $f0 = (float) $i0;

        $r0.<androidx.constraintlayout.solver.ArrayRow: float constantValue> = $f0;

        $r2 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r2.<androidx.constraintlayout.solver.ArrayLinkedVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($r1, -1.0F);

        return $r0;
    }

    public androidx.constraintlayout.solver.ArrayRow createRowEquals(androidx.constraintlayout.solver.SolverVariable, androidx.constraintlayout.solver.SolverVariable, int)
    {
        androidx.constraintlayout.solver.ArrayRow $r0;
        androidx.constraintlayout.solver.SolverVariable $r1, $r2;
        int $i0, $i1;
        boolean $z0;
        float $f0;
        androidx.constraintlayout.solver.ArrayLinkedVariables $r3;

        $r0 := @this: androidx.constraintlayout.solver.ArrayRow;

        $r1 := @parameter0: androidx.constraintlayout.solver.SolverVariable;

        $r2 := @parameter1: androidx.constraintlayout.solver.SolverVariable;

        $i0 := @parameter2: int;

        $z0 = 0;

        if $i0 == 0 goto label2;

        $i1 = $i0;

        if $i0 >= 0 goto label1;

        $i1 = $i0 * -1;

        $z0 = 1;

     label1:
        $f0 = (float) $i1;

        $r0.<androidx.constraintlayout.solver.ArrayRow: float constantValue> = $f0;

     label2:
        if $z0 != 0 goto label3;

        $r3 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r3.<androidx.constraintlayout.solver.ArrayLinkedVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($r1, -1.0F);

        $r3 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r3.<androidx.constraintlayout.solver.ArrayLinkedVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($r2, 1.0F);

        return $r0;

     label3:
        $r3 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r3.<androidx.constraintlayout.solver.ArrayLinkedVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($r1, 1.0F);

        $r3 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r3.<androidx.constraintlayout.solver.ArrayLinkedVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($r2, -1.0F);

        return $r0;
    }

    public androidx.constraintlayout.solver.ArrayRow createRowGreaterThan(androidx.constraintlayout.solver.SolverVariable, int, androidx.constraintlayout.solver.SolverVariable)
    {
        androidx.constraintlayout.solver.ArrayRow $r0;
        androidx.constraintlayout.solver.SolverVariable $r1, $r2;
        int $i0;
        float $f0;
        androidx.constraintlayout.solver.ArrayLinkedVariables $r3;

        $r0 := @this: androidx.constraintlayout.solver.ArrayRow;

        $r1 := @parameter0: androidx.constraintlayout.solver.SolverVariable;

        $i0 := @parameter1: int;

        $r2 := @parameter2: androidx.constraintlayout.solver.SolverVariable;

        $f0 = (float) $i0;

        $r0.<androidx.constraintlayout.solver.ArrayRow: float constantValue> = $f0;

        $r3 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r3.<androidx.constraintlayout.solver.ArrayLinkedVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($r1, -1.0F);

        return $r0;
    }

    public androidx.constraintlayout.solver.ArrayRow createRowGreaterThan(androidx.constraintlayout.solver.SolverVariable, androidx.constraintlayout.solver.SolverVariable, androidx.constraintlayout.solver.SolverVariable, int)
    {
        androidx.constraintlayout.solver.ArrayRow $r0;
        androidx.constraintlayout.solver.SolverVariable $r1, $r2, $r3;
        int $i0, $i1;
        boolean $z0;
        float $f0;
        androidx.constraintlayout.solver.ArrayLinkedVariables $r4;

        $r0 := @this: androidx.constraintlayout.solver.ArrayRow;

        $r1 := @parameter0: androidx.constraintlayout.solver.SolverVariable;

        $r2 := @parameter1: androidx.constraintlayout.solver.SolverVariable;

        $r3 := @parameter2: androidx.constraintlayout.solver.SolverVariable;

        $i0 := @parameter3: int;

        $z0 = 0;

        if $i0 == 0 goto label2;

        $i1 = $i0;

        if $i0 >= 0 goto label1;

        $i1 = $i0 * -1;

        $z0 = 1;

     label1:
        $f0 = (float) $i1;

        $r0.<androidx.constraintlayout.solver.ArrayRow: float constantValue> = $f0;

     label2:
        if $z0 != 0 goto label3;

        $r4 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r4.<androidx.constraintlayout.solver.ArrayLinkedVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($r1, -1.0F);

        $r4 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r4.<androidx.constraintlayout.solver.ArrayLinkedVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($r2, 1.0F);

        $r4 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r4.<androidx.constraintlayout.solver.ArrayLinkedVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($r3, 1.0F);

        return $r0;

     label3:
        $r4 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r4.<androidx.constraintlayout.solver.ArrayLinkedVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($r1, 1.0F);

        $r4 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r4.<androidx.constraintlayout.solver.ArrayLinkedVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($r2, -1.0F);

        $r4 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r4.<androidx.constraintlayout.solver.ArrayLinkedVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($r3, -1.0F);

        return $r0;
    }

    public androidx.constraintlayout.solver.ArrayRow createRowLowerThan(androidx.constraintlayout.solver.SolverVariable, androidx.constraintlayout.solver.SolverVariable, androidx.constraintlayout.solver.SolverVariable, int)
    {
        androidx.constraintlayout.solver.ArrayRow $r0;
        androidx.constraintlayout.solver.SolverVariable $r1, $r2, $r3;
        int $i0, $i1;
        boolean $z0;
        float $f0;
        androidx.constraintlayout.solver.ArrayLinkedVariables $r4;

        $r0 := @this: androidx.constraintlayout.solver.ArrayRow;

        $r1 := @parameter0: androidx.constraintlayout.solver.SolverVariable;

        $r2 := @parameter1: androidx.constraintlayout.solver.SolverVariable;

        $r3 := @parameter2: androidx.constraintlayout.solver.SolverVariable;

        $i0 := @parameter3: int;

        $z0 = 0;

        if $i0 == 0 goto label2;

        $i1 = $i0;

        if $i0 >= 0 goto label1;

        $i1 = $i0 * -1;

        $z0 = 1;

     label1:
        $f0 = (float) $i1;

        $r0.<androidx.constraintlayout.solver.ArrayRow: float constantValue> = $f0;

     label2:
        if $z0 != 0 goto label3;

        $r4 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r4.<androidx.constraintlayout.solver.ArrayLinkedVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($r1, -1.0F);

        $r4 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r4.<androidx.constraintlayout.solver.ArrayLinkedVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($r2, 1.0F);

        $r4 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r4.<androidx.constraintlayout.solver.ArrayLinkedVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($r3, -1.0F);

        return $r0;

     label3:
        $r4 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r4.<androidx.constraintlayout.solver.ArrayLinkedVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($r1, 1.0F);

        $r4 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r4.<androidx.constraintlayout.solver.ArrayLinkedVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($r2, -1.0F);

        $r4 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r4.<androidx.constraintlayout.solver.ArrayLinkedVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($r3, 1.0F);

        return $r0;
    }

    public androidx.constraintlayout.solver.ArrayRow createRowWithAngle(androidx.constraintlayout.solver.SolverVariable, androidx.constraintlayout.solver.SolverVariable, androidx.constraintlayout.solver.SolverVariable, androidx.constraintlayout.solver.SolverVariable, float)
    {
        androidx.constraintlayout.solver.ArrayRow $r0;
        androidx.constraintlayout.solver.SolverVariable $r1, $r2, $r3, $r4;
        float $f0;
        androidx.constraintlayout.solver.ArrayLinkedVariables $r5;

        $r0 := @this: androidx.constraintlayout.solver.ArrayRow;

        $r1 := @parameter0: androidx.constraintlayout.solver.SolverVariable;

        $r2 := @parameter1: androidx.constraintlayout.solver.SolverVariable;

        $r3 := @parameter2: androidx.constraintlayout.solver.SolverVariable;

        $r4 := @parameter3: androidx.constraintlayout.solver.SolverVariable;

        $f0 := @parameter4: float;

        $r5 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r5.<androidx.constraintlayout.solver.ArrayLinkedVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($r3, 0.5F);

        $r5 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r5.<androidx.constraintlayout.solver.ArrayLinkedVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($r4, 0.5F);

        $r5 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r5.<androidx.constraintlayout.solver.ArrayLinkedVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($r1, -0.5F);

        $r5 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r5.<androidx.constraintlayout.solver.ArrayLinkedVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($r2, -0.5F);

        $f0 = neg $f0;

        $r0.<androidx.constraintlayout.solver.ArrayRow: float constantValue> = $f0;

        return $r0;
    }

    void ensurePositiveConstant()
    {
        androidx.constraintlayout.solver.ArrayRow $r0;
        float $f0;
        byte $b0;
        androidx.constraintlayout.solver.ArrayLinkedVariables $r1;

        $r0 := @this: androidx.constraintlayout.solver.ArrayRow;

        $f0 = $r0.<androidx.constraintlayout.solver.ArrayRow: float constantValue>;

        $b0 = $f0 cmpg 0.0F;

        if $b0 >= 0 goto label1;

        $f0 = $f0 * -1.0F;

        $r0.<androidx.constraintlayout.solver.ArrayRow: float constantValue> = $f0;

        $r1 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r1.<androidx.constraintlayout.solver.ArrayLinkedVariables: void invert()>();

     label1:
        return;
    }

    public androidx.constraintlayout.solver.SolverVariable getKey()
    {
        androidx.constraintlayout.solver.ArrayRow $r0;
        androidx.constraintlayout.solver.SolverVariable r1;

        $r0 := @this: androidx.constraintlayout.solver.ArrayRow;

        r1 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.SolverVariable variable>;

        return r1;
    }

    public androidx.constraintlayout.solver.SolverVariable getPivotCandidate(androidx.constraintlayout.solver.LinearSystem, boolean[])
    {
        androidx.constraintlayout.solver.ArrayRow $r0;
        androidx.constraintlayout.solver.LinearSystem $r1;
        boolean[] $r2;
        androidx.constraintlayout.solver.SolverVariable $r3;
        androidx.constraintlayout.solver.ArrayLinkedVariables $r4;

        $r0 := @this: androidx.constraintlayout.solver.ArrayRow;

        $r1 := @parameter0: androidx.constraintlayout.solver.LinearSystem;

        $r2 := @parameter1: boolean[];

        $r4 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        $r3 = virtualinvoke $r4.<androidx.constraintlayout.solver.ArrayLinkedVariables: androidx.constraintlayout.solver.SolverVariable getPivotCandidate(boolean[],androidx.constraintlayout.solver.SolverVariable)>($r2, null);

        return $r3;
    }

    boolean hasKeyVariable()
    {
        androidx.constraintlayout.solver.ArrayRow $r0;
        androidx.constraintlayout.solver.SolverVariable $r1;
        androidx.constraintlayout.solver.SolverVariable$Type $r2, $r3;
        float $f0;
        byte $b0;

        $r0 := @this: androidx.constraintlayout.solver.ArrayRow;

        $r1 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.SolverVariable variable>;

        if $r1 == null goto label2;

        $r2 = $r1.<androidx.constraintlayout.solver.SolverVariable: androidx.constraintlayout.solver.SolverVariable$Type mType>;

        $r3 = <androidx.constraintlayout.solver.SolverVariable$Type: androidx.constraintlayout.solver.SolverVariable$Type UNRESTRICTED>;

        if $r2 == $r3 goto label1;

        $f0 = $r0.<androidx.constraintlayout.solver.ArrayRow: float constantValue>;

        $b0 = $f0 cmpg 0.0F;

        if $b0 < 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    boolean hasVariable(androidx.constraintlayout.solver.SolverVariable)
    {
        androidx.constraintlayout.solver.ArrayRow $r0;
        androidx.constraintlayout.solver.SolverVariable $r1;
        boolean $z0;
        androidx.constraintlayout.solver.ArrayLinkedVariables $r2;

        $r0 := @this: androidx.constraintlayout.solver.ArrayRow;

        $r1 := @parameter0: androidx.constraintlayout.solver.SolverVariable;

        $r2 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        $z0 = virtualinvoke $r2.<androidx.constraintlayout.solver.ArrayLinkedVariables: boolean containsKey(androidx.constraintlayout.solver.SolverVariable)>($r1);

        return $z0;
    }

    public void initFromRow(androidx.constraintlayout.solver.LinearSystem$Row)
    {
        androidx.constraintlayout.solver.ArrayRow $r0, $r3;
        androidx.constraintlayout.solver.LinearSystem$Row $r1;
        androidx.constraintlayout.solver.ArrayLinkedVariables $r2;
        boolean $z0;
        int $i0, $i1;
        androidx.constraintlayout.solver.SolverVariable $r4;
        float $f0;

        $r0 := @this: androidx.constraintlayout.solver.ArrayRow;

        $r1 := @parameter0: androidx.constraintlayout.solver.LinearSystem$Row;

        $z0 = $r1 instanceof androidx.constraintlayout.solver.ArrayRow;

        if $z0 == 0 goto label2;

        $r3 = (androidx.constraintlayout.solver.ArrayRow) $r1;

        $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.SolverVariable variable> = null;

        $r2 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r2.<androidx.constraintlayout.solver.ArrayLinkedVariables: void clear()>();

        $i0 = 0;

     label1:
        $r2 = $r3.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        $i1 = $r2.<androidx.constraintlayout.solver.ArrayLinkedVariables: int currentSize>;

        if $i0 >= $i1 goto label2;

        $r2 = $r3.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        $r4 = virtualinvoke $r2.<androidx.constraintlayout.solver.ArrayLinkedVariables: androidx.constraintlayout.solver.SolverVariable getVariable(int)>($i0);

        $r2 = $r3.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        $f0 = virtualinvoke $r2.<androidx.constraintlayout.solver.ArrayLinkedVariables: float getVariableValue(int)>($i0);

        $r2 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r2.<androidx.constraintlayout.solver.ArrayLinkedVariables: void add(androidx.constraintlayout.solver.SolverVariable,float,boolean)>($r4, $f0, 1);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return;
    }

    public boolean isEmpty()
    {
        androidx.constraintlayout.solver.ArrayRow $r0;
        androidx.constraintlayout.solver.SolverVariable $r1;
        float $f0;
        byte $b0;
        androidx.constraintlayout.solver.ArrayLinkedVariables $r2;
        int $i1;

        $r0 := @this: androidx.constraintlayout.solver.ArrayRow;

        $r1 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.SolverVariable variable>;

        if $r1 != null goto label1;

        $f0 = $r0.<androidx.constraintlayout.solver.ArrayRow: float constantValue>;

        $b0 = $f0 cmpl 0.0F;

        if $b0 != 0 goto label1;

        $r2 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        $i1 = $r2.<androidx.constraintlayout.solver.ArrayLinkedVariables: int currentSize>;

        if $i1 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    androidx.constraintlayout.solver.SolverVariable pickPivot(androidx.constraintlayout.solver.SolverVariable)
    {
        androidx.constraintlayout.solver.ArrayRow $r0;
        androidx.constraintlayout.solver.SolverVariable $r1;
        androidx.constraintlayout.solver.ArrayLinkedVariables $r2;

        $r0 := @this: androidx.constraintlayout.solver.ArrayRow;

        $r1 := @parameter0: androidx.constraintlayout.solver.SolverVariable;

        $r2 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        $r1 = virtualinvoke $r2.<androidx.constraintlayout.solver.ArrayLinkedVariables: androidx.constraintlayout.solver.SolverVariable getPivotCandidate(boolean[],androidx.constraintlayout.solver.SolverVariable)>(null, $r1);

        return $r1;
    }

    void pivot(androidx.constraintlayout.solver.SolverVariable)
    {
        androidx.constraintlayout.solver.ArrayRow $r0;
        androidx.constraintlayout.solver.SolverVariable $r1, $r2;
        float $f0, $f1;
        androidx.constraintlayout.solver.ArrayLinkedVariables $r3;
        byte $b0;

        $r0 := @this: androidx.constraintlayout.solver.ArrayRow;

        $r1 := @parameter0: androidx.constraintlayout.solver.SolverVariable;

        $r2 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.SolverVariable variable>;

        if $r2 == null goto label1;

        $r3 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r3.<androidx.constraintlayout.solver.ArrayLinkedVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)>($r2, -1.0F);

        $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.SolverVariable variable> = null;

     label1:
        $r3 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        $f0 = virtualinvoke $r3.<androidx.constraintlayout.solver.ArrayLinkedVariables: float remove(androidx.constraintlayout.solver.SolverVariable,boolean)>($r1, 1);

        $f0 = $f0 * -1.0F;

        $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.SolverVariable variable> = $r1;

        $b0 = $f0 cmpl 1.0F;

        if $b0 != 0 goto label2;

        return;

     label2:
        $f1 = $r0.<androidx.constraintlayout.solver.ArrayRow: float constantValue>;

        $f1 = $f1 / $f0;

        $r0.<androidx.constraintlayout.solver.ArrayRow: float constantValue> = $f1;

        $r3 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r3.<androidx.constraintlayout.solver.ArrayLinkedVariables: void divideByAmount(float)>($f0);

        return;
    }

    public void reset()
    {
        androidx.constraintlayout.solver.ArrayRow $r0;
        androidx.constraintlayout.solver.ArrayLinkedVariables $r1;

        $r0 := @this: androidx.constraintlayout.solver.ArrayRow;

        $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.SolverVariable variable> = null;

        $r1 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        virtualinvoke $r1.<androidx.constraintlayout.solver.ArrayLinkedVariables: void clear()>();

        $r0.<androidx.constraintlayout.solver.ArrayRow: float constantValue> = 0.0F;

        $r0.<androidx.constraintlayout.solver.ArrayRow: boolean isSimpleDefinition> = 0;

        return;
    }

    int sizeInBytes()
    {
        androidx.constraintlayout.solver.ArrayRow $r0;
        int $i0, $i1;
        androidx.constraintlayout.solver.SolverVariable $r1;
        androidx.constraintlayout.solver.ArrayLinkedVariables $r2;

        $r0 := @this: androidx.constraintlayout.solver.ArrayRow;

        $i0 = 0;

        $r1 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.SolverVariable variable>;

        if $r1 == null goto label1;

        $i0 = 4;

     label1:
        $i0 = $i0 + 4;

        $i1 = $i0 + 4;

        $r2 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        $i0 = virtualinvoke $r2.<androidx.constraintlayout.solver.ArrayLinkedVariables: int sizeInBytes()>();

        $i0 = $i1 + $i0;

        return $i0;
    }

    java.lang.String toReadableString()
    {
        androidx.constraintlayout.solver.ArrayRow $r0;
        androidx.constraintlayout.solver.SolverVariable $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3, $r4;
        boolean $z0;
        float $f0, $f1;
        byte $b0;
        androidx.constraintlayout.solver.ArrayLinkedVariables $r5;
        int $i1, $i2;

        $r0 := @this: androidx.constraintlayout.solver.ArrayRow;

        $r1 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.SolverVariable variable>;

        if $r1 != null goto label01;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label02;

     label01:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r1 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.SolverVariable variable>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

     label02:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = $r3;

        $z0 = 0;

        $f0 = $r0.<androidx.constraintlayout.solver.ArrayRow: float constantValue>;

        $b0 = $f0 cmpl 0.0F;

        if $b0 == 0 goto label03;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $f0 = $r0.<androidx.constraintlayout.solver.ArrayRow: float constantValue>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = 1;

     label03:
        $r5 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        $i1 = $r5.<androidx.constraintlayout.solver.ArrayLinkedVariables: int currentSize>;

        $i2 = 0;

     label04:
        if $i2 >= $i1 goto label13;

        $r5 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        $r1 = virtualinvoke $r5.<androidx.constraintlayout.solver.ArrayLinkedVariables: androidx.constraintlayout.solver.SolverVariable getVariable(int)>($i2);

        if $r1 != null goto label05;

        goto label12;

     label05:
        $r5 = $r0.<androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables>;

        $f0 = virtualinvoke $r5.<androidx.constraintlayout.solver.ArrayLinkedVariables: float getVariableValue(int)>($i2);

        $f1 = $f0;

        $b0 = $f0 cmpl 0.0F;

        if $b0 != 0 goto label06;

        goto label12;

     label06:
        $r3 = virtualinvoke $r1.<androidx.constraintlayout.solver.SolverVariable: java.lang.String toString()>();

        if $z0 != 0 goto label07;

        $b0 = $f0 cmpg 0.0F;

        if $b0 >= 0 goto label09;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("- ");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $f1 = $f0 * -1.0F;

        goto label09;

     label07:
        $b0 = $f0 cmpl 0.0F;

        if $b0 <= 0 goto label08;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" + ");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label09;

     label08:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - ");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $f1 = $f0 * -1.0F;

     label09:
        $b0 = $f1 cmpl 1.0F;

        if $b0 != 0 goto label10;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label11;

     label10:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

     label11:
        $z0 = 1;

     label12:
        $i2 = $i2 + 1;

        goto label04;

     label13:
        if $z0 != 0 goto label14;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0.0");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;

     label14:
        return $r4;
    }

    public java.lang.String toString()
    {
        androidx.constraintlayout.solver.ArrayRow $r0;
        java.lang.String $r1;

        $r0 := @this: androidx.constraintlayout.solver.ArrayRow;

        $r1 = virtualinvoke $r0.<androidx.constraintlayout.solver.ArrayRow: java.lang.String toReadableString()>();

        return $r1;
    }

    public static void <clinit>()
    {
        <androidx.constraintlayout.solver.ArrayRow: float epsilon> = 0.001F;

        <androidx.constraintlayout.solver.ArrayRow: boolean DEBUG> = 0;

        return;
    }
}
