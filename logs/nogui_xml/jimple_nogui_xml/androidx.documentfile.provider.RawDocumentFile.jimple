class androidx.documentfile.provider.RawDocumentFile extends androidx.documentfile.provider.DocumentFile
{
    private java.io.File mFile;

    void <init>(androidx.documentfile.provider.DocumentFile, java.io.File)
    {
        androidx.documentfile.provider.RawDocumentFile $r0;
        androidx.documentfile.provider.DocumentFile $r1;
        java.io.File $r2;

        $r0 := @this: androidx.documentfile.provider.RawDocumentFile;

        $r1 := @parameter0: androidx.documentfile.provider.DocumentFile;

        $r2 := @parameter1: java.io.File;

        specialinvoke $r0.<androidx.documentfile.provider.DocumentFile: void <init>(androidx.documentfile.provider.DocumentFile)>($r1);

        $r0.<androidx.documentfile.provider.RawDocumentFile: java.io.File mFile> = $r2;

        return;
    }

    private static boolean deleteContents(java.io.File)
    {
        java.io.File $r0;
        int $i0, $i1;
        java.io.File[] $r1;
        boolean $z0, $z1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;

        $r0 := @parameter0: java.io.File;

        $r1 = virtualinvoke $r0.<java.io.File: java.io.File[] listFiles()>();

        $z0 = 1;

        if $r1 == null goto label4;

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label5;

        $r0 = $r1[$i1];

        $z1 = virtualinvoke $r0.<java.io.File: boolean isDirectory()>();

        if $z1 == 0 goto label2;

        $z1 = staticinvoke <androidx.documentfile.provider.RawDocumentFile: boolean deleteContents(java.io.File)>($r0);

        $z0 = $z0 & $z1;

     label2:
        $z1 = virtualinvoke $r0.<java.io.File: boolean delete()>();

        if $z1 != 0 goto label3;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to delete ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("DocumentFile", $r3);

        $z0 = 0;

     label3:
        $i1 = $i1 + 1;

        goto label1;

     label4:
        return 1;

     label5:
        return $z0;
    }

    private static java.lang.String getTypeForName(java.lang.String)
    {
        java.lang.String $r0;
        int $i0;
        android.webkit.MimeTypeMap $r1;

        $r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r0.<java.lang.String: int lastIndexOf(int)>(46);

        if $i0 < 0 goto label1;

        $i0 = $i0 + 1;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>($i0);

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toLowerCase()>();

        $r1 = staticinvoke <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap getSingleton()>();

        $r0 = virtualinvoke $r1.<android.webkit.MimeTypeMap: java.lang.String getMimeTypeFromExtension(java.lang.String)>($r0);

        if $r0 == null goto label1;

        return $r0;

     label1:
        return "application/octet-stream";
    }

    public boolean canRead()
    {
        androidx.documentfile.provider.RawDocumentFile $r0;
        boolean $z0;
        java.io.File $r1;

        $r0 := @this: androidx.documentfile.provider.RawDocumentFile;

        $r1 = $r0.<androidx.documentfile.provider.RawDocumentFile: java.io.File mFile>;

        $z0 = virtualinvoke $r1.<java.io.File: boolean canRead()>();

        return $z0;
    }

    public boolean canWrite()
    {
        androidx.documentfile.provider.RawDocumentFile $r0;
        boolean $z0;
        java.io.File $r1;

        $r0 := @this: androidx.documentfile.provider.RawDocumentFile;

        $r1 = $r0.<androidx.documentfile.provider.RawDocumentFile: java.io.File mFile>;

        $z0 = virtualinvoke $r1.<java.io.File: boolean canWrite()>();

        return $z0;
    }

    public androidx.documentfile.provider.DocumentFile createDirectory(java.lang.String)
    {
        androidx.documentfile.provider.RawDocumentFile $r0, $r4;
        java.lang.String $r1;
        java.io.File $r2, $r3;
        boolean $z0;

        $r0 := @this: androidx.documentfile.provider.RawDocumentFile;

        $r1 := @parameter0: java.lang.String;

        $r2 = new java.io.File;

        $r3 = $r0.<androidx.documentfile.provider.RawDocumentFile: java.io.File mFile>;

        specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, $r1);

        $z0 = virtualinvoke $r2.<java.io.File: boolean isDirectory()>();

        if $z0 != 0 goto label2;

        $z0 = virtualinvoke $r2.<java.io.File: boolean mkdir()>();

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        return null;

     label2:
        $r4 = new androidx.documentfile.provider.RawDocumentFile;

        specialinvoke $r4.<androidx.documentfile.provider.RawDocumentFile: void <init>(androidx.documentfile.provider.DocumentFile,java.io.File)>($r0, $r2);

        return $r4;
    }

    public androidx.documentfile.provider.DocumentFile createFile(java.lang.String, java.lang.String)
    {
        androidx.documentfile.provider.RawDocumentFile $r0, $r7;
        java.lang.String $r1, $r2;
        android.webkit.MimeTypeMap $r3;
        java.lang.StringBuilder $r4;
        java.io.File $r5, $r6;
        java.lang.Throwable $r8;

        $r0 := @this: androidx.documentfile.provider.RawDocumentFile;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = staticinvoke <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap getSingleton()>();

        $r1 = virtualinvoke $r3.<android.webkit.MimeTypeMap: java.lang.String getExtensionFromMimeType(java.lang.String)>($r1);

        if $r1 == null goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $r5 = new java.io.File;

        $r6 = $r0.<androidx.documentfile.provider.RawDocumentFile: java.io.File mFile>;

        specialinvoke $r5.<java.io.File: void <init>(java.io.File,java.lang.String)>($r6, $r2);

     label2:
        virtualinvoke $r5.<java.io.File: boolean createNewFile()>();

     label3:
        $r7 = new androidx.documentfile.provider.RawDocumentFile;

     label4:
        specialinvoke $r7.<androidx.documentfile.provider.RawDocumentFile: void <init>(androidx.documentfile.provider.DocumentFile,java.io.File)>($r0, $r5);

     label5:
        return $r7;

     label6:
        $r8 := @caughtexception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to createFile: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("DocumentFile", $r1);

        return null;

        catch java.io.IOException from label2 to label3 with label6;
        catch java.io.IOException from label4 to label5 with label6;
    }

    public boolean delete()
    {
        androidx.documentfile.provider.RawDocumentFile $r0;
        boolean $z0;
        java.io.File $r1;

        $r0 := @this: androidx.documentfile.provider.RawDocumentFile;

        $r1 = $r0.<androidx.documentfile.provider.RawDocumentFile: java.io.File mFile>;

        staticinvoke <androidx.documentfile.provider.RawDocumentFile: boolean deleteContents(java.io.File)>($r1);

        $r1 = $r0.<androidx.documentfile.provider.RawDocumentFile: java.io.File mFile>;

        $z0 = virtualinvoke $r1.<java.io.File: boolean delete()>();

        return $z0;
    }

    public boolean exists()
    {
        androidx.documentfile.provider.RawDocumentFile $r0;
        boolean $z0;
        java.io.File $r1;

        $r0 := @this: androidx.documentfile.provider.RawDocumentFile;

        $r1 = $r0.<androidx.documentfile.provider.RawDocumentFile: java.io.File mFile>;

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        return $z0;
    }

    public java.lang.String getName()
    {
        androidx.documentfile.provider.RawDocumentFile $r0;
        java.lang.String $r1;
        java.io.File $r2;

        $r0 := @this: androidx.documentfile.provider.RawDocumentFile;

        $r2 = $r0.<androidx.documentfile.provider.RawDocumentFile: java.io.File mFile>;

        $r1 = virtualinvoke $r2.<java.io.File: java.lang.String getName()>();

        return $r1;
    }

    public java.lang.String getType()
    {
        androidx.documentfile.provider.RawDocumentFile $r0;
        java.io.File $r1;
        boolean $z0;
        java.lang.String $r2;

        $r0 := @this: androidx.documentfile.provider.RawDocumentFile;

        $r1 = $r0.<androidx.documentfile.provider.RawDocumentFile: java.io.File mFile>;

        $z0 = virtualinvoke $r1.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r1 = $r0.<androidx.documentfile.provider.RawDocumentFile: java.io.File mFile>;

        $r2 = virtualinvoke $r1.<java.io.File: java.lang.String getName()>();

        $r2 = staticinvoke <androidx.documentfile.provider.RawDocumentFile: java.lang.String getTypeForName(java.lang.String)>($r2);

        return $r2;
    }

    public android.net.Uri getUri()
    {
        androidx.documentfile.provider.RawDocumentFile $r0;
        android.net.Uri $r1;
        java.io.File $r2;

        $r0 := @this: androidx.documentfile.provider.RawDocumentFile;

        $r2 = $r0.<androidx.documentfile.provider.RawDocumentFile: java.io.File mFile>;

        $r1 = staticinvoke <android.net.Uri: android.net.Uri fromFile(java.io.File)>($r2);

        return $r1;
    }

    public boolean isDirectory()
    {
        androidx.documentfile.provider.RawDocumentFile $r0;
        boolean $z0;
        java.io.File $r1;

        $r0 := @this: androidx.documentfile.provider.RawDocumentFile;

        $r1 = $r0.<androidx.documentfile.provider.RawDocumentFile: java.io.File mFile>;

        $z0 = virtualinvoke $r1.<java.io.File: boolean isDirectory()>();

        return $z0;
    }

    public boolean isFile()
    {
        androidx.documentfile.provider.RawDocumentFile $r0;
        boolean $z0;
        java.io.File $r1;

        $r0 := @this: androidx.documentfile.provider.RawDocumentFile;

        $r1 = $r0.<androidx.documentfile.provider.RawDocumentFile: java.io.File mFile>;

        $z0 = virtualinvoke $r1.<java.io.File: boolean isFile()>();

        return $z0;
    }

    public boolean isVirtual()
    {
        androidx.documentfile.provider.RawDocumentFile $r0;

        $r0 := @this: androidx.documentfile.provider.RawDocumentFile;

        return 0;
    }

    public long lastModified()
    {
        androidx.documentfile.provider.RawDocumentFile $r0;
        long $l0;
        java.io.File $r1;

        $r0 := @this: androidx.documentfile.provider.RawDocumentFile;

        $r1 = $r0.<androidx.documentfile.provider.RawDocumentFile: java.io.File mFile>;

        $l0 = virtualinvoke $r1.<java.io.File: long lastModified()>();

        return $l0;
    }

    public long length()
    {
        androidx.documentfile.provider.RawDocumentFile $r0;
        long $l0;
        java.io.File $r1;

        $r0 := @this: androidx.documentfile.provider.RawDocumentFile;

        $r1 = $r0.<androidx.documentfile.provider.RawDocumentFile: java.io.File mFile>;

        $l0 = virtualinvoke $r1.<java.io.File: long length()>();

        return $l0;
    }

    public androidx.documentfile.provider.DocumentFile[] listFiles()
    {
        androidx.documentfile.provider.RawDocumentFile $r0, $r3;
        java.util.ArrayList $r1;
        java.io.File $r2;
        java.io.File[] $r4;
        int $i0, $i1;
        androidx.documentfile.provider.DocumentFile[] $r5;
        java.lang.Object[] $r6;

        $r0 := @this: androidx.documentfile.provider.RawDocumentFile;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r2 = $r0.<androidx.documentfile.provider.RawDocumentFile: java.io.File mFile>;

        $r4 = virtualinvoke $r2.<java.io.File: java.io.File[] listFiles()>();

        if $r4 == null goto label2;

        $i0 = lengthof $r4;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r2 = $r4[$i1];

        $r3 = new androidx.documentfile.provider.RawDocumentFile;

        specialinvoke $r3.<androidx.documentfile.provider.RawDocumentFile: void <init>(androidx.documentfile.provider.DocumentFile,java.io.File)>($r0, $r2);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $r5 = newarray (androidx.documentfile.provider.DocumentFile)[$i0];

        $r6 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r5);

        $r5 = (androidx.documentfile.provider.DocumentFile[]) $r6;

        return $r5;
    }

    public boolean renameTo(java.lang.String)
    {
        androidx.documentfile.provider.RawDocumentFile $r0;
        java.lang.String $r1;
        java.io.File $r2, $r3;
        boolean $z0;

        $r0 := @this: androidx.documentfile.provider.RawDocumentFile;

        $r1 := @parameter0: java.lang.String;

        $r2 = new java.io.File;

        $r3 = $r0.<androidx.documentfile.provider.RawDocumentFile: java.io.File mFile>;

        $r3 = virtualinvoke $r3.<java.io.File: java.io.File getParentFile()>();

        specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, $r1);

        $r3 = $r0.<androidx.documentfile.provider.RawDocumentFile: java.io.File mFile>;

        $z0 = virtualinvoke $r3.<java.io.File: boolean renameTo(java.io.File)>($r2);

        if $z0 == 0 goto label1;

        $r0.<androidx.documentfile.provider.RawDocumentFile: java.io.File mFile> = $r2;

        return 1;

     label1:
        return 0;
    }
}
