public class androidx.constraintlayout.solver.widgets.Rectangle extends java.lang.Object
{
    public int height;
    public int width;
    public int x;
    public int y;

    public void <init>()
    {
        androidx.constraintlayout.solver.widgets.Rectangle $r0;

        $r0 := @this: androidx.constraintlayout.solver.widgets.Rectangle;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean contains(int, int)
    {
        androidx.constraintlayout.solver.widgets.Rectangle $r0;
        int $i0, $i1, $i2, $i3;

        $r0 := @this: androidx.constraintlayout.solver.widgets.Rectangle;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = $r0.<androidx.constraintlayout.solver.widgets.Rectangle: int x>;

        if $i0 < $i2 goto label1;

        $i3 = $r0.<androidx.constraintlayout.solver.widgets.Rectangle: int width>;

        $i2 = $i2 + $i3;

        if $i0 >= $i2 goto label1;

        $i0 = $r0.<androidx.constraintlayout.solver.widgets.Rectangle: int y>;

        if $i1 < $i0 goto label1;

        $i2 = $r0.<androidx.constraintlayout.solver.widgets.Rectangle: int height>;

        $i0 = $i0 + $i2;

        if $i1 >= $i0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public int getCenterX()
    {
        androidx.constraintlayout.solver.widgets.Rectangle $r0;
        int $i0, $i1;

        $r0 := @this: androidx.constraintlayout.solver.widgets.Rectangle;

        $i1 = $r0.<androidx.constraintlayout.solver.widgets.Rectangle: int x>;

        $i0 = $r0.<androidx.constraintlayout.solver.widgets.Rectangle: int width>;

        $i0 = $i1 + $i0;

        $i0 = $i0 / 2;

        return $i0;
    }

    public int getCenterY()
    {
        androidx.constraintlayout.solver.widgets.Rectangle $r0;
        int $i0, $i1;

        $r0 := @this: androidx.constraintlayout.solver.widgets.Rectangle;

        $i1 = $r0.<androidx.constraintlayout.solver.widgets.Rectangle: int y>;

        $i0 = $r0.<androidx.constraintlayout.solver.widgets.Rectangle: int height>;

        $i0 = $i1 + $i0;

        $i0 = $i0 / 2;

        return $i0;
    }

    void grow(int, int)
    {
        androidx.constraintlayout.solver.widgets.Rectangle $r0;
        int $i0, $i1, $i2;

        $r0 := @this: androidx.constraintlayout.solver.widgets.Rectangle;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = $r0.<androidx.constraintlayout.solver.widgets.Rectangle: int x>;

        $i2 = $i2 - $i0;

        $r0.<androidx.constraintlayout.solver.widgets.Rectangle: int x> = $i2;

        $i2 = $r0.<androidx.constraintlayout.solver.widgets.Rectangle: int y>;

        $i2 = $i2 - $i1;

        $r0.<androidx.constraintlayout.solver.widgets.Rectangle: int y> = $i2;

        $i2 = $r0.<androidx.constraintlayout.solver.widgets.Rectangle: int width>;

        $i0 = $i0 * 2;

        $i0 = $i2 + $i0;

        $r0.<androidx.constraintlayout.solver.widgets.Rectangle: int width> = $i0;

        $i0 = $r0.<androidx.constraintlayout.solver.widgets.Rectangle: int height>;

        $i1 = $i1 * 2;

        $i0 = $i0 + $i1;

        $r0.<androidx.constraintlayout.solver.widgets.Rectangle: int height> = $i0;

        return;
    }

    boolean intersects(androidx.constraintlayout.solver.widgets.Rectangle)
    {
        androidx.constraintlayout.solver.widgets.Rectangle $r0, $r1;
        int $i0, $i1, $i2;

        $r0 := @this: androidx.constraintlayout.solver.widgets.Rectangle;

        $r1 := @parameter0: androidx.constraintlayout.solver.widgets.Rectangle;

        $i0 = $r0.<androidx.constraintlayout.solver.widgets.Rectangle: int x>;

        $i1 = $r1.<androidx.constraintlayout.solver.widgets.Rectangle: int x>;

        if $i0 < $i1 goto label1;

        $i2 = $r1.<androidx.constraintlayout.solver.widgets.Rectangle: int width>;

        $i1 = $i1 + $i2;

        if $i0 >= $i1 goto label1;

        $i0 = $r0.<androidx.constraintlayout.solver.widgets.Rectangle: int y>;

        $i1 = $r1.<androidx.constraintlayout.solver.widgets.Rectangle: int y>;

        if $i0 < $i1 goto label1;

        $i2 = $r1.<androidx.constraintlayout.solver.widgets.Rectangle: int height>;

        $i1 = $i1 + $i2;

        if $i0 >= $i1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void setBounds(int, int, int, int)
    {
        androidx.constraintlayout.solver.widgets.Rectangle $r0;
        int $i0, $i1, $i2, $i3;

        $r0 := @this: androidx.constraintlayout.solver.widgets.Rectangle;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $r0.<androidx.constraintlayout.solver.widgets.Rectangle: int x> = $i0;

        $r0.<androidx.constraintlayout.solver.widgets.Rectangle: int y> = $i1;

        $r0.<androidx.constraintlayout.solver.widgets.Rectangle: int width> = $i2;

        $r0.<androidx.constraintlayout.solver.widgets.Rectangle: int height> = $i3;

        return;
    }
}
