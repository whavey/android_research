final class androidx.drawerlayout.widget.DrawerLayout$ChildAccessibilityDelegate extends androidx.core.view.AccessibilityDelegateCompat
{

    void <init>()
    {
        androidx.drawerlayout.widget.DrawerLayout$ChildAccessibilityDelegate $r0;

        $r0 := @this: androidx.drawerlayout.widget.DrawerLayout$ChildAccessibilityDelegate;

        specialinvoke $r0.<androidx.core.view.AccessibilityDelegateCompat: void <init>()>();

        return;
    }

    public void onInitializeAccessibilityNodeInfo(android.view.View, androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
    {
        androidx.drawerlayout.widget.DrawerLayout$ChildAccessibilityDelegate $r0;
        android.view.View $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat $r2;
        boolean $z0;

        $r0 := @this: androidx.drawerlayout.widget.DrawerLayout$ChildAccessibilityDelegate;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: androidx.core.view.accessibility.AccessibilityNodeInfoCompat;

        specialinvoke $r0.<androidx.core.view.AccessibilityDelegateCompat: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)>($r1, $r2);

        $z0 = staticinvoke <androidx.drawerlayout.widget.DrawerLayout: boolean includeChildForAccessibility(android.view.View)>($r1);

        if $z0 != 0 goto label1;

        virtualinvoke $r2.<androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setParent(android.view.View)>(null);

     label1:
        return;
    }
}
