class androidx.versionedparcelable.VersionedParcelStream extends androidx.versionedparcelable.VersionedParcel
{
    private static final int TYPE_BOOLEAN;
    private static final int TYPE_BOOLEAN_ARRAY;
    private static final int TYPE_DOUBLE;
    private static final int TYPE_DOUBLE_ARRAY;
    private static final int TYPE_FLOAT;
    private static final int TYPE_FLOAT_ARRAY;
    private static final int TYPE_INT;
    private static final int TYPE_INT_ARRAY;
    private static final int TYPE_LONG;
    private static final int TYPE_LONG_ARRAY;
    private static final int TYPE_NULL;
    private static final int TYPE_STRING;
    private static final int TYPE_STRING_ARRAY;
    private static final int TYPE_SUB_BUNDLE;
    private static final int TYPE_SUB_PERSISTABLE_BUNDLE;
    private static final java.nio.charset.Charset UTF_16;
    private final android.util.SparseArray mCachedFields;
    private java.io.DataInputStream mCurrentInput;
    private java.io.DataOutputStream mCurrentOutput;
    private androidx.versionedparcelable.VersionedParcelStream$FieldBuffer mFieldBuffer;
    private boolean mIgnoreParcelables;
    private final java.io.DataInputStream mMasterInput;
    private final java.io.DataOutputStream mMasterOutput;

    static void <clinit>()
    {
        java.nio.charset.Charset $r0;

        <androidx.versionedparcelable.VersionedParcelStream: int TYPE_SUB_PERSISTABLE_BUNDLE> = 2;

        <androidx.versionedparcelable.VersionedParcelStream: int TYPE_SUB_BUNDLE> = 1;

        <androidx.versionedparcelable.VersionedParcelStream: int TYPE_STRING_ARRAY> = 4;

        <androidx.versionedparcelable.VersionedParcelStream: int TYPE_STRING> = 3;

        <androidx.versionedparcelable.VersionedParcelStream: int TYPE_NULL> = 0;

        <androidx.versionedparcelable.VersionedParcelStream: int TYPE_LONG_ARRAY> = 12;

        <androidx.versionedparcelable.VersionedParcelStream: int TYPE_LONG> = 11;

        <androidx.versionedparcelable.VersionedParcelStream: int TYPE_INT_ARRAY> = 10;

        <androidx.versionedparcelable.VersionedParcelStream: int TYPE_INT> = 9;

        <androidx.versionedparcelable.VersionedParcelStream: int TYPE_FLOAT_ARRAY> = 14;

        <androidx.versionedparcelable.VersionedParcelStream: int TYPE_FLOAT> = 13;

        <androidx.versionedparcelable.VersionedParcelStream: int TYPE_DOUBLE_ARRAY> = 8;

        <androidx.versionedparcelable.VersionedParcelStream: int TYPE_DOUBLE> = 7;

        <androidx.versionedparcelable.VersionedParcelStream: int TYPE_BOOLEAN_ARRAY> = 6;

        <androidx.versionedparcelable.VersionedParcelStream: int TYPE_BOOLEAN> = 5;

        $r0 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("UTF-16");

        <androidx.versionedparcelable.VersionedParcelStream: java.nio.charset.Charset UTF_16> = $r0;

        return;
    }

    public void <init>(java.io.InputStream, java.io.OutputStream)
    {
        androidx.versionedparcelable.VersionedParcelStream $r0;
        java.io.InputStream $r1;
        java.io.OutputStream $r2;
        android.util.SparseArray $r3;
        java.io.DataOutputStream $r4;
        java.io.DataInputStream $r5;

        $r0 := @this: androidx.versionedparcelable.VersionedParcelStream;

        $r1 := @parameter0: java.io.InputStream;

        $r2 := @parameter1: java.io.OutputStream;

        specialinvoke $r0.<androidx.versionedparcelable.VersionedParcel: void <init>()>();

        $r3 = new android.util.SparseArray;

        specialinvoke $r3.<android.util.SparseArray: void <init>()>();

        $r0.<androidx.versionedparcelable.VersionedParcelStream: android.util.SparseArray mCachedFields> = $r3;

        $r4 = null;

        if $r1 == null goto label1;

        $r5 = new java.io.DataInputStream;

        specialinvoke $r5.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r1);

        goto label2;

     label1:
        $r5 = null;

     label2:
        $r0.<androidx.versionedparcelable.VersionedParcelStream: java.io.DataInputStream mMasterInput> = $r5;

        if $r2 == null goto label3;

        $r4 = new java.io.DataOutputStream;

        specialinvoke $r4.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r2);

     label3:
        $r0.<androidx.versionedparcelable.VersionedParcelStream: java.io.DataOutputStream mMasterOutput> = $r4;

        $r5 = $r0.<androidx.versionedparcelable.VersionedParcelStream: java.io.DataInputStream mMasterInput>;

        $r0.<androidx.versionedparcelable.VersionedParcelStream: java.io.DataInputStream mCurrentInput> = $r5;

        $r4 = $r0.<androidx.versionedparcelable.VersionedParcelStream: java.io.DataOutputStream mMasterOutput>;

        $r0.<androidx.versionedparcelable.VersionedParcelStream: java.io.DataOutputStream mCurrentOutput> = $r4;

        return;
    }

    private void readObject(int, java.lang.String, android.os.Bundle)
    {
        androidx.versionedparcelable.VersionedParcelStream $r0;
        int $i0;
        java.lang.String $r1, $r12;
        android.os.Bundle $r2, $r13;
        java.lang.RuntimeException $r3;
        java.lang.StringBuilder $r4;
        float[] $r5;
        float $f0;
        long[] $r6;
        long $l1;
        int[] $r7;
        double[] $r8;
        double $d0;
        boolean[] $r9;
        boolean $z0;
        java.lang.String[] $r10;
        java.lang.Object[] $r11;

        $r0 := @this: androidx.versionedparcelable.VersionedParcelStream;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: android.os.Bundle;

        lookupswitch($i0)
        {
            case 0: goto label16;
            case 1: goto label15;
            case 2: goto label14;
            case 3: goto label13;
            case 4: goto label12;
            case 5: goto label11;
            case 6: goto label10;
            case 7: goto label09;
            case 8: goto label08;
            case 9: goto label07;
            case 10: goto label06;
            case 11: goto label05;
            case 12: goto label04;
            case 13: goto label03;
            case 14: goto label02;
            default: goto label01;
        };

     label01:
        $r3 = new java.lang.RuntimeException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown type ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>($r1);

        throw $r3;

     label02:
        $r5 = virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcelStream: float[] readFloatArray()>();

        virtualinvoke $r2.<android.os.Bundle: void putFloatArray(java.lang.String,float[])>($r1, $r5);

        return;

     label03:
        $f0 = virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcelStream: float readFloat()>();

        virtualinvoke $r2.<android.os.Bundle: void putFloat(java.lang.String,float)>($r1, $f0);

        return;

     label04:
        $r6 = virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcelStream: long[] readLongArray()>();

        virtualinvoke $r2.<android.os.Bundle: void putLongArray(java.lang.String,long[])>($r1, $r6);

        return;

     label05:
        $l1 = virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcelStream: long readLong()>();

        virtualinvoke $r2.<android.os.Bundle: void putLong(java.lang.String,long)>($r1, $l1);

        return;

     label06:
        $r7 = virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcelStream: int[] readIntArray()>();

        virtualinvoke $r2.<android.os.Bundle: void putIntArray(java.lang.String,int[])>($r1, $r7);

        return;

     label07:
        $i0 = virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcelStream: int readInt()>();

        virtualinvoke $r2.<android.os.Bundle: void putInt(java.lang.String,int)>($r1, $i0);

        return;

     label08:
        $r8 = virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcelStream: double[] readDoubleArray()>();

        virtualinvoke $r2.<android.os.Bundle: void putDoubleArray(java.lang.String,double[])>($r1, $r8);

        return;

     label09:
        $d0 = virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcelStream: double readDouble()>();

        virtualinvoke $r2.<android.os.Bundle: void putDouble(java.lang.String,double)>($r1, $d0);

        return;

     label10:
        $r9 = virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcelStream: boolean[] readBooleanArray()>();

        virtualinvoke $r2.<android.os.Bundle: void putBooleanArray(java.lang.String,boolean[])>($r1, $r9);

        return;

     label11:
        $z0 = virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcelStream: boolean readBoolean()>();

        virtualinvoke $r2.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>($r1, $z0);

        return;

     label12:
        $r10 = newarray (java.lang.String)[0];

        $r11 = virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcelStream: java.lang.Object[] readArray(java.lang.Object[])>($r10);

        $r10 = (java.lang.String[]) $r11;

        virtualinvoke $r2.<android.os.Bundle: void putStringArray(java.lang.String,java.lang.String[])>($r1, $r10);

        return;

     label13:
        $r12 = virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcelStream: java.lang.String readString()>();

        virtualinvoke $r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>($r1, $r12);

        return;

     label14:
        $r13 = virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcelStream: android.os.Bundle readBundle()>();

        virtualinvoke $r2.<android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)>($r1, $r13);

        return;

     label15:
        $r13 = virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcelStream: android.os.Bundle readBundle()>();

        virtualinvoke $r2.<android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)>($r1, $r13);

        return;

     label16:
        virtualinvoke $r2.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>($r1, null);

        return;
    }

    private void writeObject(java.lang.Object)
    {
        androidx.versionedparcelable.VersionedParcelStream $r0;
        java.lang.Object $r1;
        boolean $z0;
        android.os.Bundle $r2;
        java.lang.String $r3;
        java.lang.String[] $r4;
        java.lang.Boolean $r5;
        boolean[] $r6;
        java.lang.Double $r7;
        double $d0;
        double[] $r8;
        java.lang.Integer $r9;
        int $i0;
        int[] $r10;
        java.lang.Long $r11;
        long $l1;
        long[] $r12;
        java.lang.Float $r13;
        float $f0;
        float[] $r14;
        java.lang.IllegalArgumentException $r15;
        java.lang.StringBuilder $r16;
        java.lang.Class $r17;

        $r0 := @this: androidx.versionedparcelable.VersionedParcelStream;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != null goto label01;

        virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcelStream: void writeInt(int)>(0);

        return;

     label01:
        $z0 = $r1 instanceof android.os.Bundle;

        if $z0 == 0 goto label02;

        virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcelStream: void writeInt(int)>(1);

        $r2 = (android.os.Bundle) $r1;

        virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcelStream: void writeBundle(android.os.Bundle)>($r2);

        return;

     label02:
        $z0 = $r1 instanceof java.lang.String;

        if $z0 == 0 goto label03;

        virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcelStream: void writeInt(int)>(3);

        $r3 = (java.lang.String) $r1;

        virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcelStream: void writeString(java.lang.String)>($r3);

        return;

     label03:
        $z0 = $r1 instanceof java.lang.String[];

        if $z0 == 0 goto label04;

        virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcelStream: void writeInt(int)>(4);

        $r4 = (java.lang.String[]) $r1;

        virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcelStream: void writeArray(java.lang.Object[])>($r4);

        return;

     label04:
        $z0 = $r1 instanceof java.lang.Boolean;

        if $z0 == 0 goto label05;

        virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcelStream: void writeInt(int)>(5);

        $r5 = (java.lang.Boolean) $r1;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcelStream: void writeBoolean(boolean)>($z0);

        return;

     label05:
        $z0 = $r1 instanceof boolean[];

        if $z0 == 0 goto label06;

        virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcelStream: void writeInt(int)>(6);

        $r6 = (boolean[]) $r1;

        virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcelStream: void writeBooleanArray(boolean[])>($r6);

        return;

     label06:
        $z0 = $r1 instanceof java.lang.Double;

        if $z0 == 0 goto label07;

        virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcelStream: void writeInt(int)>(7);

        $r7 = (java.lang.Double) $r1;

        $d0 = virtualinvoke $r7.<java.lang.Double: double doubleValue()>();

        virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcelStream: void writeDouble(double)>($d0);

        return;

     label07:
        $z0 = $r1 instanceof double[];

        if $z0 == 0 goto label08;

        virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcelStream: void writeInt(int)>(8);

        $r8 = (double[]) $r1;

        virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcelStream: void writeDoubleArray(double[])>($r8);

        return;

     label08:
        $z0 = $r1 instanceof java.lang.Integer;

        if $z0 == 0 goto label09;

        virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcelStream: void writeInt(int)>(9);

        $r9 = (java.lang.Integer) $r1;

        $i0 = virtualinvoke $r9.<java.lang.Integer: int intValue()>();

        virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcelStream: void writeInt(int)>($i0);

        return;

     label09:
        $z0 = $r1 instanceof int[];

        if $z0 == 0 goto label10;

        virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcelStream: void writeInt(int)>(10);

        $r10 = (int[]) $r1;

        virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcelStream: void writeIntArray(int[])>($r10);

        return;

     label10:
        $z0 = $r1 instanceof java.lang.Long;

        if $z0 == 0 goto label11;

        virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcelStream: void writeInt(int)>(11);

        $r11 = (java.lang.Long) $r1;

        $l1 = virtualinvoke $r11.<java.lang.Long: long longValue()>();

        virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcelStream: void writeLong(long)>($l1);

        return;

     label11:
        $z0 = $r1 instanceof long[];

        if $z0 == 0 goto label12;

        virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcelStream: void writeInt(int)>(12);

        $r12 = (long[]) $r1;

        virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcelStream: void writeLongArray(long[])>($r12);

        return;

     label12:
        $z0 = $r1 instanceof java.lang.Float;

        if $z0 == 0 goto label13;

        virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcelStream: void writeInt(int)>(13);

        $r13 = (java.lang.Float) $r1;

        $f0 = virtualinvoke $r13.<java.lang.Float: float floatValue()>();

        virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcelStream: void writeFloat(float)>($f0);

        return;

     label13:
        $z0 = $r1 instanceof float[];

        if $z0 == 0 goto label14;

        virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcelStream: void writeInt(int)>(14);

        $r14 = (float[]) $r1;

        virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcelStream: void writeFloatArray(float[])>($r14);

        return;

     label14:
        $r15 = new java.lang.IllegalArgumentException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported type ");

        $r17 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        $r3 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r15;
    }

    public void closeField()
    {
        androidx.versionedparcelable.VersionedParcelStream $r0;
        androidx.versionedparcelable.VersionedParcel$ParcelException $r1;
        int $i0;
        androidx.versionedparcelable.VersionedParcelStream$FieldBuffer $r2;
        java.io.ByteArrayOutputStream $r3;
        java.lang.Throwable $r4;

        $r0 := @this: androidx.versionedparcelable.VersionedParcelStream;

        $r2 = $r0.<androidx.versionedparcelable.VersionedParcelStream: androidx.versionedparcelable.VersionedParcelStream$FieldBuffer mFieldBuffer>;

        if $r2 == null goto label6;

        $r3 = $r2.<androidx.versionedparcelable.VersionedParcelStream$FieldBuffer: java.io.ByteArrayOutputStream mOutput>;

     label1:
        $i0 = virtualinvoke $r3.<java.io.ByteArrayOutputStream: int size()>();

     label2:
        if $i0 == 0 goto label4;

        $r2 = $r0.<androidx.versionedparcelable.VersionedParcelStream: androidx.versionedparcelable.VersionedParcelStream$FieldBuffer mFieldBuffer>;

     label3:
        virtualinvoke $r2.<androidx.versionedparcelable.VersionedParcelStream$FieldBuffer: void flushField()>();

     label4:
        $r0.<androidx.versionedparcelable.VersionedParcelStream: androidx.versionedparcelable.VersionedParcelStream$FieldBuffer mFieldBuffer> = null;

        return;

     label5:
        $r4 := @caughtexception;

        $r1 = new androidx.versionedparcelable.VersionedParcel$ParcelException;

        specialinvoke $r1.<androidx.versionedparcelable.VersionedParcel$ParcelException: void <init>(java.lang.Throwable)>($r4);

        throw $r1;

     label6:
        return;

        catch java.io.IOException from label1 to label2 with label5;
        catch java.io.IOException from label3 to label4 with label5;
    }

    protected androidx.versionedparcelable.VersionedParcel createSubParcel()
    {
        androidx.versionedparcelable.VersionedParcelStream $r0, $r1;
        java.io.DataInputStream $r2;
        java.io.DataOutputStream $r3;

        $r0 := @this: androidx.versionedparcelable.VersionedParcelStream;

        $r1 = new androidx.versionedparcelable.VersionedParcelStream;

        $r2 = $r0.<androidx.versionedparcelable.VersionedParcelStream: java.io.DataInputStream mCurrentInput>;

        $r3 = $r0.<androidx.versionedparcelable.VersionedParcelStream: java.io.DataOutputStream mCurrentOutput>;

        specialinvoke $r1.<androidx.versionedparcelable.VersionedParcelStream: void <init>(java.io.InputStream,java.io.OutputStream)>($r2, $r3);

        return $r1;
    }

    public boolean isStream()
    {
        androidx.versionedparcelable.VersionedParcelStream $r0;

        $r0 := @this: androidx.versionedparcelable.VersionedParcelStream;

        return 1;
    }

    public boolean readBoolean()
    {
        androidx.versionedparcelable.VersionedParcelStream $r0;
        androidx.versionedparcelable.VersionedParcel$ParcelException $r1;
        boolean $z0;
        java.io.DataInputStream $r2;
        java.lang.Throwable $r3;

        $r0 := @this: androidx.versionedparcelable.VersionedParcelStream;

        $r2 = $r0.<androidx.versionedparcelable.VersionedParcelStream: java.io.DataInputStream mCurrentInput>;

     label1:
        $z0 = virtualinvoke $r2.<java.io.DataInputStream: boolean readBoolean()>();

     label2:
        return $z0;

     label3:
        $r3 := @caughtexception;

        $r1 = new androidx.versionedparcelable.VersionedParcel$ParcelException;

        specialinvoke $r1.<androidx.versionedparcelable.VersionedParcel$ParcelException: void <init>(java.lang.Throwable)>($r3);

        throw $r1;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public android.os.Bundle readBundle()
    {
        androidx.versionedparcelable.VersionedParcelStream $r0;
        int $i0, $i1, $i2;
        android.os.Bundle $r1;
        java.lang.String $r2;

        $r0 := @this: androidx.versionedparcelable.VersionedParcelStream;

        $i0 = virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcelStream: int readInt()>();

        if $i0 >= 0 goto label1;

        return null;

     label1:
        $r1 = new android.os.Bundle;

        specialinvoke $r1.<android.os.Bundle: void <init>()>();

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label3;

        $r2 = virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcelStream: java.lang.String readString()>();

        $i2 = virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcelStream: int readInt()>();

        specialinvoke $r0.<androidx.versionedparcelable.VersionedParcelStream: void readObject(int,java.lang.String,android.os.Bundle)>($i2, $r2, $r1);

        $i1 = $i1 + 1;

        goto label2;

     label3:
        return $r1;
    }

    public byte[] readByteArray()
    {
        androidx.versionedparcelable.VersionedParcelStream $r0;
        java.io.DataInputStream $r1;
        int $i0;
        byte[] $r2;
        java.lang.Throwable $r3;
        androidx.versionedparcelable.VersionedParcel$ParcelException $r4;

        $r0 := @this: androidx.versionedparcelable.VersionedParcelStream;

        $r1 = $r0.<androidx.versionedparcelable.VersionedParcelStream: java.io.DataInputStream mCurrentInput>;

     label1:
        $i0 = virtualinvoke $r1.<java.io.DataInputStream: int readInt()>();

     label2:
        if $i0 <= 0 goto label5;

        $r2 = newarray (byte)[$i0];

        $r1 = $r0.<androidx.versionedparcelable.VersionedParcelStream: java.io.DataInputStream mCurrentInput>;

     label3:
        virtualinvoke $r1.<java.io.DataInputStream: void readFully(byte[])>($r2);

     label4:
        return $r2;

     label5:
        return null;

     label6:
        $r3 := @caughtexception;

        $r4 = new androidx.versionedparcelable.VersionedParcel$ParcelException;

        specialinvoke $r4.<androidx.versionedparcelable.VersionedParcel$ParcelException: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

        catch java.io.IOException from label1 to label2 with label6;
        catch java.io.IOException from label3 to label4 with label6;
    }

    public double readDouble()
    {
        androidx.versionedparcelable.VersionedParcelStream $r0;
        androidx.versionedparcelable.VersionedParcel$ParcelException $r1;
        double $d0;
        java.io.DataInputStream $r2;
        java.lang.Throwable $r3;

        $r0 := @this: androidx.versionedparcelable.VersionedParcelStream;

        $r2 = $r0.<androidx.versionedparcelable.VersionedParcelStream: java.io.DataInputStream mCurrentInput>;

     label1:
        $d0 = virtualinvoke $r2.<java.io.DataInputStream: double readDouble()>();

     label2:
        return $d0;

     label3:
        $r3 := @caughtexception;

        $r1 = new androidx.versionedparcelable.VersionedParcel$ParcelException;

        specialinvoke $r1.<androidx.versionedparcelable.VersionedParcel$ParcelException: void <init>(java.lang.Throwable)>($r3);

        throw $r1;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public boolean readField(int)
    {
        androidx.versionedparcelable.VersionedParcelStream $r0;
        int $i0, $i1, $i2;
        android.util.SparseArray $r1;
        java.lang.Object $r2;
        androidx.versionedparcelable.VersionedParcelStream$InputBuffer $r3;
        java.io.DataInputStream $r4;
        java.lang.Throwable $r5;

        $r0 := @this: androidx.versionedparcelable.VersionedParcelStream;

        $i0 := @parameter0: int;

        $r1 = $r0.<androidx.versionedparcelable.VersionedParcelStream: android.util.SparseArray mCachedFields>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object get(int)>($i0);

        $r3 = (androidx.versionedparcelable.VersionedParcelStream$InputBuffer) $r2;

        if $r3 == null goto label01;

        $r1 = $r0.<androidx.versionedparcelable.VersionedParcelStream: android.util.SparseArray mCachedFields>;

        virtualinvoke $r1.<android.util.SparseArray: void remove(int)>($i0);

        $r4 = $r3.<androidx.versionedparcelable.VersionedParcelStream$InputBuffer: java.io.DataInputStream mInputStream>;

        $r0.<androidx.versionedparcelable.VersionedParcelStream: java.io.DataInputStream mCurrentInput> = $r4;

        return 1;

     label01:
        $r4 = $r0.<androidx.versionedparcelable.VersionedParcelStream: java.io.DataInputStream mMasterInput>;

     label02:
        $i1 = virtualinvoke $r4.<java.io.DataInputStream: int readInt()>();

     label03:
        $i2 = $i1 & 65535;

        if $i2 != 65535 goto label05;

        $r4 = $r0.<androidx.versionedparcelable.VersionedParcelStream: java.io.DataInputStream mMasterInput>;

     label04:
        $i2 = virtualinvoke $r4.<java.io.DataInputStream: int readInt()>();

     label05:
        $r3 = new androidx.versionedparcelable.VersionedParcelStream$InputBuffer;

        $i1 = $i1 >> 16;

        $i1 = 65535 & $i1;

        $r4 = $r0.<androidx.versionedparcelable.VersionedParcelStream: java.io.DataInputStream mMasterInput>;

     label06:
        specialinvoke $r3.<androidx.versionedparcelable.VersionedParcelStream$InputBuffer: void <init>(int,int,java.io.DataInputStream)>($i1, $i2, $r4);

     label07:
        $i2 = $r3.<androidx.versionedparcelable.VersionedParcelStream$InputBuffer: int mFieldId>;

        if $i2 != $i0 goto label08;

        $r4 = $r3.<androidx.versionedparcelable.VersionedParcelStream$InputBuffer: java.io.DataInputStream mInputStream>;

        $r0.<androidx.versionedparcelable.VersionedParcelStream: java.io.DataInputStream mCurrentInput> = $r4;

        return 1;

     label08:
        $r1 = $r0.<androidx.versionedparcelable.VersionedParcelStream: android.util.SparseArray mCachedFields>;

        $i2 = $r3.<androidx.versionedparcelable.VersionedParcelStream$InputBuffer: int mFieldId>;

     label09:
        virtualinvoke $r1.<android.util.SparseArray: void put(int,java.lang.Object)>($i2, $r3);

     label10:
        goto label01;

     label11:
        $r5 := @caughtexception;

        return 0;

        catch java.io.IOException from label02 to label03 with label11;
        catch java.io.IOException from label04 to label05 with label11;
        catch java.io.IOException from label06 to label07 with label11;
        catch java.io.IOException from label09 to label10 with label11;
    }

    public float readFloat()
    {
        androidx.versionedparcelable.VersionedParcelStream $r0;
        androidx.versionedparcelable.VersionedParcel$ParcelException $r1;
        float $f0;
        java.io.DataInputStream $r2;
        java.lang.Throwable $r3;

        $r0 := @this: androidx.versionedparcelable.VersionedParcelStream;

        $r2 = $r0.<androidx.versionedparcelable.VersionedParcelStream: java.io.DataInputStream mCurrentInput>;

     label1:
        $f0 = virtualinvoke $r2.<java.io.DataInputStream: float readFloat()>();

     label2:
        return $f0;

     label3:
        $r3 := @caughtexception;

        $r1 = new androidx.versionedparcelable.VersionedParcel$ParcelException;

        specialinvoke $r1.<androidx.versionedparcelable.VersionedParcel$ParcelException: void <init>(java.lang.Throwable)>($r3);

        throw $r1;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public int readInt()
    {
        androidx.versionedparcelable.VersionedParcelStream $r0;
        androidx.versionedparcelable.VersionedParcel$ParcelException $r1;
        int $i0;
        java.io.DataInputStream $r2;
        java.lang.Throwable $r3;

        $r0 := @this: androidx.versionedparcelable.VersionedParcelStream;

        $r2 = $r0.<androidx.versionedparcelable.VersionedParcelStream: java.io.DataInputStream mCurrentInput>;

     label1:
        $i0 = virtualinvoke $r2.<java.io.DataInputStream: int readInt()>();

     label2:
        return $i0;

     label3:
        $r3 := @caughtexception;

        $r1 = new androidx.versionedparcelable.VersionedParcel$ParcelException;

        specialinvoke $r1.<androidx.versionedparcelable.VersionedParcel$ParcelException: void <init>(java.lang.Throwable)>($r3);

        throw $r1;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public long readLong()
    {
        androidx.versionedparcelable.VersionedParcelStream $r0;
        androidx.versionedparcelable.VersionedParcel$ParcelException $r1;
        long $l0;
        java.io.DataInputStream $r2;
        java.lang.Throwable $r3;

        $r0 := @this: androidx.versionedparcelable.VersionedParcelStream;

        $r2 = $r0.<androidx.versionedparcelable.VersionedParcelStream: java.io.DataInputStream mCurrentInput>;

     label1:
        $l0 = virtualinvoke $r2.<java.io.DataInputStream: long readLong()>();

     label2:
        return $l0;

     label3:
        $r3 := @caughtexception;

        $r1 = new androidx.versionedparcelable.VersionedParcel$ParcelException;

        specialinvoke $r1.<androidx.versionedparcelable.VersionedParcel$ParcelException: void <init>(java.lang.Throwable)>($r3);

        throw $r1;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public android.os.Parcelable readParcelable()
    {
        androidx.versionedparcelable.VersionedParcelStream $r0;

        $r0 := @this: androidx.versionedparcelable.VersionedParcelStream;

        return null;
    }

    public java.lang.String readString()
    {
        androidx.versionedparcelable.VersionedParcelStream $r0;
        java.nio.charset.Charset $r1;
        int $i0;
        java.io.DataInputStream $r2;
        byte[] $r3;
        java.lang.String $r4;
        java.lang.Throwable $r5;
        androidx.versionedparcelable.VersionedParcel$ParcelException $r6;

        $r0 := @this: androidx.versionedparcelable.VersionedParcelStream;

        $r2 = $r0.<androidx.versionedparcelable.VersionedParcelStream: java.io.DataInputStream mCurrentInput>;

     label1:
        $i0 = virtualinvoke $r2.<java.io.DataInputStream: int readInt()>();

     label2:
        if $i0 <= 0 goto label7;

        $r3 = newarray (byte)[$i0];

        $r2 = $r0.<androidx.versionedparcelable.VersionedParcelStream: java.io.DataInputStream mCurrentInput>;

     label3:
        virtualinvoke $r2.<java.io.DataInputStream: void readFully(byte[])>($r3);

     label4:
        $r4 = new java.lang.String;

        $r1 = <androidx.versionedparcelable.VersionedParcelStream: java.nio.charset.Charset UTF_16>;

     label5:
        specialinvoke $r4.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>($r3, $r1);

     label6:
        return $r4;

     label7:
        return null;

     label8:
        $r5 := @caughtexception;

        $r6 = new androidx.versionedparcelable.VersionedParcel$ParcelException;

        specialinvoke $r6.<androidx.versionedparcelable.VersionedParcel$ParcelException: void <init>(java.lang.Throwable)>($r5);

        throw $r6;

        catch java.io.IOException from label1 to label2 with label8;
        catch java.io.IOException from label3 to label4 with label8;
        catch java.io.IOException from label5 to label6 with label8;
    }

    public android.os.IBinder readStrongBinder()
    {
        androidx.versionedparcelable.VersionedParcelStream $r0;

        $r0 := @this: androidx.versionedparcelable.VersionedParcelStream;

        return null;
    }

    public void setOutputField(int)
    {
        androidx.versionedparcelable.VersionedParcelStream $r0;
        int $i0;
        java.io.DataOutputStream $r1;
        androidx.versionedparcelable.VersionedParcelStream$FieldBuffer $r2;

        $r0 := @this: androidx.versionedparcelable.VersionedParcelStream;

        $i0 := @parameter0: int;

        virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcelStream: void closeField()>();

        $r2 = new androidx.versionedparcelable.VersionedParcelStream$FieldBuffer;

        $r1 = $r0.<androidx.versionedparcelable.VersionedParcelStream: java.io.DataOutputStream mMasterOutput>;

        specialinvoke $r2.<androidx.versionedparcelable.VersionedParcelStream$FieldBuffer: void <init>(int,java.io.DataOutputStream)>($i0, $r1);

        $r0.<androidx.versionedparcelable.VersionedParcelStream: androidx.versionedparcelable.VersionedParcelStream$FieldBuffer mFieldBuffer> = $r2;

        $r2 = $r0.<androidx.versionedparcelable.VersionedParcelStream: androidx.versionedparcelable.VersionedParcelStream$FieldBuffer mFieldBuffer>;

        $r1 = $r2.<androidx.versionedparcelable.VersionedParcelStream$FieldBuffer: java.io.DataOutputStream mDataStream>;

        $r0.<androidx.versionedparcelable.VersionedParcelStream: java.io.DataOutputStream mCurrentOutput> = $r1;

        return;
    }

    public void setSerializationFlags(boolean, boolean)
    {
        androidx.versionedparcelable.VersionedParcelStream $r0;
        boolean $z0, $z1;
        java.lang.RuntimeException $r1;

        $r0 := @this: androidx.versionedparcelable.VersionedParcelStream;

        $z0 := @parameter0: boolean;

        $z1 := @parameter1: boolean;

        if $z0 == 0 goto label1;

        $r0.<androidx.versionedparcelable.VersionedParcelStream: boolean mIgnoreParcelables> = $z1;

        return;

     label1:
        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Serialization of this object is not allowed");

        throw $r1;
    }

    public void writeBoolean(boolean)
    {
        androidx.versionedparcelable.VersionedParcelStream $r0;
        boolean $z0;
        androidx.versionedparcelable.VersionedParcel$ParcelException $r1;
        java.io.DataOutputStream $r2;
        java.lang.Throwable $r3;

        $r0 := @this: androidx.versionedparcelable.VersionedParcelStream;

        $z0 := @parameter0: boolean;

        $r2 = $r0.<androidx.versionedparcelable.VersionedParcelStream: java.io.DataOutputStream mCurrentOutput>;

     label1:
        virtualinvoke $r2.<java.io.DataOutputStream: void writeBoolean(boolean)>($z0);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r1 = new androidx.versionedparcelable.VersionedParcel$ParcelException;

        specialinvoke $r1.<androidx.versionedparcelable.VersionedParcel$ParcelException: void <init>(java.lang.Throwable)>($r3);

        throw $r1;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void writeBundle(android.os.Bundle)
    {
        androidx.versionedparcelable.VersionedParcelStream $r0;
        android.os.Bundle $r1;
        java.util.Set $r2;
        java.io.DataOutputStream $r3;
        int $i0;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        java.lang.String $r6;
        java.lang.Throwable $r7;
        androidx.versionedparcelable.VersionedParcel$ParcelException $r8;

        $r0 := @this: androidx.versionedparcelable.VersionedParcelStream;

        $r1 := @parameter0: android.os.Bundle;

        if $r1 == null goto label11;

     label01:
        $r2 = virtualinvoke $r1.<android.os.Bundle: java.util.Set keySet()>();

     label02:
        $r3 = $r0.<androidx.versionedparcelable.VersionedParcelStream: java.io.DataOutputStream mCurrentOutput>;

     label03:
        $i0 = interfaceinvoke $r2.<java.util.Set: int size()>();

        virtualinvoke $r3.<java.io.DataOutputStream: void writeInt(int)>($i0);

        $r4 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label04:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

     label05:
        if $z0 == 0 goto label10;

     label06:
        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

     label07:
        $r6 = (java.lang.String) $r5;

     label08:
        virtualinvoke $r0.<androidx.versionedparcelable.VersionedParcelStream: void writeString(java.lang.String)>($r6);

        $r5 = virtualinvoke $r1.<android.os.Bundle: java.lang.Object get(java.lang.String)>($r6);

        specialinvoke $r0.<androidx.versionedparcelable.VersionedParcelStream: void writeObject(java.lang.Object)>($r5);

     label09:
        goto label04;

     label10:
        goto label13;

     label11:
        $r3 = $r0.<androidx.versionedparcelable.VersionedParcelStream: java.io.DataOutputStream mCurrentOutput>;

     label12:
        virtualinvoke $r3.<java.io.DataOutputStream: void writeInt(int)>(-1);

     label13:
        return;

     label14:
        $r7 := @caughtexception;

        $r8 = new androidx.versionedparcelable.VersionedParcel$ParcelException;

        specialinvoke $r8.<androidx.versionedparcelable.VersionedParcel$ParcelException: void <init>(java.lang.Throwable)>($r7);

        throw $r8;

        catch java.io.IOException from label01 to label02 with label14;
        catch java.io.IOException from label03 to label05 with label14;
        catch java.io.IOException from label06 to label07 with label14;
        catch java.io.IOException from label08 to label09 with label14;
        catch java.io.IOException from label12 to label13 with label14;
    }

    public void writeByteArray(byte[])
    {
        androidx.versionedparcelable.VersionedParcelStream $r0;
        byte[] $r1;
        java.io.DataOutputStream $r2;
        int $i0;
        java.lang.Throwable $r3;
        androidx.versionedparcelable.VersionedParcel$ParcelException $r4;

        $r0 := @this: androidx.versionedparcelable.VersionedParcelStream;

        $r1 := @parameter0: byte[];

        if $r1 == null goto label5;

        $r2 = $r0.<androidx.versionedparcelable.VersionedParcelStream: java.io.DataOutputStream mCurrentOutput>;

        $i0 = lengthof $r1;

     label1:
        virtualinvoke $r2.<java.io.DataOutputStream: void writeInt(int)>($i0);

     label2:
        $r2 = $r0.<androidx.versionedparcelable.VersionedParcelStream: java.io.DataOutputStream mCurrentOutput>;

     label3:
        virtualinvoke $r2.<java.io.DataOutputStream: void write(byte[])>($r1);

     label4:
        goto label7;

     label5:
        $r2 = $r0.<androidx.versionedparcelable.VersionedParcelStream: java.io.DataOutputStream mCurrentOutput>;

     label6:
        virtualinvoke $r2.<java.io.DataOutputStream: void writeInt(int)>(-1);

     label7:
        return;

     label8:
        $r3 := @caughtexception;

        $r4 = new androidx.versionedparcelable.VersionedParcel$ParcelException;

        specialinvoke $r4.<androidx.versionedparcelable.VersionedParcel$ParcelException: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

        catch java.io.IOException from label1 to label2 with label8;
        catch java.io.IOException from label3 to label4 with label8;
        catch java.io.IOException from label6 to label7 with label8;
    }

    public void writeByteArray(byte[], int, int)
    {
        androidx.versionedparcelable.VersionedParcelStream $r0;
        byte[] $r1;
        int $i0, $i1;
        java.io.DataOutputStream $r2;
        java.lang.Throwable $r3;
        androidx.versionedparcelable.VersionedParcel$ParcelException $r4;

        $r0 := @this: androidx.versionedparcelable.VersionedParcelStream;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        if $r1 == null goto label5;

        $r2 = $r0.<androidx.versionedparcelable.VersionedParcelStream: java.io.DataOutputStream mCurrentOutput>;

     label1:
        virtualinvoke $r2.<java.io.DataOutputStream: void writeInt(int)>($i1);

     label2:
        $r2 = $r0.<androidx.versionedparcelable.VersionedParcelStream: java.io.DataOutputStream mCurrentOutput>;

     label3:
        virtualinvoke $r2.<java.io.DataOutputStream: void write(byte[],int,int)>($r1, $i0, $i1);

     label4:
        goto label7;

     label5:
        $r2 = $r0.<androidx.versionedparcelable.VersionedParcelStream: java.io.DataOutputStream mCurrentOutput>;

     label6:
        virtualinvoke $r2.<java.io.DataOutputStream: void writeInt(int)>(-1);

     label7:
        return;

     label8:
        $r3 := @caughtexception;

        $r4 = new androidx.versionedparcelable.VersionedParcel$ParcelException;

        specialinvoke $r4.<androidx.versionedparcelable.VersionedParcel$ParcelException: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

        catch java.io.IOException from label1 to label2 with label8;
        catch java.io.IOException from label3 to label4 with label8;
        catch java.io.IOException from label6 to label7 with label8;
    }

    public void writeDouble(double)
    {
        androidx.versionedparcelable.VersionedParcelStream $r0;
        double $d0;
        androidx.versionedparcelable.VersionedParcel$ParcelException $r1;
        java.io.DataOutputStream $r2;
        java.lang.Throwable $r3;

        $r0 := @this: androidx.versionedparcelable.VersionedParcelStream;

        $d0 := @parameter0: double;

        $r2 = $r0.<androidx.versionedparcelable.VersionedParcelStream: java.io.DataOutputStream mCurrentOutput>;

     label1:
        virtualinvoke $r2.<java.io.DataOutputStream: void writeDouble(double)>($d0);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r1 = new androidx.versionedparcelable.VersionedParcel$ParcelException;

        specialinvoke $r1.<androidx.versionedparcelable.VersionedParcel$ParcelException: void <init>(java.lang.Throwable)>($r3);

        throw $r1;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void writeFloat(float)
    {
        androidx.versionedparcelable.VersionedParcelStream $r0;
        float $f0;
        androidx.versionedparcelable.VersionedParcel$ParcelException $r1;
        java.io.DataOutputStream $r2;
        java.lang.Throwable $r3;

        $r0 := @this: androidx.versionedparcelable.VersionedParcelStream;

        $f0 := @parameter0: float;

        $r2 = $r0.<androidx.versionedparcelable.VersionedParcelStream: java.io.DataOutputStream mCurrentOutput>;

     label1:
        virtualinvoke $r2.<java.io.DataOutputStream: void writeFloat(float)>($f0);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r1 = new androidx.versionedparcelable.VersionedParcel$ParcelException;

        specialinvoke $r1.<androidx.versionedparcelable.VersionedParcel$ParcelException: void <init>(java.lang.Throwable)>($r3);

        throw $r1;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void writeInt(int)
    {
        androidx.versionedparcelable.VersionedParcelStream $r0;
        int $i0;
        androidx.versionedparcelable.VersionedParcel$ParcelException $r1;
        java.io.DataOutputStream $r2;
        java.lang.Throwable $r3;

        $r0 := @this: androidx.versionedparcelable.VersionedParcelStream;

        $i0 := @parameter0: int;

        $r2 = $r0.<androidx.versionedparcelable.VersionedParcelStream: java.io.DataOutputStream mCurrentOutput>;

     label1:
        virtualinvoke $r2.<java.io.DataOutputStream: void writeInt(int)>($i0);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r1 = new androidx.versionedparcelable.VersionedParcel$ParcelException;

        specialinvoke $r1.<androidx.versionedparcelable.VersionedParcel$ParcelException: void <init>(java.lang.Throwable)>($r3);

        throw $r1;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void writeLong(long)
    {
        androidx.versionedparcelable.VersionedParcelStream $r0;
        long $l0;
        androidx.versionedparcelable.VersionedParcel$ParcelException $r1;
        java.io.DataOutputStream $r2;
        java.lang.Throwable $r3;

        $r0 := @this: androidx.versionedparcelable.VersionedParcelStream;

        $l0 := @parameter0: long;

        $r2 = $r0.<androidx.versionedparcelable.VersionedParcelStream: java.io.DataOutputStream mCurrentOutput>;

     label1:
        virtualinvoke $r2.<java.io.DataOutputStream: void writeLong(long)>($l0);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r1 = new androidx.versionedparcelable.VersionedParcel$ParcelException;

        specialinvoke $r1.<androidx.versionedparcelable.VersionedParcel$ParcelException: void <init>(java.lang.Throwable)>($r3);

        throw $r1;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void writeParcelable(android.os.Parcelable)
    {
        androidx.versionedparcelable.VersionedParcelStream $r0;
        android.os.Parcelable $r1;
        boolean $z0;
        java.lang.RuntimeException $r2;

        $r0 := @this: androidx.versionedparcelable.VersionedParcelStream;

        $r1 := @parameter0: android.os.Parcelable;

        $z0 = $r0.<androidx.versionedparcelable.VersionedParcelStream: boolean mIgnoreParcelables>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Parcelables cannot be written to an OutputStream");

        throw $r2;
    }

    public void writeString(java.lang.String)
    {
        androidx.versionedparcelable.VersionedParcelStream $r0;
        java.lang.String $r1;
        int $i0;
        byte[] $r2;
        java.nio.charset.Charset $r3;
        java.io.DataOutputStream $r4;
        java.lang.Throwable $r5;
        androidx.versionedparcelable.VersionedParcel$ParcelException $r6;

        $r0 := @this: androidx.versionedparcelable.VersionedParcelStream;

        $r1 := @parameter0: java.lang.String;

        if $r1 == null goto label07;

        $r3 = <androidx.versionedparcelable.VersionedParcelStream: java.nio.charset.Charset UTF_16>;

     label01:
        $r2 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r3);

     label02:
        $r4 = $r0.<androidx.versionedparcelable.VersionedParcelStream: java.io.DataOutputStream mCurrentOutput>;

        $i0 = lengthof $r2;

     label03:
        virtualinvoke $r4.<java.io.DataOutputStream: void writeInt(int)>($i0);

     label04:
        $r4 = $r0.<androidx.versionedparcelable.VersionedParcelStream: java.io.DataOutputStream mCurrentOutput>;

     label05:
        virtualinvoke $r4.<java.io.DataOutputStream: void write(byte[])>($r2);

     label06:
        goto label09;

     label07:
        $r4 = $r0.<androidx.versionedparcelable.VersionedParcelStream: java.io.DataOutputStream mCurrentOutput>;

     label08:
        virtualinvoke $r4.<java.io.DataOutputStream: void writeInt(int)>(-1);

     label09:
        return;

     label10:
        $r5 := @caughtexception;

        $r6 = new androidx.versionedparcelable.VersionedParcel$ParcelException;

        specialinvoke $r6.<androidx.versionedparcelable.VersionedParcel$ParcelException: void <init>(java.lang.Throwable)>($r5);

        throw $r6;

        catch java.io.IOException from label01 to label02 with label10;
        catch java.io.IOException from label03 to label04 with label10;
        catch java.io.IOException from label05 to label06 with label10;
        catch java.io.IOException from label08 to label09 with label10;
    }

    public void writeStrongBinder(android.os.IBinder)
    {
        androidx.versionedparcelable.VersionedParcelStream $r0;
        android.os.IBinder $r1;
        boolean $z0;
        java.lang.RuntimeException $r2;

        $r0 := @this: androidx.versionedparcelable.VersionedParcelStream;

        $r1 := @parameter0: android.os.IBinder;

        $z0 = $r0.<androidx.versionedparcelable.VersionedParcelStream: boolean mIgnoreParcelables>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Binders cannot be written to an OutputStream");

        throw $r2;
    }

    public void writeStrongInterface(android.os.IInterface)
    {
        androidx.versionedparcelable.VersionedParcelStream $r0;
        android.os.IInterface $r1;
        boolean $z0;
        java.lang.RuntimeException $r2;

        $r0 := @this: androidx.versionedparcelable.VersionedParcelStream;

        $r1 := @parameter0: android.os.IInterface;

        $z0 = $r0.<androidx.versionedparcelable.VersionedParcelStream: boolean mIgnoreParcelables>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Binders cannot be written to an OutputStream");

        throw $r2;
    }
}
