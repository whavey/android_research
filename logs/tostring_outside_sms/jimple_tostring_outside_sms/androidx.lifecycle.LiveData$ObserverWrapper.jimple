abstract class androidx.lifecycle.LiveData$ObserverWrapper extends java.lang.Object
{
    boolean mActive;
    int mLastVersion;
    final androidx.lifecycle.Observer mObserver;
    final androidx.lifecycle.LiveData this$0;

    void <init>(androidx.lifecycle.LiveData, androidx.lifecycle.Observer)
    {
        androidx.lifecycle.LiveData$ObserverWrapper $r0;
        androidx.lifecycle.Observer $r1;
        androidx.lifecycle.LiveData $r2;

        $r0 := @this: androidx.lifecycle.LiveData$ObserverWrapper;

        $r2 := @parameter0: androidx.lifecycle.LiveData;

        $r1 := @parameter1: androidx.lifecycle.Observer;

        $r0.<androidx.lifecycle.LiveData$ObserverWrapper: androidx.lifecycle.LiveData this$0> = $r2;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<androidx.lifecycle.LiveData$ObserverWrapper: int mLastVersion> = -1;

        $r0.<androidx.lifecycle.LiveData$ObserverWrapper: androidx.lifecycle.Observer mObserver> = $r1;

        return;
    }

    void activeStateChanged(boolean)
    {
        androidx.lifecycle.LiveData$ObserverWrapper $r0;
        boolean $z0, $z1;
        androidx.lifecycle.LiveData $r1;
        int $i0;
        byte $b1;

        $r0 := @this: androidx.lifecycle.LiveData$ObserverWrapper;

        $z0 := @parameter0: boolean;

        $z1 = $r0.<androidx.lifecycle.LiveData$ObserverWrapper: boolean mActive>;

        if $z0 != $z1 goto label1;

        return;

     label1:
        $r0.<androidx.lifecycle.LiveData$ObserverWrapper: boolean mActive> = $z0;

        $r1 = $r0.<androidx.lifecycle.LiveData$ObserverWrapper: androidx.lifecycle.LiveData this$0>;

        $i0 = $r1.<androidx.lifecycle.LiveData: int mActiveCount>;

        $b1 = 1;

        if $i0 != 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        $r1 = $r0.<androidx.lifecycle.LiveData$ObserverWrapper: androidx.lifecycle.LiveData this$0>;

        $i0 = $r1.<androidx.lifecycle.LiveData: int mActiveCount>;

        $z0 = $r0.<androidx.lifecycle.LiveData$ObserverWrapper: boolean mActive>;

        if $z0 == 0 goto label4;

        goto label5;

     label4:
        $b1 = -1;

     label5:
        $i0 = $i0 + $b1;

        $r1.<androidx.lifecycle.LiveData: int mActiveCount> = $i0;

        if $z1 == 0 goto label6;

        $z0 = $r0.<androidx.lifecycle.LiveData$ObserverWrapper: boolean mActive>;

        if $z0 == 0 goto label6;

        $r1 = $r0.<androidx.lifecycle.LiveData$ObserverWrapper: androidx.lifecycle.LiveData this$0>;

        virtualinvoke $r1.<androidx.lifecycle.LiveData: void onActive()>();

     label6:
        $r1 = $r0.<androidx.lifecycle.LiveData$ObserverWrapper: androidx.lifecycle.LiveData this$0>;

        $i0 = $r1.<androidx.lifecycle.LiveData: int mActiveCount>;

        if $i0 != 0 goto label7;

        $z0 = $r0.<androidx.lifecycle.LiveData$ObserverWrapper: boolean mActive>;

        if $z0 != 0 goto label7;

        $r1 = $r0.<androidx.lifecycle.LiveData$ObserverWrapper: androidx.lifecycle.LiveData this$0>;

        virtualinvoke $r1.<androidx.lifecycle.LiveData: void onInactive()>();

     label7:
        $z0 = $r0.<androidx.lifecycle.LiveData$ObserverWrapper: boolean mActive>;

        if $z0 == 0 goto label8;

        $r1 = $r0.<androidx.lifecycle.LiveData$ObserverWrapper: androidx.lifecycle.LiveData this$0>;

        virtualinvoke $r1.<androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)>($r0);

     label8:
        return;
    }

    void detachObserver()
    {
        androidx.lifecycle.LiveData$ObserverWrapper $r0;

        $r0 := @this: androidx.lifecycle.LiveData$ObserverWrapper;

        return;
    }

    boolean isAttachedTo(androidx.lifecycle.LifecycleOwner)
    {
        androidx.lifecycle.LiveData$ObserverWrapper $r0;
        androidx.lifecycle.LifecycleOwner $r1;

        $r0 := @this: androidx.lifecycle.LiveData$ObserverWrapper;

        $r1 := @parameter0: androidx.lifecycle.LifecycleOwner;

        return 0;
    }

    abstract boolean shouldBeActive();
}
