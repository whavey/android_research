abstract class androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl extends java.lang.Object implements androidx.core.text.TextDirectionHeuristicCompat
{
    private final androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm mAlgorithm;

    void <init>(androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm)
    {
        androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl $r0;
        androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm $r1;

        $r0 := @this: androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl;

        $r1 := @parameter0: androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl: androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm mAlgorithm> = $r1;

        return;
    }

    private boolean doCheck(java.lang.CharSequence, int, int)
    {
        androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl $r0;
        java.lang.CharSequence $r1;
        int $i0, $i1;
        androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm $r2;
        boolean $z0;

        $r0 := @this: androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl;

        $r1 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = $r0.<androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl: androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm mAlgorithm>;

        $i0 = interfaceinvoke $r2.<androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm: int checkRtl(java.lang.CharSequence,int,int)>($r1, $i0, $i1);

        if $i0 == 0 goto label2;

        if $i0 == 1 goto label1;

        $z0 = virtualinvoke $r0.<androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl: boolean defaultIsRtl()>();

        return $z0;

     label1:
        return 0;

     label2:
        return 1;
    }

    protected abstract boolean defaultIsRtl();

    public boolean isRtl(java.lang.CharSequence, int, int)
    {
        androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl $r0;
        java.lang.CharSequence $r1;
        int $i0, $i1, $i2;
        androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm $r2;
        boolean $z0;
        java.lang.IllegalArgumentException $r3;

        $r0 := @this: androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl;

        $r1 := @parameter0: java.lang.CharSequence;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        if $r1 == null goto label2;

        if $i0 < 0 goto label2;

        if $i1 < 0 goto label2;

        $i2 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        $i2 = $i2 - $i1;

        if $i2 < $i0 goto label2;

        $r2 = $r0.<androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl: androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm mAlgorithm>;

        if $r2 != null goto label1;

        $z0 = virtualinvoke $r0.<androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl: boolean defaultIsRtl()>();

        return $z0;

     label1:
        $z0 = specialinvoke $r0.<androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl: boolean doCheck(java.lang.CharSequence,int,int)>($r1, $i0, $i1);

        return $z0;

     label2:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r3;
    }

    public boolean isRtl(char[], int, int)
    {
        androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl $r0;
        char[] $r1;
        int $i0, $i1;
        java.nio.CharBuffer $r2;
        boolean $z0;

        $r0 := @this: androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl;

        $r1 := @parameter0: char[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer wrap(char[])>($r1);

        $z0 = virtualinvoke $r0.<androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl: boolean isRtl(java.lang.CharSequence,int,int)>($r2, $i0, $i1);

        return $z0;
    }
}
