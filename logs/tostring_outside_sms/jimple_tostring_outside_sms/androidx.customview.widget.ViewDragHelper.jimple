public class androidx.customview.widget.ViewDragHelper extends java.lang.Object
{
    private static final int BASE_SETTLE_DURATION;
    public static final int DIRECTION_ALL;
    public static final int DIRECTION_HORIZONTAL;
    public static final int DIRECTION_VERTICAL;
    public static final int EDGE_ALL;
    public static final int EDGE_BOTTOM;
    public static final int EDGE_LEFT;
    public static final int EDGE_RIGHT;
    private static final int EDGE_SIZE;
    public static final int EDGE_TOP;
    public static final int INVALID_POINTER;
    private static final int MAX_SETTLE_DURATION;
    public static final int STATE_DRAGGING;
    public static final int STATE_IDLE;
    public static final int STATE_SETTLING;
    private static final java.lang.String TAG;
    private static final android.view.animation.Interpolator sInterpolator;
    private int mActivePointerId;
    private final androidx.customview.widget.ViewDragHelper$Callback mCallback;
    private android.view.View mCapturedView;
    private int mDragState;
    private int[] mEdgeDragsInProgress;
    private int[] mEdgeDragsLocked;
    private int mEdgeSize;
    private int[] mInitialEdgesTouched;
    private float[] mInitialMotionX;
    private float[] mInitialMotionY;
    private float[] mLastMotionX;
    private float[] mLastMotionY;
    private float mMaxVelocity;
    private float mMinVelocity;
    private final android.view.ViewGroup mParentView;
    private int mPointersDown;
    private boolean mReleaseInProgress;
    private android.widget.OverScroller mScroller;
    private final java.lang.Runnable mSetIdleRunnable;
    private int mTouchSlop;
    private int mTrackingEdges;
    private android.view.VelocityTracker mVelocityTracker;

    static void <clinit>()
    {
        androidx.customview.widget.ViewDragHelper$1 $r0;

        <androidx.customview.widget.ViewDragHelper: java.lang.String TAG> = "ViewDragHelper";

        <androidx.customview.widget.ViewDragHelper: int STATE_SETTLING> = 2;

        <androidx.customview.widget.ViewDragHelper: int STATE_IDLE> = 0;

        <androidx.customview.widget.ViewDragHelper: int STATE_DRAGGING> = 1;

        <androidx.customview.widget.ViewDragHelper: int MAX_SETTLE_DURATION> = 600;

        <androidx.customview.widget.ViewDragHelper: int INVALID_POINTER> = -1;

        <androidx.customview.widget.ViewDragHelper: int EDGE_TOP> = 4;

        <androidx.customview.widget.ViewDragHelper: int EDGE_SIZE> = 20;

        <androidx.customview.widget.ViewDragHelper: int EDGE_RIGHT> = 2;

        <androidx.customview.widget.ViewDragHelper: int EDGE_LEFT> = 1;

        <androidx.customview.widget.ViewDragHelper: int EDGE_BOTTOM> = 8;

        <androidx.customview.widget.ViewDragHelper: int EDGE_ALL> = 15;

        <androidx.customview.widget.ViewDragHelper: int DIRECTION_VERTICAL> = 2;

        <androidx.customview.widget.ViewDragHelper: int DIRECTION_HORIZONTAL> = 1;

        <androidx.customview.widget.ViewDragHelper: int DIRECTION_ALL> = 3;

        <androidx.customview.widget.ViewDragHelper: int BASE_SETTLE_DURATION> = 256;

        $r0 = new androidx.customview.widget.ViewDragHelper$1;

        specialinvoke $r0.<androidx.customview.widget.ViewDragHelper$1: void <init>()>();

        <androidx.customview.widget.ViewDragHelper: android.view.animation.Interpolator sInterpolator> = $r0;

        return;
    }

    private void <init>(android.content.Context, android.view.ViewGroup, androidx.customview.widget.ViewDragHelper$Callback)
    {
        androidx.customview.widget.ViewDragHelper $r0;
        android.content.Context $r1;
        android.view.ViewGroup $r2;
        androidx.customview.widget.ViewDragHelper$Callback $r3;
        androidx.customview.widget.ViewDragHelper$2 $r4;
        android.view.ViewConfiguration $r5;
        android.content.res.Resources $r6;
        android.util.DisplayMetrics $r7;
        float $f0;
        int $i0;
        android.widget.OverScroller $r8;
        android.view.animation.Interpolator $r9;
        java.lang.IllegalArgumentException $r10;

        $r0 := @this: androidx.customview.widget.ViewDragHelper;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.view.ViewGroup;

        $r3 := @parameter2: androidx.customview.widget.ViewDragHelper$Callback;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<androidx.customview.widget.ViewDragHelper: int mActivePointerId> = -1;

        $r4 = new androidx.customview.widget.ViewDragHelper$2;

        specialinvoke $r4.<androidx.customview.widget.ViewDragHelper$2: void <init>(androidx.customview.widget.ViewDragHelper)>($r0);

        $r0.<androidx.customview.widget.ViewDragHelper: java.lang.Runnable mSetIdleRunnable> = $r4;

        if $r2 == null goto label2;

        if $r3 == null goto label1;

        $r0.<androidx.customview.widget.ViewDragHelper: android.view.ViewGroup mParentView> = $r2;

        $r0.<androidx.customview.widget.ViewDragHelper: androidx.customview.widget.ViewDragHelper$Callback mCallback> = $r3;

        $r5 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>($r1);

        $r6 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r7 = virtualinvoke $r6.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f0 = $r7.<android.util.DisplayMetrics: float density>;

        $f0 = 20.0F * $f0;

        $f0 = $f0 + 0.5F;

        $i0 = (int) $f0;

        $r0.<androidx.customview.widget.ViewDragHelper: int mEdgeSize> = $i0;

        $i0 = virtualinvoke $r5.<android.view.ViewConfiguration: int getScaledTouchSlop()>();

        $r0.<androidx.customview.widget.ViewDragHelper: int mTouchSlop> = $i0;

        $i0 = virtualinvoke $r5.<android.view.ViewConfiguration: int getScaledMaximumFlingVelocity()>();

        $f0 = (float) $i0;

        $r0.<androidx.customview.widget.ViewDragHelper: float mMaxVelocity> = $f0;

        $i0 = virtualinvoke $r5.<android.view.ViewConfiguration: int getScaledMinimumFlingVelocity()>();

        $f0 = (float) $i0;

        $r0.<androidx.customview.widget.ViewDragHelper: float mMinVelocity> = $f0;

        $r8 = new android.widget.OverScroller;

        $r9 = <androidx.customview.widget.ViewDragHelper: android.view.animation.Interpolator sInterpolator>;

        specialinvoke $r8.<android.widget.OverScroller: void <init>(android.content.Context,android.view.animation.Interpolator)>($r1, $r9);

        $r0.<androidx.customview.widget.ViewDragHelper: android.widget.OverScroller mScroller> = $r8;

        return;

     label1:
        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Callback may not be null");

        throw $r10;

     label2:
        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Parent view may not be null");

        throw $r10;
    }

    private boolean checkNewEdgeDrag(float, float, int, int)
    {
        androidx.customview.widget.ViewDragHelper $r0;
        float $f0, $f1, $f2;
        int $i0, $i1, $i2;
        int[] $r1;
        byte $b3;
        androidx.customview.widget.ViewDragHelper$Callback $r2;
        boolean $z0;

        $r0 := @this: androidx.customview.widget.ViewDragHelper;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $f0 = staticinvoke <java.lang.Math: float abs(float)>($f0);

        $f1 = staticinvoke <java.lang.Math: float abs(float)>($f1);

        $r1 = $r0.<androidx.customview.widget.ViewDragHelper: int[] mInitialEdgesTouched>;

        $i2 = $r1[$i0];

        $i2 = $i2 & $i1;

        if $i2 != $i1 goto label3;

        $i2 = $r0.<androidx.customview.widget.ViewDragHelper: int mTrackingEdges>;

        $i2 = $i2 & $i1;

        if $i2 == 0 goto label3;

        $r1 = $r0.<androidx.customview.widget.ViewDragHelper: int[] mEdgeDragsLocked>;

        $i2 = $r1[$i0];

        $i2 = $i2 & $i1;

        if $i2 == $i1 goto label3;

        $r1 = $r0.<androidx.customview.widget.ViewDragHelper: int[] mEdgeDragsInProgress>;

        $i2 = $r1[$i0];

        $i2 = $i2 & $i1;

        if $i2 == $i1 goto label3;

        $i2 = $r0.<androidx.customview.widget.ViewDragHelper: int mTouchSlop>;

        $f2 = (float) $i2;

        $b3 = $f0 cmpg $f2;

        if $b3 > 0 goto label1;

        $f2 = (float) $i2;

        $b3 = $f1 cmpg $f2;

        if $b3 > 0 goto label1;

        return 0;

     label1:
        $f1 = 0.5F * $f1;

        $b3 = $f0 cmpg $f1;

        if $b3 >= 0 goto label2;

        $r2 = $r0.<androidx.customview.widget.ViewDragHelper: androidx.customview.widget.ViewDragHelper$Callback mCallback>;

        $z0 = virtualinvoke $r2.<androidx.customview.widget.ViewDragHelper$Callback: boolean onEdgeLock(int)>($i1);

        if $z0 == 0 goto label2;

        $r1 = $r0.<androidx.customview.widget.ViewDragHelper: int[] mEdgeDragsLocked>;

        $i2 = $r1[$i0];

        $i1 = $i2 | $i1;

        $r1[$i0] = $i1;

        return 0;

     label2:
        $r1 = $r0.<androidx.customview.widget.ViewDragHelper: int[] mEdgeDragsInProgress>;

        $i0 = $r1[$i0];

        $i0 = $i0 & $i1;

        if $i0 != 0 goto label3;

        $i0 = $r0.<androidx.customview.widget.ViewDragHelper: int mTouchSlop>;

        $f1 = (float) $i0;

        $b3 = $f0 cmpl $f1;

        if $b3 <= 0 goto label3;

        return 1;

     label3:
        return 0;
    }

    private boolean checkTouchSlop(android.view.View, float, float)
    {
        androidx.customview.widget.ViewDragHelper $r0;
        android.view.View $r1;
        float $f0, $f1;
        androidx.customview.widget.ViewDragHelper$Callback $r2;
        int $i0;
        boolean $z0, $z1;
        byte $b1;

        $r0 := @this: androidx.customview.widget.ViewDragHelper;

        $r1 := @parameter0: android.view.View;

        $f0 := @parameter1: float;

        $f1 := @parameter2: float;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = $r0.<androidx.customview.widget.ViewDragHelper: androidx.customview.widget.ViewDragHelper$Callback mCallback>;

        $i0 = virtualinvoke $r2.<androidx.customview.widget.ViewDragHelper$Callback: int getViewHorizontalDragRange(android.view.View)>($r1);

        if $i0 <= 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        $r2 = $r0.<androidx.customview.widget.ViewDragHelper: androidx.customview.widget.ViewDragHelper$Callback mCallback>;

        $i0 = virtualinvoke $r2.<androidx.customview.widget.ViewDragHelper$Callback: int getViewVerticalDragRange(android.view.View)>($r1);

        if $i0 <= 0 goto label4;

        $z1 = 1;

        goto label5;

     label4:
        $z1 = 0;

     label5:
        if $z0 == 0 goto label6;

        if $z1 == 0 goto label6;

        $f0 = $f0 * $f0;

        $f1 = $f1 * $f1;

        $f0 = $f0 + $f1;

        $i0 = $r0.<androidx.customview.widget.ViewDragHelper: int mTouchSlop>;

        $i0 = $i0 * $i0;

        $f1 = (float) $i0;

        $b1 = $f0 cmpl $f1;

        if $b1 <= 0 goto label8;

        return 1;

     label6:
        if $z0 == 0 goto label7;

        $f0 = staticinvoke <java.lang.Math: float abs(float)>($f0);

        $i0 = $r0.<androidx.customview.widget.ViewDragHelper: int mTouchSlop>;

        $f1 = (float) $i0;

        $b1 = $f0 cmpl $f1;

        if $b1 <= 0 goto label8;

        return 1;

     label7:
        if $z1 == 0 goto label8;

        $f0 = staticinvoke <java.lang.Math: float abs(float)>($f1);

        $i0 = $r0.<androidx.customview.widget.ViewDragHelper: int mTouchSlop>;

        $f1 = (float) $i0;

        $b1 = $f0 cmpl $f1;

        if $b1 <= 0 goto label8;

        return 1;

     label8:
        return 0;
    }

    private float clampMag(float, float, float)
    {
        androidx.customview.widget.ViewDragHelper $r0;
        float $f0, $f1, $f2, $f3;
        byte $b0;

        $r0 := @this: androidx.customview.widget.ViewDragHelper;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $f3 = staticinvoke <java.lang.Math: float abs(float)>($f0);

        $b0 = $f3 cmpg $f1;

        if $b0 >= 0 goto label1;

        return 0.0F;

     label1:
        $b0 = $f3 cmpl $f2;

        if $b0 <= 0 goto label3;

        $b0 = $f0 cmpl 0.0F;

        if $b0 <= 0 goto label2;

        return $f2;

     label2:
        $f0 = neg $f2;

     label3:
        return $f0;
    }

    private int clampMag(int, int, int)
    {
        androidx.customview.widget.ViewDragHelper $r0;
        int $i0, $i1, $i2, $i3;

        $r0 := @this: androidx.customview.widget.ViewDragHelper;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 = staticinvoke <java.lang.Math: int abs(int)>($i0);

        if $i3 >= $i1 goto label1;

        return 0;

     label1:
        if $i3 <= $i2 goto label3;

        if $i0 <= 0 goto label2;

        return $i2;

     label2:
        $i0 = neg $i2;

     label3:
        return $i0;
    }

    private void clearMotionHistory()
    {
        androidx.customview.widget.ViewDragHelper $r0;
        float[] $r1;
        int[] $r2;

        $r0 := @this: androidx.customview.widget.ViewDragHelper;

        $r1 = $r0.<androidx.customview.widget.ViewDragHelper: float[] mInitialMotionX>;

        if $r1 != null goto label1;

        return;

     label1:
        staticinvoke <java.util.Arrays: void fill(float[],float)>($r1, 0.0F);

        $r1 = $r0.<androidx.customview.widget.ViewDragHelper: float[] mInitialMotionY>;

        staticinvoke <java.util.Arrays: void fill(float[],float)>($r1, 0.0F);

        $r1 = $r0.<androidx.customview.widget.ViewDragHelper: float[] mLastMotionX>;

        staticinvoke <java.util.Arrays: void fill(float[],float)>($r1, 0.0F);

        $r1 = $r0.<androidx.customview.widget.ViewDragHelper: float[] mLastMotionY>;

        staticinvoke <java.util.Arrays: void fill(float[],float)>($r1, 0.0F);

        $r2 = $r0.<androidx.customview.widget.ViewDragHelper: int[] mInitialEdgesTouched>;

        staticinvoke <java.util.Arrays: void fill(int[],int)>($r2, 0);

        $r2 = $r0.<androidx.customview.widget.ViewDragHelper: int[] mEdgeDragsInProgress>;

        staticinvoke <java.util.Arrays: void fill(int[],int)>($r2, 0);

        $r2 = $r0.<androidx.customview.widget.ViewDragHelper: int[] mEdgeDragsLocked>;

        staticinvoke <java.util.Arrays: void fill(int[],int)>($r2, 0);

        $r0.<androidx.customview.widget.ViewDragHelper: int mPointersDown> = 0;

        return;
    }

    private void clearMotionHistory(int)
    {
        androidx.customview.widget.ViewDragHelper $r0;
        int $i0, $i1;
        boolean $z0;
        float[] $r1;
        int[] $r2;

        $r0 := @this: androidx.customview.widget.ViewDragHelper;

        $i0 := @parameter0: int;

        $r1 = $r0.<androidx.customview.widget.ViewDragHelper: float[] mInitialMotionX>;

        if $r1 == null goto label2;

        $z0 = virtualinvoke $r0.<androidx.customview.widget.ViewDragHelper: boolean isPointerDown(int)>($i0);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = $r0.<androidx.customview.widget.ViewDragHelper: float[] mInitialMotionX>;

        $r1[$i0] = 0.0F;

        $r1 = $r0.<androidx.customview.widget.ViewDragHelper: float[] mInitialMotionY>;

        $r1[$i0] = 0.0F;

        $r1 = $r0.<androidx.customview.widget.ViewDragHelper: float[] mLastMotionX>;

        $r1[$i0] = 0.0F;

        $r1 = $r0.<androidx.customview.widget.ViewDragHelper: float[] mLastMotionY>;

        $r1[$i0] = 0.0F;

        $r2 = $r0.<androidx.customview.widget.ViewDragHelper: int[] mInitialEdgesTouched>;

        $r2[$i0] = 0;

        $r2 = $r0.<androidx.customview.widget.ViewDragHelper: int[] mEdgeDragsInProgress>;

        $r2[$i0] = 0;

        $r2 = $r0.<androidx.customview.widget.ViewDragHelper: int[] mEdgeDragsLocked>;

        $r2[$i0] = 0;

        $i1 = $r0.<androidx.customview.widget.ViewDragHelper: int mPointersDown>;

        $i0 = 1 << $i0;

        $i0 = $i0 ^ -1;

        $i0 = $i1 & $i0;

        $r0.<androidx.customview.widget.ViewDragHelper: int mPointersDown> = $i0;

     label2:
        return;
    }

    private int computeAxisDuration(int, int, int)
    {
        androidx.customview.widget.ViewDragHelper $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.view.ViewGroup $r1;
        float $f0, $f1, $f2;

        $r0 := @this: androidx.customview.widget.ViewDragHelper;

        $i0 := @parameter0: int;

        $i3 := @parameter1: int;

        $i1 := @parameter2: int;

        if $i0 != 0 goto label1;

        return 0;

     label1:
        $r1 = $r0.<androidx.customview.widget.ViewDragHelper: android.view.ViewGroup mParentView>;

        $i4 = virtualinvoke $r1.<android.view.ViewGroup: int getWidth()>();

        $i2 = $i4 / 2;

        $i5 = staticinvoke <java.lang.Math: int abs(int)>($i0);

        $f0 = (float) $i5;

        $f1 = (float) $i4;

        $f0 = $f0 / $f1;

        $f2 = staticinvoke <java.lang.Math: float min(float,float)>(1.0F, $f0);

        $f0 = (float) $i2;

        $f1 = (float) $i2;

        $f2 = specialinvoke $r0.<androidx.customview.widget.ViewDragHelper: float distanceInfluenceForSnapDuration(float)>($f2);

        $f1 = $f1 * $f2;

        $f0 = $f0 + $f1;

        $i3 = staticinvoke <java.lang.Math: int abs(int)>($i3);

        if $i3 <= 0 goto label2;

        $f1 = (float) $i3;

        $f0 = $f0 / $f1;

        $f0 = staticinvoke <java.lang.Math: float abs(float)>($f0);

        $f0 = $f0 * 1000.0F;

        $i0 = staticinvoke <java.lang.Math: int round(float)>($f0);

        $i0 = $i0 * 4;

        goto label3;

     label2:
        $i0 = staticinvoke <java.lang.Math: int abs(int)>($i0);

        $f0 = (float) $i0;

        $f1 = (float) $i1;

        $f0 = $f0 / $f1;

        $f0 = 1.0F + $f0;

        $f0 = $f0 * 256.0F;

        $i0 = (int) $f0;

     label3:
        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, 600);

        return $i0;
    }

    private int computeSettleDuration(android.view.View, int, int, int, int)
    {
        androidx.customview.widget.ViewDragHelper $r0;
        android.view.View $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        float $f0, $f1, $f2;
        androidx.customview.widget.ViewDragHelper$Callback $r2;

        $r0 := @this: androidx.customview.widget.ViewDragHelper;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $f0 = $r0.<androidx.customview.widget.ViewDragHelper: float mMinVelocity>;

        $i4 = (int) $f0;

        $f0 = $r0.<androidx.customview.widget.ViewDragHelper: float mMaxVelocity>;

        $i5 = (int) $f0;

        $i2 = specialinvoke $r0.<androidx.customview.widget.ViewDragHelper: int clampMag(int,int,int)>($i2, $i4, $i5);

        $f0 = $r0.<androidx.customview.widget.ViewDragHelper: float mMinVelocity>;

        $i4 = (int) $f0;

        $f0 = $r0.<androidx.customview.widget.ViewDragHelper: float mMaxVelocity>;

        $i5 = (int) $f0;

        $i3 = specialinvoke $r0.<androidx.customview.widget.ViewDragHelper: int clampMag(int,int,int)>($i3, $i4, $i5);

        $i6 = staticinvoke <java.lang.Math: int abs(int)>($i0);

        $i7 = staticinvoke <java.lang.Math: int abs(int)>($i1);

        $i8 = staticinvoke <java.lang.Math: int abs(int)>($i2);

        $i9 = staticinvoke <java.lang.Math: int abs(int)>($i3);

        $i4 = $i8 + $i9;

        $i5 = $i6 + $i7;

        if $i2 == 0 goto label1;

        $f0 = (float) $i8;

        $f1 = (float) $i4;

        goto label2;

     label1:
        $f0 = (float) $i6;

        $f1 = (float) $i5;

     label2:
        $f0 = $f0 / $f1;

        if $i3 == 0 goto label3;

        $f1 = (float) $i9;

        $f2 = (float) $i4;

        goto label4;

     label3:
        $f1 = (float) $i7;

        $f2 = (float) $i5;

     label4:
        $f1 = $f1 / $f2;

        $r2 = $r0.<androidx.customview.widget.ViewDragHelper: androidx.customview.widget.ViewDragHelper$Callback mCallback>;

        $i4 = virtualinvoke $r2.<androidx.customview.widget.ViewDragHelper$Callback: int getViewHorizontalDragRange(android.view.View)>($r1);

        $i0 = specialinvoke $r0.<androidx.customview.widget.ViewDragHelper: int computeAxisDuration(int,int,int)>($i0, $i2, $i4);

        $r2 = $r0.<androidx.customview.widget.ViewDragHelper: androidx.customview.widget.ViewDragHelper$Callback mCallback>;

        $i2 = virtualinvoke $r2.<androidx.customview.widget.ViewDragHelper$Callback: int getViewVerticalDragRange(android.view.View)>($r1);

        $i1 = specialinvoke $r0.<androidx.customview.widget.ViewDragHelper: int computeAxisDuration(int,int,int)>($i1, $i3, $i2);

        $f2 = (float) $i0;

        $f0 = $f2 * $f0;

        $f2 = (float) $i1;

        $f1 = $f2 * $f1;

        $f0 = $f0 + $f1;

        $i0 = (int) $f0;

        return $i0;
    }

    public static androidx.customview.widget.ViewDragHelper create(android.view.ViewGroup, float, androidx.customview.widget.ViewDragHelper$Callback)
    {
        android.view.ViewGroup $r0;
        float $f0, $f1;
        androidx.customview.widget.ViewDragHelper$Callback $r1;
        androidx.customview.widget.ViewDragHelper $r2;
        int $i0;

        $r0 := @parameter0: android.view.ViewGroup;

        $f0 := @parameter1: float;

        $r1 := @parameter2: androidx.customview.widget.ViewDragHelper$Callback;

        $r2 = staticinvoke <androidx.customview.widget.ViewDragHelper: androidx.customview.widget.ViewDragHelper create(android.view.ViewGroup,androidx.customview.widget.ViewDragHelper$Callback)>($r0, $r1);

        $i0 = $r2.<androidx.customview.widget.ViewDragHelper: int mTouchSlop>;

        $f1 = (float) $i0;

        $f0 = 1.0F / $f0;

        $f0 = $f1 * $f0;

        $i0 = (int) $f0;

        $r2.<androidx.customview.widget.ViewDragHelper: int mTouchSlop> = $i0;

        return $r2;
    }

    public static androidx.customview.widget.ViewDragHelper create(android.view.ViewGroup, androidx.customview.widget.ViewDragHelper$Callback)
    {
        android.view.ViewGroup $r0;
        androidx.customview.widget.ViewDragHelper$Callback $r1;
        androidx.customview.widget.ViewDragHelper $r2;
        android.content.Context $r3;

        $r0 := @parameter0: android.view.ViewGroup;

        $r1 := @parameter1: androidx.customview.widget.ViewDragHelper$Callback;

        $r2 = new androidx.customview.widget.ViewDragHelper;

        $r3 = virtualinvoke $r0.<android.view.ViewGroup: android.content.Context getContext()>();

        specialinvoke $r2.<androidx.customview.widget.ViewDragHelper: void <init>(android.content.Context,android.view.ViewGroup,androidx.customview.widget.ViewDragHelper$Callback)>($r3, $r0, $r1);

        return $r2;
    }

    private void dispatchViewReleased(float, float)
    {
        androidx.customview.widget.ViewDragHelper $r0;
        float $f0, $f1;
        androidx.customview.widget.ViewDragHelper$Callback $r1;
        android.view.View $r2;
        int $i0;

        $r0 := @this: androidx.customview.widget.ViewDragHelper;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $r0.<androidx.customview.widget.ViewDragHelper: boolean mReleaseInProgress> = 1;

        $r1 = $r0.<androidx.customview.widget.ViewDragHelper: androidx.customview.widget.ViewDragHelper$Callback mCallback>;

        $r2 = $r0.<androidx.customview.widget.ViewDragHelper: android.view.View mCapturedView>;

        virtualinvoke $r1.<androidx.customview.widget.ViewDragHelper$Callback: void onViewReleased(android.view.View,float,float)>($r2, $f0, $f1);

        $r0.<androidx.customview.widget.ViewDragHelper: boolean mReleaseInProgress> = 0;

        $i0 = $r0.<androidx.customview.widget.ViewDragHelper: int mDragState>;

        if $i0 != 1 goto label1;

        virtualinvoke $r0.<androidx.customview.widget.ViewDragHelper: void setDragState(int)>(0);

     label1:
        return;
    }

    private float distanceInfluenceForSnapDuration(float)
    {
        androidx.customview.widget.ViewDragHelper $r0;
        double $d0;
        float $f0;

        $r0 := @this: androidx.customview.widget.ViewDragHelper;

        $f0 := @parameter0: float;

        $f0 = $f0 - 0.5F;

        $f0 = $f0 * 0.47123894F;

        $d0 = (double) $f0;

        $d0 = staticinvoke <java.lang.Math: double sin(double)>($d0);

        $f0 = (float) $d0;

        return $f0;
    }

    private void dragTo(int, int, int, int)
    {
        androidx.customview.widget.ViewDragHelper $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        androidx.customview.widget.ViewDragHelper$Callback $r1;
        android.view.View $r2;

        $r0 := @this: androidx.customview.widget.ViewDragHelper;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $i4 = $i0;

        $i5 = $i1;

        $r2 = $r0.<androidx.customview.widget.ViewDragHelper: android.view.View mCapturedView>;

        $i6 = virtualinvoke $r2.<android.view.View: int getLeft()>();

        $r2 = $r0.<androidx.customview.widget.ViewDragHelper: android.view.View mCapturedView>;

        $i7 = virtualinvoke $r2.<android.view.View: int getTop()>();

        if $i2 == 0 goto label1;

        $r1 = $r0.<androidx.customview.widget.ViewDragHelper: androidx.customview.widget.ViewDragHelper$Callback mCallback>;

        $r2 = $r0.<androidx.customview.widget.ViewDragHelper: android.view.View mCapturedView>;

        $i0 = virtualinvoke $r1.<androidx.customview.widget.ViewDragHelper$Callback: int clampViewPositionHorizontal(android.view.View,int,int)>($r2, $i0, $i2);

        $i4 = $i0;

        $r2 = $r0.<androidx.customview.widget.ViewDragHelper: android.view.View mCapturedView>;

        $i0 = $i0 - $i6;

        staticinvoke <androidx.core.view.ViewCompat: void offsetLeftAndRight(android.view.View,int)>($r2, $i0);

        goto label1;

     label1:
        if $i3 == 0 goto label2;

        $r1 = $r0.<androidx.customview.widget.ViewDragHelper: androidx.customview.widget.ViewDragHelper$Callback mCallback>;

        $r2 = $r0.<androidx.customview.widget.ViewDragHelper: android.view.View mCapturedView>;

        $i0 = virtualinvoke $r1.<androidx.customview.widget.ViewDragHelper$Callback: int clampViewPositionVertical(android.view.View,int,int)>($r2, $i1, $i3);

        $i5 = $i0;

        $r2 = $r0.<androidx.customview.widget.ViewDragHelper: android.view.View mCapturedView>;

        $i0 = $i0 - $i7;

        staticinvoke <androidx.core.view.ViewCompat: void offsetTopAndBottom(android.view.View,int)>($r2, $i0);

        goto label2;

     label2:
        if $i2 != 0 goto label3;

        if $i3 == 0 goto label4;

     label3:
        $i0 = $i4 - $i6;

        $i1 = $i5 - $i7;

        $r1 = $r0.<androidx.customview.widget.ViewDragHelper: androidx.customview.widget.ViewDragHelper$Callback mCallback>;

        $r2 = $r0.<androidx.customview.widget.ViewDragHelper: android.view.View mCapturedView>;

        virtualinvoke $r1.<androidx.customview.widget.ViewDragHelper$Callback: void onViewPositionChanged(android.view.View,int,int,int,int)>($r2, $i4, $i5, $i0, $i1);

     label4:
        return;
    }

    private void ensureMotionHistorySizeForId(int)
    {
        androidx.customview.widget.ViewDragHelper $r0;
        int $i0, $i1;
        float[] $r1, $r2, $r3, $r4, $r8;
        int[] $r5, $r6, $r7, $r9;

        $r0 := @this: androidx.customview.widget.ViewDragHelper;

        $i0 := @parameter0: int;

        $r1 = $r0.<androidx.customview.widget.ViewDragHelper: float[] mInitialMotionX>;

        if $r1 == null goto label1;

        $i1 = lengthof $r1;

        if $i1 > $i0 goto label3;

     label1:
        $i1 = $i0 + 1;

        $r1 = newarray (float)[$i1];

        $i1 = $i0 + 1;

        $r2 = newarray (float)[$i1];

        $i1 = $i0 + 1;

        $r3 = newarray (float)[$i1];

        $i1 = $i0 + 1;

        $r4 = newarray (float)[$i1];

        $i1 = $i0 + 1;

        $r5 = newarray (int)[$i1];

        $i1 = $i0 + 1;

        $r6 = newarray (int)[$i1];

        $i0 = $i0 + 1;

        $r7 = newarray (int)[$i0];

        $r8 = $r0.<androidx.customview.widget.ViewDragHelper: float[] mInitialMotionX>;

        if $r8 == null goto label2;

        $i0 = lengthof $r8;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8, 0, $r1, 0, $i0);

        $r8 = $r0.<androidx.customview.widget.ViewDragHelper: float[] mInitialMotionY>;

        $i0 = lengthof $r8;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8, 0, $r2, 0, $i0);

        $r8 = $r0.<androidx.customview.widget.ViewDragHelper: float[] mLastMotionX>;

        $i0 = lengthof $r8;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8, 0, $r3, 0, $i0);

        $r8 = $r0.<androidx.customview.widget.ViewDragHelper: float[] mLastMotionY>;

        $i0 = lengthof $r8;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8, 0, $r4, 0, $i0);

        $r9 = $r0.<androidx.customview.widget.ViewDragHelper: int[] mInitialEdgesTouched>;

        $i0 = lengthof $r9;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, 0, $r5, 0, $i0);

        $r9 = $r0.<androidx.customview.widget.ViewDragHelper: int[] mEdgeDragsInProgress>;

        $i0 = lengthof $r9;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, 0, $r6, 0, $i0);

        $r9 = $r0.<androidx.customview.widget.ViewDragHelper: int[] mEdgeDragsLocked>;

        $i0 = lengthof $r9;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, 0, $r7, 0, $i0);

     label2:
        $r0.<androidx.customview.widget.ViewDragHelper: float[] mInitialMotionX> = $r1;

        $r0.<androidx.customview.widget.ViewDragHelper: float[] mInitialMotionY> = $r2;

        $r0.<androidx.customview.widget.ViewDragHelper: float[] mLastMotionX> = $r3;

        $r0.<androidx.customview.widget.ViewDragHelper: float[] mLastMotionY> = $r4;

        $r0.<androidx.customview.widget.ViewDragHelper: int[] mInitialEdgesTouched> = $r5;

        $r0.<androidx.customview.widget.ViewDragHelper: int[] mEdgeDragsInProgress> = $r6;

        $r0.<androidx.customview.widget.ViewDragHelper: int[] mEdgeDragsLocked> = $r7;

     label3:
        return;
    }

    private boolean forceSettleCapturedViewAt(int, int, int, int)
    {
        androidx.customview.widget.ViewDragHelper $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.view.View $r1;
        android.widget.OverScroller $r2;

        $r0 := @this: androidx.customview.widget.ViewDragHelper;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $r1 = $r0.<androidx.customview.widget.ViewDragHelper: android.view.View mCapturedView>;

        $i4 = virtualinvoke $r1.<android.view.View: int getLeft()>();

        $r1 = $r0.<androidx.customview.widget.ViewDragHelper: android.view.View mCapturedView>;

        $i5 = virtualinvoke $r1.<android.view.View: int getTop()>();

        $i0 = $i0 - $i4;

        $i1 = $i1 - $i5;

        if $i0 != 0 goto label1;

        if $i1 != 0 goto label1;

        $r2 = $r0.<androidx.customview.widget.ViewDragHelper: android.widget.OverScroller mScroller>;

        virtualinvoke $r2.<android.widget.OverScroller: void abortAnimation()>();

        virtualinvoke $r0.<androidx.customview.widget.ViewDragHelper: void setDragState(int)>(0);

        return 0;

     label1:
        $r1 = $r0.<androidx.customview.widget.ViewDragHelper: android.view.View mCapturedView>;

        $i2 = specialinvoke $r0.<androidx.customview.widget.ViewDragHelper: int computeSettleDuration(android.view.View,int,int,int,int)>($r1, $i0, $i1, $i2, $i3);

        $r2 = $r0.<androidx.customview.widget.ViewDragHelper: android.widget.OverScroller mScroller>;

        virtualinvoke $r2.<android.widget.OverScroller: void startScroll(int,int,int,int,int)>($i4, $i5, $i0, $i1, $i2);

        virtualinvoke $r0.<androidx.customview.widget.ViewDragHelper: void setDragState(int)>(2);

        return 1;
    }

    private int getEdgesTouched(int, int)
    {
        androidx.customview.widget.ViewDragHelper $r0;
        int $i0, $i1, $i3, $i4;
        byte $b2;
        android.view.ViewGroup $r1;

        $r0 := @this: androidx.customview.widget.ViewDragHelper;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $b2 = 0;

        $r1 = $r0.<androidx.customview.widget.ViewDragHelper: android.view.ViewGroup mParentView>;

        $i3 = virtualinvoke $r1.<android.view.ViewGroup: int getLeft()>();

        $i4 = $r0.<androidx.customview.widget.ViewDragHelper: int mEdgeSize>;

        $i3 = $i3 + $i4;

        if $i0 >= $i3 goto label1;

        $b2 = 1;

     label1:
        $r1 = $r0.<androidx.customview.widget.ViewDragHelper: android.view.ViewGroup mParentView>;

        $i3 = virtualinvoke $r1.<android.view.ViewGroup: int getTop()>();

        $i4 = $r0.<androidx.customview.widget.ViewDragHelper: int mEdgeSize>;

        $i3 = $i3 + $i4;

        if $i1 >= $i3 goto label2;

        $b2 = $b2 | 4;

     label2:
        $r1 = $r0.<androidx.customview.widget.ViewDragHelper: android.view.ViewGroup mParentView>;

        $i3 = virtualinvoke $r1.<android.view.ViewGroup: int getRight()>();

        $i4 = $r0.<androidx.customview.widget.ViewDragHelper: int mEdgeSize>;

        $i3 = $i3 - $i4;

        if $i0 <= $i3 goto label3;

        $b2 = $b2 | 2;

     label3:
        $r1 = $r0.<androidx.customview.widget.ViewDragHelper: android.view.ViewGroup mParentView>;

        $i0 = virtualinvoke $r1.<android.view.ViewGroup: int getBottom()>();

        $i3 = $r0.<androidx.customview.widget.ViewDragHelper: int mEdgeSize>;

        $i0 = $i0 - $i3;

        if $i1 <= $i0 goto label4;

        $b2 = $b2 | 8;

     label4:
        return $b2;
    }

    private boolean isValidPointerForActionMove(int)
    {
        androidx.customview.widget.ViewDragHelper $r0;
        int $i0;
        boolean $z0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        $r0 := @this: androidx.customview.widget.ViewDragHelper;

        $i0 := @parameter0: int;

        $z0 = virtualinvoke $r0.<androidx.customview.widget.ViewDragHelper: boolean isPointerDown(int)>($i0);

        if $z0 != 0 goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring pointerId=");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" because ACTION_DOWN was not received ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("for this pointer before ACTION_MOVE. It likely happened because ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ViewDragHelper did not receive all the events in the event stream.");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ViewDragHelper", $r2);

        return 0;

     label1:
        return 1;
    }

    private void releaseViewForPointerUp()
    {
        androidx.customview.widget.ViewDragHelper $r0;
        float $f0, $f1, $f2, $f3;
        android.view.VelocityTracker $r1;
        int $i0;

        $r0 := @this: androidx.customview.widget.ViewDragHelper;

        $r1 = $r0.<androidx.customview.widget.ViewDragHelper: android.view.VelocityTracker mVelocityTracker>;

        $f1 = $r0.<androidx.customview.widget.ViewDragHelper: float mMaxVelocity>;

        virtualinvoke $r1.<android.view.VelocityTracker: void computeCurrentVelocity(int,float)>(1000, $f1);

        $r1 = $r0.<androidx.customview.widget.ViewDragHelper: android.view.VelocityTracker mVelocityTracker>;

        $i0 = $r0.<androidx.customview.widget.ViewDragHelper: int mActivePointerId>;

        $f1 = virtualinvoke $r1.<android.view.VelocityTracker: float getXVelocity(int)>($i0);

        $f0 = $r0.<androidx.customview.widget.ViewDragHelper: float mMinVelocity>;

        $f2 = $r0.<androidx.customview.widget.ViewDragHelper: float mMaxVelocity>;

        $f1 = specialinvoke $r0.<androidx.customview.widget.ViewDragHelper: float clampMag(float,float,float)>($f1, $f0, $f2);

        $r1 = $r0.<androidx.customview.widget.ViewDragHelper: android.view.VelocityTracker mVelocityTracker>;

        $i0 = $r0.<androidx.customview.widget.ViewDragHelper: int mActivePointerId>;

        $f2 = virtualinvoke $r1.<android.view.VelocityTracker: float getYVelocity(int)>($i0);

        $f3 = $r0.<androidx.customview.widget.ViewDragHelper: float mMinVelocity>;

        $f0 = $r0.<androidx.customview.widget.ViewDragHelper: float mMaxVelocity>;

        $f0 = specialinvoke $r0.<androidx.customview.widget.ViewDragHelper: float clampMag(float,float,float)>($f2, $f3, $f0);

        specialinvoke $r0.<androidx.customview.widget.ViewDragHelper: void dispatchViewReleased(float,float)>($f1, $f0);

        return;
    }

    private void reportNewEdgeDrags(float, float, int)
    {
        androidx.customview.widget.ViewDragHelper $r0;
        float $f0, $f1;
        int $i0, $i2;
        byte $b1;
        boolean $z0;
        int[] $r1;
        androidx.customview.widget.ViewDragHelper$Callback $r2;

        $r0 := @this: androidx.customview.widget.ViewDragHelper;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $i0 := @parameter2: int;

        $b1 = 0;

        $z0 = specialinvoke $r0.<androidx.customview.widget.ViewDragHelper: boolean checkNewEdgeDrag(float,float,int,int)>($f0, $f1, $i0, 1);

        if $z0 == 0 goto label1;

        $b1 = 1;

     label1:
        $z0 = specialinvoke $r0.<androidx.customview.widget.ViewDragHelper: boolean checkNewEdgeDrag(float,float,int,int)>($f1, $f0, $i0, 4);

        if $z0 == 0 goto label2;

        $b1 = $b1 | 4;

     label2:
        $z0 = specialinvoke $r0.<androidx.customview.widget.ViewDragHelper: boolean checkNewEdgeDrag(float,float,int,int)>($f0, $f1, $i0, 2);

        if $z0 == 0 goto label3;

        $b1 = $b1 | 2;

     label3:
        $z0 = specialinvoke $r0.<androidx.customview.widget.ViewDragHelper: boolean checkNewEdgeDrag(float,float,int,int)>($f1, $f0, $i0, 8);

        if $z0 == 0 goto label4;

        $b1 = $b1 | 8;

     label4:
        if $b1 == 0 goto label5;

        $r1 = $r0.<androidx.customview.widget.ViewDragHelper: int[] mEdgeDragsInProgress>;

        $i2 = $r1[$i0];

        $i2 = $i2 | $b1;

        $r1[$i0] = $i2;

        $r2 = $r0.<androidx.customview.widget.ViewDragHelper: androidx.customview.widget.ViewDragHelper$Callback mCallback>;

        virtualinvoke $r2.<androidx.customview.widget.ViewDragHelper$Callback: void onEdgeDragStarted(int,int)>($b1, $i0);

     label5:
        return;
    }

    private void saveInitialMotion(float, float, int)
    {
        androidx.customview.widget.ViewDragHelper $r0;
        float $f0, $f1;
        int $i0, $i1, $i2;
        float[] $r1, $r2;
        int[] $r3;

        $r0 := @this: androidx.customview.widget.ViewDragHelper;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $i0 := @parameter2: int;

        specialinvoke $r0.<androidx.customview.widget.ViewDragHelper: void ensureMotionHistorySizeForId(int)>($i0);

        $r1 = $r0.<androidx.customview.widget.ViewDragHelper: float[] mInitialMotionX>;

        $r2 = $r0.<androidx.customview.widget.ViewDragHelper: float[] mLastMotionX>;

        $r2[$i0] = $f0;

        $r1[$i0] = $f0;

        $r1 = $r0.<androidx.customview.widget.ViewDragHelper: float[] mInitialMotionY>;

        $r2 = $r0.<androidx.customview.widget.ViewDragHelper: float[] mLastMotionY>;

        $r2[$i0] = $f1;

        $r1[$i0] = $f1;

        $r3 = $r0.<androidx.customview.widget.ViewDragHelper: int[] mInitialEdgesTouched>;

        $i2 = (int) $f0;

        $i1 = (int) $f1;

        $i1 = specialinvoke $r0.<androidx.customview.widget.ViewDragHelper: int getEdgesTouched(int,int)>($i2, $i1);

        $r3[$i0] = $i1;

        $i1 = $r0.<androidx.customview.widget.ViewDragHelper: int mPointersDown>;

        $i0 = 1 << $i0;

        $i0 = $i1 | $i0;

        $r0.<androidx.customview.widget.ViewDragHelper: int mPointersDown> = $i0;

        return;
    }

    private void saveLastMotion(android.view.MotionEvent)
    {
        androidx.customview.widget.ViewDragHelper $r0;
        android.view.MotionEvent $r1;
        int $i0, $i1, $i2;
        boolean $z0;
        float $f0, $f1;
        float[] $r2;

        $r0 := @this: androidx.customview.widget.ViewDragHelper;

        $r1 := @parameter0: android.view.MotionEvent;

        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getPointerCount()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label4;

        $i2 = virtualinvoke $r1.<android.view.MotionEvent: int getPointerId(int)>($i1);

        $z0 = specialinvoke $r0.<androidx.customview.widget.ViewDragHelper: boolean isValidPointerForActionMove(int)>($i2);

        if $z0 != 0 goto label2;

        goto label3;

     label2:
        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX(int)>($i1);

        $f1 = virtualinvoke $r1.<android.view.MotionEvent: float getY(int)>($i1);

        $r2 = $r0.<androidx.customview.widget.ViewDragHelper: float[] mLastMotionX>;

        $r2[$i2] = $f0;

        $r2 = $r0.<androidx.customview.widget.ViewDragHelper: float[] mLastMotionY>;

        $r2[$i2] = $f1;

     label3:
        $i1 = $i1 + 1;

        goto label1;

     label4:
        return;
    }

    public void abort()
    {
        androidx.customview.widget.ViewDragHelper $r0;
        android.view.View $r1;
        int $i0, $i1, $i2, $i3;
        android.widget.OverScroller $r2;
        androidx.customview.widget.ViewDragHelper$Callback $r3;

        $r0 := @this: androidx.customview.widget.ViewDragHelper;

        virtualinvoke $r0.<androidx.customview.widget.ViewDragHelper: void cancel()>();

        $i2 = $r0.<androidx.customview.widget.ViewDragHelper: int mDragState>;

        if $i2 != 2 goto label1;

        $r2 = $r0.<androidx.customview.widget.ViewDragHelper: android.widget.OverScroller mScroller>;

        $i0 = virtualinvoke $r2.<android.widget.OverScroller: int getCurrX()>();

        $r2 = $r0.<androidx.customview.widget.ViewDragHelper: android.widget.OverScroller mScroller>;

        $i1 = virtualinvoke $r2.<android.widget.OverScroller: int getCurrY()>();

        $r2 = $r0.<androidx.customview.widget.ViewDragHelper: android.widget.OverScroller mScroller>;

        virtualinvoke $r2.<android.widget.OverScroller: void abortAnimation()>();

        $r2 = $r0.<androidx.customview.widget.ViewDragHelper: android.widget.OverScroller mScroller>;

        $i2 = virtualinvoke $r2.<android.widget.OverScroller: int getCurrX()>();

        $r2 = $r0.<androidx.customview.widget.ViewDragHelper: android.widget.OverScroller mScroller>;

        $i3 = virtualinvoke $r2.<android.widget.OverScroller: int getCurrY()>();

        $r3 = $r0.<androidx.customview.widget.ViewDragHelper: androidx.customview.widget.ViewDragHelper$Callback mCallback>;

        $r1 = $r0.<androidx.customview.widget.ViewDragHelper: android.view.View mCapturedView>;

        $i0 = $i2 - $i0;

        $i1 = $i3 - $i1;

        virtualinvoke $r3.<androidx.customview.widget.ViewDragHelper$Callback: void onViewPositionChanged(android.view.View,int,int,int,int)>($r1, $i2, $i3, $i0, $i1);

     label1:
        virtualinvoke $r0.<androidx.customview.widget.ViewDragHelper: void setDragState(int)>(0);

        return;
    }

    protected boolean canScroll(android.view.View, boolean, int, int, int, int)
    {
        androidx.customview.widget.ViewDragHelper $r0;
        android.view.View $r1, $r3;
        boolean $z0, $z1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        android.view.ViewGroup $r2;

        $r0 := @this: androidx.customview.widget.ViewDragHelper;

        $r1 := @parameter0: android.view.View;

        $z0 := @parameter1: boolean;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $i2 := @parameter4: int;

        $i3 := @parameter5: int;

        $z1 = $r1 instanceof android.view.ViewGroup;

        if $z1 == 0 goto label3;

        $r2 = (android.view.ViewGroup) $r1;

        $i6 = virtualinvoke $r1.<android.view.View: int getScrollX()>();

        $i7 = virtualinvoke $r1.<android.view.View: int getScrollY()>();

        $i8 = virtualinvoke $r2.<android.view.ViewGroup: int getChildCount()>();

        $i8 = $i8 + -1;

     label1:
        if $i8 < 0 goto label3;

        $r3 = virtualinvoke $r2.<android.view.ViewGroup: android.view.View getChildAt(int)>($i8);

        $i4 = $i2 + $i6;

        $i5 = virtualinvoke $r3.<android.view.View: int getLeft()>();

        if $i4 < $i5 goto label2;

        $i4 = $i2 + $i6;

        $i5 = virtualinvoke $r3.<android.view.View: int getRight()>();

        if $i4 >= $i5 goto label2;

        $i4 = $i3 + $i7;

        $i5 = virtualinvoke $r3.<android.view.View: int getTop()>();

        if $i4 < $i5 goto label2;

        $i4 = $i3 + $i7;

        $i5 = virtualinvoke $r3.<android.view.View: int getBottom()>();

        if $i4 >= $i5 goto label2;

        $i4 = $i2 + $i6;

        $i5 = virtualinvoke $r3.<android.view.View: int getLeft()>();

        $i4 = $i4 - $i5;

        $i5 = $i3 + $i7;

        $i9 = virtualinvoke $r3.<android.view.View: int getTop()>();

        $i5 = $i5 - $i9;

        $z1 = virtualinvoke $r0.<androidx.customview.widget.ViewDragHelper: boolean canScroll(android.view.View,boolean,int,int,int,int)>($r3, 1, $i0, $i1, $i4, $i5);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        $i8 = $i8 + -1;

        goto label1;

     label3:
        if $z0 == 0 goto label5;

        $i0 = neg $i0;

        $z0 = virtualinvoke $r1.<android.view.View: boolean canScrollHorizontally(int)>($i0);

        if $z0 != 0 goto label4;

        $i0 = neg $i1;

        $z0 = virtualinvoke $r1.<android.view.View: boolean canScrollVertically(int)>($i0);

        if $z0 == 0 goto label5;

     label4:
        return 1;

     label5:
        return 0;
    }

    public void cancel()
    {
        androidx.customview.widget.ViewDragHelper $r0;
        android.view.VelocityTracker $r1;

        $r0 := @this: androidx.customview.widget.ViewDragHelper;

        $r0.<androidx.customview.widget.ViewDragHelper: int mActivePointerId> = -1;

        specialinvoke $r0.<androidx.customview.widget.ViewDragHelper: void clearMotionHistory()>();

        $r1 = $r0.<androidx.customview.widget.ViewDragHelper: android.view.VelocityTracker mVelocityTracker>;

        if $r1 == null goto label1;

        virtualinvoke $r1.<android.view.VelocityTracker: void recycle()>();

        $r0.<androidx.customview.widget.ViewDragHelper: android.view.VelocityTracker mVelocityTracker> = null;

     label1:
        return;
    }

    public void captureChildView(android.view.View, int)
    {
        androidx.customview.widget.ViewDragHelper $r0;
        android.view.View $r1;
        int $i0;
        android.view.ViewParent $r2;
        android.view.ViewGroup $r3;
        androidx.customview.widget.ViewDragHelper$Callback $r4;
        java.lang.IllegalArgumentException $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;

        $r0 := @this: androidx.customview.widget.ViewDragHelper;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewParent getParent()>();

        $r3 = $r0.<androidx.customview.widget.ViewDragHelper: android.view.ViewGroup mParentView>;

        if $r2 != $r3 goto label1;

        $r0.<androidx.customview.widget.ViewDragHelper: android.view.View mCapturedView> = $r1;

        $r0.<androidx.customview.widget.ViewDragHelper: int mActivePointerId> = $i0;

        $r4 = $r0.<androidx.customview.widget.ViewDragHelper: androidx.customview.widget.ViewDragHelper$Callback mCallback>;

        virtualinvoke $r4.<androidx.customview.widget.ViewDragHelper$Callback: void onViewCaptured(android.view.View,int)>($r1, $i0);

        virtualinvoke $r0.<androidx.customview.widget.ViewDragHelper: void setDragState(int)>(1);

        return;

     label1:
        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("captureChildView: parameter must be a descendant of the ViewDragHelper\'s tracked parent view (");

        $r3 = $r0.<androidx.customview.widget.ViewDragHelper: android.view.ViewGroup mParentView>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r5;
    }

    public boolean checkTouchSlop(int)
    {
        androidx.customview.widget.ViewDragHelper $r0;
        int $i0, $i1, $i2;
        boolean $z0;
        float[] $r1;

        $r0 := @this: androidx.customview.widget.ViewDragHelper;

        $i0 := @parameter0: int;

        $r1 = $r0.<androidx.customview.widget.ViewDragHelper: float[] mInitialMotionX>;

        $i1 = lengthof $r1;

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label3;

        $z0 = virtualinvoke $r0.<androidx.customview.widget.ViewDragHelper: boolean checkTouchSlop(int,int)>($i0, $i2);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $i2 = $i2 + 1;

        goto label1;

     label3:
        return 0;
    }

    public boolean checkTouchSlop(int, int)
    {
        androidx.customview.widget.ViewDragHelper $r0;
        int $i0, $i1, $i2;
        boolean $z0, $z1;
        float[] $r1;
        float $f0, $f1, $f2;
        byte $b3;

        $r0 := @this: androidx.customview.widget.ViewDragHelper;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $z0 = virtualinvoke $r0.<androidx.customview.widget.ViewDragHelper: boolean isPointerDown(int)>($i1);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $i2 = $i0 & 1;

        if $i2 != 1 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        $i0 = $i0 & 2;

        if $i0 != 2 goto label4;

        $z1 = 1;

        goto label5;

     label4:
        $z1 = 0;

     label5:
        $r1 = $r0.<androidx.customview.widget.ViewDragHelper: float[] mLastMotionX>;

        $f0 = $r1[$i1];

        $r1 = $r0.<androidx.customview.widget.ViewDragHelper: float[] mInitialMotionX>;

        $f1 = $r1[$i1];

        $f0 = $f0 - $f1;

        $r1 = $r0.<androidx.customview.widget.ViewDragHelper: float[] mLastMotionY>;

        $f1 = $r1[$i1];

        $r1 = $r0.<androidx.customview.widget.ViewDragHelper: float[] mInitialMotionY>;

        $f2 = $r1[$i1];

        $f1 = $f1 - $f2;

        if $z0 == 0 goto label6;

        if $z1 == 0 goto label6;

        $f0 = $f0 * $f0;

        $f1 = $f1 * $f1;

        $f0 = $f0 + $f1;

        $i0 = $r0.<androidx.customview.widget.ViewDragHelper: int mTouchSlop>;

        $i0 = $i0 * $i0;

        $f1 = (float) $i0;

        $b3 = $f0 cmpl $f1;

        if $b3 <= 0 goto label8;

        return 1;

     label6:
        if $z0 == 0 goto label7;

        $f0 = staticinvoke <java.lang.Math: float abs(float)>($f0);

        $i0 = $r0.<androidx.customview.widget.ViewDragHelper: int mTouchSlop>;

        $f1 = (float) $i0;

        $b3 = $f0 cmpl $f1;

        if $b3 <= 0 goto label8;

        return 1;

     label7:
        if $z1 == 0 goto label8;

        $f0 = staticinvoke <java.lang.Math: float abs(float)>($f1);

        $i0 = $r0.<androidx.customview.widget.ViewDragHelper: int mTouchSlop>;

        $f1 = (float) $i0;

        $b3 = $f0 cmpl $f1;

        if $b3 <= 0 goto label8;

        return 1;

     label8:
        return 0;
    }

    public boolean continueSettling(boolean)
    {
        androidx.customview.widget.ViewDragHelper $r0;
        boolean $z0, $z1, $z2;
        int $i0, $i1, $i2, $i3;
        android.widget.OverScroller $r1;
        android.view.View $r2;
        androidx.customview.widget.ViewDragHelper$Callback $r3;
        android.view.ViewGroup $r4;
        java.lang.Runnable $r5;

        $r0 := @this: androidx.customview.widget.ViewDragHelper;

        $z0 := @parameter0: boolean;

        $i2 = $r0.<androidx.customview.widget.ViewDragHelper: int mDragState>;

        if $i2 != 2 goto label7;

        $r1 = $r0.<androidx.customview.widget.ViewDragHelper: android.widget.OverScroller mScroller>;

        $z1 = virtualinvoke $r1.<android.widget.OverScroller: boolean computeScrollOffset()>();

        $z2 = $z1;

        $r1 = $r0.<androidx.customview.widget.ViewDragHelper: android.widget.OverScroller mScroller>;

        $i3 = virtualinvoke $r1.<android.widget.OverScroller: int getCurrX()>();

        $r1 = $r0.<androidx.customview.widget.ViewDragHelper: android.widget.OverScroller mScroller>;

        $i2 = virtualinvoke $r1.<android.widget.OverScroller: int getCurrY()>();

        $r2 = $r0.<androidx.customview.widget.ViewDragHelper: android.view.View mCapturedView>;

        $i0 = virtualinvoke $r2.<android.view.View: int getLeft()>();

        $i0 = $i3 - $i0;

        $r2 = $r0.<androidx.customview.widget.ViewDragHelper: android.view.View mCapturedView>;

        $i1 = virtualinvoke $r2.<android.view.View: int getTop()>();

        $i1 = $i2 - $i1;

        if $i0 == 0 goto label1;

        $r2 = $r0.<androidx.customview.widget.ViewDragHelper: android.view.View mCapturedView>;

        staticinvoke <androidx.core.view.ViewCompat: void offsetLeftAndRight(android.view.View,int)>($r2, $i0);

     label1:
        if $i1 == 0 goto label2;

        $r2 = $r0.<androidx.customview.widget.ViewDragHelper: android.view.View mCapturedView>;

        staticinvoke <androidx.core.view.ViewCompat: void offsetTopAndBottom(android.view.View,int)>($r2, $i1);

     label2:
        if $i0 != 0 goto label3;

        if $i1 == 0 goto label4;

     label3:
        $r3 = $r0.<androidx.customview.widget.ViewDragHelper: androidx.customview.widget.ViewDragHelper$Callback mCallback>;

        $r2 = $r0.<androidx.customview.widget.ViewDragHelper: android.view.View mCapturedView>;

        virtualinvoke $r3.<androidx.customview.widget.ViewDragHelper$Callback: void onViewPositionChanged(android.view.View,int,int,int,int)>($r2, $i3, $i2, $i0, $i1);

     label4:
        if $z1 == 0 goto label5;

        $r1 = $r0.<androidx.customview.widget.ViewDragHelper: android.widget.OverScroller mScroller>;

        $i0 = virtualinvoke $r1.<android.widget.OverScroller: int getFinalX()>();

        if $i3 != $i0 goto label5;

        $r1 = $r0.<androidx.customview.widget.ViewDragHelper: android.widget.OverScroller mScroller>;

        $i3 = virtualinvoke $r1.<android.widget.OverScroller: int getFinalY()>();

        if $i2 != $i3 goto label5;

        $r1 = $r0.<androidx.customview.widget.ViewDragHelper: android.widget.OverScroller mScroller>;

        virtualinvoke $r1.<android.widget.OverScroller: void abortAnimation()>();

        $z2 = 0;

     label5:
        if $z2 != 0 goto label7;

        if $z0 == 0 goto label6;

        $r4 = $r0.<androidx.customview.widget.ViewDragHelper: android.view.ViewGroup mParentView>;

        $r5 = $r0.<androidx.customview.widget.ViewDragHelper: java.lang.Runnable mSetIdleRunnable>;

        virtualinvoke $r4.<android.view.ViewGroup: boolean post(java.lang.Runnable)>($r5);

        goto label7;

     label6:
        virtualinvoke $r0.<androidx.customview.widget.ViewDragHelper: void setDragState(int)>(0);

     label7:
        $i2 = $r0.<androidx.customview.widget.ViewDragHelper: int mDragState>;

        if $i2 != 2 goto label8;

        return 1;

     label8:
        return 0;
    }

    public android.view.View findTopChildUnder(int, int)
    {
        androidx.customview.widget.ViewDragHelper $r0;
        int $i0, $i1, $i2, $i3;
        android.view.ViewGroup $r1;
        androidx.customview.widget.ViewDragHelper$Callback $r2;
        android.view.View $r3;

        $r0 := @this: androidx.customview.widget.ViewDragHelper;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = $r0.<androidx.customview.widget.ViewDragHelper: android.view.ViewGroup mParentView>;

        $i2 = virtualinvoke $r1.<android.view.ViewGroup: int getChildCount()>();

        $i2 = $i2 + -1;

     label1:
        if $i2 < 0 goto label3;

        $r1 = $r0.<androidx.customview.widget.ViewDragHelper: android.view.ViewGroup mParentView>;

        $r2 = $r0.<androidx.customview.widget.ViewDragHelper: androidx.customview.widget.ViewDragHelper$Callback mCallback>;

        $i3 = virtualinvoke $r2.<androidx.customview.widget.ViewDragHelper$Callback: int getOrderedChildIndex(int)>($i2);

        $r3 = virtualinvoke $r1.<android.view.ViewGroup: android.view.View getChildAt(int)>($i3);

        $i3 = virtualinvoke $r3.<android.view.View: int getLeft()>();

        if $i0 < $i3 goto label2;

        $i3 = virtualinvoke $r3.<android.view.View: int getRight()>();

        if $i0 >= $i3 goto label2;

        $i3 = virtualinvoke $r3.<android.view.View: int getTop()>();

        if $i1 < $i3 goto label2;

        $i3 = virtualinvoke $r3.<android.view.View: int getBottom()>();

        if $i1 >= $i3 goto label2;

        return $r3;

     label2:
        $i2 = $i2 + -1;

        goto label1;

     label3:
        return null;
    }

    public void flingCapturedView(int, int, int, int)
    {
        androidx.customview.widget.ViewDragHelper $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean $z0;
        android.widget.OverScroller $r1;
        android.view.View $r2;
        android.view.VelocityTracker $r3;
        float $f0;
        java.lang.IllegalStateException $r4;

        $r0 := @this: androidx.customview.widget.ViewDragHelper;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $z0 = $r0.<androidx.customview.widget.ViewDragHelper: boolean mReleaseInProgress>;

        if $z0 == 0 goto label1;

        $r1 = $r0.<androidx.customview.widget.ViewDragHelper: android.widget.OverScroller mScroller>;

        $r2 = $r0.<androidx.customview.widget.ViewDragHelper: android.view.View mCapturedView>;

        $i4 = virtualinvoke $r2.<android.view.View: int getLeft()>();

        $r2 = $r0.<androidx.customview.widget.ViewDragHelper: android.view.View mCapturedView>;

        $i5 = virtualinvoke $r2.<android.view.View: int getTop()>();

        $r3 = $r0.<androidx.customview.widget.ViewDragHelper: android.view.VelocityTracker mVelocityTracker>;

        $i6 = $r0.<androidx.customview.widget.ViewDragHelper: int mActivePointerId>;

        $f0 = virtualinvoke $r3.<android.view.VelocityTracker: float getXVelocity(int)>($i6);

        $i6 = (int) $f0;

        $r3 = $r0.<androidx.customview.widget.ViewDragHelper: android.view.VelocityTracker mVelocityTracker>;

        $i7 = $r0.<androidx.customview.widget.ViewDragHelper: int mActivePointerId>;

        $f0 = virtualinvoke $r3.<android.view.VelocityTracker: float getYVelocity(int)>($i7);

        $i7 = (int) $f0;

        virtualinvoke $r1.<android.widget.OverScroller: void fling(int,int,int,int,int,int,int,int)>($i4, $i5, $i6, $i7, $i0, $i2, $i1, $i3);

        virtualinvoke $r0.<androidx.customview.widget.ViewDragHelper: void setDragState(int)>(2);

        return;

     label1:
        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot flingCapturedView outside of a call to Callback#onViewReleased");

        throw $r4;
    }

    public int getActivePointerId()
    {
        androidx.customview.widget.ViewDragHelper $r0;
        int i0;

        $r0 := @this: androidx.customview.widget.ViewDragHelper;

        i0 = $r0.<androidx.customview.widget.ViewDragHelper: int mActivePointerId>;

        return i0;
    }

    public android.view.View getCapturedView()
    {
        androidx.customview.widget.ViewDragHelper $r0;
        android.view.View r1;

        $r0 := @this: androidx.customview.widget.ViewDragHelper;

        r1 = $r0.<androidx.customview.widget.ViewDragHelper: android.view.View mCapturedView>;

        return r1;
    }

    public int getEdgeSize()
    {
        androidx.customview.widget.ViewDragHelper $r0;
        int i0;

        $r0 := @this: androidx.customview.widget.ViewDragHelper;

        i0 = $r0.<androidx.customview.widget.ViewDragHelper: int mEdgeSize>;

        return i0;
    }

    public float getMinVelocity()
    {
        androidx.customview.widget.ViewDragHelper $r0;
        float f0;

        $r0 := @this: androidx.customview.widget.ViewDragHelper;

        f0 = $r0.<androidx.customview.widget.ViewDragHelper: float mMinVelocity>;

        return f0;
    }

    public int getTouchSlop()
    {
        androidx.customview.widget.ViewDragHelper $r0;
        int i0;

        $r0 := @this: androidx.customview.widget.ViewDragHelper;

        i0 = $r0.<androidx.customview.widget.ViewDragHelper: int mTouchSlop>;

        return i0;
    }

    public int getViewDragState()
    {
        androidx.customview.widget.ViewDragHelper $r0;
        int i0;

        $r0 := @this: androidx.customview.widget.ViewDragHelper;

        i0 = $r0.<androidx.customview.widget.ViewDragHelper: int mDragState>;

        return i0;
    }

    public boolean isCapturedViewUnder(int, int)
    {
        androidx.customview.widget.ViewDragHelper $r0;
        int $i0, $i1;
        boolean $z0;
        android.view.View $r1;

        $r0 := @this: androidx.customview.widget.ViewDragHelper;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = $r0.<androidx.customview.widget.ViewDragHelper: android.view.View mCapturedView>;

        $z0 = virtualinvoke $r0.<androidx.customview.widget.ViewDragHelper: boolean isViewUnder(android.view.View,int,int)>($r1, $i0, $i1);

        return $z0;
    }

    public boolean isEdgeTouched(int)
    {
        androidx.customview.widget.ViewDragHelper $r0;
        int $i0, $i1, $i2;
        boolean $z0;
        int[] $r1;

        $r0 := @this: androidx.customview.widget.ViewDragHelper;

        $i0 := @parameter0: int;

        $r1 = $r0.<androidx.customview.widget.ViewDragHelper: int[] mInitialEdgesTouched>;

        $i1 = lengthof $r1;

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label3;

        $z0 = virtualinvoke $r0.<androidx.customview.widget.ViewDragHelper: boolean isEdgeTouched(int,int)>($i0, $i2);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $i2 = $i2 + 1;

        goto label1;

     label3:
        return 0;
    }

    public boolean isEdgeTouched(int, int)
    {
        androidx.customview.widget.ViewDragHelper $r0;
        int $i0, $i1;
        boolean $z0;
        int[] $r1;

        $r0 := @this: androidx.customview.widget.ViewDragHelper;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $z0 = virtualinvoke $r0.<androidx.customview.widget.ViewDragHelper: boolean isPointerDown(int)>($i1);

        if $z0 == 0 goto label1;

        $r1 = $r0.<androidx.customview.widget.ViewDragHelper: int[] mInitialEdgesTouched>;

        $i1 = $r1[$i1];

        $i0 = $i1 & $i0;

        if $i0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isPointerDown(int)
    {
        androidx.customview.widget.ViewDragHelper $r0;
        int $i0, $i1;

        $r0 := @this: androidx.customview.widget.ViewDragHelper;

        $i0 := @parameter0: int;

        $i1 = $r0.<androidx.customview.widget.ViewDragHelper: int mPointersDown>;

        $i0 = 1 << $i0;

        $i0 = $i1 & $i0;

        if $i0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isViewUnder(android.view.View, int, int)
    {
        androidx.customview.widget.ViewDragHelper $r0;
        android.view.View $r1;
        int $i0, $i1, $i2;

        $r0 := @this: androidx.customview.widget.ViewDragHelper;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        if $r1 != null goto label1;

        return 0;

     label1:
        $i2 = virtualinvoke $r1.<android.view.View: int getLeft()>();

        if $i0 < $i2 goto label2;

        $i2 = virtualinvoke $r1.<android.view.View: int getRight()>();

        if $i0 >= $i2 goto label2;

        $i0 = virtualinvoke $r1.<android.view.View: int getTop()>();

        if $i1 < $i0 goto label2;

        $i0 = virtualinvoke $r1.<android.view.View: int getBottom()>();

        if $i1 >= $i0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public void processTouchEvent(android.view.MotionEvent)
    {
        androidx.customview.widget.ViewDragHelper $r0;
        android.view.MotionEvent $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        android.view.VelocityTracker $r2;
        float $f0, $f1, $f2, $f3;
        android.view.View $r3, $r4;
        boolean $z0;
        int[] $r5;
        androidx.customview.widget.ViewDragHelper$Callback $r6;
        float[] $r7;

        $r0 := @this: androidx.customview.widget.ViewDragHelper;

        $r1 := @parameter0: android.view.MotionEvent;

        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getActionMasked()>();

        $i1 = virtualinvoke $r1.<android.view.MotionEvent: int getActionIndex()>();

        if $i0 != 0 goto label01;

        virtualinvoke $r0.<androidx.customview.widget.ViewDragHelper: void cancel()>();

     label01:
        $r2 = $r0.<androidx.customview.widget.ViewDragHelper: android.view.VelocityTracker mVelocityTracker>;

        if $r2 != null goto label02;

        $r2 = staticinvoke <android.view.VelocityTracker: android.view.VelocityTracker obtain()>();

        $r0.<androidx.customview.widget.ViewDragHelper: android.view.VelocityTracker mVelocityTracker> = $r2;

     label02:
        $r2 = $r0.<androidx.customview.widget.ViewDragHelper: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r2.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>($r1);

        if $i0 == 0 goto label24;

        if $i0 == 1 goto label22;

        if $i0 == 2 goto label14;

        if $i0 == 3 goto label12;

        if $i0 == 5 goto label09;

        if $i0 == 6 goto label03;

        return;

     label03:
        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getPointerId(int)>($i1);

        $i1 = $r0.<androidx.customview.widget.ViewDragHelper: int mDragState>;

        if $i1 != 1 goto label08;

        $i1 = $r0.<androidx.customview.widget.ViewDragHelper: int mActivePointerId>;

        if $i0 != $i1 goto label08;

        $i1 = -1;

        $i2 = virtualinvoke $r1.<android.view.MotionEvent: int getPointerCount()>();

        $i3 = 0;

     label04:
        if $i3 >= $i2 goto label07;

        $i4 = virtualinvoke $r1.<android.view.MotionEvent: int getPointerId(int)>($i3);

        $i5 = $r0.<androidx.customview.widget.ViewDragHelper: int mActivePointerId>;

        if $i4 != $i5 goto label05;

        goto label06;

     label05:
        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX(int)>($i3);

        $f1 = virtualinvoke $r1.<android.view.MotionEvent: float getY(int)>($i3);

        $i5 = (int) $f0;

        $i6 = (int) $f1;

        $r3 = virtualinvoke $r0.<androidx.customview.widget.ViewDragHelper: android.view.View findTopChildUnder(int,int)>($i5, $i6);

        $r4 = $r0.<androidx.customview.widget.ViewDragHelper: android.view.View mCapturedView>;

        if $r3 != $r4 goto label06;

        $z0 = virtualinvoke $r0.<androidx.customview.widget.ViewDragHelper: boolean tryCaptureViewForDrag(android.view.View,int)>($r4, $i4);

        if $z0 == 0 goto label06;

        $i1 = $r0.<androidx.customview.widget.ViewDragHelper: int mActivePointerId>;

        goto label07;

     label06:
        $i3 = $i3 + 1;

        goto label04;

     label07:
        if $i1 != -1 goto label08;

        specialinvoke $r0.<androidx.customview.widget.ViewDragHelper: void releaseViewForPointerUp()>();

     label08:
        specialinvoke $r0.<androidx.customview.widget.ViewDragHelper: void clearMotionHistory(int)>($i0);

        return;

     label09:
        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getPointerId(int)>($i1);

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX(int)>($i1);

        $f1 = virtualinvoke $r1.<android.view.MotionEvent: float getY(int)>($i1);

        specialinvoke $r0.<androidx.customview.widget.ViewDragHelper: void saveInitialMotion(float,float,int)>($f0, $f1, $i0);

        $i1 = $r0.<androidx.customview.widget.ViewDragHelper: int mDragState>;

        if $i1 != 0 goto label10;

        $i1 = (int) $f0;

        $i2 = (int) $f1;

        $r3 = virtualinvoke $r0.<androidx.customview.widget.ViewDragHelper: android.view.View findTopChildUnder(int,int)>($i1, $i2);

        virtualinvoke $r0.<androidx.customview.widget.ViewDragHelper: boolean tryCaptureViewForDrag(android.view.View,int)>($r3, $i0);

        $r5 = $r0.<androidx.customview.widget.ViewDragHelper: int[] mInitialEdgesTouched>;

        $i1 = $r5[$i0];

        $i2 = $r0.<androidx.customview.widget.ViewDragHelper: int mTrackingEdges>;

        $i3 = $i1 & $i2;

        if $i3 == 0 goto label11;

        $r6 = $r0.<androidx.customview.widget.ViewDragHelper: androidx.customview.widget.ViewDragHelper$Callback mCallback>;

        $i1 = $i2 & $i1;

        virtualinvoke $r6.<androidx.customview.widget.ViewDragHelper$Callback: void onEdgeTouched(int,int)>($i1, $i0);

        goto label11;

     label10:
        $i1 = (int) $f0;

        $i2 = (int) $f1;

        $z0 = virtualinvoke $r0.<androidx.customview.widget.ViewDragHelper: boolean isCapturedViewUnder(int,int)>($i1, $i2);

        if $z0 == 0 goto label11;

        $r3 = $r0.<androidx.customview.widget.ViewDragHelper: android.view.View mCapturedView>;

        virtualinvoke $r0.<androidx.customview.widget.ViewDragHelper: boolean tryCaptureViewForDrag(android.view.View,int)>($r3, $i0);

     label11:
        return;

     label12:
        $i0 = $r0.<androidx.customview.widget.ViewDragHelper: int mDragState>;

        if $i0 != 1 goto label13;

        specialinvoke $r0.<androidx.customview.widget.ViewDragHelper: void dispatchViewReleased(float,float)>(0.0F, 0.0F);

     label13:
        virtualinvoke $r0.<androidx.customview.widget.ViewDragHelper: void cancel()>();

        return;

     label14:
        $i0 = $r0.<androidx.customview.widget.ViewDragHelper: int mDragState>;

        if $i0 != 1 goto label16;

        $i0 = $r0.<androidx.customview.widget.ViewDragHelper: int mActivePointerId>;

        $z0 = specialinvoke $r0.<androidx.customview.widget.ViewDragHelper: boolean isValidPointerForActionMove(int)>($i0);

        if $z0 != 0 goto label15;

        return;

     label15:
        $i0 = $r0.<androidx.customview.widget.ViewDragHelper: int mActivePointerId>;

        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int findPointerIndex(int)>($i0);

        $f1 = virtualinvoke $r1.<android.view.MotionEvent: float getX(int)>($i0);

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getY(int)>($i0);

        $r7 = $r0.<androidx.customview.widget.ViewDragHelper: float[] mLastMotionX>;

        $i1 = $r0.<androidx.customview.widget.ViewDragHelper: int mActivePointerId>;

        $f2 = $r7[$i1];

        $f1 = $f1 - $f2;

        $i0 = (int) $f1;

        $r7 = $r0.<androidx.customview.widget.ViewDragHelper: float[] mLastMotionY>;

        $f1 = $r7[$i1];

        $f0 = $f0 - $f1;

        $i1 = (int) $f0;

        $r3 = $r0.<androidx.customview.widget.ViewDragHelper: android.view.View mCapturedView>;

        $i2 = virtualinvoke $r3.<android.view.View: int getLeft()>();

        $i2 = $i2 + $i0;

        $r3 = $r0.<androidx.customview.widget.ViewDragHelper: android.view.View mCapturedView>;

        $i3 = virtualinvoke $r3.<android.view.View: int getTop()>();

        $i3 = $i3 + $i1;

        specialinvoke $r0.<androidx.customview.widget.ViewDragHelper: void dragTo(int,int,int,int)>($i2, $i3, $i0, $i1);

        specialinvoke $r0.<androidx.customview.widget.ViewDragHelper: void saveLastMotion(android.view.MotionEvent)>($r1);

        return;

     label16:
        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getPointerCount()>();

        $i1 = 0;

     label17:
        if $i1 >= $i0 goto label21;

        $i2 = virtualinvoke $r1.<android.view.MotionEvent: int getPointerId(int)>($i1);

        $z0 = specialinvoke $r0.<androidx.customview.widget.ViewDragHelper: boolean isValidPointerForActionMove(int)>($i2);

        if $z0 != 0 goto label18;

        goto label20;

     label18:
        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX(int)>($i1);

        $f1 = virtualinvoke $r1.<android.view.MotionEvent: float getY(int)>($i1);

        $r7 = $r0.<androidx.customview.widget.ViewDragHelper: float[] mInitialMotionX>;

        $f2 = $r7[$i2];

        $f2 = $f0 - $f2;

        $r7 = $r0.<androidx.customview.widget.ViewDragHelper: float[] mInitialMotionY>;

        $f3 = $r7[$i2];

        $f3 = $f1 - $f3;

        specialinvoke $r0.<androidx.customview.widget.ViewDragHelper: void reportNewEdgeDrags(float,float,int)>($f2, $f3, $i2);

        $i3 = $r0.<androidx.customview.widget.ViewDragHelper: int mDragState>;

        if $i3 != 1 goto label19;

        goto label21;

     label19:
        $i3 = (int) $f0;

        $i4 = (int) $f1;

        $r3 = virtualinvoke $r0.<androidx.customview.widget.ViewDragHelper: android.view.View findTopChildUnder(int,int)>($i3, $i4);

        $z0 = specialinvoke $r0.<androidx.customview.widget.ViewDragHelper: boolean checkTouchSlop(android.view.View,float,float)>($r3, $f2, $f3);

        if $z0 == 0 goto label20;

        $z0 = virtualinvoke $r0.<androidx.customview.widget.ViewDragHelper: boolean tryCaptureViewForDrag(android.view.View,int)>($r3, $i2);

        if $z0 == 0 goto label20;

        goto label21;

     label20:
        $i1 = $i1 + 1;

        goto label17;

     label21:
        specialinvoke $r0.<androidx.customview.widget.ViewDragHelper: void saveLastMotion(android.view.MotionEvent)>($r1);

        return;

     label22:
        $i0 = $r0.<androidx.customview.widget.ViewDragHelper: int mDragState>;

        if $i0 != 1 goto label23;

        specialinvoke $r0.<androidx.customview.widget.ViewDragHelper: void releaseViewForPointerUp()>();

     label23:
        virtualinvoke $r0.<androidx.customview.widget.ViewDragHelper: void cancel()>();

        return;

     label24:
        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

        $f1 = virtualinvoke $r1.<android.view.MotionEvent: float getY()>();

        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getPointerId(int)>(0);

        $i1 = (int) $f0;

        $i2 = (int) $f1;

        $r3 = virtualinvoke $r0.<androidx.customview.widget.ViewDragHelper: android.view.View findTopChildUnder(int,int)>($i1, $i2);

        specialinvoke $r0.<androidx.customview.widget.ViewDragHelper: void saveInitialMotion(float,float,int)>($f0, $f1, $i0);

        virtualinvoke $r0.<androidx.customview.widget.ViewDragHelper: boolean tryCaptureViewForDrag(android.view.View,int)>($r3, $i0);

        $r5 = $r0.<androidx.customview.widget.ViewDragHelper: int[] mInitialEdgesTouched>;

        $i1 = $r5[$i0];

        $i2 = $r0.<androidx.customview.widget.ViewDragHelper: int mTrackingEdges>;

        $i3 = $i1 & $i2;

        if $i3 == 0 goto label25;

        $r6 = $r0.<androidx.customview.widget.ViewDragHelper: androidx.customview.widget.ViewDragHelper$Callback mCallback>;

        $i1 = $i2 & $i1;

        virtualinvoke $r6.<androidx.customview.widget.ViewDragHelper$Callback: void onEdgeTouched(int,int)>($i1, $i0);

     label25:
        return;
    }

    void setDragState(int)
    {
        androidx.customview.widget.ViewDragHelper $r0;
        int $i0, $i1;
        java.lang.Runnable $r1;
        android.view.ViewGroup $r2;
        androidx.customview.widget.ViewDragHelper$Callback $r3;

        $r0 := @this: androidx.customview.widget.ViewDragHelper;

        $i0 := @parameter0: int;

        $r2 = $r0.<androidx.customview.widget.ViewDragHelper: android.view.ViewGroup mParentView>;

        $r1 = $r0.<androidx.customview.widget.ViewDragHelper: java.lang.Runnable mSetIdleRunnable>;

        virtualinvoke $r2.<android.view.ViewGroup: boolean removeCallbacks(java.lang.Runnable)>($r1);

        $i1 = $r0.<androidx.customview.widget.ViewDragHelper: int mDragState>;

        if $i1 == $i0 goto label1;

        $r0.<androidx.customview.widget.ViewDragHelper: int mDragState> = $i0;

        $r3 = $r0.<androidx.customview.widget.ViewDragHelper: androidx.customview.widget.ViewDragHelper$Callback mCallback>;

        virtualinvoke $r3.<androidx.customview.widget.ViewDragHelper$Callback: void onViewDragStateChanged(int)>($i0);

        $i0 = $r0.<androidx.customview.widget.ViewDragHelper: int mDragState>;

        if $i0 != 0 goto label1;

        $r0.<androidx.customview.widget.ViewDragHelper: android.view.View mCapturedView> = null;

     label1:
        return;
    }

    public void setEdgeTrackingEnabled(int)
    {
        androidx.customview.widget.ViewDragHelper $r0;
        int $i0;

        $r0 := @this: androidx.customview.widget.ViewDragHelper;

        $i0 := @parameter0: int;

        $r0.<androidx.customview.widget.ViewDragHelper: int mTrackingEdges> = $i0;

        return;
    }

    public void setMinVelocity(float)
    {
        androidx.customview.widget.ViewDragHelper $r0;
        float $f0;

        $r0 := @this: androidx.customview.widget.ViewDragHelper;

        $f0 := @parameter0: float;

        $r0.<androidx.customview.widget.ViewDragHelper: float mMinVelocity> = $f0;

        return;
    }

    public boolean settleCapturedViewAt(int, int)
    {
        androidx.customview.widget.ViewDragHelper $r0;
        int $i0, $i1, $i2, $i3;
        boolean $z0;
        android.view.VelocityTracker $r1;
        float $f0;
        java.lang.IllegalStateException $r2;

        $r0 := @this: androidx.customview.widget.ViewDragHelper;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $z0 = $r0.<androidx.customview.widget.ViewDragHelper: boolean mReleaseInProgress>;

        if $z0 == 0 goto label1;

        $r1 = $r0.<androidx.customview.widget.ViewDragHelper: android.view.VelocityTracker mVelocityTracker>;

        $i3 = $r0.<androidx.customview.widget.ViewDragHelper: int mActivePointerId>;

        $f0 = virtualinvoke $r1.<android.view.VelocityTracker: float getXVelocity(int)>($i3);

        $i3 = (int) $f0;

        $r1 = $r0.<androidx.customview.widget.ViewDragHelper: android.view.VelocityTracker mVelocityTracker>;

        $i2 = $r0.<androidx.customview.widget.ViewDragHelper: int mActivePointerId>;

        $f0 = virtualinvoke $r1.<android.view.VelocityTracker: float getYVelocity(int)>($i2);

        $i2 = (int) $f0;

        $z0 = specialinvoke $r0.<androidx.customview.widget.ViewDragHelper: boolean forceSettleCapturedViewAt(int,int,int,int)>($i0, $i1, $i3, $i2);

        return $z0;

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot settleCapturedViewAt outside of a call to Callback#onViewReleased");

        throw $r2;
    }

    public boolean shouldInterceptTouchEvent(android.view.MotionEvent)
    {
        androidx.customview.widget.ViewDragHelper $r0;
        android.view.MotionEvent $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        android.view.VelocityTracker $r2;
        float $f0, $f1, $f2, $f3;
        int[] $r3;
        androidx.customview.widget.ViewDragHelper$Callback $r4;
        android.view.View $r5, $r6;
        float[] $r7;
        boolean $z0;

        $r0 := @this: androidx.customview.widget.ViewDragHelper;

        $r1 := @parameter0: android.view.MotionEvent;

        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getActionMasked()>();

        $i1 = virtualinvoke $r1.<android.view.MotionEvent: int getActionIndex()>();

        if $i0 != 0 goto label01;

        virtualinvoke $r0.<androidx.customview.widget.ViewDragHelper: void cancel()>();

     label01:
        $r2 = $r0.<androidx.customview.widget.ViewDragHelper: android.view.VelocityTracker mVelocityTracker>;

        if $r2 != null goto label02;

        $r2 = staticinvoke <android.view.VelocityTracker: android.view.VelocityTracker obtain()>();

        $r0.<androidx.customview.widget.ViewDragHelper: android.view.VelocityTracker mVelocityTracker> = $r2;

     label02:
        $r2 = $r0.<androidx.customview.widget.ViewDragHelper: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r2.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>($r1);

        if $i0 == 0 goto label22;

        if $i0 == 1 goto label21;

        if $i0 == 2 goto label09;

        if $i0 == 3 goto label08;

        if $i0 == 5 goto label04;

        if $i0 == 6 goto label03;

        goto label24;

     label03:
        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getPointerId(int)>($i1);

        specialinvoke $r0.<androidx.customview.widget.ViewDragHelper: void clearMotionHistory(int)>($i0);

        goto label24;

     label04:
        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getPointerId(int)>($i1);

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX(int)>($i1);

        $f1 = virtualinvoke $r1.<android.view.MotionEvent: float getY(int)>($i1);

        specialinvoke $r0.<androidx.customview.widget.ViewDragHelper: void saveInitialMotion(float,float,int)>($f0, $f1, $i0);

        $i1 = $r0.<androidx.customview.widget.ViewDragHelper: int mDragState>;

        if $i1 != 0 goto label05;

        $r3 = $r0.<androidx.customview.widget.ViewDragHelper: int[] mInitialEdgesTouched>;

        $i1 = $r3[$i0];

        $i2 = $r0.<androidx.customview.widget.ViewDragHelper: int mTrackingEdges>;

        $i3 = $i1 & $i2;

        if $i3 == 0 goto label07;

        $r4 = $r0.<androidx.customview.widget.ViewDragHelper: androidx.customview.widget.ViewDragHelper$Callback mCallback>;

        $i1 = $i2 & $i1;

        virtualinvoke $r4.<androidx.customview.widget.ViewDragHelper$Callback: void onEdgeTouched(int,int)>($i1, $i0);

        goto label07;

     label05:
        if $i1 != 2 goto label07;

        $i1 = (int) $f0;

        $i2 = (int) $f1;

        $r5 = virtualinvoke $r0.<androidx.customview.widget.ViewDragHelper: android.view.View findTopChildUnder(int,int)>($i1, $i2);

        $r6 = $r0.<androidx.customview.widget.ViewDragHelper: android.view.View mCapturedView>;

        if $r5 != $r6 goto label06;

        virtualinvoke $r0.<androidx.customview.widget.ViewDragHelper: boolean tryCaptureViewForDrag(android.view.View,int)>($r5, $i0);

     label06:
        goto label24;

     label07:
        goto label24;

     label08:
        goto label21;

     label09:
        $r7 = $r0.<androidx.customview.widget.ViewDragHelper: float[] mInitialMotionX>;

        if $r7 == null goto label20;

        $r7 = $r0.<androidx.customview.widget.ViewDragHelper: float[] mInitialMotionY>;

        if $r7 != null goto label10;

        goto label24;

     label10:
        $i3 = virtualinvoke $r1.<android.view.MotionEvent: int getPointerCount()>();

        $i0 = 0;

     label11:
        if $i0 >= $i3 goto label19;

        $i1 = virtualinvoke $r1.<android.view.MotionEvent: int getPointerId(int)>($i0);

        $z0 = specialinvoke $r0.<androidx.customview.widget.ViewDragHelper: boolean isValidPointerForActionMove(int)>($i1);

        if $z0 != 0 goto label12;

        goto label18;

     label12:
        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX(int)>($i0);

        $f1 = virtualinvoke $r1.<android.view.MotionEvent: float getY(int)>($i0);

        $r7 = $r0.<androidx.customview.widget.ViewDragHelper: float[] mInitialMotionX>;

        $f2 = $r7[$i1];

        $f2 = $f0 - $f2;

        $r7 = $r0.<androidx.customview.widget.ViewDragHelper: float[] mInitialMotionY>;

        $f3 = $r7[$i1];

        $f3 = $f1 - $f3;

        $i2 = (int) $f0;

        $i4 = (int) $f1;

        $r5 = virtualinvoke $r0.<androidx.customview.widget.ViewDragHelper: android.view.View findTopChildUnder(int,int)>($i2, $i4);

        if $r5 == null goto label13;

        $z0 = specialinvoke $r0.<androidx.customview.widget.ViewDragHelper: boolean checkTouchSlop(android.view.View,float,float)>($r5, $f2, $f3);

        if $z0 == 0 goto label13;

        $z0 = 1;

        goto label14;

     label13:
        $z0 = 0;

     label14:
        if $z0 == 0 goto label16;

        $i2 = virtualinvoke $r5.<android.view.View: int getLeft()>();

        $i4 = (int) $f2;

        $i4 = $i4 + $i2;

        $r4 = $r0.<androidx.customview.widget.ViewDragHelper: androidx.customview.widget.ViewDragHelper$Callback mCallback>;

        $i5 = (int) $f2;

        $i4 = virtualinvoke $r4.<androidx.customview.widget.ViewDragHelper$Callback: int clampViewPositionHorizontal(android.view.View,int,int)>($r5, $i4, $i5);

        $i5 = virtualinvoke $r5.<android.view.View: int getTop()>();

        $i6 = (int) $f3;

        $i6 = $i6 + $i5;

        $r4 = $r0.<androidx.customview.widget.ViewDragHelper: androidx.customview.widget.ViewDragHelper$Callback mCallback>;

        $i7 = (int) $f3;

        $i6 = virtualinvoke $r4.<androidx.customview.widget.ViewDragHelper$Callback: int clampViewPositionVertical(android.view.View,int,int)>($r5, $i6, $i7);

        $r4 = $r0.<androidx.customview.widget.ViewDragHelper: androidx.customview.widget.ViewDragHelper$Callback mCallback>;

        $i7 = virtualinvoke $r4.<androidx.customview.widget.ViewDragHelper$Callback: int getViewHorizontalDragRange(android.view.View)>($r5);

        $r4 = $r0.<androidx.customview.widget.ViewDragHelper: androidx.customview.widget.ViewDragHelper$Callback mCallback>;

        $i8 = virtualinvoke $r4.<androidx.customview.widget.ViewDragHelper$Callback: int getViewVerticalDragRange(android.view.View)>($r5);

        if $i7 == 0 goto label15;

        if $i7 <= 0 goto label16;

        if $i4 != $i2 goto label16;

     label15:
        if $i8 == 0 goto label19;

        if $i8 <= 0 goto label16;

        if $i6 != $i5 goto label16;

        goto label19;

     label16:
        specialinvoke $r0.<androidx.customview.widget.ViewDragHelper: void reportNewEdgeDrags(float,float,int)>($f2, $f3, $i1);

        $i2 = $r0.<androidx.customview.widget.ViewDragHelper: int mDragState>;

        if $i2 != 1 goto label17;

        goto label19;

     label17:
        if $z0 == 0 goto label18;

        $z0 = virtualinvoke $r0.<androidx.customview.widget.ViewDragHelper: boolean tryCaptureViewForDrag(android.view.View,int)>($r5, $i1);

        if $z0 == 0 goto label18;

        goto label19;

     label18:
        $i0 = $i0 + 1;

        goto label11;

     label19:
        specialinvoke $r0.<androidx.customview.widget.ViewDragHelper: void saveLastMotion(android.view.MotionEvent)>($r1);

        goto label24;

     label20:
        goto label24;

     label21:
        virtualinvoke $r0.<androidx.customview.widget.ViewDragHelper: void cancel()>();

        goto label24;

     label22:
        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

        $f1 = virtualinvoke $r1.<android.view.MotionEvent: float getY()>();

        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getPointerId(int)>(0);

        specialinvoke $r0.<androidx.customview.widget.ViewDragHelper: void saveInitialMotion(float,float,int)>($f0, $f1, $i0);

        $i1 = (int) $f0;

        $i2 = (int) $f1;

        $r5 = virtualinvoke $r0.<androidx.customview.widget.ViewDragHelper: android.view.View findTopChildUnder(int,int)>($i1, $i2);

        $r6 = $r0.<androidx.customview.widget.ViewDragHelper: android.view.View mCapturedView>;

        if $r5 != $r6 goto label23;

        $i1 = $r0.<androidx.customview.widget.ViewDragHelper: int mDragState>;

        if $i1 != 2 goto label23;

        virtualinvoke $r0.<androidx.customview.widget.ViewDragHelper: boolean tryCaptureViewForDrag(android.view.View,int)>($r5, $i0);

     label23:
        $r3 = $r0.<androidx.customview.widget.ViewDragHelper: int[] mInitialEdgesTouched>;

        $i1 = $r3[$i0];

        $i2 = $r0.<androidx.customview.widget.ViewDragHelper: int mTrackingEdges>;

        $i3 = $i1 & $i2;

        if $i3 == 0 goto label24;

        $r4 = $r0.<androidx.customview.widget.ViewDragHelper: androidx.customview.widget.ViewDragHelper$Callback mCallback>;

        $i1 = $i2 & $i1;

        virtualinvoke $r4.<androidx.customview.widget.ViewDragHelper$Callback: void onEdgeTouched(int,int)>($i1, $i0);

     label24:
        $i0 = $r0.<androidx.customview.widget.ViewDragHelper: int mDragState>;

        if $i0 != 1 goto label25;

        return 1;

     label25:
        return 0;
    }

    public boolean smoothSlideViewTo(android.view.View, int, int)
    {
        androidx.customview.widget.ViewDragHelper $r0;
        android.view.View $r1;
        int $i0, $i1;
        boolean $z0;

        $r0 := @this: androidx.customview.widget.ViewDragHelper;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r0.<androidx.customview.widget.ViewDragHelper: android.view.View mCapturedView> = $r1;

        $r0.<androidx.customview.widget.ViewDragHelper: int mActivePointerId> = -1;

        $z0 = specialinvoke $r0.<androidx.customview.widget.ViewDragHelper: boolean forceSettleCapturedViewAt(int,int,int,int)>($i0, $i1, 0, 0);

        if $z0 != 0 goto label1;

        $i0 = $r0.<androidx.customview.widget.ViewDragHelper: int mDragState>;

        if $i0 != 0 goto label1;

        $r1 = $r0.<androidx.customview.widget.ViewDragHelper: android.view.View mCapturedView>;

        if $r1 == null goto label1;

        $r0.<androidx.customview.widget.ViewDragHelper: android.view.View mCapturedView> = null;

     label1:
        return $z0;
    }

    boolean tryCaptureViewForDrag(android.view.View, int)
    {
        androidx.customview.widget.ViewDragHelper $r0;
        android.view.View $r1, $r2;
        int $i0, $i1;
        boolean $z0;
        androidx.customview.widget.ViewDragHelper$Callback $r3;

        $r0 := @this: androidx.customview.widget.ViewDragHelper;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r2 = $r0.<androidx.customview.widget.ViewDragHelper: android.view.View mCapturedView>;

        if $r1 != $r2 goto label1;

        $i1 = $r0.<androidx.customview.widget.ViewDragHelper: int mActivePointerId>;

        if $i1 != $i0 goto label1;

        return 1;

     label1:
        if $r1 == null goto label2;

        $r3 = $r0.<androidx.customview.widget.ViewDragHelper: androidx.customview.widget.ViewDragHelper$Callback mCallback>;

        $z0 = virtualinvoke $r3.<androidx.customview.widget.ViewDragHelper$Callback: boolean tryCaptureView(android.view.View,int)>($r1, $i0);

        if $z0 == 0 goto label2;

        $r0.<androidx.customview.widget.ViewDragHelper: int mActivePointerId> = $i0;

        virtualinvoke $r0.<androidx.customview.widget.ViewDragHelper: void captureChildView(android.view.View,int)>($r1, $i0);

        return 1;

     label2:
        return 0;
    }
}
