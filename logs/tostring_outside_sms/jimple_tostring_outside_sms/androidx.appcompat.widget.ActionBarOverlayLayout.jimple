public class androidx.appcompat.widget.ActionBarOverlayLayout extends android.view.ViewGroup implements androidx.appcompat.widget.DecorContentParent, androidx.core.view.NestedScrollingParent
{
    private static final int ACTION_BAR_ANIMATE_DELAY;
    static final int[] ATTRS;
    private static final java.lang.String TAG;
    private int mActionBarHeight;
    androidx.appcompat.widget.ActionBarContainer mActionBarTop;
    private androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback mActionBarVisibilityCallback;
    private final java.lang.Runnable mAddActionBarHideOffset;
    boolean mAnimatingForFling;
    private final android.graphics.Rect mBaseContentInsets;
    private final android.graphics.Rect mBaseInnerInsets;
    private androidx.appcompat.widget.ContentFrameLayout mContent;
    private final android.graphics.Rect mContentInsets;
    android.view.ViewPropertyAnimator mCurrentActionBarTopAnimator;
    private androidx.appcompat.widget.DecorToolbar mDecorToolbar;
    private android.widget.OverScroller mFlingEstimator;
    private boolean mHasNonEmbeddedTabs;
    private boolean mHideOnContentScroll;
    private int mHideOnContentScrollReference;
    private boolean mIgnoreWindowContentOverlay;
    private final android.graphics.Rect mInnerInsets;
    private final android.graphics.Rect mLastBaseContentInsets;
    private final android.graphics.Rect mLastBaseInnerInsets;
    private final android.graphics.Rect mLastInnerInsets;
    private int mLastSystemUiVisibility;
    private boolean mOverlayMode;
    private final androidx.core.view.NestedScrollingParentHelper mParentHelper;
    private final java.lang.Runnable mRemoveActionBarHideOffset;
    final android.animation.AnimatorListenerAdapter mTopAnimatorListener;
    private android.graphics.drawable.Drawable mWindowContentOverlay;
    private int mWindowVisibility;

    static void <clinit>()
    {
        int $i0;
        int[] $r0;

        <androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.String TAG> = "ActionBarOverlayLayout";

        <androidx.appcompat.widget.ActionBarOverlayLayout: int ACTION_BAR_ANIMATE_DELAY> = 600;

        $r0 = newarray (int)[2];

        $i0 = <androidx.appcompat.R$attr: int actionBarSize>;

        $r0[0] = $i0;

        $r0[1] = 16842841;

        <androidx.appcompat.widget.ActionBarOverlayLayout: int[] ATTRS> = $r0;

        return;
    }

    public void <init>(android.content.Context)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout $r0;
        android.content.Context $r1;

        $r0 := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $r1 := @parameter0: android.content.Context;

        specialinvoke $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: void <init>(android.content.Context,android.util.AttributeSet)>($r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout $r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        android.graphics.Rect $r3;
        androidx.appcompat.widget.ActionBarOverlayLayout$1 $r4;
        androidx.appcompat.widget.ActionBarOverlayLayout$2 $r5;
        androidx.appcompat.widget.ActionBarOverlayLayout$3 $r6;
        androidx.core.view.NestedScrollingParentHelper $r7;

        $r0 := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        specialinvoke $r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2);

        $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: int mWindowVisibility> = 0;

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mBaseContentInsets> = $r3;

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mLastBaseContentInsets> = $r3;

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mContentInsets> = $r3;

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mBaseInnerInsets> = $r3;

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mLastBaseInnerInsets> = $r3;

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mInnerInsets> = $r3;

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mLastInnerInsets> = $r3;

        $r4 = new androidx.appcompat.widget.ActionBarOverlayLayout$1;

        specialinvoke $r4.<androidx.appcompat.widget.ActionBarOverlayLayout$1: void <init>(androidx.appcompat.widget.ActionBarOverlayLayout)>($r0);

        $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: android.animation.AnimatorListenerAdapter mTopAnimatorListener> = $r4;

        $r5 = new androidx.appcompat.widget.ActionBarOverlayLayout$2;

        specialinvoke $r5.<androidx.appcompat.widget.ActionBarOverlayLayout$2: void <init>(androidx.appcompat.widget.ActionBarOverlayLayout)>($r0);

        $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.Runnable mRemoveActionBarHideOffset> = $r5;

        $r6 = new androidx.appcompat.widget.ActionBarOverlayLayout$3;

        specialinvoke $r6.<androidx.appcompat.widget.ActionBarOverlayLayout$3: void <init>(androidx.appcompat.widget.ActionBarOverlayLayout)>($r0);

        $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.Runnable mAddActionBarHideOffset> = $r6;

        specialinvoke $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: void init(android.content.Context)>($r1);

        $r7 = new androidx.core.view.NestedScrollingParentHelper;

        specialinvoke $r7.<androidx.core.view.NestedScrollingParentHelper: void <init>(android.view.ViewGroup)>($r0);

        $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.core.view.NestedScrollingParentHelper mParentHelper> = $r7;

        return;
    }

    private void addActionBarHideOffset()
    {
        androidx.appcompat.widget.ActionBarOverlayLayout $r0;
        java.lang.Runnable $r1;

        $r0 := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        virtualinvoke $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: void haltActionBarHideOffsetAnimations()>();

        $r1 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.Runnable mAddActionBarHideOffset>;

        interfaceinvoke $r1.<java.lang.Runnable: void run()>();

        return;
    }

    private boolean applyInsets(android.view.View, android.graphics.Rect, boolean, boolean, boolean, boolean)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout $r0;
        android.view.View $r1;
        android.graphics.Rect $r2;
        boolean $z0, $z1, $z2, $z3, $z4;
        android.view.ViewGroup$LayoutParams $r3;
        androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams $r4;
        int $i0, $i1;

        $r0 := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.graphics.Rect;

        $z0 := @parameter2: boolean;

        $z1 := @parameter3: boolean;

        $z2 := @parameter4: boolean;

        $z3 := @parameter5: boolean;

        $z4 = 0;

        $r3 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r4 = (androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams) $r3;

        if $z0 == 0 goto label1;

        $i0 = $r4.<androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams: int leftMargin>;

        $i1 = $r2.<android.graphics.Rect: int left>;

        if $i0 == $i1 goto label1;

        $z4 = 1;

        $i0 = $r2.<android.graphics.Rect: int left>;

        $r4.<androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams: int leftMargin> = $i0;

     label1:
        if $z1 == 0 goto label2;

        $i0 = $r4.<androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams: int topMargin>;

        $i1 = $r2.<android.graphics.Rect: int top>;

        if $i0 == $i1 goto label2;

        $z4 = 1;

        $i0 = $r2.<android.graphics.Rect: int top>;

        $r4.<androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams: int topMargin> = $i0;

     label2:
        if $z3 == 0 goto label3;

        $i0 = $r4.<androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams: int rightMargin>;

        $i1 = $r2.<android.graphics.Rect: int right>;

        if $i0 == $i1 goto label3;

        $z4 = 1;

        $i0 = $r2.<android.graphics.Rect: int right>;

        $r4.<androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams: int rightMargin> = $i0;

     label3:
        if $z2 == 0 goto label4;

        $i0 = $r4.<androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams: int bottomMargin>;

        $i1 = $r2.<android.graphics.Rect: int bottom>;

        if $i0 == $i1 goto label4;

        $i0 = $r2.<android.graphics.Rect: int bottom>;

        $r4.<androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams: int bottomMargin> = $i0;

        return 1;

     label4:
        return $z4;
    }

    private androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout $r0;
        android.view.View $r1;
        boolean $z0;
        androidx.appcompat.widget.DecorToolbar $r2;
        androidx.appcompat.widget.Toolbar $r3;
        java.lang.IllegalStateException $r4;
        java.lang.StringBuilder $r5;
        java.lang.Class $r6;
        java.lang.String $r7;

        $r0 := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $r1 := @parameter0: android.view.View;

        $z0 = $r1 instanceof androidx.appcompat.widget.DecorToolbar;

        if $z0 == 0 goto label1;

        $r2 = (androidx.appcompat.widget.DecorToolbar) $r1;

        return $r2;

     label1:
        $z0 = $r1 instanceof androidx.appcompat.widget.Toolbar;

        if $z0 == 0 goto label2;

        $r3 = (androidx.appcompat.widget.Toolbar) $r1;

        $r2 = virtualinvoke $r3.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.DecorToolbar getWrapper()>();

        return $r2;

     label2:
        $r4 = new java.lang.IllegalStateException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t make a decor toolbar out of ");

        $r6 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getSimpleName()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        throw $r4;
    }

    private void init(android.content.Context)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout $r0;
        android.content.Context $r1, $r2;
        android.content.res.Resources$Theme $r3;
        int[] $r4;
        android.content.res.TypedArray $r5;
        boolean $z0, $z1;
        int $i0;
        android.graphics.drawable.Drawable $r6;
        android.content.pm.ApplicationInfo $r7;
        android.widget.OverScroller $r8;

        $r0 := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $r1 := @parameter0: android.content.Context;

        $r2 = virtualinvoke $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: android.content.Context getContext()>();

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $r4 = <androidx.appcompat.widget.ActionBarOverlayLayout: int[] ATTRS>;

        $r5 = virtualinvoke $r3.<android.content.res.Resources$Theme: android.content.res.TypedArray obtainStyledAttributes(int[])>($r4);

        $z0 = 0;

        $i0 = virtualinvoke $r5.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(0, 0);

        $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: int mActionBarHeight> = $i0;

        $r6 = virtualinvoke $r5.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(1);

        $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.drawable.Drawable mWindowContentOverlay> = $r6;

        $r6 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.drawable.Drawable mWindowContentOverlay>;

        if $r6 != null goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        virtualinvoke $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: void setWillNotDraw(boolean)>($z1);

        virtualinvoke $r5.<android.content.res.TypedArray: void recycle()>();

        $r7 = virtualinvoke $r1.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $i0 = $r7.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i0 >= 19 goto label3;

        $z0 = 1;

     label3:
        $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: boolean mIgnoreWindowContentOverlay> = $z0;

        $r8 = new android.widget.OverScroller;

        specialinvoke $r8.<android.widget.OverScroller: void <init>(android.content.Context)>($r1);

        $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: android.widget.OverScroller mFlingEstimator> = $r8;

        return;
    }

    private void postAddActionBarHideOffset()
    {
        androidx.appcompat.widget.ActionBarOverlayLayout $r0;
        java.lang.Runnable $r1;

        $r0 := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        virtualinvoke $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: void haltActionBarHideOffsetAnimations()>();

        $r1 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.Runnable mAddActionBarHideOffset>;

        virtualinvoke $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: boolean postDelayed(java.lang.Runnable,long)>($r1, 600L);

        return;
    }

    private void postRemoveActionBarHideOffset()
    {
        androidx.appcompat.widget.ActionBarOverlayLayout $r0;
        java.lang.Runnable $r1;

        $r0 := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        virtualinvoke $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: void haltActionBarHideOffsetAnimations()>();

        $r1 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.Runnable mRemoveActionBarHideOffset>;

        virtualinvoke $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: boolean postDelayed(java.lang.Runnable,long)>($r1, 600L);

        return;
    }

    private void removeActionBarHideOffset()
    {
        androidx.appcompat.widget.ActionBarOverlayLayout $r0;
        java.lang.Runnable $r1;

        $r0 := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        virtualinvoke $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: void haltActionBarHideOffsetAnimations()>();

        $r1 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.Runnable mRemoveActionBarHideOffset>;

        interfaceinvoke $r1.<java.lang.Runnable: void run()>();

        return;
    }

    private boolean shouldHideActionBarOnFling(float, float)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout $r0;
        float $f0, $f1;
        int $i0, $i1;
        android.widget.OverScroller $r1;
        androidx.appcompat.widget.ActionBarContainer $r2;

        $r0 := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $r1 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: android.widget.OverScroller mFlingEstimator>;

        $i0 = (int) $f1;

        virtualinvoke $r1.<android.widget.OverScroller: void fling(int,int,int,int,int,int,int,int)>(0, 0, 0, $i0, 0, 0, -2147483648, 2147483647);

        $r1 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: android.widget.OverScroller mFlingEstimator>;

        $i0 = virtualinvoke $r1.<android.widget.OverScroller: int getFinalY()>();

        $r2 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarContainer mActionBarTop>;

        $i1 = virtualinvoke $r2.<androidx.appcompat.widget.ActionBarContainer: int getHeight()>();

        if $i0 <= $i1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean canShowOverflowMenu()
    {
        androidx.appcompat.widget.ActionBarOverlayLayout $r0;
        boolean $z0;
        androidx.appcompat.widget.DecorToolbar $r1;

        $r0 := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        virtualinvoke $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: void pullChildren()>();

        $r1 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        $z0 = interfaceinvoke $r1.<androidx.appcompat.widget.DecorToolbar: boolean canShowOverflowMenu()>();

        return $z0;
    }

    protected boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout $r0;
        android.view.ViewGroup$LayoutParams $r1;
        boolean $z0;

        $r0 := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $z0 = $r1 instanceof androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams;

        return $z0;
    }

    public void dismissPopups()
    {
        androidx.appcompat.widget.ActionBarOverlayLayout $r0;
        androidx.appcompat.widget.DecorToolbar $r1;

        $r0 := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        virtualinvoke $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: void pullChildren()>();

        $r1 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r1.<androidx.appcompat.widget.DecorToolbar: void dismissPopupMenus()>();

        return;
    }

    public void draw(android.graphics.Canvas)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout $r0;
        android.graphics.Canvas $r1;
        android.graphics.drawable.Drawable $r2, $r4;
        boolean $z0;
        androidx.appcompat.widget.ActionBarContainer $r3;
        int $i0, $i1, $i2;
        float $f0, $f1;

        $r0 := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $r1 := @parameter0: android.graphics.Canvas;

        specialinvoke $r0.<android.view.ViewGroup: void draw(android.graphics.Canvas)>($r1);

        $r2 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.drawable.Drawable mWindowContentOverlay>;

        if $r2 == null goto label3;

        $z0 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: boolean mIgnoreWindowContentOverlay>;

        if $z0 != 0 goto label3;

        $r3 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarContainer mActionBarTop>;

        $i0 = virtualinvoke $r3.<androidx.appcompat.widget.ActionBarContainer: int getVisibility()>();

        if $i0 != 0 goto label1;

        $r3 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarContainer mActionBarTop>;

        $i0 = virtualinvoke $r3.<androidx.appcompat.widget.ActionBarContainer: int getBottom()>();

        $f0 = (float) $i0;

        $r3 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarContainer mActionBarTop>;

        $f1 = virtualinvoke $r3.<androidx.appcompat.widget.ActionBarContainer: float getTranslationY()>();

        $f0 = $f0 + $f1;

        $f0 = $f0 + 0.5F;

        $i0 = (int) $f0;

        goto label2;

     label1:
        $i0 = 0;

     label2:
        $r2 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.drawable.Drawable mWindowContentOverlay>;

        $i1 = virtualinvoke $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: int getWidth()>();

        $r4 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.drawable.Drawable mWindowContentOverlay>;

        $i2 = virtualinvoke $r4.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        $i2 = $i2 + $i0;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, $i0, $i1, $i2);

        $r2 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.drawable.Drawable mWindowContentOverlay>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r1);

     label3:
        return;
    }

    protected boolean fitSystemWindows(android.graphics.Rect)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout $r0;
        android.graphics.Rect $r1, $r3;
        int $i0;
        androidx.appcompat.widget.ActionBarContainer $r2;
        boolean $z0, $z1;

        $r0 := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $r1 := @parameter0: android.graphics.Rect;

        virtualinvoke $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: void pullChildren()>();

        $i0 = staticinvoke <androidx.core.view.ViewCompat: int getWindowSystemUiVisibility(android.view.View)>($r0);

        $i0 = $i0 & 256;

        if $i0 == 0 goto label1;

        goto label1;

     label1:
        $r2 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarContainer mActionBarTop>;

        $z0 = specialinvoke $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: boolean applyInsets(android.view.View,android.graphics.Rect,boolean,boolean,boolean,boolean)>($r2, $r1, 1, 1, 0, 1);

        $r3 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mBaseInnerInsets>;

        virtualinvoke $r3.<android.graphics.Rect: void set(android.graphics.Rect)>($r1);

        $r1 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mBaseInnerInsets>;

        $r3 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mBaseContentInsets>;

        staticinvoke <androidx.appcompat.widget.ViewUtils: void computeFitSystemWindows(android.view.View,android.graphics.Rect,android.graphics.Rect)>($r0, $r1, $r3);

        $r1 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mLastBaseInnerInsets>;

        $r3 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mBaseInnerInsets>;

        $z1 = virtualinvoke $r1.<android.graphics.Rect: boolean equals(java.lang.Object)>($r3);

        if $z1 != 0 goto label2;

        $z0 = 1;

        $r1 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mLastBaseInnerInsets>;

        $r3 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mBaseInnerInsets>;

        virtualinvoke $r1.<android.graphics.Rect: void set(android.graphics.Rect)>($r3);

     label2:
        $r1 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mLastBaseContentInsets>;

        $r3 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mBaseContentInsets>;

        $z1 = virtualinvoke $r1.<android.graphics.Rect: boolean equals(java.lang.Object)>($r3);

        if $z1 != 0 goto label3;

        $z0 = 1;

        $r1 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mLastBaseContentInsets>;

        $r3 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mBaseContentInsets>;

        virtualinvoke $r1.<android.graphics.Rect: void set(android.graphics.Rect)>($r3);

     label3:
        if $z0 == 0 goto label4;

        virtualinvoke $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: void requestLayout()>();

     label4:
        return 1;
    }

    protected volatile android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
    {
        androidx.appcompat.widget.ActionBarOverlayLayout $r0;
        androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams $r1;

        $r0 := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $r1 = virtualinvoke $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams generateDefaultLayoutParams()>();

        return $r1;
    }

    protected androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams generateDefaultLayoutParams()
    {
        androidx.appcompat.widget.ActionBarOverlayLayout $r0;
        androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams $r1;

        $r0 := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $r1 = new androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams;

        specialinvoke $r1.<androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams: void <init>(int,int)>(-1, -1);

        return $r1;
    }

    public volatile android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout $r0;
        androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams $r1;
        android.util.AttributeSet $r2;

        $r0 := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $r2 := @parameter0: android.util.AttributeSet;

        $r1 = virtualinvoke $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)>($r2);

        return $r1;
    }

    protected android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout $r0;
        android.view.ViewGroup$LayoutParams $r1;
        androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams $r2;

        $r0 := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $r2 = new androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams;

        specialinvoke $r2.<androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>($r1);

        return $r2;
    }

    public androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout $r0;
        android.util.AttributeSet $r1;
        androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams $r2;
        android.content.Context $r3;

        $r0 := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $r1 := @parameter0: android.util.AttributeSet;

        $r2 = new androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams;

        $r3 = virtualinvoke $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: android.content.Context getContext()>();

        specialinvoke $r2.<androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>($r3, $r1);

        return $r2;
    }

    public int getActionBarHideOffset()
    {
        androidx.appcompat.widget.ActionBarOverlayLayout $r0;
        float $f0;
        androidx.appcompat.widget.ActionBarContainer $r1;
        int $i0;

        $r0 := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $r1 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarContainer mActionBarTop>;

        if $r1 == null goto label1;

        $f0 = virtualinvoke $r1.<androidx.appcompat.widget.ActionBarContainer: float getTranslationY()>();

        $i0 = (int) $f0;

        $i0 = neg $i0;

        return $i0;

     label1:
        return 0;
    }

    public int getNestedScrollAxes()
    {
        androidx.appcompat.widget.ActionBarOverlayLayout $r0;
        int $i0;
        androidx.core.view.NestedScrollingParentHelper $r1;

        $r0 := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $r1 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.core.view.NestedScrollingParentHelper mParentHelper>;

        $i0 = virtualinvoke $r1.<androidx.core.view.NestedScrollingParentHelper: int getNestedScrollAxes()>();

        return $i0;
    }

    public java.lang.CharSequence getTitle()
    {
        androidx.appcompat.widget.ActionBarOverlayLayout $r0;
        java.lang.CharSequence $r1;
        androidx.appcompat.widget.DecorToolbar $r2;

        $r0 := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        virtualinvoke $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: void pullChildren()>();

        $r2 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        $r1 = interfaceinvoke $r2.<androidx.appcompat.widget.DecorToolbar: java.lang.CharSequence getTitle()>();

        return $r1;
    }

    void haltActionBarHideOffsetAnimations()
    {
        androidx.appcompat.widget.ActionBarOverlayLayout $r0;
        java.lang.Runnable $r1;
        android.view.ViewPropertyAnimator $r2;

        $r0 := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $r1 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.Runnable mRemoveActionBarHideOffset>;

        virtualinvoke $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: boolean removeCallbacks(java.lang.Runnable)>($r1);

        $r1 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.Runnable mAddActionBarHideOffset>;

        virtualinvoke $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: boolean removeCallbacks(java.lang.Runnable)>($r1);

        $r2 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: android.view.ViewPropertyAnimator mCurrentActionBarTopAnimator>;

        if $r2 == null goto label1;

        virtualinvoke $r2.<android.view.ViewPropertyAnimator: void cancel()>();

     label1:
        return;
    }

    public boolean hasIcon()
    {
        androidx.appcompat.widget.ActionBarOverlayLayout $r0;
        boolean $z0;
        androidx.appcompat.widget.DecorToolbar $r1;

        $r0 := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        virtualinvoke $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: void pullChildren()>();

        $r1 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        $z0 = interfaceinvoke $r1.<androidx.appcompat.widget.DecorToolbar: boolean hasIcon()>();

        return $z0;
    }

    public boolean hasLogo()
    {
        androidx.appcompat.widget.ActionBarOverlayLayout $r0;
        boolean $z0;
        androidx.appcompat.widget.DecorToolbar $r1;

        $r0 := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        virtualinvoke $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: void pullChildren()>();

        $r1 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        $z0 = interfaceinvoke $r1.<androidx.appcompat.widget.DecorToolbar: boolean hasLogo()>();

        return $z0;
    }

    public boolean hideOverflowMenu()
    {
        androidx.appcompat.widget.ActionBarOverlayLayout $r0;
        boolean $z0;
        androidx.appcompat.widget.DecorToolbar $r1;

        $r0 := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        virtualinvoke $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: void pullChildren()>();

        $r1 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        $z0 = interfaceinvoke $r1.<androidx.appcompat.widget.DecorToolbar: boolean hideOverflowMenu()>();

        return $z0;
    }

    public void initFeature(int)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout $r0;
        int $i0;
        androidx.appcompat.widget.DecorToolbar $r1;

        $r0 := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $i0 := @parameter0: int;

        virtualinvoke $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: void pullChildren()>();

        if $i0 == 2 goto label3;

        if $i0 == 5 goto label2;

        if $i0 == 109 goto label1;

        return;

     label1:
        virtualinvoke $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: void setOverlayMode(boolean)>(1);

        return;

     label2:
        $r1 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r1.<androidx.appcompat.widget.DecorToolbar: void initIndeterminateProgress()>();

        return;

     label3:
        $r1 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r1.<androidx.appcompat.widget.DecorToolbar: void initProgress()>();

        return;
    }

    public boolean isHideOnContentScrollEnabled()
    {
        androidx.appcompat.widget.ActionBarOverlayLayout $r0;
        boolean z0;

        $r0 := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        z0 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: boolean mHideOnContentScroll>;

        return z0;
    }

    public boolean isInOverlayMode()
    {
        androidx.appcompat.widget.ActionBarOverlayLayout $r0;
        boolean z0;

        $r0 := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        z0 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: boolean mOverlayMode>;

        return z0;
    }

    public boolean isOverflowMenuShowPending()
    {
        androidx.appcompat.widget.ActionBarOverlayLayout $r0;
        boolean $z0;
        androidx.appcompat.widget.DecorToolbar $r1;

        $r0 := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        virtualinvoke $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: void pullChildren()>();

        $r1 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        $z0 = interfaceinvoke $r1.<androidx.appcompat.widget.DecorToolbar: boolean isOverflowMenuShowPending()>();

        return $z0;
    }

    public boolean isOverflowMenuShowing()
    {
        androidx.appcompat.widget.ActionBarOverlayLayout $r0;
        boolean $z0;
        androidx.appcompat.widget.DecorToolbar $r1;

        $r0 := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        virtualinvoke $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: void pullChildren()>();

        $r1 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        $z0 = interfaceinvoke $r1.<androidx.appcompat.widget.DecorToolbar: boolean isOverflowMenuShowing()>();

        return $z0;
    }

    protected void onConfigurationChanged(android.content.res.Configuration)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout $r0;
        android.content.res.Configuration $r1;
        android.content.Context $r2;

        $r0 := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $r1 := @parameter0: android.content.res.Configuration;

        specialinvoke $r0.<android.view.ViewGroup: void onConfigurationChanged(android.content.res.Configuration)>($r1);

        $r2 = virtualinvoke $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: android.content.Context getContext()>();

        specialinvoke $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: void init(android.content.Context)>($r2);

        staticinvoke <androidx.core.view.ViewCompat: void requestApplyInsets(android.view.View)>($r0);

        return;
    }

    protected void onDetachedFromWindow()
    {
        androidx.appcompat.widget.ActionBarOverlayLayout $r0;

        $r0 := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        specialinvoke $r0.<android.view.ViewGroup: void onDetachedFromWindow()>();

        virtualinvoke $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: void haltActionBarHideOffsetAnimations()>();

        return;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout $r0;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        android.view.View $r1;
        android.view.ViewGroup$LayoutParams $r2;
        androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams $r3;

        $r0 := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $i0 = virtualinvoke $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: int getChildCount()>();

        $i1 = virtualinvoke $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: int getPaddingLeft()>();

        virtualinvoke $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: int getPaddingRight()>();

        $i2 = virtualinvoke $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: int getPaddingTop()>();

        virtualinvoke $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: int getPaddingBottom()>();

        $i3 = 0;

     label1:
        if $i3 >= $i0 goto label3;

        $r1 = virtualinvoke $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: android.view.View getChildAt(int)>($i3);

        $i5 = virtualinvoke $r1.<android.view.View: int getVisibility()>();

        if $i5 == 8 goto label2;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams) $r2;

        $i4 = virtualinvoke $r1.<android.view.View: int getMeasuredWidth()>();

        $i5 = virtualinvoke $r1.<android.view.View: int getMeasuredHeight()>();

        $i6 = $r3.<androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams: int leftMargin>;

        $i6 = $i6 + $i1;

        $i7 = $r3.<androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams: int topMargin>;

        $i7 = $i7 + $i2;

        $i4 = $i6 + $i4;

        $i5 = $i7 + $i5;

        virtualinvoke $r1.<android.view.View: void layout(int,int,int,int)>($i6, $i7, $i4, $i5);

     label2:
        $i3 = $i3 + 1;

        goto label1;

     label3:
        return;
    }

    protected void onMeasure(int, int)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        boolean $z0, $z1;
        androidx.appcompat.widget.ActionBarContainer $r1;
        android.view.ViewGroup$LayoutParams $r2;
        androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams $r3;
        android.view.View $r4;
        android.graphics.Rect $r5, $r6;
        androidx.appcompat.widget.ContentFrameLayout $r7;

        $r0 := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        virtualinvoke $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: void pullChildren()>();

        $i2 = 0;

        $r1 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarContainer mActionBarTop>;

        virtualinvoke $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: void measureChildWithMargins(android.view.View,int,int,int,int)>($r1, $i0, 0, $i1, 0);

        $r1 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarContainer mActionBarTop>;

        $r2 = virtualinvoke $r1.<androidx.appcompat.widget.ActionBarContainer: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams) $r2;

        $r1 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarContainer mActionBarTop>;

        $i3 = virtualinvoke $r1.<androidx.appcompat.widget.ActionBarContainer: int getMeasuredWidth()>();

        $i4 = $r3.<androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams: int leftMargin>;

        $i3 = $i3 + $i4;

        $i4 = $r3.<androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams: int rightMargin>;

        $i3 = $i3 + $i4;

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i3);

        $r1 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarContainer mActionBarTop>;

        $i3 = virtualinvoke $r1.<androidx.appcompat.widget.ActionBarContainer: int getMeasuredHeight()>();

        $i4 = $r3.<androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams: int topMargin>;

        $i3 = $i3 + $i4;

        $i4 = $r3.<androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams: int bottomMargin>;

        $i3 = $i3 + $i4;

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i3);

        $r1 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarContainer mActionBarTop>;

        $i3 = virtualinvoke $r1.<androidx.appcompat.widget.ActionBarContainer: int getMeasuredState()>();

        $i3 = staticinvoke <android.view.View: int combineMeasuredStates(int,int)>(0, $i3);

        $i6 = staticinvoke <androidx.core.view.ViewCompat: int getWindowSystemUiVisibility(android.view.View)>($r0);

        $i6 = $i6 & 256;

        if $i6 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        $z0 = $z1;

        if $z1 == 0 goto label4;

        $i2 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: int mActionBarHeight>;

        $z1 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: boolean mHasNonEmbeddedTabs>;

        if $z1 == 0 goto label5;

        $r1 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarContainer mActionBarTop>;

        $r4 = virtualinvoke $r1.<androidx.appcompat.widget.ActionBarContainer: android.view.View getTabContainer()>();

        if $r4 == null goto label3;

        $i6 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: int mActionBarHeight>;

        $i2 = $i2 + $i6;

     label3:
        goto label5;

     label4:
        $r1 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarContainer mActionBarTop>;

        $i6 = virtualinvoke $r1.<androidx.appcompat.widget.ActionBarContainer: int getVisibility()>();

        if $i6 == 8 goto label5;

        $r1 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarContainer mActionBarTop>;

        $i2 = virtualinvoke $r1.<androidx.appcompat.widget.ActionBarContainer: int getMeasuredHeight()>();

     label5:
        $r5 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mContentInsets>;

        $r6 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mBaseContentInsets>;

        virtualinvoke $r5.<android.graphics.Rect: void set(android.graphics.Rect)>($r6);

        $r5 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mInnerInsets>;

        $r6 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mBaseInnerInsets>;

        virtualinvoke $r5.<android.graphics.Rect: void set(android.graphics.Rect)>($r6);

        $z1 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: boolean mOverlayMode>;

        if $z1 != 0 goto label6;

        if $z0 != 0 goto label6;

        $r5 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mContentInsets>;

        $i6 = $r5.<android.graphics.Rect: int top>;

        $i2 = $i6 + $i2;

        $r5.<android.graphics.Rect: int top> = $i2;

        $r5 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mContentInsets>;

        $i2 = $r5.<android.graphics.Rect: int bottom>;

        $r5.<android.graphics.Rect: int bottom> = $i2;

        goto label7;

     label6:
        $r5 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mInnerInsets>;

        $i6 = $r5.<android.graphics.Rect: int top>;

        $i2 = $i6 + $i2;

        $r5.<android.graphics.Rect: int top> = $i2;

        $r5 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mInnerInsets>;

        $i2 = $r5.<android.graphics.Rect: int bottom>;

        $r5.<android.graphics.Rect: int bottom> = $i2;

     label7:
        $r7 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ContentFrameLayout mContent>;

        $r5 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mContentInsets>;

        specialinvoke $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: boolean applyInsets(android.view.View,android.graphics.Rect,boolean,boolean,boolean,boolean)>($r7, $r5, 1, 1, 1, 1);

        $r5 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mLastInnerInsets>;

        $r6 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mInnerInsets>;

        $z0 = virtualinvoke $r5.<android.graphics.Rect: boolean equals(java.lang.Object)>($r6);

        if $z0 != 0 goto label8;

        $r5 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mLastInnerInsets>;

        $r6 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mInnerInsets>;

        virtualinvoke $r5.<android.graphics.Rect: void set(android.graphics.Rect)>($r6);

        $r7 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ContentFrameLayout mContent>;

        $r5 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mInnerInsets>;

        virtualinvoke $r7.<androidx.appcompat.widget.ContentFrameLayout: void dispatchFitSystemWindows(android.graphics.Rect)>($r5);

     label8:
        $r7 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ContentFrameLayout mContent>;

        virtualinvoke $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: void measureChildWithMargins(android.view.View,int,int,int,int)>($r7, $i0, 0, $i1, 0);

        $r7 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ContentFrameLayout mContent>;

        $r2 = virtualinvoke $r7.<androidx.appcompat.widget.ContentFrameLayout: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams) $r2;

        $r7 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ContentFrameLayout mContent>;

        $i2 = virtualinvoke $r7.<androidx.appcompat.widget.ContentFrameLayout: int getMeasuredWidth()>();

        $i6 = $r3.<androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams: int leftMargin>;

        $i2 = $i2 + $i6;

        $i6 = $r3.<androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams: int rightMargin>;

        $i2 = $i2 + $i6;

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>($i5, $i2);

        $r7 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ContentFrameLayout mContent>;

        $i2 = virtualinvoke $r7.<androidx.appcompat.widget.ContentFrameLayout: int getMeasuredHeight()>();

        $i6 = $r3.<androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams: int topMargin>;

        $i2 = $i2 + $i6;

        $i6 = $r3.<androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams: int bottomMargin>;

        $i2 = $i2 + $i6;

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>($i4, $i2);

        $r7 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ContentFrameLayout mContent>;

        $i2 = virtualinvoke $r7.<androidx.appcompat.widget.ContentFrameLayout: int getMeasuredState()>();

        $i3 = staticinvoke <android.view.View: int combineMeasuredStates(int,int)>($i3, $i2);

        $i2 = virtualinvoke $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: int getPaddingLeft()>();

        $i6 = virtualinvoke $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: int getPaddingRight()>();

        $i2 = $i2 + $i6;

        $i5 = $i5 + $i2;

        $i2 = virtualinvoke $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: int getPaddingTop()>();

        $i6 = virtualinvoke $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: int getPaddingBottom()>();

        $i2 = $i2 + $i6;

        $i4 = $i4 + $i2;

        $i2 = virtualinvoke $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: int getSuggestedMinimumHeight()>();

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>($i4, $i2);

        $i2 = virtualinvoke $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: int getSuggestedMinimumWidth()>();

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>($i5, $i2);

        $i0 = staticinvoke <android.view.View: int resolveSizeAndState(int,int,int)>($i5, $i0, $i3);

        $i3 = $i3 << 16;

        $i1 = staticinvoke <android.view.View: int resolveSizeAndState(int,int,int)>($i4, $i1, $i3);

        virtualinvoke $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: void setMeasuredDimension(int,int)>($i0, $i1);

        return;
    }

    public boolean onNestedFling(android.view.View, float, float, boolean)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout $r0;
        android.view.View $r1;
        float $f0, $f1;
        boolean $z0, $z1;

        $r0 := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $r1 := @parameter0: android.view.View;

        $f0 := @parameter1: float;

        $f1 := @parameter2: float;

        $z0 := @parameter3: boolean;

        $z1 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: boolean mHideOnContentScroll>;

        if $z1 == 0 goto label4;

        if $z0 != 0 goto label1;

        goto label4;

     label1:
        $z0 = specialinvoke $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: boolean shouldHideActionBarOnFling(float,float)>($f0, $f1);

        if $z0 == 0 goto label2;

        specialinvoke $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: void addActionBarHideOffset()>();

        goto label3;

     label2:
        specialinvoke $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: void removeActionBarHideOffset()>();

     label3:
        $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: boolean mAnimatingForFling> = 1;

        return 1;

     label4:
        return 0;
    }

    public boolean onNestedPreFling(android.view.View, float, float)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout $r0;
        android.view.View $r1;
        float $f0, $f1;

        $r0 := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $r1 := @parameter0: android.view.View;

        $f0 := @parameter1: float;

        $f1 := @parameter2: float;

        return 0;
    }

    public void onNestedPreScroll(android.view.View, int, int, int[])
    {
        androidx.appcompat.widget.ActionBarOverlayLayout $r0;
        android.view.View $r1;
        int $i0, $i1;
        int[] $r2;

        $r0 := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 := @parameter3: int[];

        return;
    }

    public void onNestedScroll(android.view.View, int, int, int, int)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout $r0;
        android.view.View $r1;
        int $i0, $i1, $i2, $i3;

        $r0 := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $i0 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: int mHideOnContentScrollReference>;

        $i0 = $i0 + $i1;

        $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: int mHideOnContentScrollReference> = $i0;

        $i0 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: int mHideOnContentScrollReference>;

        virtualinvoke $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)>($i0);

        return;
    }

    public void onNestedScrollAccepted(android.view.View, android.view.View, int)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout $r0;
        android.view.View $r1, $r2;
        int $i0;
        androidx.core.view.NestedScrollingParentHelper $r3;
        androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback $r4;

        $r0 := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.view.View;

        $i0 := @parameter2: int;

        $r3 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.core.view.NestedScrollingParentHelper mParentHelper>;

        virtualinvoke $r3.<androidx.core.view.NestedScrollingParentHelper: void onNestedScrollAccepted(android.view.View,android.view.View,int)>($r1, $r2, $i0);

        $i0 = virtualinvoke $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: int getActionBarHideOffset()>();

        $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: int mHideOnContentScrollReference> = $i0;

        virtualinvoke $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: void haltActionBarHideOffsetAnimations()>();

        $r4 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback mActionBarVisibilityCallback>;

        if $r4 == null goto label1;

        interfaceinvoke $r4.<androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback: void onContentScrollStarted()>();

     label1:
        return;
    }

    public boolean onStartNestedScroll(android.view.View, android.view.View, int)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout $r0;
        android.view.View $r1, $r2;
        int $i0;
        androidx.appcompat.widget.ActionBarContainer $r3;
        boolean z0;

        $r0 := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.view.View;

        $i0 := @parameter2: int;

        $i0 = $i0 & 2;

        if $i0 == 0 goto label2;

        $r3 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarContainer mActionBarTop>;

        $i0 = virtualinvoke $r3.<androidx.appcompat.widget.ActionBarContainer: int getVisibility()>();

        if $i0 == 0 goto label1;

        goto label2;

     label1:
        z0 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: boolean mHideOnContentScroll>;

        return z0;

     label2:
        return 0;
    }

    public void onStopNestedScroll(android.view.View)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout $r0;
        android.view.View $r1;
        int $i0, $i1;
        boolean $z0;
        androidx.appcompat.widget.ActionBarContainer $r2;
        androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback $r3;

        $r0 := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $r1 := @parameter0: android.view.View;

        $z0 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: boolean mHideOnContentScroll>;

        if $z0 == 0 goto label2;

        $z0 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: boolean mAnimatingForFling>;

        if $z0 != 0 goto label2;

        $i1 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: int mHideOnContentScrollReference>;

        $r2 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarContainer mActionBarTop>;

        $i0 = virtualinvoke $r2.<androidx.appcompat.widget.ActionBarContainer: int getHeight()>();

        if $i1 > $i0 goto label1;

        specialinvoke $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: void postRemoveActionBarHideOffset()>();

        goto label2;

     label1:
        specialinvoke $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: void postAddActionBarHideOffset()>();

     label2:
        $r3 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback mActionBarVisibilityCallback>;

        if $r3 == null goto label3;

        interfaceinvoke $r3.<androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback: void onContentScrollStopped()>();

     label3:
        return;
    }

    public void onWindowSystemUiVisibilityChanged(int)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout $r0;
        int $i0, $i1, $i2;
        androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback $r1;
        boolean $z0, $z1, $z2;

        $r0 := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $i0 := @parameter0: int;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 16 goto label01;

        specialinvoke $r0.<android.view.ViewGroup: void onWindowSystemUiVisibilityChanged(int)>($i0);

     label01:
        virtualinvoke $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: void pullChildren()>();

        $i1 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: int mLastSystemUiVisibility>;

        $i1 = $i1 ^ $i0;

        $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: int mLastSystemUiVisibility> = $i0;

        $i2 = $i0 & 4;

        $z0 = 1;

        if $i2 != 0 goto label02;

        $z1 = 1;

        goto label03;

     label02:
        $z1 = 0;

     label03:
        $i0 = $i0 & 256;

        if $i0 == 0 goto label04;

        $z2 = 1;

        goto label05;

     label04:
        $z2 = 0;

     label05:
        $r1 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback mActionBarVisibilityCallback>;

        if $r1 == null goto label10;

        if $z2 != 0 goto label06;

        goto label07;

     label06:
        $z0 = 0;

     label07:
        interfaceinvoke $r1.<androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback: void enableContentAnimations(boolean)>($z0);

        if $z1 != 0 goto label09;

        if $z2 != 0 goto label08;

        goto label09;

     label08:
        $r1 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback mActionBarVisibilityCallback>;

        interfaceinvoke $r1.<androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback: void hideForSystem()>();

        goto label10;

     label09:
        $r1 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback mActionBarVisibilityCallback>;

        interfaceinvoke $r1.<androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback: void showForSystem()>();

     label10:
        $i0 = $i1 & 256;

        if $i0 == 0 goto label11;

        $r1 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback mActionBarVisibilityCallback>;

        if $r1 == null goto label11;

        staticinvoke <androidx.core.view.ViewCompat: void requestApplyInsets(android.view.View)>($r0);

     label11:
        return;
    }

    protected void onWindowVisibilityChanged(int)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout $r0;
        int $i0;
        androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback $r1;

        $r0 := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $i0 := @parameter0: int;

        specialinvoke $r0.<android.view.ViewGroup: void onWindowVisibilityChanged(int)>($i0);

        $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: int mWindowVisibility> = $i0;

        $r1 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback mActionBarVisibilityCallback>;

        if $r1 == null goto label1;

        interfaceinvoke $r1.<androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback: void onWindowVisibilityChanged(int)>($i0);

     label1:
        return;
    }

    void pullChildren()
    {
        androidx.appcompat.widget.ActionBarOverlayLayout $r0;
        androidx.appcompat.widget.ContentFrameLayout $r1;
        int $i0;
        android.view.View $r2;
        androidx.appcompat.widget.ActionBarContainer $r3;
        androidx.appcompat.widget.DecorToolbar $r4;

        $r0 := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $r1 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ContentFrameLayout mContent>;

        if $r1 != null goto label1;

        $i0 = <androidx.appcompat.R$id: int action_bar_activity_content>;

        $r2 = virtualinvoke $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: android.view.View findViewById(int)>($i0);

        $r1 = (androidx.appcompat.widget.ContentFrameLayout) $r2;

        $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ContentFrameLayout mContent> = $r1;

        $i0 = <androidx.appcompat.R$id: int action_bar_container>;

        $r2 = virtualinvoke $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: android.view.View findViewById(int)>($i0);

        $r3 = (androidx.appcompat.widget.ActionBarContainer) $r2;

        $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarContainer mActionBarTop> = $r3;

        $i0 = <androidx.appcompat.R$id: int action_bar>;

        $r2 = virtualinvoke $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: android.view.View findViewById(int)>($i0);

        $r4 = specialinvoke $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View)>($r2);

        $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.DecorToolbar mDecorToolbar> = $r4;

     label1:
        return;
    }

    public void restoreToolbarHierarchyState(android.util.SparseArray)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout $r0;
        android.util.SparseArray $r1;
        androidx.appcompat.widget.DecorToolbar $r2;

        $r0 := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $r1 := @parameter0: android.util.SparseArray;

        virtualinvoke $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: void pullChildren()>();

        $r2 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r2.<androidx.appcompat.widget.DecorToolbar: void restoreHierarchyState(android.util.SparseArray)>($r1);

        return;
    }

    public void saveToolbarHierarchyState(android.util.SparseArray)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout $r0;
        android.util.SparseArray $r1;
        androidx.appcompat.widget.DecorToolbar $r2;

        $r0 := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $r1 := @parameter0: android.util.SparseArray;

        virtualinvoke $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: void pullChildren()>();

        $r2 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r2.<androidx.appcompat.widget.DecorToolbar: void saveHierarchyState(android.util.SparseArray)>($r1);

        return;
    }

    public void setActionBarHideOffset(int)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout $r0;
        int $i0, $i1;
        androidx.appcompat.widget.ActionBarContainer $r1;
        float $f0;

        $r0 := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $i0 := @parameter0: int;

        virtualinvoke $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: void haltActionBarHideOffsetAnimations()>();

        $r1 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarContainer mActionBarTop>;

        $i1 = virtualinvoke $r1.<androidx.appcompat.widget.ActionBarContainer: int getHeight()>();

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i0);

        $r1 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarContainer mActionBarTop>;

        $i0 = neg $i0;

        $f0 = (float) $i0;

        virtualinvoke $r1.<androidx.appcompat.widget.ActionBarContainer: void setTranslationY(float)>($f0);

        return;
    }

    public void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout $r0;
        androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback $r1;
        int $i0;
        android.os.IBinder $r2;

        $r0 := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $r1 := @parameter0: androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback;

        $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback mActionBarVisibilityCallback> = $r1;

        $r2 = virtualinvoke $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: android.os.IBinder getWindowToken()>();

        if $r2 == null goto label1;

        $r1 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback mActionBarVisibilityCallback>;

        $i0 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: int mWindowVisibility>;

        interfaceinvoke $r1.<androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback: void onWindowVisibilityChanged(int)>($i0);

        $i0 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: int mLastSystemUiVisibility>;

        if $i0 == 0 goto label1;

        $i0 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: int mLastSystemUiVisibility>;

        virtualinvoke $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: void onWindowSystemUiVisibilityChanged(int)>($i0);

        staticinvoke <androidx.core.view.ViewCompat: void requestApplyInsets(android.view.View)>($r0);

     label1:
        return;
    }

    public void setHasNonEmbeddedTabs(boolean)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout $r0;
        boolean $z0;

        $r0 := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $z0 := @parameter0: boolean;

        $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: boolean mHasNonEmbeddedTabs> = $z0;

        return;
    }

    public void setHideOnContentScrollEnabled(boolean)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout $r0;
        boolean $z0, $z1;

        $r0 := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $z0 := @parameter0: boolean;

        $z1 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: boolean mHideOnContentScroll>;

        if $z0 == $z1 goto label1;

        $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: boolean mHideOnContentScroll> = $z0;

        if $z0 != 0 goto label1;

        virtualinvoke $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: void haltActionBarHideOffsetAnimations()>();

        virtualinvoke $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)>(0);

     label1:
        return;
    }

    public void setIcon(int)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout $r0;
        int $i0;
        androidx.appcompat.widget.DecorToolbar $r1;

        $r0 := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $i0 := @parameter0: int;

        virtualinvoke $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: void pullChildren()>();

        $r1 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r1.<androidx.appcompat.widget.DecorToolbar: void setIcon(int)>($i0);

        return;
    }

    public void setIcon(android.graphics.drawable.Drawable)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout $r0;
        android.graphics.drawable.Drawable $r1;
        androidx.appcompat.widget.DecorToolbar $r2;

        $r0 := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        virtualinvoke $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: void pullChildren()>();

        $r2 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r2.<androidx.appcompat.widget.DecorToolbar: void setIcon(android.graphics.drawable.Drawable)>($r1);

        return;
    }

    public void setLogo(int)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout $r0;
        int $i0;
        androidx.appcompat.widget.DecorToolbar $r1;

        $r0 := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $i0 := @parameter0: int;

        virtualinvoke $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: void pullChildren()>();

        $r1 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r1.<androidx.appcompat.widget.DecorToolbar: void setLogo(int)>($i0);

        return;
    }

    public void setMenu(android.view.Menu, androidx.appcompat.view.menu.MenuPresenter$Callback)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout $r0;
        android.view.Menu $r1;
        androidx.appcompat.view.menu.MenuPresenter$Callback $r2;
        androidx.appcompat.widget.DecorToolbar $r3;

        $r0 := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $r1 := @parameter0: android.view.Menu;

        $r2 := @parameter1: androidx.appcompat.view.menu.MenuPresenter$Callback;

        virtualinvoke $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: void pullChildren()>();

        $r3 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r3.<androidx.appcompat.widget.DecorToolbar: void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)>($r1, $r2);

        return;
    }

    public void setMenuPrepared()
    {
        androidx.appcompat.widget.ActionBarOverlayLayout $r0;
        androidx.appcompat.widget.DecorToolbar $r1;

        $r0 := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        virtualinvoke $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: void pullChildren()>();

        $r1 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r1.<androidx.appcompat.widget.DecorToolbar: void setMenuPrepared()>();

        return;
    }

    public void setOverlayMode(boolean)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout $r0;
        boolean $z0;
        android.content.Context $r1;
        android.content.pm.ApplicationInfo $r2;
        int $i0;

        $r0 := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $z0 := @parameter0: boolean;

        $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: boolean mOverlayMode> = $z0;

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $i0 = $r2.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i0 >= 19 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: boolean mIgnoreWindowContentOverlay> = $z0;

        return;
    }

    public void setShowingForActionMode(boolean)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout $r0;
        boolean $z0;

        $r0 := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $z0 := @parameter0: boolean;

        return;
    }

    public void setUiOptions(int)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout $r0;
        int $i0;

        $r0 := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $i0 := @parameter0: int;

        return;
    }

    public void setWindowCallback(android.view.Window$Callback)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout $r0;
        android.view.Window$Callback $r1;
        androidx.appcompat.widget.DecorToolbar $r2;

        $r0 := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $r1 := @parameter0: android.view.Window$Callback;

        virtualinvoke $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: void pullChildren()>();

        $r2 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r2.<androidx.appcompat.widget.DecorToolbar: void setWindowCallback(android.view.Window$Callback)>($r1);

        return;
    }

    public void setWindowTitle(java.lang.CharSequence)
    {
        androidx.appcompat.widget.ActionBarOverlayLayout $r0;
        java.lang.CharSequence $r1;
        androidx.appcompat.widget.DecorToolbar $r2;

        $r0 := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        $r1 := @parameter0: java.lang.CharSequence;

        virtualinvoke $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: void pullChildren()>();

        $r2 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        interfaceinvoke $r2.<androidx.appcompat.widget.DecorToolbar: void setWindowTitle(java.lang.CharSequence)>($r1);

        return;
    }

    public boolean shouldDelayChildPressedState()
    {
        androidx.appcompat.widget.ActionBarOverlayLayout $r0;

        $r0 := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        return 0;
    }

    public boolean showOverflowMenu()
    {
        androidx.appcompat.widget.ActionBarOverlayLayout $r0;
        boolean $z0;
        androidx.appcompat.widget.DecorToolbar $r1;

        $r0 := @this: androidx.appcompat.widget.ActionBarOverlayLayout;

        virtualinvoke $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: void pullChildren()>();

        $r1 = $r0.<androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.DecorToolbar mDecorToolbar>;

        $z0 = interfaceinvoke $r1.<androidx.appcompat.widget.DecorToolbar: boolean showOverflowMenu()>();

        return $z0;
    }
}
