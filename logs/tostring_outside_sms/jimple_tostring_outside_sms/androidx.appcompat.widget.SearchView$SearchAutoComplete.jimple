public class androidx.appcompat.widget.SearchView$SearchAutoComplete extends androidx.appcompat.widget.AppCompatAutoCompleteTextView
{
    private boolean mHasPendingShowSoftInputRequest;
    final java.lang.Runnable mRunShowSoftInputIfNecessary;
    private androidx.appcompat.widget.SearchView mSearchView;
    private int mThreshold;

    public void <init>(android.content.Context)
    {
        androidx.appcompat.widget.SearchView$SearchAutoComplete $r0;
        android.content.Context $r1;

        $r0 := @this: androidx.appcompat.widget.SearchView$SearchAutoComplete;

        $r1 := @parameter0: android.content.Context;

        specialinvoke $r0.<androidx.appcompat.widget.SearchView$SearchAutoComplete: void <init>(android.content.Context,android.util.AttributeSet)>($r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        androidx.appcompat.widget.SearchView$SearchAutoComplete $r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0;

        $r0 := @this: androidx.appcompat.widget.SearchView$SearchAutoComplete;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 = <androidx.appcompat.R$attr: int autoCompleteTextViewStyle>;

        specialinvoke $r0.<androidx.appcompat.widget.SearchView$SearchAutoComplete: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        androidx.appcompat.widget.SearchView$SearchAutoComplete $r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0;
        androidx.appcompat.widget.SearchView$SearchAutoComplete$1 $r3;

        $r0 := @this: androidx.appcompat.widget.SearchView$SearchAutoComplete;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        specialinvoke $r0.<androidx.appcompat.widget.AppCompatAutoCompleteTextView: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        $r3 = new androidx.appcompat.widget.SearchView$SearchAutoComplete$1;

        specialinvoke $r3.<androidx.appcompat.widget.SearchView$SearchAutoComplete$1: void <init>(androidx.appcompat.widget.SearchView$SearchAutoComplete)>($r0);

        $r0.<androidx.appcompat.widget.SearchView$SearchAutoComplete: java.lang.Runnable mRunShowSoftInputIfNecessary> = $r3;

        $i0 = virtualinvoke $r0.<androidx.appcompat.widget.SearchView$SearchAutoComplete: int getThreshold()>();

        $r0.<androidx.appcompat.widget.SearchView$SearchAutoComplete: int mThreshold> = $i0;

        return;
    }

    private int getSearchViewTextMinWidthDp()
    {
        androidx.appcompat.widget.SearchView$SearchAutoComplete $r0;
        int $i0, $i1, $i2;
        android.content.res.Resources $r1;
        android.content.res.Configuration $r2;

        $r0 := @this: androidx.appcompat.widget.SearchView$SearchAutoComplete;

        $r1 = virtualinvoke $r0.<androidx.appcompat.widget.SearchView$SearchAutoComplete: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $i0 = $r2.<android.content.res.Configuration: int screenWidthDp>;

        $i1 = $r2.<android.content.res.Configuration: int screenHeightDp>;

        if $i0 < 960 goto label1;

        if $i1 < 720 goto label1;

        $i2 = $r2.<android.content.res.Configuration: int orientation>;

        if $i2 != 2 goto label1;

        return 256;

     label1:
        if $i0 >= 600 goto label3;

        if $i0 < 640 goto label2;

        if $i1 < 480 goto label2;

        goto label3;

     label2:
        return 160;

     label3:
        return 192;
    }

    public boolean enoughToFilter()
    {
        androidx.appcompat.widget.SearchView$SearchAutoComplete $r0;
        boolean $z0;
        int $i0;

        $r0 := @this: androidx.appcompat.widget.SearchView$SearchAutoComplete;

        $i0 = $r0.<androidx.appcompat.widget.SearchView$SearchAutoComplete: int mThreshold>;

        if $i0 <= 0 goto label2;

        $z0 = specialinvoke $r0.<androidx.appcompat.widget.AppCompatAutoCompleteTextView: boolean enoughToFilter()>();

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    boolean isEmpty()
    {
        androidx.appcompat.widget.SearchView$SearchAutoComplete $r0;
        android.text.Editable $r1;
        int $i0;

        $r0 := @this: androidx.appcompat.widget.SearchView$SearchAutoComplete;

        $r1 = virtualinvoke $r0.<androidx.appcompat.widget.SearchView$SearchAutoComplete: android.text.Editable getText()>();

        $i0 = staticinvoke <android.text.TextUtils: int getTrimmedLength(java.lang.CharSequence)>($r1);

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
    {
        androidx.appcompat.widget.SearchView$SearchAutoComplete $r0;
        android.view.inputmethod.EditorInfo $r1;
        android.view.inputmethod.InputConnection $r2;
        boolean $z0;
        java.lang.Runnable $r3;

        $r0 := @this: androidx.appcompat.widget.SearchView$SearchAutoComplete;

        $r1 := @parameter0: android.view.inputmethod.EditorInfo;

        $r2 = specialinvoke $r0.<androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)>($r1);

        $z0 = $r0.<androidx.appcompat.widget.SearchView$SearchAutoComplete: boolean mHasPendingShowSoftInputRequest>;

        if $z0 == 0 goto label1;

        $r3 = $r0.<androidx.appcompat.widget.SearchView$SearchAutoComplete: java.lang.Runnable mRunShowSoftInputIfNecessary>;

        virtualinvoke $r0.<androidx.appcompat.widget.SearchView$SearchAutoComplete: boolean removeCallbacks(java.lang.Runnable)>($r3);

        $r3 = $r0.<androidx.appcompat.widget.SearchView$SearchAutoComplete: java.lang.Runnable mRunShowSoftInputIfNecessary>;

        virtualinvoke $r0.<androidx.appcompat.widget.SearchView$SearchAutoComplete: boolean post(java.lang.Runnable)>($r3);

     label1:
        return $r2;
    }

    protected void onFinishInflate()
    {
        androidx.appcompat.widget.SearchView$SearchAutoComplete $r0;
        android.content.res.Resources $r1;
        android.util.DisplayMetrics $r2;
        int $i0;
        float $f0;

        $r0 := @this: androidx.appcompat.widget.SearchView$SearchAutoComplete;

        specialinvoke $r0.<androidx.appcompat.widget.AppCompatAutoCompleteTextView: void onFinishInflate()>();

        $r1 = virtualinvoke $r0.<androidx.appcompat.widget.SearchView$SearchAutoComplete: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $i0 = specialinvoke $r0.<androidx.appcompat.widget.SearchView$SearchAutoComplete: int getSearchViewTextMinWidthDp()>();

        $f0 = (float) $i0;

        $f0 = staticinvoke <android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>(1, $f0, $r2);

        $i0 = (int) $f0;

        virtualinvoke $r0.<androidx.appcompat.widget.SearchView$SearchAutoComplete: void setMinWidth(int)>($i0);

        return;
    }

    protected void onFocusChanged(boolean, int, android.graphics.Rect)
    {
        androidx.appcompat.widget.SearchView$SearchAutoComplete $r0;
        boolean $z0;
        int $i0;
        android.graphics.Rect $r1;
        androidx.appcompat.widget.SearchView $r2;

        $r0 := @this: androidx.appcompat.widget.SearchView$SearchAutoComplete;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        $r1 := @parameter2: android.graphics.Rect;

        specialinvoke $r0.<androidx.appcompat.widget.AppCompatAutoCompleteTextView: void onFocusChanged(boolean,int,android.graphics.Rect)>($z0, $i0, $r1);

        $r2 = $r0.<androidx.appcompat.widget.SearchView$SearchAutoComplete: androidx.appcompat.widget.SearchView mSearchView>;

        virtualinvoke $r2.<androidx.appcompat.widget.SearchView: void onTextFocusChanged()>();

        return;
    }

    public boolean onKeyPreIme(int, android.view.KeyEvent)
    {
        androidx.appcompat.widget.SearchView$SearchAutoComplete $r0;
        int $i0, $i1;
        android.view.KeyEvent $r1;
        android.view.KeyEvent$DispatcherState $r2;
        boolean $z0;
        androidx.appcompat.widget.SearchView $r3;

        $r0 := @this: androidx.appcompat.widget.SearchView$SearchAutoComplete;

        $i0 := @parameter0: int;

        $r1 := @parameter1: android.view.KeyEvent;

        if $i0 != 4 goto label3;

        $i1 = virtualinvoke $r1.<android.view.KeyEvent: int getAction()>();

        if $i1 != 0 goto label1;

        $i1 = virtualinvoke $r1.<android.view.KeyEvent: int getRepeatCount()>();

        if $i1 != 0 goto label1;

        $r2 = virtualinvoke $r0.<androidx.appcompat.widget.SearchView$SearchAutoComplete: android.view.KeyEvent$DispatcherState getKeyDispatcherState()>();

        if $r2 == null goto label4;

        virtualinvoke $r2.<android.view.KeyEvent$DispatcherState: void startTracking(android.view.KeyEvent,java.lang.Object)>($r1, $r0);

        return 1;

     label1:
        $i1 = virtualinvoke $r1.<android.view.KeyEvent: int getAction()>();

        if $i1 != 1 goto label3;

        $r2 = virtualinvoke $r0.<androidx.appcompat.widget.SearchView$SearchAutoComplete: android.view.KeyEvent$DispatcherState getKeyDispatcherState()>();

        if $r2 == null goto label2;

        virtualinvoke $r2.<android.view.KeyEvent$DispatcherState: void handleUpEvent(android.view.KeyEvent)>($r1);

     label2:
        $z0 = virtualinvoke $r1.<android.view.KeyEvent: boolean isTracking()>();

        if $z0 == 0 goto label3;

        $z0 = virtualinvoke $r1.<android.view.KeyEvent: boolean isCanceled()>();

        if $z0 != 0 goto label3;

        $r3 = $r0.<androidx.appcompat.widget.SearchView$SearchAutoComplete: androidx.appcompat.widget.SearchView mSearchView>;

        virtualinvoke $r3.<androidx.appcompat.widget.SearchView: void clearFocus()>();

        virtualinvoke $r0.<androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)>(0);

        return 1;

     label3:
        $z0 = specialinvoke $r0.<androidx.appcompat.widget.AppCompatAutoCompleteTextView: boolean onKeyPreIme(int,android.view.KeyEvent)>($i0, $r1);

        return $z0;

     label4:
        return 1;
    }

    public void onWindowFocusChanged(boolean)
    {
        androidx.appcompat.widget.SearchView$SearchAutoComplete $r0;
        boolean $z0;
        androidx.appcompat.widget.SearchView $r1;
        int $i0;
        android.content.Context $r2;
        androidx.appcompat.widget.SearchView$AutoCompleteTextViewReflector $r3;

        $r0 := @this: androidx.appcompat.widget.SearchView$SearchAutoComplete;

        $z0 := @parameter0: boolean;

        specialinvoke $r0.<androidx.appcompat.widget.AppCompatAutoCompleteTextView: void onWindowFocusChanged(boolean)>($z0);

        if $z0 == 0 goto label1;

        $r1 = $r0.<androidx.appcompat.widget.SearchView$SearchAutoComplete: androidx.appcompat.widget.SearchView mSearchView>;

        $z0 = virtualinvoke $r1.<androidx.appcompat.widget.SearchView: boolean hasFocus()>();

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke $r0.<androidx.appcompat.widget.SearchView$SearchAutoComplete: int getVisibility()>();

        if $i0 != 0 goto label1;

        $r0.<androidx.appcompat.widget.SearchView$SearchAutoComplete: boolean mHasPendingShowSoftInputRequest> = 1;

        $r2 = virtualinvoke $r0.<androidx.appcompat.widget.SearchView$SearchAutoComplete: android.content.Context getContext()>();

        $z0 = staticinvoke <androidx.appcompat.widget.SearchView: boolean isLandscapeMode(android.content.Context)>($r2);

        if $z0 == 0 goto label1;

        $r3 = <androidx.appcompat.widget.SearchView: androidx.appcompat.widget.SearchView$AutoCompleteTextViewReflector HIDDEN_METHOD_INVOKER>;

        virtualinvoke $r3.<androidx.appcompat.widget.SearchView$AutoCompleteTextViewReflector: void ensureImeVisible(android.widget.AutoCompleteTextView,boolean)>($r0, 1);

     label1:
        return;
    }

    public void performCompletion()
    {
        androidx.appcompat.widget.SearchView$SearchAutoComplete $r0;

        $r0 := @this: androidx.appcompat.widget.SearchView$SearchAutoComplete;

        return;
    }

    protected void replaceText(java.lang.CharSequence)
    {
        androidx.appcompat.widget.SearchView$SearchAutoComplete $r0;
        java.lang.CharSequence $r1;

        $r0 := @this: androidx.appcompat.widget.SearchView$SearchAutoComplete;

        $r1 := @parameter0: java.lang.CharSequence;

        return;
    }

    void setImeVisibility(boolean)
    {
        androidx.appcompat.widget.SearchView$SearchAutoComplete $r0;
        boolean $z0;
        android.content.Context $r1;
        java.lang.Object $r2;
        android.view.inputmethod.InputMethodManager $r3;
        java.lang.Runnable $r4;
        android.os.IBinder $r5;

        $r0 := @this: androidx.appcompat.widget.SearchView$SearchAutoComplete;

        $z0 := @parameter0: boolean;

        $r1 = virtualinvoke $r0.<androidx.appcompat.widget.SearchView$SearchAutoComplete: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("input_method");

        $r3 = (android.view.inputmethod.InputMethodManager) $r2;

        if $z0 != 0 goto label1;

        $r0.<androidx.appcompat.widget.SearchView$SearchAutoComplete: boolean mHasPendingShowSoftInputRequest> = 0;

        $r4 = $r0.<androidx.appcompat.widget.SearchView$SearchAutoComplete: java.lang.Runnable mRunShowSoftInputIfNecessary>;

        virtualinvoke $r0.<androidx.appcompat.widget.SearchView$SearchAutoComplete: boolean removeCallbacks(java.lang.Runnable)>($r4);

        $r5 = virtualinvoke $r0.<androidx.appcompat.widget.SearchView$SearchAutoComplete: android.os.IBinder getWindowToken()>();

        virtualinvoke $r3.<android.view.inputmethod.InputMethodManager: boolean hideSoftInputFromWindow(android.os.IBinder,int)>($r5, 0);

        return;

     label1:
        $z0 = virtualinvoke $r3.<android.view.inputmethod.InputMethodManager: boolean isActive(android.view.View)>($r0);

        if $z0 == 0 goto label2;

        $r0.<androidx.appcompat.widget.SearchView$SearchAutoComplete: boolean mHasPendingShowSoftInputRequest> = 0;

        $r4 = $r0.<androidx.appcompat.widget.SearchView$SearchAutoComplete: java.lang.Runnable mRunShowSoftInputIfNecessary>;

        virtualinvoke $r0.<androidx.appcompat.widget.SearchView$SearchAutoComplete: boolean removeCallbacks(java.lang.Runnable)>($r4);

        virtualinvoke $r3.<android.view.inputmethod.InputMethodManager: boolean showSoftInput(android.view.View,int)>($r0, 0);

        return;

     label2:
        $r0.<androidx.appcompat.widget.SearchView$SearchAutoComplete: boolean mHasPendingShowSoftInputRequest> = 1;

        return;
    }

    void setSearchView(androidx.appcompat.widget.SearchView)
    {
        androidx.appcompat.widget.SearchView$SearchAutoComplete $r0;
        androidx.appcompat.widget.SearchView $r1;

        $r0 := @this: androidx.appcompat.widget.SearchView$SearchAutoComplete;

        $r1 := @parameter0: androidx.appcompat.widget.SearchView;

        $r0.<androidx.appcompat.widget.SearchView$SearchAutoComplete: androidx.appcompat.widget.SearchView mSearchView> = $r1;

        return;
    }

    public void setThreshold(int)
    {
        androidx.appcompat.widget.SearchView$SearchAutoComplete $r0;
        int $i0;

        $r0 := @this: androidx.appcompat.widget.SearchView$SearchAutoComplete;

        $i0 := @parameter0: int;

        specialinvoke $r0.<androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setThreshold(int)>($i0);

        $r0.<androidx.appcompat.widget.SearchView$SearchAutoComplete: int mThreshold> = $i0;

        return;
    }

    void showSoftInputIfNecessary()
    {
        androidx.appcompat.widget.SearchView$SearchAutoComplete $r0;
        boolean $z0;
        android.content.Context $r1;
        java.lang.Object $r2;
        android.view.inputmethod.InputMethodManager $r3;

        $r0 := @this: androidx.appcompat.widget.SearchView$SearchAutoComplete;

        $z0 = $r0.<androidx.appcompat.widget.SearchView$SearchAutoComplete: boolean mHasPendingShowSoftInputRequest>;

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke $r0.<androidx.appcompat.widget.SearchView$SearchAutoComplete: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("input_method");

        $r3 = (android.view.inputmethod.InputMethodManager) $r2;

        virtualinvoke $r3.<android.view.inputmethod.InputMethodManager: boolean showSoftInput(android.view.View,int)>($r0, 0);

        $r0.<androidx.appcompat.widget.SearchView$SearchAutoComplete: boolean mHasPendingShowSoftInputRequest> = 0;

     label1:
        return;
    }
}
