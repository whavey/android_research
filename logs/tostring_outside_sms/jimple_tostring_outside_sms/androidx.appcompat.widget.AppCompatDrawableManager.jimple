public final class androidx.appcompat.widget.AppCompatDrawableManager extends java.lang.Object
{
    private static final int[] COLORFILTER_COLOR_BACKGROUND_MULTIPLY;
    private static final int[] COLORFILTER_COLOR_CONTROL_ACTIVATED;
    private static final int[] COLORFILTER_TINT_COLOR_CONTROL_NORMAL;
    private static final androidx.appcompat.widget.AppCompatDrawableManager$ColorFilterLruCache COLOR_FILTER_CACHE;
    private static final boolean DEBUG;
    private static final android.graphics.PorterDuff$Mode DEFAULT_MODE;
    private static androidx.appcompat.widget.AppCompatDrawableManager INSTANCE;
    private static final java.lang.String PLATFORM_VD_CLAZZ;
    private static final java.lang.String SKIP_DRAWABLE_TAG;
    private static final java.lang.String TAG;
    private static final int[] TINT_CHECKABLE_BUTTON_LIST;
    private static final int[] TINT_COLOR_CONTROL_NORMAL;
    private static final int[] TINT_COLOR_CONTROL_STATE_LIST;
    private androidx.collection.ArrayMap mDelegates;
    private final java.util.WeakHashMap mDrawableCaches;
    private boolean mHasCheckedVectorDrawableSetup;
    private androidx.collection.SparseArrayCompat mKnownDrawableIdTags;
    private java.util.WeakHashMap mTintLists;
    private android.util.TypedValue mTypedValue;

    static void <clinit>()
    {
        android.graphics.PorterDuff$Mode $r0;
        androidx.appcompat.widget.AppCompatDrawableManager$ColorFilterLruCache $r1;
        int[] $r2;
        int $i0;

        <androidx.appcompat.widget.AppCompatDrawableManager: java.lang.String TAG> = "AppCompatDrawableManag";

        <androidx.appcompat.widget.AppCompatDrawableManager: java.lang.String SKIP_DRAWABLE_TAG> = "appcompat_skip_skip";

        <androidx.appcompat.widget.AppCompatDrawableManager: java.lang.String PLATFORM_VD_CLAZZ> = "android.graphics.drawable.VectorDrawable";

        <androidx.appcompat.widget.AppCompatDrawableManager: boolean DEBUG> = 0;

        $r0 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_IN>;

        <androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode DEFAULT_MODE> = $r0;

        $r1 = new androidx.appcompat.widget.AppCompatDrawableManager$ColorFilterLruCache;

        specialinvoke $r1.<androidx.appcompat.widget.AppCompatDrawableManager$ColorFilterLruCache: void <init>(int)>(6);

        <androidx.appcompat.widget.AppCompatDrawableManager: androidx.appcompat.widget.AppCompatDrawableManager$ColorFilterLruCache COLOR_FILTER_CACHE> = $r1;

        $r2 = newarray (int)[3];

        $i0 = <androidx.appcompat.R$drawable: int abc_textfield_search_default_mtrl_alpha>;

        $r2[0] = $i0;

        $i0 = <androidx.appcompat.R$drawable: int abc_textfield_default_mtrl_alpha>;

        $r2[1] = $i0;

        $i0 = <androidx.appcompat.R$drawable: int abc_ab_share_pack_mtrl_alpha>;

        $r2[2] = $i0;

        <androidx.appcompat.widget.AppCompatDrawableManager: int[] COLORFILTER_TINT_COLOR_CONTROL_NORMAL> = $r2;

        $r2 = newarray (int)[7];

        $i0 = <androidx.appcompat.R$drawable: int abc_ic_commit_search_api_mtrl_alpha>;

        $r2[0] = $i0;

        $i0 = <androidx.appcompat.R$drawable: int abc_seekbar_tick_mark_material>;

        $r2[1] = $i0;

        $i0 = <androidx.appcompat.R$drawable: int abc_ic_menu_share_mtrl_alpha>;

        $r2[2] = $i0;

        $i0 = <androidx.appcompat.R$drawable: int abc_ic_menu_copy_mtrl_am_alpha>;

        $r2[3] = $i0;

        $i0 = <androidx.appcompat.R$drawable: int abc_ic_menu_cut_mtrl_alpha>;

        $r2[4] = $i0;

        $i0 = <androidx.appcompat.R$drawable: int abc_ic_menu_selectall_mtrl_alpha>;

        $r2[5] = $i0;

        $i0 = <androidx.appcompat.R$drawable: int abc_ic_menu_paste_mtrl_am_alpha>;

        $r2[6] = $i0;

        <androidx.appcompat.widget.AppCompatDrawableManager: int[] TINT_COLOR_CONTROL_NORMAL> = $r2;

        $r2 = newarray (int)[10];

        $i0 = <androidx.appcompat.R$drawable: int abc_textfield_activated_mtrl_alpha>;

        $r2[0] = $i0;

        $i0 = <androidx.appcompat.R$drawable: int abc_textfield_search_activated_mtrl_alpha>;

        $r2[1] = $i0;

        $i0 = <androidx.appcompat.R$drawable: int abc_cab_background_top_mtrl_alpha>;

        $r2[2] = $i0;

        $i0 = <androidx.appcompat.R$drawable: int abc_text_cursor_material>;

        $r2[3] = $i0;

        $i0 = <androidx.appcompat.R$drawable: int abc_text_select_handle_left_mtrl_dark>;

        $r2[4] = $i0;

        $i0 = <androidx.appcompat.R$drawable: int abc_text_select_handle_middle_mtrl_dark>;

        $r2[5] = $i0;

        $i0 = <androidx.appcompat.R$drawable: int abc_text_select_handle_right_mtrl_dark>;

        $r2[6] = $i0;

        $i0 = <androidx.appcompat.R$drawable: int abc_text_select_handle_left_mtrl_light>;

        $r2[7] = $i0;

        $i0 = <androidx.appcompat.R$drawable: int abc_text_select_handle_middle_mtrl_light>;

        $r2[8] = $i0;

        $i0 = <androidx.appcompat.R$drawable: int abc_text_select_handle_right_mtrl_light>;

        $r2[9] = $i0;

        <androidx.appcompat.widget.AppCompatDrawableManager: int[] COLORFILTER_COLOR_CONTROL_ACTIVATED> = $r2;

        $r2 = newarray (int)[3];

        $i0 = <androidx.appcompat.R$drawable: int abc_popup_background_mtrl_mult>;

        $r2[0] = $i0;

        $i0 = <androidx.appcompat.R$drawable: int abc_cab_background_internal_bg>;

        $r2[1] = $i0;

        $i0 = <androidx.appcompat.R$drawable: int abc_menu_hardkey_panel_mtrl_mult>;

        $r2[2] = $i0;

        <androidx.appcompat.widget.AppCompatDrawableManager: int[] COLORFILTER_COLOR_BACKGROUND_MULTIPLY> = $r2;

        $r2 = newarray (int)[2];

        $i0 = <androidx.appcompat.R$drawable: int abc_tab_indicator_material>;

        $r2[0] = $i0;

        $i0 = <androidx.appcompat.R$drawable: int abc_textfield_search_material>;

        $r2[1] = $i0;

        <androidx.appcompat.widget.AppCompatDrawableManager: int[] TINT_COLOR_CONTROL_STATE_LIST> = $r2;

        $r2 = newarray (int)[2];

        $i0 = <androidx.appcompat.R$drawable: int abc_btn_check_material>;

        $r2[0] = $i0;

        $i0 = <androidx.appcompat.R$drawable: int abc_btn_radio_material>;

        $r2[1] = $i0;

        <androidx.appcompat.widget.AppCompatDrawableManager: int[] TINT_CHECKABLE_BUTTON_LIST> = $r2;

        return;
    }

    public void <init>()
    {
        androidx.appcompat.widget.AppCompatDrawableManager $r0;
        java.util.WeakHashMap $r1;

        $r0 := @this: androidx.appcompat.widget.AppCompatDrawableManager;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.WeakHashMap;

        specialinvoke $r1.<java.util.WeakHashMap: void <init>(int)>(0);

        $r0.<androidx.appcompat.widget.AppCompatDrawableManager: java.util.WeakHashMap mDrawableCaches> = $r1;

        return;
    }

    private void addDelegate(java.lang.String, androidx.appcompat.widget.AppCompatDrawableManager$InflateDelegate)
    {
        androidx.appcompat.widget.AppCompatDrawableManager $r0;
        java.lang.String $r1;
        androidx.appcompat.widget.AppCompatDrawableManager$InflateDelegate $r2;
        androidx.collection.ArrayMap $r3;

        $r0 := @this: androidx.appcompat.widget.AppCompatDrawableManager;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: androidx.appcompat.widget.AppCompatDrawableManager$InflateDelegate;

        $r3 = $r0.<androidx.appcompat.widget.AppCompatDrawableManager: androidx.collection.ArrayMap mDelegates>;

        if $r3 != null goto label1;

        $r3 = new androidx.collection.ArrayMap;

        specialinvoke $r3.<androidx.collection.ArrayMap: void <init>()>();

        $r0.<androidx.appcompat.widget.AppCompatDrawableManager: androidx.collection.ArrayMap mDelegates> = $r3;

     label1:
        $r3 = $r0.<androidx.appcompat.widget.AppCompatDrawableManager: androidx.collection.ArrayMap mDelegates>;

        virtualinvoke $r3.<androidx.collection.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        return;
    }

    private boolean addDrawableToCache(android.content.Context, long, android.graphics.drawable.Drawable)
    {
        androidx.appcompat.widget.AppCompatDrawableManager $r0;
        long $l0;
        android.graphics.drawable.Drawable $r1;
        android.content.Context $r2;
        android.graphics.drawable.Drawable$ConstantState $r3;
        java.util.WeakHashMap $r4;
        java.lang.Object $r5;
        androidx.collection.LongSparseArray $r6, $r7;
        java.lang.ref.WeakReference $r8;
        java.lang.Throwable $r9;

        $r0 := @this: androidx.appcompat.widget.AppCompatDrawableManager;

        $r2 := @parameter0: android.content.Context;

        $l0 := @parameter1: long;

        $r1 := @parameter2: android.graphics.drawable.Drawable;

        entermonitor $r0;

     label1:
        $r3 = virtualinvoke $r1.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>();

        if $r3 == null goto label4;

        $r4 = $r0.<androidx.appcompat.widget.AppCompatDrawableManager: java.util.WeakHashMap mDrawableCaches>;

        $r5 = virtualinvoke $r4.<java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>($r2);

        $r6 = (androidx.collection.LongSparseArray) $r5;

        if $r6 != null goto label2;

        $r7 = new androidx.collection.LongSparseArray;

        specialinvoke $r7.<androidx.collection.LongSparseArray: void <init>()>();

        $r6 = $r7;

        $r4 = $r0.<androidx.appcompat.widget.AppCompatDrawableManager: java.util.WeakHashMap mDrawableCaches>;

        virtualinvoke $r4.<java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r7);

     label2:
        $r8 = new java.lang.ref.WeakReference;

        specialinvoke $r8.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r3);

        virtualinvoke $r6.<androidx.collection.LongSparseArray: void put(long,java.lang.Object)>($l0, $r8);

     label3:
        exitmonitor $r0;

        return 1;

     label4:
        exitmonitor $r0;

        return 0;

     label5:
        $r9 := @caughtexception;

        exitmonitor $r0;

        throw $r9;

        catch java.lang.Throwable from label1 to label3 with label5;
    }

    private void addTintListToCache(android.content.Context, int, android.content.res.ColorStateList)
    {
        androidx.appcompat.widget.AppCompatDrawableManager $r0;
        android.content.Context $r1;
        int $i0;
        android.content.res.ColorStateList $r2;
        java.lang.Object $r3;
        java.util.WeakHashMap $r4;
        androidx.collection.SparseArrayCompat $r5, $r6;

        $r0 := @this: androidx.appcompat.widget.AppCompatDrawableManager;

        $r1 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $r2 := @parameter2: android.content.res.ColorStateList;

        $r4 = $r0.<androidx.appcompat.widget.AppCompatDrawableManager: java.util.WeakHashMap mTintLists>;

        if $r4 != null goto label1;

        $r4 = new java.util.WeakHashMap;

        specialinvoke $r4.<java.util.WeakHashMap: void <init>()>();

        $r0.<androidx.appcompat.widget.AppCompatDrawableManager: java.util.WeakHashMap mTintLists> = $r4;

     label1:
        $r4 = $r0.<androidx.appcompat.widget.AppCompatDrawableManager: java.util.WeakHashMap mTintLists>;

        $r3 = virtualinvoke $r4.<java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r5 = (androidx.collection.SparseArrayCompat) $r3;

        if $r5 != null goto label2;

        $r6 = new androidx.collection.SparseArrayCompat;

        specialinvoke $r6.<androidx.collection.SparseArrayCompat: void <init>()>();

        $r5 = $r6;

        $r4 = $r0.<androidx.appcompat.widget.AppCompatDrawableManager: java.util.WeakHashMap mTintLists>;

        virtualinvoke $r4.<java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r6);

     label2:
        virtualinvoke $r5.<androidx.collection.SparseArrayCompat: void append(int,java.lang.Object)>($i0, $r2);

        return;
    }

    private static boolean arrayContains(int[], int)
    {
        int[] $r0;
        int $i0, $i1, $i2, $i3;

        $r0 := @parameter0: int[];

        $i0 := @parameter1: int;

        $i2 = lengthof $r0;

        $i3 = 0;

     label1:
        if $i3 >= $i2 goto label3;

        $i1 = $r0[$i3];

        if $i1 != $i0 goto label2;

        return 1;

     label2:
        $i3 = $i3 + 1;

        goto label1;

     label3:
        return 0;
    }

    private void checkVectorDrawableSetup(android.content.Context)
    {
        androidx.appcompat.widget.AppCompatDrawableManager $r0;
        android.content.Context $r1;
        boolean $z0;
        int $i0;
        android.graphics.drawable.Drawable $r2;
        java.lang.IllegalStateException $r3;

        $r0 := @this: androidx.appcompat.widget.AppCompatDrawableManager;

        $r1 := @parameter0: android.content.Context;

        $z0 = $r0.<androidx.appcompat.widget.AppCompatDrawableManager: boolean mHasCheckedVectorDrawableSetup>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r0.<androidx.appcompat.widget.AppCompatDrawableManager: boolean mHasCheckedVectorDrawableSetup> = 1;

        $i0 = <androidx.appcompat.R$drawable: int abc_vector_test>;

        $r2 = virtualinvoke $r0.<androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>($r1, $i0);

        if $r2 == null goto label2;

        $z0 = staticinvoke <androidx.appcompat.widget.AppCompatDrawableManager: boolean isVectorDrawable(android.graphics.drawable.Drawable)>($r2);

        if $z0 == 0 goto label2;

        return;

     label2:
        $r0.<androidx.appcompat.widget.AppCompatDrawableManager: boolean mHasCheckedVectorDrawableSetup> = 0;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This app has been built with an incorrect configuration. Please configure your build for VectorDrawableCompat.");

        throw $r3;
    }

    private android.content.res.ColorStateList createBorderlessButtonColorStateList(android.content.Context)
    {
        androidx.appcompat.widget.AppCompatDrawableManager $r0;
        android.content.Context $r1;
        android.content.res.ColorStateList $r2;

        $r0 := @this: androidx.appcompat.widget.AppCompatDrawableManager;

        $r1 := @parameter0: android.content.Context;

        $r2 = specialinvoke $r0.<androidx.appcompat.widget.AppCompatDrawableManager: android.content.res.ColorStateList createButtonColorStateList(android.content.Context,int)>($r1, 0);

        return $r2;
    }

    private android.content.res.ColorStateList createButtonColorStateList(android.content.Context, int)
    {
        androidx.appcompat.widget.AppCompatDrawableManager $r0;
        android.content.Context $r1;
        int $i0, $i1, $i2, $i3;
        int[][] $r2;
        int[] $r3, $r4;
        android.content.res.ColorStateList $r5;

        $r0 := @this: androidx.appcompat.widget.AppCompatDrawableManager;

        $r1 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $r2 = newarray (int[])[4];

        $r3 = newarray (int)[4];

        $i1 = <androidx.appcompat.R$attr: int colorControlHighlight>;

        $i1 = staticinvoke <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>($r1, $i1);

        $i2 = <androidx.appcompat.R$attr: int colorButtonNormal>;

        $i2 = staticinvoke <androidx.appcompat.widget.ThemeUtils: int getDisabledThemeAttrColor(android.content.Context,int)>($r1, $i2);

        $r4 = <androidx.appcompat.widget.ThemeUtils: int[] DISABLED_STATE_SET>;

        $r2[0] = $r4;

        $r3[0] = $i2;

        $r4 = <androidx.appcompat.widget.ThemeUtils: int[] PRESSED_STATE_SET>;

        $r2[1] = $r4;

        $i3 = staticinvoke <androidx.core.graphics.ColorUtils: int compositeColors(int,int)>($i1, $i0);

        $r3[1] = $i3;

        $r4 = <androidx.appcompat.widget.ThemeUtils: int[] FOCUSED_STATE_SET>;

        $r2[2] = $r4;

        $i1 = staticinvoke <androidx.core.graphics.ColorUtils: int compositeColors(int,int)>($i1, $i0);

        $r3[2] = $i1;

        $r4 = <androidx.appcompat.widget.ThemeUtils: int[] EMPTY_STATE_SET>;

        $r2[3] = $r4;

        $r3[3] = $i0;

        $r5 = new android.content.res.ColorStateList;

        specialinvoke $r5.<android.content.res.ColorStateList: void <init>(int[][],int[])>($r2, $r3);

        return $r5;
    }

    private static long createCacheKey(android.util.TypedValue)
    {
        android.util.TypedValue $r0;
        int $i0;
        long $l1, $l2;

        $r0 := @parameter0: android.util.TypedValue;

        $i0 = $r0.<android.util.TypedValue: int assetCookie>;

        $l1 = (long) $i0;

        $l1 = $l1 << 32;

        $i0 = $r0.<android.util.TypedValue: int data>;

        $l2 = (long) $i0;

        $l1 = $l1 | $l2;

        return $l1;
    }

    private android.content.res.ColorStateList createColoredButtonColorStateList(android.content.Context)
    {
        androidx.appcompat.widget.AppCompatDrawableManager $r0;
        android.content.Context $r1;
        int $i0;
        android.content.res.ColorStateList $r2;

        $r0 := @this: androidx.appcompat.widget.AppCompatDrawableManager;

        $r1 := @parameter0: android.content.Context;

        $i0 = <androidx.appcompat.R$attr: int colorAccent>;

        $i0 = staticinvoke <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>($r1, $i0);

        $r2 = specialinvoke $r0.<androidx.appcompat.widget.AppCompatDrawableManager: android.content.res.ColorStateList createButtonColorStateList(android.content.Context,int)>($r1, $i0);

        return $r2;
    }

    private android.content.res.ColorStateList createDefaultButtonColorStateList(android.content.Context)
    {
        androidx.appcompat.widget.AppCompatDrawableManager $r0;
        android.content.Context $r1;
        int $i0;
        android.content.res.ColorStateList $r2;

        $r0 := @this: androidx.appcompat.widget.AppCompatDrawableManager;

        $r1 := @parameter0: android.content.Context;

        $i0 = <androidx.appcompat.R$attr: int colorButtonNormal>;

        $i0 = staticinvoke <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>($r1, $i0);

        $r2 = specialinvoke $r0.<androidx.appcompat.widget.AppCompatDrawableManager: android.content.res.ColorStateList createButtonColorStateList(android.content.Context,int)>($r1, $i0);

        return $r2;
    }

    private android.graphics.drawable.Drawable createDrawableIfNeeded(android.content.Context, int)
    {
        androidx.appcompat.widget.AppCompatDrawableManager $r0;
        android.content.Context $r1;
        int $i0, $i2;
        android.util.TypedValue $r2, r7;
        android.content.res.Resources $r3;
        long $l1;
        android.graphics.drawable.Drawable $r4;
        java.lang.Object $r5;
        android.graphics.drawable.Drawable[] $r6;
        android.graphics.drawable.LayerDrawable r8;

        $r0 := @this: androidx.appcompat.widget.AppCompatDrawableManager;

        $r1 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $r2 = $r0.<androidx.appcompat.widget.AppCompatDrawableManager: android.util.TypedValue mTypedValue>;

        if $r2 != null goto label1;

        r7 = new android.util.TypedValue;

        specialinvoke r7.<android.util.TypedValue: void <init>()>();

        $r0.<androidx.appcompat.widget.AppCompatDrawableManager: android.util.TypedValue mTypedValue> = r7;

     label1:
        $r2 = $r0.<androidx.appcompat.widget.AppCompatDrawableManager: android.util.TypedValue mTypedValue>;

        $r3 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        virtualinvoke $r3.<android.content.res.Resources: void getValue(int,android.util.TypedValue,boolean)>($i0, $r2, 1);

        $l1 = staticinvoke <androidx.appcompat.widget.AppCompatDrawableManager: long createCacheKey(android.util.TypedValue)>($r2);

        $r4 = specialinvoke $r0.<androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable getCachedDrawable(android.content.Context,long)>($r1, $l1);

        $r5 = $r4;

        if $r4 == null goto label2;

        return $r4;

     label2:
        $i2 = <androidx.appcompat.R$drawable: int abc_cab_background_top_material>;

        if $i0 != $i2 goto label3;

        r8 = new android.graphics.drawable.LayerDrawable;

        $r6 = newarray (android.graphics.drawable.Drawable)[2];

        $i0 = <androidx.appcompat.R$drawable: int abc_cab_background_internal_bg>;

        $r4 = virtualinvoke $r0.<androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>($r1, $i0);

        $r6[0] = $r4;

        $i0 = <androidx.appcompat.R$drawable: int abc_cab_background_top_mtrl_alpha>;

        $r4 = virtualinvoke $r0.<androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>($r1, $i0);

        $r6[1] = $r4;

        specialinvoke r8.<android.graphics.drawable.LayerDrawable: void <init>(android.graphics.drawable.Drawable[])>($r6);

        $r5 = r8;

     label3:
        if $r5 == null goto label4;

        $i0 = $r2.<android.util.TypedValue: int changingConfigurations>;

        $r4 = (android.graphics.drawable.Drawable) $r5;

        virtualinvoke $r4.<android.graphics.drawable.Drawable: void setChangingConfigurations(int)>($i0);

        $r4 = (android.graphics.drawable.Drawable) $r5;

        specialinvoke $r0.<androidx.appcompat.widget.AppCompatDrawableManager: boolean addDrawableToCache(android.content.Context,long,android.graphics.drawable.Drawable)>($r1, $l1, $r4);

        $r4 = (android.graphics.drawable.Drawable) $r5;

        return $r4;

     label4:
        $r4 = (android.graphics.drawable.Drawable) $r5;

        return $r4;
    }

    private android.content.res.ColorStateList createSwitchThumbColorStateList(android.content.Context)
    {
        androidx.appcompat.widget.AppCompatDrawableManager $r0;
        android.content.Context $r1;
        int[][] $r2;
        int[] $r3, $r5;
        int $i0, $i1;
        android.content.res.ColorStateList $r4;
        boolean $z0;

        $r0 := @this: androidx.appcompat.widget.AppCompatDrawableManager;

        $r1 := @parameter0: android.content.Context;

        $r2 = newarray (int[])[3];

        $r3 = newarray (int)[3];

        $i0 = <androidx.appcompat.R$attr: int colorSwitchThumbNormal>;

        $r4 = staticinvoke <androidx.appcompat.widget.ThemeUtils: android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int)>($r1, $i0);

        if $r4 == null goto label1;

        $z0 = virtualinvoke $r4.<android.content.res.ColorStateList: boolean isStateful()>();

        if $z0 == 0 goto label1;

        $r5 = <androidx.appcompat.widget.ThemeUtils: int[] DISABLED_STATE_SET>;

        $r2[0] = $r5;

        $r5 = $r2[0];

        $i0 = virtualinvoke $r4.<android.content.res.ColorStateList: int getColorForState(int[],int)>($r5, 0);

        $r3[0] = $i0;

        $r5 = <androidx.appcompat.widget.ThemeUtils: int[] CHECKED_STATE_SET>;

        $r2[1] = $r5;

        $i1 = <androidx.appcompat.R$attr: int colorControlActivated>;

        $i1 = staticinvoke <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>($r1, $i1);

        $r3[1] = $i1;

        $r5 = <androidx.appcompat.widget.ThemeUtils: int[] EMPTY_STATE_SET>;

        $r2[2] = $r5;

        $i1 = virtualinvoke $r4.<android.content.res.ColorStateList: int getDefaultColor()>();

        $r3[2] = $i1;

        goto label2;

     label1:
        $r5 = <androidx.appcompat.widget.ThemeUtils: int[] DISABLED_STATE_SET>;

        $r2[0] = $r5;

        $i0 = <androidx.appcompat.R$attr: int colorSwitchThumbNormal>;

        $i0 = staticinvoke <androidx.appcompat.widget.ThemeUtils: int getDisabledThemeAttrColor(android.content.Context,int)>($r1, $i0);

        $r3[0] = $i0;

        $r5 = <androidx.appcompat.widget.ThemeUtils: int[] CHECKED_STATE_SET>;

        $r2[1] = $r5;

        $i1 = <androidx.appcompat.R$attr: int colorControlActivated>;

        $i1 = staticinvoke <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>($r1, $i1);

        $r3[1] = $i1;

        $r5 = <androidx.appcompat.widget.ThemeUtils: int[] EMPTY_STATE_SET>;

        $r2[2] = $r5;

        $i1 = <androidx.appcompat.R$attr: int colorSwitchThumbNormal>;

        $i1 = staticinvoke <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>($r1, $i1);

        $r3[2] = $i1;

     label2:
        $r4 = new android.content.res.ColorStateList;

        specialinvoke $r4.<android.content.res.ColorStateList: void <init>(int[][],int[])>($r2, $r3);

        return $r4;
    }

    private static android.graphics.PorterDuffColorFilter createTintFilter(android.content.res.ColorStateList, android.graphics.PorterDuff$Mode, int[])
    {
        android.content.res.ColorStateList $r0;
        android.graphics.PorterDuff$Mode $r1;
        int[] $r2;
        int $i0;
        android.graphics.PorterDuffColorFilter $r3;

        $r0 := @parameter0: android.content.res.ColorStateList;

        $r1 := @parameter1: android.graphics.PorterDuff$Mode;

        $r2 := @parameter2: int[];

        if $r0 == null goto label2;

        if $r1 != null goto label1;

        goto label2;

     label1:
        $i0 = virtualinvoke $r0.<android.content.res.ColorStateList: int getColorForState(int[],int)>($r2, 0);

        $r3 = staticinvoke <androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode)>($i0, $r1);

        return $r3;

     label2:
        return null;
    }

    public static androidx.appcompat.widget.AppCompatDrawableManager get()
    {
        androidx.appcompat.widget.AppCompatDrawableManager $r0;
        java.lang.Throwable $r1;

        entermonitor class "Landroidx/appcompat/widget/AppCompatDrawableManager;";

     label1:
        $r0 = <androidx.appcompat.widget.AppCompatDrawableManager: androidx.appcompat.widget.AppCompatDrawableManager INSTANCE>;

        if $r0 != null goto label2;

        $r0 = new androidx.appcompat.widget.AppCompatDrawableManager;

        specialinvoke $r0.<androidx.appcompat.widget.AppCompatDrawableManager: void <init>()>();

        <androidx.appcompat.widget.AppCompatDrawableManager: androidx.appcompat.widget.AppCompatDrawableManager INSTANCE> = $r0;

        $r0 = <androidx.appcompat.widget.AppCompatDrawableManager: androidx.appcompat.widget.AppCompatDrawableManager INSTANCE>;

        staticinvoke <androidx.appcompat.widget.AppCompatDrawableManager: void installDefaultInflateDelegates(androidx.appcompat.widget.AppCompatDrawableManager)>($r0);

     label2:
        $r0 = <androidx.appcompat.widget.AppCompatDrawableManager: androidx.appcompat.widget.AppCompatDrawableManager INSTANCE>;

     label3:
        exitmonitor class "Landroidx/appcompat/widget/AppCompatDrawableManager;";

        return $r0;

     label4:
        $r1 := @caughtexception;

        exitmonitor class "Landroidx/appcompat/widget/AppCompatDrawableManager;";

        throw $r1;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    private android.graphics.drawable.Drawable getCachedDrawable(android.content.Context, long)
    {
        androidx.appcompat.widget.AppCompatDrawableManager $r0;
        long $l0;
        android.content.Context $r1;
        java.util.WeakHashMap $r2;
        java.lang.Object $r3;
        androidx.collection.LongSparseArray $r4;
        java.lang.ref.WeakReference $r5;
        android.graphics.drawable.Drawable$ConstantState $r6;
        android.content.res.Resources $r7;
        android.graphics.drawable.Drawable $r8;
        java.lang.Throwable $r9;

        $r0 := @this: androidx.appcompat.widget.AppCompatDrawableManager;

        $r1 := @parameter0: android.content.Context;

        $l0 := @parameter1: long;

        entermonitor $r0;

     label1:
        $r2 = $r0.<androidx.appcompat.widget.AppCompatDrawableManager: java.util.WeakHashMap mDrawableCaches>;

        $r3 = virtualinvoke $r2.<java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (androidx.collection.LongSparseArray) $r3;

     label2:
        if $r4 != null goto label3;

        exitmonitor $r0;

        return null;

     label3:
        $r3 = virtualinvoke $r4.<androidx.collection.LongSparseArray: java.lang.Object get(long)>($l0);

        $r5 = (java.lang.ref.WeakReference) $r3;

        if $r5 == null goto label6;

        $r3 = virtualinvoke $r5.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r6 = (android.graphics.drawable.Drawable$ConstantState) $r3;

        if $r6 == null goto label5;

        $r7 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r8 = virtualinvoke $r6.<android.graphics.drawable.Drawable$ConstantState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>($r7);

     label4:
        exitmonitor $r0;

        return $r8;

     label5:
        virtualinvoke $r4.<androidx.collection.LongSparseArray: void delete(long)>($l0);

     label6:
        exitmonitor $r0;

        return null;

     label7:
        $r9 := @caughtexception;

        exitmonitor $r0;

        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    public static android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int, android.graphics.PorterDuff$Mode)
    {
        android.graphics.PorterDuff$Mode $r0;
        android.graphics.PorterDuffColorFilter $r1, $r3;
        int $i0;
        androidx.appcompat.widget.AppCompatDrawableManager$ColorFilterLruCache $r2;
        java.lang.Throwable $r4;

        $i0 := @parameter0: int;

        $r0 := @parameter1: android.graphics.PorterDuff$Mode;

        entermonitor class "Landroidx/appcompat/widget/AppCompatDrawableManager;";

     label1:
        $r2 = <androidx.appcompat.widget.AppCompatDrawableManager: androidx.appcompat.widget.AppCompatDrawableManager$ColorFilterLruCache COLOR_FILTER_CACHE>;

        $r1 = virtualinvoke $r2.<androidx.appcompat.widget.AppCompatDrawableManager$ColorFilterLruCache: android.graphics.PorterDuffColorFilter get(int,android.graphics.PorterDuff$Mode)>($i0, $r0);

        $r3 = $r1;

        if $r1 != null goto label2;

        $r1 = new android.graphics.PorterDuffColorFilter;

        specialinvoke $r1.<android.graphics.PorterDuffColorFilter: void <init>(int,android.graphics.PorterDuff$Mode)>($i0, $r0);

        $r3 = $r1;

        $r2 = <androidx.appcompat.widget.AppCompatDrawableManager: androidx.appcompat.widget.AppCompatDrawableManager$ColorFilterLruCache COLOR_FILTER_CACHE>;

        virtualinvoke $r2.<androidx.appcompat.widget.AppCompatDrawableManager$ColorFilterLruCache: android.graphics.PorterDuffColorFilter put(int,android.graphics.PorterDuff$Mode,android.graphics.PorterDuffColorFilter)>($i0, $r0, $r1);

     label2:
        exitmonitor class "Landroidx/appcompat/widget/AppCompatDrawableManager;";

        return $r3;

     label3:
        $r4 := @caughtexception;

        exitmonitor class "Landroidx/appcompat/widget/AppCompatDrawableManager;";

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private android.content.res.ColorStateList getTintListFromCache(android.content.Context, int)
    {
        androidx.appcompat.widget.AppCompatDrawableManager $r0;
        android.content.Context $r1;
        int $i0;
        java.util.WeakHashMap $r2;
        java.lang.Object $r3;
        androidx.collection.SparseArrayCompat $r4;
        android.content.res.ColorStateList $r5;

        $r0 := @this: androidx.appcompat.widget.AppCompatDrawableManager;

        $r1 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $r2 = $r0.<androidx.appcompat.widget.AppCompatDrawableManager: java.util.WeakHashMap mTintLists>;

        if $r2 == null goto label1;

        $r3 = virtualinvoke $r2.<java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (androidx.collection.SparseArrayCompat) $r3;

        if $r4 == null goto label1;

        $r3 = virtualinvoke $r4.<androidx.collection.SparseArrayCompat: java.lang.Object get(int)>($i0);

        $r5 = (android.content.res.ColorStateList) $r3;

        return $r5;

     label1:
        return null;
    }

    static android.graphics.PorterDuff$Mode getTintMode(int)
    {
        int $i0, $i1;
        android.graphics.PorterDuff$Mode r0;

        $i0 := @parameter0: int;

        $i1 = <androidx.appcompat.R$drawable: int abc_switch_thumb_material>;

        if $i0 != $i1 goto label1;

        r0 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode MULTIPLY>;

        return r0;

     label1:
        return null;
    }

    private static void installDefaultInflateDelegates(androidx.appcompat.widget.AppCompatDrawableManager)
    {
        androidx.appcompat.widget.AppCompatDrawableManager $r0;
        int $i0;
        androidx.appcompat.widget.AppCompatDrawableManager$VdcInflateDelegate $r1;
        androidx.appcompat.widget.AppCompatDrawableManager$AvdcInflateDelegate $r2;
        androidx.appcompat.widget.AppCompatDrawableManager$AsldcInflateDelegate $r3;

        $r0 := @parameter0: androidx.appcompat.widget.AppCompatDrawableManager;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 24 goto label1;

        $r1 = new androidx.appcompat.widget.AppCompatDrawableManager$VdcInflateDelegate;

        specialinvoke $r1.<androidx.appcompat.widget.AppCompatDrawableManager$VdcInflateDelegate: void <init>()>();

        specialinvoke $r0.<androidx.appcompat.widget.AppCompatDrawableManager: void addDelegate(java.lang.String,androidx.appcompat.widget.AppCompatDrawableManager$InflateDelegate)>("vector", $r1);

        $r2 = new androidx.appcompat.widget.AppCompatDrawableManager$AvdcInflateDelegate;

        specialinvoke $r2.<androidx.appcompat.widget.AppCompatDrawableManager$AvdcInflateDelegate: void <init>()>();

        specialinvoke $r0.<androidx.appcompat.widget.AppCompatDrawableManager: void addDelegate(java.lang.String,androidx.appcompat.widget.AppCompatDrawableManager$InflateDelegate)>("animated-vector", $r2);

        $r3 = new androidx.appcompat.widget.AppCompatDrawableManager$AsldcInflateDelegate;

        specialinvoke $r3.<androidx.appcompat.widget.AppCompatDrawableManager$AsldcInflateDelegate: void <init>()>();

        specialinvoke $r0.<androidx.appcompat.widget.AppCompatDrawableManager: void addDelegate(java.lang.String,androidx.appcompat.widget.AppCompatDrawableManager$InflateDelegate)>("animated-selector", $r3);

     label1:
        return;
    }

    private static boolean isVectorDrawable(android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.Drawable $r0;
        java.lang.String $r1, $r3;
        boolean $z0;
        java.lang.Class $r2;

        $r0 := @parameter0: android.graphics.drawable.Drawable;

        $z0 = $r0 instanceof androidx.vectordrawable.graphics.drawable.VectorDrawableCompat;

        if $z0 != 0 goto label2;

        $r2 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r1 = "android.graphics.drawable.VectorDrawable";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    private android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context, int)
    {
        androidx.appcompat.widget.AppCompatDrawableManager $r0;
        android.content.Context $r1;
        int $i0, $i2;
        java.lang.String $r2, $r6;
        androidx.collection.ArrayMap $r3;
        boolean $z0;
        androidx.collection.SparseArrayCompat $r4;
        java.lang.Object $r5;
        android.util.TypedValue $r7;
        android.content.res.Resources $r8;
        long $l1;
        android.graphics.drawable.Drawable $r9, $r10;
        java.lang.CharSequence $r11;
        android.content.res.XmlResourceParser $r12;
        android.util.AttributeSet $r13;
        androidx.appcompat.widget.AppCompatDrawableManager$InflateDelegate $r14;
        android.content.res.Resources$Theme $r15;
        org.xmlpull.v1.XmlPullParserException $r16;
        java.lang.Exception $r17;

        $r0 := @this: androidx.appcompat.widget.AppCompatDrawableManager;

        $r1 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $r3 = $r0.<androidx.appcompat.widget.AppCompatDrawableManager: androidx.collection.ArrayMap mDelegates>;

        if $r3 == null goto label21;

        $z0 = virtualinvoke $r3.<androidx.collection.ArrayMap: boolean isEmpty()>();

        if $z0 != 0 goto label21;

        $r4 = $r0.<androidx.appcompat.widget.AppCompatDrawableManager: androidx.collection.SparseArrayCompat mKnownDrawableIdTags>;

        $r2 = "appcompat_skip_skip";

        if $r4 == null goto label02;

        $r5 = virtualinvoke $r4.<androidx.collection.SparseArrayCompat: java.lang.Object get(int)>($i0);

        $r6 = (java.lang.String) $r5;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 != 0 goto label01;

        if $r6 == null goto label03;

        $r3 = $r0.<androidx.appcompat.widget.AppCompatDrawableManager: androidx.collection.ArrayMap mDelegates>;

        $r5 = virtualinvoke $r3.<androidx.collection.ArrayMap: java.lang.Object get(java.lang.Object)>($r6);

        if $r5 != null goto label03;

        return null;

     label01:
        return null;

     label02:
        $r4 = new androidx.collection.SparseArrayCompat;

        specialinvoke $r4.<androidx.collection.SparseArrayCompat: void <init>()>();

        $r0.<androidx.appcompat.widget.AppCompatDrawableManager: androidx.collection.SparseArrayCompat mKnownDrawableIdTags> = $r4;

     label03:
        $r7 = $r0.<androidx.appcompat.widget.AppCompatDrawableManager: android.util.TypedValue mTypedValue>;

        if $r7 != null goto label04;

        $r7 = new android.util.TypedValue;

        specialinvoke $r7.<android.util.TypedValue: void <init>()>();

        $r0.<androidx.appcompat.widget.AppCompatDrawableManager: android.util.TypedValue mTypedValue> = $r7;

     label04:
        $r7 = $r0.<androidx.appcompat.widget.AppCompatDrawableManager: android.util.TypedValue mTypedValue>;

        $r8 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        virtualinvoke $r8.<android.content.res.Resources: void getValue(int,android.util.TypedValue,boolean)>($i0, $r7, 1);

        $l1 = staticinvoke <androidx.appcompat.widget.AppCompatDrawableManager: long createCacheKey(android.util.TypedValue)>($r7);

        $r9 = specialinvoke $r0.<androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable getCachedDrawable(android.content.Context,long)>($r1, $l1);

        $r10 = $r9;

        if $r9 == null goto label05;

        return $r9;

     label05:
        $r11 = $r7.<android.util.TypedValue: java.lang.CharSequence string>;

        if $r11 == null goto label20;

        $r11 = $r7.<android.util.TypedValue: java.lang.CharSequence string>;

        $r2 = interfaceinvoke $r11.<java.lang.CharSequence: java.lang.String toString()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean endsWith(java.lang.String)>(".xml");

        if $z0 == 0 goto label20;

     label06:
        $r12 = virtualinvoke $r8.<android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>($i0);

        $r13 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>($r12);

     label07:
        $i2 = interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: int next()>();

     label08:
        if $i2 == 2 goto label09;

        if $i2 == 1 goto label09;

        goto label07;

     label09:
        if $i2 != 2 goto label17;

     label10:
        $r2 = interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r4 = $r0.<androidx.appcompat.widget.AppCompatDrawableManager: androidx.collection.SparseArrayCompat mKnownDrawableIdTags>;

        virtualinvoke $r4.<androidx.collection.SparseArrayCompat: void append(int,java.lang.Object)>($i0, $r2);

        $r3 = $r0.<androidx.appcompat.widget.AppCompatDrawableManager: androidx.collection.ArrayMap mDelegates>;

        $r5 = virtualinvoke $r3.<androidx.collection.ArrayMap: java.lang.Object get(java.lang.Object)>($r2);

        $r14 = (androidx.appcompat.widget.AppCompatDrawableManager$InflateDelegate) $r5;

     label11:
        if $r14 == null goto label14;

     label12:
        $r15 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $r9 = interfaceinvoke $r14.<androidx.appcompat.widget.AppCompatDrawableManager$InflateDelegate: android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>($r1, $r12, $r13, $r15);

     label13:
        $r10 = $r9;

     label14:
        if $r10 == null goto label20;

     label15:
        $i2 = $r7.<android.util.TypedValue: int changingConfigurations>;

        virtualinvoke $r10.<android.graphics.drawable.Drawable: void setChangingConfigurations(int)>($i2);

        specialinvoke $r0.<androidx.appcompat.widget.AppCompatDrawableManager: boolean addDrawableToCache(android.content.Context,long,android.graphics.drawable.Drawable)>($r1, $l1, $r10);

     label16:
        goto label20;

     label17:
        $r16 = new org.xmlpull.v1.XmlPullParserException;

     label18:
        specialinvoke $r16.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("No start tag found");

        throw $r16;

     label19:
        $r17 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("AppCompatDrawableManag", "Exception while inflating drawable", $r17);

     label20:
        if $r10 != null goto label22;

        $r4 = $r0.<androidx.appcompat.widget.AppCompatDrawableManager: androidx.collection.SparseArrayCompat mKnownDrawableIdTags>;

        virtualinvoke $r4.<androidx.collection.SparseArrayCompat: void append(int,java.lang.Object)>($i0, "appcompat_skip_skip");

        return $r10;

     label21:
        return null;

     label22:
        return $r10;

        catch java.lang.Exception from label06 to label08 with label19;
        catch java.lang.Exception from label10 to label11 with label19;
        catch java.lang.Exception from label12 to label13 with label19;
        catch java.lang.Exception from label15 to label16 with label19;
        catch java.lang.Exception from label18 to label19 with label19;
    }

    private void removeDelegate(java.lang.String, androidx.appcompat.widget.AppCompatDrawableManager$InflateDelegate)
    {
        androidx.appcompat.widget.AppCompatDrawableManager $r0;
        java.lang.String $r1;
        androidx.appcompat.widget.AppCompatDrawableManager$InflateDelegate $r2;
        java.lang.Object $r3;
        androidx.collection.ArrayMap $r4;

        $r0 := @this: androidx.appcompat.widget.AppCompatDrawableManager;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: androidx.appcompat.widget.AppCompatDrawableManager$InflateDelegate;

        $r4 = $r0.<androidx.appcompat.widget.AppCompatDrawableManager: androidx.collection.ArrayMap mDelegates>;

        if $r4 == null goto label1;

        $r3 = virtualinvoke $r4.<androidx.collection.ArrayMap: java.lang.Object get(java.lang.Object)>($r1);

        if $r3 != $r2 goto label1;

        $r4 = $r0.<androidx.appcompat.widget.AppCompatDrawableManager: androidx.collection.ArrayMap mDelegates>;

        virtualinvoke $r4.<androidx.collection.ArrayMap: java.lang.Object remove(java.lang.Object)>($r1);

     label1:
        return;
    }

    private static void setPorterDuffColorFilter(android.graphics.drawable.Drawable, int, android.graphics.PorterDuff$Mode)
    {
        int $i0;
        android.graphics.PorterDuff$Mode $r0;
        android.graphics.drawable.Drawable $r1;
        boolean $z0;
        android.graphics.PorterDuffColorFilter $r2;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        $i0 := @parameter1: int;

        $r0 := @parameter2: android.graphics.PorterDuff$Mode;

        $z0 = staticinvoke <androidx.appcompat.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)>($r1);

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke $r1.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

     label1:
        if $r0 != null goto label2;

        $r0 = <androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode DEFAULT_MODE>;

     label2:
        $r2 = staticinvoke <androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode)>($i0, $r0);

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>($r2);

        return;
    }

    private android.graphics.drawable.Drawable tintDrawable(android.content.Context, int, boolean, android.graphics.drawable.Drawable)
    {
        androidx.appcompat.widget.AppCompatDrawableManager $r0;
        android.content.Context $r1;
        int $i0, $i1;
        boolean $z0, $z1;
        android.graphics.drawable.Drawable $r2, $r6;
        android.content.res.ColorStateList $r3;
        android.graphics.PorterDuff$Mode $r4;
        android.graphics.drawable.LayerDrawable $r5;

        $r0 := @this: androidx.appcompat.widget.AppCompatDrawableManager;

        $r1 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $z0 := @parameter2: boolean;

        $r2 := @parameter3: android.graphics.drawable.Drawable;

        $r3 = virtualinvoke $r0.<androidx.appcompat.widget.AppCompatDrawableManager: android.content.res.ColorStateList getTintList(android.content.Context,int)>($r1, $i0);

        if $r3 == null goto label3;

        $z0 = staticinvoke <androidx.appcompat.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)>($r2);

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke $r2.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

     label1:
        $r2 = staticinvoke <androidx.core.graphics.drawable.DrawableCompat: android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable)>($r2);

        staticinvoke <androidx.core.graphics.drawable.DrawableCompat: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)>($r2, $r3);

        $r4 = staticinvoke <androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode getTintMode(int)>($i0);

        if $r4 == null goto label2;

        staticinvoke <androidx.core.graphics.drawable.DrawableCompat: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)>($r2, $r4);

     label2:
        return $r2;

     label3:
        $i1 = <androidx.appcompat.R$drawable: int abc_seekbar_track_material>;

        if $i0 != $i1 goto label4;

        $r5 = (android.graphics.drawable.LayerDrawable) $r2;

        $r6 = virtualinvoke $r5.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable findDrawableByLayerId(int)>(16908288);

        $i0 = <androidx.appcompat.R$attr: int colorControlNormal>;

        $i0 = staticinvoke <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>($r1, $i0);

        $r4 = <androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode DEFAULT_MODE>;

        staticinvoke <androidx.appcompat.widget.AppCompatDrawableManager: void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode)>($r6, $i0, $r4);

        $r6 = virtualinvoke $r5.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable findDrawableByLayerId(int)>(16908303);

        $i0 = <androidx.appcompat.R$attr: int colorControlNormal>;

        $i0 = staticinvoke <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>($r1, $i0);

        $r4 = <androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode DEFAULT_MODE>;

        staticinvoke <androidx.appcompat.widget.AppCompatDrawableManager: void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode)>($r6, $i0, $r4);

        $r6 = virtualinvoke $r5.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable findDrawableByLayerId(int)>(16908301);

        $i0 = <androidx.appcompat.R$attr: int colorControlActivated>;

        $i0 = staticinvoke <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>($r1, $i0);

        $r4 = <androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode DEFAULT_MODE>;

        staticinvoke <androidx.appcompat.widget.AppCompatDrawableManager: void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode)>($r6, $i0, $r4);

        return $r2;

     label4:
        $i1 = <androidx.appcompat.R$drawable: int abc_ratingbar_material>;

        if $i0 == $i1 goto label6;

        $i1 = <androidx.appcompat.R$drawable: int abc_ratingbar_indicator_material>;

        if $i0 == $i1 goto label6;

        $i1 = <androidx.appcompat.R$drawable: int abc_ratingbar_small_material>;

        if $i0 != $i1 goto label5;

        goto label6;

     label5:
        $z1 = staticinvoke <androidx.appcompat.widget.AppCompatDrawableManager: boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)>($r1, $i0, $r2);

        if $z1 != 0 goto label7;

        if $z0 == 0 goto label7;

        return null;

     label6:
        $r5 = (android.graphics.drawable.LayerDrawable) $r2;

        $r6 = virtualinvoke $r5.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable findDrawableByLayerId(int)>(16908288);

        $i0 = <androidx.appcompat.R$attr: int colorControlNormal>;

        $i0 = staticinvoke <androidx.appcompat.widget.ThemeUtils: int getDisabledThemeAttrColor(android.content.Context,int)>($r1, $i0);

        $r4 = <androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode DEFAULT_MODE>;

        staticinvoke <androidx.appcompat.widget.AppCompatDrawableManager: void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode)>($r6, $i0, $r4);

        $r6 = virtualinvoke $r5.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable findDrawableByLayerId(int)>(16908303);

        $i0 = <androidx.appcompat.R$attr: int colorControlActivated>;

        $i0 = staticinvoke <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>($r1, $i0);

        $r4 = <androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode DEFAULT_MODE>;

        staticinvoke <androidx.appcompat.widget.AppCompatDrawableManager: void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode)>($r6, $i0, $r4);

        $r6 = virtualinvoke $r5.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable findDrawableByLayerId(int)>(16908301);

        $i0 = <androidx.appcompat.R$attr: int colorControlActivated>;

        $i0 = staticinvoke <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>($r1, $i0);

        $r4 = <androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode DEFAULT_MODE>;

        staticinvoke <androidx.appcompat.widget.AppCompatDrawableManager: void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode)>($r6, $i0, $r4);

     label7:
        return $r2;
    }

    static void tintDrawable(android.graphics.drawable.Drawable, androidx.appcompat.widget.TintInfo, int[])
    {
        android.graphics.drawable.Drawable $r0, $r3;
        androidx.appcompat.widget.TintInfo $r1;
        int[] $r2;
        boolean $z0;
        android.content.res.ColorStateList $r4;
        android.graphics.PorterDuff$Mode $r5;
        android.graphics.PorterDuffColorFilter $r6;
        int $i0;

        $r0 := @parameter0: android.graphics.drawable.Drawable;

        $r1 := @parameter1: androidx.appcompat.widget.TintInfo;

        $r2 := @parameter2: int[];

        $z0 = staticinvoke <androidx.appcompat.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)>($r0);

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke $r0.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        if $r3 == $r0 goto label1;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("AppCompatDrawableManag", "Mutated drawable is not the same instance as the input.");

        return;

     label1:
        $z0 = $r1.<androidx.appcompat.widget.TintInfo: boolean mHasTintList>;

        if $z0 != 0 goto label3;

        $z0 = $r1.<androidx.appcompat.widget.TintInfo: boolean mHasTintMode>;

        if $z0 == 0 goto label2;

        goto label3;

     label2:
        virtualinvoke $r0.<android.graphics.drawable.Drawable: void clearColorFilter()>();

        goto label8;

     label3:
        $z0 = $r1.<androidx.appcompat.widget.TintInfo: boolean mHasTintList>;

        if $z0 == 0 goto label4;

        $r4 = $r1.<androidx.appcompat.widget.TintInfo: android.content.res.ColorStateList mTintList>;

        goto label5;

     label4:
        $r4 = null;

     label5:
        $z0 = $r1.<androidx.appcompat.widget.TintInfo: boolean mHasTintMode>;

        if $z0 == 0 goto label6;

        $r5 = $r1.<androidx.appcompat.widget.TintInfo: android.graphics.PorterDuff$Mode mTintMode>;

        goto label7;

     label6:
        $r5 = <androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode DEFAULT_MODE>;

     label7:
        $r6 = staticinvoke <androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuffColorFilter createTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,int[])>($r4, $r5, $r2);

        virtualinvoke $r0.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>($r6);

     label8:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 > 23 goto label9;

        virtualinvoke $r0.<android.graphics.drawable.Drawable: void invalidateSelf()>();

     label9:
        return;
    }

    static boolean tintDrawableUsingColorFilter(android.content.Context, int, android.graphics.drawable.Drawable)
    {
        android.content.Context $r0;
        int $i0, $i1, $i2, $i3;
        android.graphics.drawable.Drawable $r1;
        android.graphics.PorterDuff$Mode $r2;
        boolean $z0, $z1;
        int[] $r3;
        android.graphics.PorterDuffColorFilter $r4;

        $r0 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $r1 := @parameter2: android.graphics.drawable.Drawable;

        $r2 = <androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode DEFAULT_MODE>;

        $z0 = 0;

        $i1 = 0;

        $i2 = -1;

        $r3 = <androidx.appcompat.widget.AppCompatDrawableManager: int[] COLORFILTER_TINT_COLOR_CONTROL_NORMAL>;

        $z1 = staticinvoke <androidx.appcompat.widget.AppCompatDrawableManager: boolean arrayContains(int[],int)>($r3, $i0);

        if $z1 == 0 goto label1;

        $i1 = <androidx.appcompat.R$attr: int colorControlNormal>;

        $z0 = 1;

        goto label5;

     label1:
        $r3 = <androidx.appcompat.widget.AppCompatDrawableManager: int[] COLORFILTER_COLOR_CONTROL_ACTIVATED>;

        $z1 = staticinvoke <androidx.appcompat.widget.AppCompatDrawableManager: boolean arrayContains(int[],int)>($r3, $i0);

        if $z1 == 0 goto label2;

        $i1 = <androidx.appcompat.R$attr: int colorControlActivated>;

        $z0 = 1;

        goto label5;

     label2:
        $r3 = <androidx.appcompat.widget.AppCompatDrawableManager: int[] COLORFILTER_COLOR_BACKGROUND_MULTIPLY>;

        $z1 = staticinvoke <androidx.appcompat.widget.AppCompatDrawableManager: boolean arrayContains(int[],int)>($r3, $i0);

        if $z1 == 0 goto label3;

        $i1 = 16842801;

        $z0 = 1;

        $r2 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode MULTIPLY>;

        goto label5;

     label3:
        $i3 = <androidx.appcompat.R$drawable: int abc_list_divider_mtrl_alpha>;

        if $i0 != $i3 goto label4;

        $i1 = 16842800;

        $z0 = 1;

        $i2 = staticinvoke <java.lang.Math: int round(float)>(40.8F);

        goto label5;

     label4:
        $i3 = <androidx.appcompat.R$drawable: int abc_dialog_material_background>;

        if $i0 != $i3 goto label5;

        $i1 = 16842801;

        $z0 = 1;

     label5:
        if $z0 == 0 goto label8;

        $z0 = staticinvoke <androidx.appcompat.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)>($r1);

        if $z0 == 0 goto label6;

        $r1 = virtualinvoke $r1.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

     label6:
        $i0 = staticinvoke <androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)>($r0, $i1);

        $r4 = staticinvoke <androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode)>($i0, $r2);

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>($r4);

        if $i2 == -1 goto label7;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void setAlpha(int)>($i2);

     label7:
        return 1;

     label8:
        return 0;
    }

    public android.graphics.drawable.Drawable getDrawable(android.content.Context, int)
    {
        androidx.appcompat.widget.AppCompatDrawableManager $r0;
        int $i0;
        android.graphics.drawable.Drawable $r1;
        android.content.Context $r2;
        java.lang.Throwable $r3;

        $r0 := @this: androidx.appcompat.widget.AppCompatDrawableManager;

        $r2 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        entermonitor $r0;

     label1:
        $r1 = virtualinvoke $r0.<androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean)>($r2, $i0, 0);

     label2:
        exitmonitor $r0;

        return $r1;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    android.graphics.drawable.Drawable getDrawable(android.content.Context, int, boolean)
    {
        androidx.appcompat.widget.AppCompatDrawableManager $r0;
        int $i0;
        boolean $z0;
        android.content.Context $r1;
        android.graphics.drawable.Drawable $r2, $r3;
        java.lang.Throwable $r4;

        $r0 := @this: androidx.appcompat.widget.AppCompatDrawableManager;

        $r1 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $z0 := @parameter2: boolean;

        entermonitor $r0;

     label1:
        specialinvoke $r0.<androidx.appcompat.widget.AppCompatDrawableManager: void checkVectorDrawableSetup(android.content.Context)>($r1);

        $r2 = specialinvoke $r0.<androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int)>($r1, $i0);

        $r3 = $r2;

        if $r2 != null goto label2;

        $r3 = specialinvoke $r0.<androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable createDrawableIfNeeded(android.content.Context,int)>($r1, $i0);

     label2:
        if $r3 != null goto label3;

        $r3 = staticinvoke <androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>($r1, $i0);

     label3:
        if $r3 == null goto label4;

        $r3 = specialinvoke $r0.<androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable)>($r1, $i0, $z0, $r3);

     label4:
        if $r3 == null goto label5;

        staticinvoke <androidx.appcompat.widget.DrawableUtils: void fixDrawable(android.graphics.drawable.Drawable)>($r3);

     label5:
        exitmonitor $r0;

        return $r3;

     label6:
        $r4 := @caughtexception;

        exitmonitor $r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label5 with label6;
    }

    android.content.res.ColorStateList getTintList(android.content.Context, int)
    {
        androidx.appcompat.widget.AppCompatDrawableManager $r0;
        int $i0, $i1;
        android.content.Context $r1;
        android.content.res.ColorStateList $r2, $r3;
        int[] $r4;
        boolean $z0;
        java.lang.Throwable $r5;

        $r0 := @this: androidx.appcompat.widget.AppCompatDrawableManager;

        $r1 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        entermonitor $r0;

     label01:
        $r2 = specialinvoke $r0.<androidx.appcompat.widget.AppCompatDrawableManager: android.content.res.ColorStateList getTintListFromCache(android.content.Context,int)>($r1, $i0);

        $r3 = $r2;

        if $r2 != null goto label14;

        $i1 = <androidx.appcompat.R$drawable: int abc_edit_text_material>;

        if $i0 != $i1 goto label02;

        $i1 = <androidx.appcompat.R$color: int abc_tint_edittext>;

        $r3 = staticinvoke <androidx.appcompat.content.res.AppCompatResources: android.content.res.ColorStateList getColorStateList(android.content.Context,int)>($r1, $i1);

        goto label13;

     label02:
        $i1 = <androidx.appcompat.R$drawable: int abc_switch_track_mtrl_alpha>;

        if $i0 != $i1 goto label03;

        $i1 = <androidx.appcompat.R$color: int abc_tint_switch_track>;

        $r3 = staticinvoke <androidx.appcompat.content.res.AppCompatResources: android.content.res.ColorStateList getColorStateList(android.content.Context,int)>($r1, $i1);

        goto label13;

     label03:
        $i1 = <androidx.appcompat.R$drawable: int abc_switch_thumb_material>;

        if $i0 != $i1 goto label04;

        $r3 = specialinvoke $r0.<androidx.appcompat.widget.AppCompatDrawableManager: android.content.res.ColorStateList createSwitchThumbColorStateList(android.content.Context)>($r1);

        goto label13;

     label04:
        $i1 = <androidx.appcompat.R$drawable: int abc_btn_default_mtrl_shape>;

        if $i0 != $i1 goto label05;

        $r3 = specialinvoke $r0.<androidx.appcompat.widget.AppCompatDrawableManager: android.content.res.ColorStateList createDefaultButtonColorStateList(android.content.Context)>($r1);

        goto label13;

     label05:
        $i1 = <androidx.appcompat.R$drawable: int abc_btn_borderless_material>;

        if $i0 != $i1 goto label06;

        $r3 = specialinvoke $r0.<androidx.appcompat.widget.AppCompatDrawableManager: android.content.res.ColorStateList createBorderlessButtonColorStateList(android.content.Context)>($r1);

        goto label13;

     label06:
        $i1 = <androidx.appcompat.R$drawable: int abc_btn_colored_material>;

        if $i0 != $i1 goto label07;

        $r3 = specialinvoke $r0.<androidx.appcompat.widget.AppCompatDrawableManager: android.content.res.ColorStateList createColoredButtonColorStateList(android.content.Context)>($r1);

        goto label13;

     label07:
        $i1 = <androidx.appcompat.R$drawable: int abc_spinner_mtrl_am_alpha>;

        if $i0 == $i1 goto label12;

        $i1 = <androidx.appcompat.R$drawable: int abc_spinner_textfield_background_material>;

        if $i0 != $i1 goto label08;

        goto label12;

     label08:
        $r4 = <androidx.appcompat.widget.AppCompatDrawableManager: int[] TINT_COLOR_CONTROL_NORMAL>;

        $z0 = staticinvoke <androidx.appcompat.widget.AppCompatDrawableManager: boolean arrayContains(int[],int)>($r4, $i0);

        if $z0 == 0 goto label09;

        $i1 = <androidx.appcompat.R$attr: int colorControlNormal>;

        $r3 = staticinvoke <androidx.appcompat.widget.ThemeUtils: android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int)>($r1, $i1);

        goto label13;

     label09:
        $r4 = <androidx.appcompat.widget.AppCompatDrawableManager: int[] TINT_COLOR_CONTROL_STATE_LIST>;

        $z0 = staticinvoke <androidx.appcompat.widget.AppCompatDrawableManager: boolean arrayContains(int[],int)>($r4, $i0);

        if $z0 == 0 goto label10;

        $i1 = <androidx.appcompat.R$color: int abc_tint_default>;

        $r3 = staticinvoke <androidx.appcompat.content.res.AppCompatResources: android.content.res.ColorStateList getColorStateList(android.content.Context,int)>($r1, $i1);

        goto label13;

     label10:
        $r4 = <androidx.appcompat.widget.AppCompatDrawableManager: int[] TINT_CHECKABLE_BUTTON_LIST>;

        $z0 = staticinvoke <androidx.appcompat.widget.AppCompatDrawableManager: boolean arrayContains(int[],int)>($r4, $i0);

        if $z0 == 0 goto label11;

        $i1 = <androidx.appcompat.R$color: int abc_tint_btn_checkable>;

        $r3 = staticinvoke <androidx.appcompat.content.res.AppCompatResources: android.content.res.ColorStateList getColorStateList(android.content.Context,int)>($r1, $i1);

        goto label13;

     label11:
        $i1 = <androidx.appcompat.R$drawable: int abc_seekbar_thumb_material>;

        if $i0 != $i1 goto label13;

        $i1 = <androidx.appcompat.R$color: int abc_tint_seek_thumb>;

        $r3 = staticinvoke <androidx.appcompat.content.res.AppCompatResources: android.content.res.ColorStateList getColorStateList(android.content.Context,int)>($r1, $i1);

        goto label13;

     label12:
        $i1 = <androidx.appcompat.R$color: int abc_tint_spinner>;

        $r3 = staticinvoke <androidx.appcompat.content.res.AppCompatResources: android.content.res.ColorStateList getColorStateList(android.content.Context,int)>($r1, $i1);

     label13:
        if $r3 == null goto label14;

        specialinvoke $r0.<androidx.appcompat.widget.AppCompatDrawableManager: void addTintListToCache(android.content.Context,int,android.content.res.ColorStateList)>($r1, $i0, $r3);

     label14:
        exitmonitor $r0;

        return $r3;

     label15:
        $r5 := @caughtexception;

        exitmonitor $r0;

        throw $r5;

        catch java.lang.Throwable from label01 to label14 with label15;
    }

    public void onConfigurationChanged(android.content.Context)
    {
        androidx.appcompat.widget.AppCompatDrawableManager $r0;
        java.lang.Object $r1;
        android.content.Context $r2;
        java.util.WeakHashMap $r3;
        androidx.collection.LongSparseArray $r4;
        java.lang.Throwable $r5;

        $r0 := @this: androidx.appcompat.widget.AppCompatDrawableManager;

        $r2 := @parameter0: android.content.Context;

        entermonitor $r0;

     label1:
        $r3 = $r0.<androidx.appcompat.widget.AppCompatDrawableManager: java.util.WeakHashMap mDrawableCaches>;

        $r1 = virtualinvoke $r3.<java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>($r2);

        $r4 = (androidx.collection.LongSparseArray) $r1;

        if $r4 == null goto label2;

        virtualinvoke $r4.<androidx.collection.LongSparseArray: void clear()>();

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    android.graphics.drawable.Drawable onDrawableLoadedFromResources(android.content.Context, androidx.appcompat.widget.VectorEnabledTintResources, int)
    {
        androidx.appcompat.widget.AppCompatDrawableManager $r0;
        androidx.appcompat.widget.VectorEnabledTintResources $r1;
        int $i0;
        android.content.Context $r2;
        android.graphics.drawable.Drawable $r3, $r4;
        java.lang.Throwable $r5;

        $r0 := @this: androidx.appcompat.widget.AppCompatDrawableManager;

        $r2 := @parameter0: android.content.Context;

        $r1 := @parameter1: androidx.appcompat.widget.VectorEnabledTintResources;

        $i0 := @parameter2: int;

        entermonitor $r0;

     label1:
        $r3 = specialinvoke $r0.<androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int)>($r2, $i0);

        $r4 = $r3;

        if $r3 != null goto label2;

        $r4 = virtualinvoke $r1.<androidx.appcompat.widget.VectorEnabledTintResources: android.graphics.drawable.Drawable superGetDrawable(int)>($i0);

     label2:
        if $r4 == null goto label4;

        $r3 = specialinvoke $r0.<androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable)>($r2, $i0, 0, $r4);

     label3:
        exitmonitor $r0;

        return $r3;

     label4:
        exitmonitor $r0;

        return null;

     label5:
        $r5 := @caughtexception;

        exitmonitor $r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label3 with label5;
    }
}
