final class androidx.core.content.res.GradientColorInflaterCompat extends java.lang.Object
{
    private static final int TILE_MODE_CLAMP;
    private static final int TILE_MODE_MIRROR;
    private static final int TILE_MODE_REPEAT;

    private void <init>()
    {
        androidx.core.content.res.GradientColorInflaterCompat $r0;

        $r0 := @this: androidx.core.content.res.GradientColorInflaterCompat;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static androidx.core.content.res.GradientColorInflaterCompat$ColorStops checkColors(androidx.core.content.res.GradientColorInflaterCompat$ColorStops, int, int, boolean, int)
    {
        androidx.core.content.res.GradientColorInflaterCompat$ColorStops $r0;
        int $i0, $i1, $i2;
        boolean $z0;

        $r0 := @parameter0: androidx.core.content.res.GradientColorInflaterCompat$ColorStops;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 := @parameter3: boolean;

        $i2 := @parameter4: int;

        if $r0 == null goto label1;

        return $r0;

     label1:
        if $z0 == 0 goto label2;

        $r0 = new androidx.core.content.res.GradientColorInflaterCompat$ColorStops;

        specialinvoke $r0.<androidx.core.content.res.GradientColorInflaterCompat$ColorStops: void <init>(int,int,int)>($i0, $i2, $i1);

        return $r0;

     label2:
        $r0 = new androidx.core.content.res.GradientColorInflaterCompat$ColorStops;

        specialinvoke $r0.<androidx.core.content.res.GradientColorInflaterCompat$ColorStops: void <init>(int,int)>($i0, $i1);

        return $r0;
    }

    static android.graphics.Shader createFromXml(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.content.res.Resources$Theme) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.res.Resources $r0;
        org.xmlpull.v1.XmlPullParser $r1;
        android.content.res.Resources$Theme $r2;
        android.util.AttributeSet $r3;
        int $i0;
        android.graphics.Shader $r4;
        org.xmlpull.v1.XmlPullParserException $r5;

        $r0 := @parameter0: android.content.res.Resources;

        $r1 := @parameter1: org.xmlpull.v1.XmlPullParser;

        $r2 := @parameter2: android.content.res.Resources$Theme;

        $r3 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>($r1);

     label1:
        $i0 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i0 == 2 goto label2;

        if $i0 == 1 goto label2;

        goto label1;

     label2:
        if $i0 != 2 goto label3;

        $r4 = staticinvoke <androidx.core.content.res.GradientColorInflaterCompat: android.graphics.Shader createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>($r0, $r1, $r3, $r2);

        return $r4;

     label3:
        $r5 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke $r5.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("No start tag found");

        throw $r5;
    }

    static android.graphics.Shader createFromXmlInner(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        android.content.res.Resources $r0;
        org.xmlpull.v1.XmlPullParser $r1;
        android.util.AttributeSet $r2;
        android.content.res.Resources$Theme $r3;
        java.lang.String $r4, $r15;
        boolean $z0;
        int[] $r5;
        android.content.res.TypedArray $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6;
        androidx.core.content.res.GradientColorInflaterCompat$ColorStops $r7;
        android.graphics.LinearGradient $r8;
        float[] $r9;
        android.graphics.Shader$TileMode $r10;
        android.graphics.SweepGradient $r11;
        byte $b6;
        android.graphics.RadialGradient $r12;
        org.xmlpull.v1.XmlPullParserException $r13;
        java.lang.StringBuilder $r14;

        $r0 := @parameter0: android.content.res.Resources;

        $r1 := @parameter1: org.xmlpull.v1.XmlPullParser;

        $r2 := @parameter2: android.util.AttributeSet;

        $r3 := @parameter3: android.content.res.Resources$Theme;

        $r4 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("gradient");

        if $z0 == 0 goto label4;

        $r5 = <androidx.core.R$styleable: int[] GradientColor>;

        $r6 = staticinvoke <androidx.core.content.res.TypedArrayUtils: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>($r0, $r3, $r2, $r5);

        $i0 = <androidx.core.R$styleable: int GradientColor_android_startX>;

        $f0 = staticinvoke <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>($r6, $r1, "startX", $i0, 0.0F);

        $i0 = <androidx.core.R$styleable: int GradientColor_android_startY>;

        $f1 = staticinvoke <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>($r6, $r1, "startY", $i0, 0.0F);

        $i0 = <androidx.core.R$styleable: int GradientColor_android_endX>;

        $f2 = staticinvoke <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>($r6, $r1, "endX", $i0, 0.0F);

        $i0 = <androidx.core.R$styleable: int GradientColor_android_endY>;

        $f3 = staticinvoke <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>($r6, $r1, "endY", $i0, 0.0F);

        $i0 = <androidx.core.R$styleable: int GradientColor_android_centerX>;

        $f4 = staticinvoke <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>($r6, $r1, "centerX", $i0, 0.0F);

        $i0 = <androidx.core.R$styleable: int GradientColor_android_centerY>;

        $f5 = staticinvoke <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>($r6, $r1, "centerY", $i0, 0.0F);

        $i0 = <androidx.core.R$styleable: int GradientColor_android_type>;

        $i0 = staticinvoke <androidx.core.content.res.TypedArrayUtils: int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>($r6, $r1, "type", $i0, 0);

        $i1 = <androidx.core.R$styleable: int GradientColor_android_startColor>;

        $i1 = staticinvoke <androidx.core.content.res.TypedArrayUtils: int getNamedColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>($r6, $r1, "startColor", $i1, 0);

        $z0 = staticinvoke <androidx.core.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>($r1, "centerColor");

        $i2 = <androidx.core.R$styleable: int GradientColor_android_centerColor>;

        $i2 = staticinvoke <androidx.core.content.res.TypedArrayUtils: int getNamedColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>($r6, $r1, "centerColor", $i2, 0);

        $i3 = <androidx.core.R$styleable: int GradientColor_android_endColor>;

        $i3 = staticinvoke <androidx.core.content.res.TypedArrayUtils: int getNamedColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>($r6, $r1, "endColor", $i3, 0);

        $i4 = <androidx.core.R$styleable: int GradientColor_android_tileMode>;

        $i4 = staticinvoke <androidx.core.content.res.TypedArrayUtils: int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>($r6, $r1, "tileMode", $i4, 0);

        $i5 = <androidx.core.R$styleable: int GradientColor_android_gradientRadius>;

        $f6 = staticinvoke <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>($r6, $r1, "gradientRadius", $i5, 0.0F);

        virtualinvoke $r6.<android.content.res.TypedArray: void recycle()>();

        $r7 = staticinvoke <androidx.core.content.res.GradientColorInflaterCompat: androidx.core.content.res.GradientColorInflaterCompat$ColorStops inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>($r0, $r1, $r2, $r3);

        $r7 = staticinvoke <androidx.core.content.res.GradientColorInflaterCompat: androidx.core.content.res.GradientColorInflaterCompat$ColorStops checkColors(androidx.core.content.res.GradientColorInflaterCompat$ColorStops,int,int,boolean,int)>($r7, $i1, $i3, $z0, $i2);

        if $i0 == 1 goto label2;

        if $i0 == 2 goto label1;

        $r8 = new android.graphics.LinearGradient;

        $r5 = $r7.<androidx.core.content.res.GradientColorInflaterCompat$ColorStops: int[] mColors>;

        $r9 = $r7.<androidx.core.content.res.GradientColorInflaterCompat$ColorStops: float[] mOffsets>;

        $r10 = staticinvoke <androidx.core.content.res.GradientColorInflaterCompat: android.graphics.Shader$TileMode parseTileMode(int)>($i4);

        specialinvoke $r8.<android.graphics.LinearGradient: void <init>(float,float,float,float,int[],float[],android.graphics.Shader$TileMode)>($f0, $f1, $f2, $f3, $r5, $r9, $r10);

        return $r8;

     label1:
        $r11 = new android.graphics.SweepGradient;

        $r5 = $r7.<androidx.core.content.res.GradientColorInflaterCompat$ColorStops: int[] mColors>;

        $r9 = $r7.<androidx.core.content.res.GradientColorInflaterCompat$ColorStops: float[] mOffsets>;

        specialinvoke $r11.<android.graphics.SweepGradient: void <init>(float,float,int[],float[])>($f4, $f5, $r5, $r9);

        return $r11;

     label2:
        $b6 = $f6 cmpg 0.0F;

        if $b6 <= 0 goto label3;

        $r12 = new android.graphics.RadialGradient;

        $r5 = $r7.<androidx.core.content.res.GradientColorInflaterCompat$ColorStops: int[] mColors>;

        $r9 = $r7.<androidx.core.content.res.GradientColorInflaterCompat$ColorStops: float[] mOffsets>;

        $r10 = staticinvoke <androidx.core.content.res.GradientColorInflaterCompat: android.graphics.Shader$TileMode parseTileMode(int)>($i4);

        specialinvoke $r12.<android.graphics.RadialGradient: void <init>(float,float,float,int[],float[],android.graphics.Shader$TileMode)>($f4, $f5, $f6, $r5, $r9, $r10);

        return $r12;

     label3:
        $r13 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke $r13.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("<gradient> tag requires \'gradientRadius\' attribute with radial type");

        throw $r13;

     label4:
        $r13 = new org.xmlpull.v1.XmlPullParserException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": invalid gradient color tag ");

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r4);

        throw $r13;
    }

    private static androidx.core.content.res.GradientColorInflaterCompat$ColorStops inflateChildElements(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.res.Resources $r0;
        org.xmlpull.v1.XmlPullParser $r1;
        android.util.AttributeSet $r2;
        android.content.res.Resources$Theme $r3;
        java.util.ArrayList $r4, $r5;
        int $i0, $i1, $i2;
        java.lang.String $r6;
        boolean $z0, $z1;
        int[] $r7;
        android.content.res.TypedArray $r8;
        float $f0;
        java.lang.Integer $r9;
        java.lang.Float $r10;
        org.xmlpull.v1.XmlPullParserException $r11;
        java.lang.StringBuilder $r12;
        androidx.core.content.res.GradientColorInflaterCompat$ColorStops $r13;

        $r0 := @parameter0: android.content.res.Resources;

        $r1 := @parameter1: org.xmlpull.v1.XmlPullParser;

        $r2 := @parameter2: android.util.AttributeSet;

        $r3 := @parameter3: android.content.res.Resources$Theme;

        $i0 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        $i0 = $i0 + 1;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>(int)>(20);

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>(int)>(20);

     label1:
        $i1 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i1 == 1 goto label6;

        $i2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i2 >= $i0 goto label2;

        if $i1 == 3 goto label6;

     label2:
        if $i1 == 2 goto label3;

        goto label1;

     label3:
        if $i2 > $i0 goto label1;

        $r6 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z0 != 0 goto label4;

        goto label1;

     label4:
        $r7 = <androidx.core.R$styleable: int[] GradientColorItem>;

        $r8 = staticinvoke <androidx.core.content.res.TypedArrayUtils: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>($r0, $r3, $r2, $r7);

        $i1 = <androidx.core.R$styleable: int GradientColorItem_android_color>;

        $z0 = virtualinvoke $r8.<android.content.res.TypedArray: boolean hasValue(int)>($i1);

        $i1 = <androidx.core.R$styleable: int GradientColorItem_android_offset>;

        $z1 = virtualinvoke $r8.<android.content.res.TypedArray: boolean hasValue(int)>($i1);

        if $z0 == 0 goto label5;

        if $z1 == 0 goto label5;

        $i1 = <androidx.core.R$styleable: int GradientColorItem_android_color>;

        $i1 = virtualinvoke $r8.<android.content.res.TypedArray: int getColor(int,int)>($i1, 0);

        $i2 = <androidx.core.R$styleable: int GradientColorItem_android_offset>;

        $f0 = virtualinvoke $r8.<android.content.res.TypedArray: float getFloat(int,float)>($i2, 0.0F);

        virtualinvoke $r8.<android.content.res.TypedArray: void recycle()>();

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r9);

        $r10 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r10);

        goto label1;

     label5:
        $r11 = new org.xmlpull.v1.XmlPullParserException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r6 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": <item> tag requires a \'color\' attribute and a \'offset\' ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("attribute!");

        $r6 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r6);

        throw $r11;

     label6:
        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        if $i0 <= 0 goto label7;

        $r13 = new androidx.core.content.res.GradientColorInflaterCompat$ColorStops;

        specialinvoke $r13.<androidx.core.content.res.GradientColorInflaterCompat$ColorStops: void <init>(java.util.List,java.util.List)>($r5, $r4);

        return $r13;

     label7:
        return null;
    }

    private static android.graphics.Shader$TileMode parseTileMode(int)
    {
        int $i0;
        android.graphics.Shader$TileMode r0;

        $i0 := @parameter0: int;

        if $i0 == 1 goto label2;

        if $i0 == 2 goto label1;

        r0 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode CLAMP>;

        return r0;

     label1:
        r0 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode MIRROR>;

        return r0;

     label2:
        r0 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode REPEAT>;

        return r0;
    }

    public static void <clinit>()
    {
        <androidx.core.content.res.GradientColorInflaterCompat: int TILE_MODE_REPEAT> = 1;

        <androidx.core.content.res.GradientColorInflaterCompat: int TILE_MODE_MIRROR> = 2;

        <androidx.core.content.res.GradientColorInflaterCompat: int TILE_MODE_CLAMP> = 0;

        return;
    }
}
