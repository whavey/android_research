public final class androidx.core.content.res.ResourcesCompat extends java.lang.Object
{
    private static final java.lang.String TAG;

    private void <init>()
    {
        androidx.core.content.res.ResourcesCompat $r0;

        $r0 := @this: androidx.core.content.res.ResourcesCompat;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int getColor(android.content.res.Resources, int, android.content.res.Resources$Theme) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources $r0;
        int $i0, $i1;
        android.content.res.Resources$Theme $r1;

        $r0 := @parameter0: android.content.res.Resources;

        $i0 := @parameter1: int;

        $r1 := @parameter2: android.content.res.Resources$Theme;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 23 goto label1;

        $i0 = virtualinvoke $r0.<android.content.res.Resources: int getColor(int,android.content.res.Resources$Theme)>($i0, $r1);

        return $i0;

     label1:
        $i0 = virtualinvoke $r0.<android.content.res.Resources: int getColor(int)>($i0);

        return $i0;
    }

    public static android.content.res.ColorStateList getColorStateList(android.content.res.Resources, int, android.content.res.Resources$Theme) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources $r0;
        int $i0, $i1;
        android.content.res.Resources$Theme $r1;
        android.content.res.ColorStateList $r2;

        $r0 := @parameter0: android.content.res.Resources;

        $i0 := @parameter1: int;

        $r1 := @parameter2: android.content.res.Resources$Theme;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 23 goto label1;

        $r2 = virtualinvoke $r0.<android.content.res.Resources: android.content.res.ColorStateList getColorStateList(int,android.content.res.Resources$Theme)>($i0, $r1);

        return $r2;

     label1:
        $r2 = virtualinvoke $r0.<android.content.res.Resources: android.content.res.ColorStateList getColorStateList(int)>($i0);

        return $r2;
    }

    public static android.graphics.drawable.Drawable getDrawable(android.content.res.Resources, int, android.content.res.Resources$Theme) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources $r0;
        int $i0, $i1;
        android.content.res.Resources$Theme $r1;
        android.graphics.drawable.Drawable $r2;

        $r0 := @parameter0: android.content.res.Resources;

        $i0 := @parameter1: int;

        $r1 := @parameter2: android.content.res.Resources$Theme;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 21 goto label1;

        $r2 = virtualinvoke $r0.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme)>($i0, $r1);

        return $r2;

     label1:
        $r2 = virtualinvoke $r0.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>($i0);

        return $r2;
    }

    public static android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources, int, int, android.content.res.Resources$Theme) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources $r0;
        int $i0, $i1, $i2;
        android.content.res.Resources$Theme $r1;
        android.graphics.drawable.Drawable $r2;

        $r0 := @parameter0: android.content.res.Resources;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r1 := @parameter3: android.content.res.Resources$Theme;

        $i2 = <android.os.Build$VERSION: int SDK_INT>;

        if $i2 < 21 goto label1;

        $r2 = virtualinvoke $r0.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawableForDensity(int,int,android.content.res.Resources$Theme)>($i0, $i1, $r1);

        return $r2;

     label1:
        $i2 = <android.os.Build$VERSION: int SDK_INT>;

        if $i2 < 15 goto label2;

        $r2 = virtualinvoke $r0.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawableForDensity(int,int)>($i0, $i1);

        return $r2;

     label2:
        $r2 = virtualinvoke $r0.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>($i0);

        return $r2;
    }

    public static android.graphics.Typeface getFont(android.content.Context, int) throws android.content.res.Resources$NotFoundException
    {
        android.content.Context $r0;
        int $i0;
        android.util.TypedValue $r1;
        boolean $z0;
        android.graphics.Typeface $r2;

        $r0 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $z0 = virtualinvoke $r0.<android.content.Context: boolean isRestricted()>();

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r1 = new android.util.TypedValue;

        specialinvoke $r1.<android.util.TypedValue: void <init>()>();

        $r2 = staticinvoke <androidx.core.content.res.ResourcesCompat: android.graphics.Typeface loadFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)>($r0, $i0, $r1, 0, null, null, 0);

        return $r2;
    }

    public static android.graphics.Typeface getFont(android.content.Context, int, android.util.TypedValue, int, androidx.core.content.res.ResourcesCompat$FontCallback) throws android.content.res.Resources$NotFoundException
    {
        android.content.Context $r0;
        int $i0, $i1;
        android.util.TypedValue $r1;
        androidx.core.content.res.ResourcesCompat$FontCallback $r2;
        boolean $z0;
        android.graphics.Typeface $r3;

        $r0 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $r1 := @parameter2: android.util.TypedValue;

        $i1 := @parameter3: int;

        $r2 := @parameter4: androidx.core.content.res.ResourcesCompat$FontCallback;

        $z0 = virtualinvoke $r0.<android.content.Context: boolean isRestricted()>();

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r3 = staticinvoke <androidx.core.content.res.ResourcesCompat: android.graphics.Typeface loadFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)>($r0, $i0, $r1, $i1, $r2, null, 1);

        return $r3;
    }

    public static void getFont(android.content.Context, int, androidx.core.content.res.ResourcesCompat$FontCallback, android.os.Handler) throws android.content.res.Resources$NotFoundException
    {
        android.content.Context $r0;
        int $i0;
        androidx.core.content.res.ResourcesCompat$FontCallback $r1;
        android.os.Handler $r2;
        android.util.TypedValue $r3;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $r1 := @parameter2: androidx.core.content.res.ResourcesCompat$FontCallback;

        $r2 := @parameter3: android.os.Handler;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $z0 = virtualinvoke $r0.<android.content.Context: boolean isRestricted()>();

        if $z0 == 0 goto label1;

        virtualinvoke $r1.<androidx.core.content.res.ResourcesCompat$FontCallback: void callbackFailAsync(int,android.os.Handler)>(-4, $r2);

        return;

     label1:
        $r3 = new android.util.TypedValue;

        specialinvoke $r3.<android.util.TypedValue: void <init>()>();

        staticinvoke <androidx.core.content.res.ResourcesCompat: android.graphics.Typeface loadFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)>($r0, $i0, $r3, 0, $r1, $r2, 0);

        return;
    }

    private static android.graphics.Typeface loadFont(android.content.Context, int, android.util.TypedValue, int, androidx.core.content.res.ResourcesCompat$FontCallback, android.os.Handler, boolean)
    {
        android.content.Context $r0;
        int $i0, $i1;
        android.util.TypedValue $r1;
        androidx.core.content.res.ResourcesCompat$FontCallback $r2;
        android.os.Handler $r3;
        boolean $z0;
        android.content.res.Resources $r4;
        android.graphics.Typeface $r5;
        android.content.res.Resources$NotFoundException $r6;
        java.lang.StringBuilder $r7;
        java.lang.String $r8;

        $r0 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $r1 := @parameter2: android.util.TypedValue;

        $i1 := @parameter3: int;

        $r2 := @parameter4: androidx.core.content.res.ResourcesCompat$FontCallback;

        $r3 := @parameter5: android.os.Handler;

        $z0 := @parameter6: boolean;

        $r4 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        virtualinvoke $r4.<android.content.res.Resources: void getValue(int,android.util.TypedValue,boolean)>($i0, $r1, 1);

        $r5 = staticinvoke <androidx.core.content.res.ResourcesCompat: android.graphics.Typeface loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)>($r0, $r4, $r1, $i0, $i1, $r2, $r3, $z0);

        if $r5 != null goto label2;

        if $r2 == null goto label1;

        return $r5;

     label1:
        $r6 = new android.content.res.Resources$NotFoundException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Font resource ID #0x");

        $r8 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" could not be retrieved.");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r8);

        throw $r6;

     label2:
        return $r5;
    }

    private static android.graphics.Typeface loadFont(android.content.Context, android.content.res.Resources, android.util.TypedValue, int, int, androidx.core.content.res.ResourcesCompat$FontCallback, android.os.Handler, boolean)
    {
        android.content.Context $r0;
        android.content.res.Resources $r1;
        android.util.TypedValue $r2;
        int $i0, $i1;
        androidx.core.content.res.ResourcesCompat$FontCallback $r3;
        android.os.Handler $r4;
        boolean $z0, $z1;
        java.lang.CharSequence $r5;
        java.lang.String $r6, $r8;
        android.graphics.Typeface $r7;
        android.content.res.XmlResourceParser $r9;
        androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry $r10;
        java.lang.Throwable $r11;
        org.xmlpull.v1.XmlPullParserException $r12;
        java.lang.StringBuilder $r13;
        android.content.res.Resources$NotFoundException $r14;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.content.res.Resources;

        $r2 := @parameter2: android.util.TypedValue;

        $i0 := @parameter3: int;

        $i1 := @parameter4: int;

        $r3 := @parameter5: androidx.core.content.res.ResourcesCompat$FontCallback;

        $r4 := @parameter6: android.os.Handler;

        $z0 := @parameter7: boolean;

        $r5 = $r2.<android.util.TypedValue: java.lang.CharSequence string>;

        if $r5 == null goto label36;

        $r5 = $r2.<android.util.TypedValue: java.lang.CharSequence string>;

        $r6 = interfaceinvoke $r5.<java.lang.CharSequence: java.lang.String toString()>();

        $z1 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>("res/");

        if $z1 != 0 goto label01;

        if $r3 == null goto label37;

        virtualinvoke $r3.<androidx.core.content.res.ResourcesCompat$FontCallback: void callbackFailAsync(int,android.os.Handler)>(-3, $r4);

        return null;

     label01:
        $r7 = staticinvoke <androidx.core.graphics.TypefaceCompat: android.graphics.Typeface findFromCache(android.content.res.Resources,int,int)>($r1, $i0, $i1);

        if $r7 == null goto label02;

        if $r3 == null goto label38;

        virtualinvoke $r3.<androidx.core.content.res.ResourcesCompat$FontCallback: void callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)>($r7, $r4);

        return $r7;

     label02:
        $r8 = virtualinvoke $r6.<java.lang.String: java.lang.String toLowerCase()>();

        $z1 = virtualinvoke $r8.<java.lang.String: boolean endsWith(java.lang.String)>(".xml");

     label03:
        if $z1 == 0 goto label19;

     label04:
        $r9 = virtualinvoke $r1.<android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>($i0);

        $r10 = staticinvoke <androidx.core.content.res.FontResourcesParserCompat: androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry parse(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)>($r9, $r1);

     label05:
        if $r10 != null goto label12;

     label06:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ResourcesCompat", "Failed to find font-family tag");

     label07:
        if $r3 == null goto label39;

     label08:
        virtualinvoke $r3.<androidx.core.content.res.ResourcesCompat$FontCallback: void callbackFailAsync(int,android.os.Handler)>(-3, $r4);

     label09:
        return null;

     label10:
        $r11 := @caughtexception;

        $r8 = $r6;

        goto label32;

     label11:
        $r12 := @caughtexception;

        $r8 = $r6;

        goto label34;

     label12:
        $r8 = $r6;

     label13:
        $r7 = staticinvoke <androidx.core.graphics.TypefaceCompat: android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)>($r0, $r10, $r1, $i0, $i1, $r3, $r4, $z0);

     label14:
        return $r7;

     label15:
        $r11 := @caughtexception;

        goto label32;

     label16:
        $r12 := @caughtexception;

        goto label34;

     label17:
        $r11 := @caughtexception;

        $r8 = $r6;

        goto label32;

     label18:
        $r12 := @caughtexception;

        $r8 = $r6;

        goto label34;

     label19:
        $r8 = $r6;

     label20:
        $r7 = staticinvoke <androidx.core.graphics.TypefaceCompat: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)>($r0, $r1, $i0, $r6, $i1);

     label21:
        if $r3 == null goto label28;

        if $r7 == null goto label24;

     label22:
        virtualinvoke $r3.<androidx.core.content.res.ResourcesCompat$FontCallback: void callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)>($r7, $r4);

     label23:
        return $r7;

     label24:
        virtualinvoke $r3.<androidx.core.content.res.ResourcesCompat$FontCallback: void callbackFailAsync(int,android.os.Handler)>(-3, $r4);

     label25:
        return $r7;

     label26:
        $r11 := @caughtexception;

        goto label32;

     label27:
        $r12 := @caughtexception;

        goto label34;

     label28:
        return $r7;

     label29:
        $r11 := @caughtexception;

        goto label32;

     label30:
        $r12 := @caughtexception;

        goto label34;

     label31:
        $r11 := @caughtexception;

        $r8 = $r6;

     label32:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to read xml resource ");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r6 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ResourcesCompat", $r6, $r11);

        goto label35;

     label33:
        $r12 := @caughtexception;

        $r8 = $r6;

     label34:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to parse xml resource ");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r6 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ResourcesCompat", $r6, $r12);

     label35:
        if $r3 == null goto label39;

        virtualinvoke $r3.<androidx.core.content.res.ResourcesCompat$FontCallback: void callbackFailAsync(int,android.os.Handler)>(-3, $r4);

        return null;

     label36:
        $r14 = new android.content.res.Resources$NotFoundException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Resource \"");

        $r6 = virtualinvoke $r1.<android.content.res.Resources: java.lang.String getResourceName(int)>($i0);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" (");

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") is not a Font: ");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r6 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r6);

        throw $r14;

     label37:
        return null;

     label38:
        return $r7;

     label39:
        return null;

        catch org.xmlpull.v1.XmlPullParserException from label02 to label03 with label33;
        catch java.io.IOException from label02 to label03 with label31;
        catch org.xmlpull.v1.XmlPullParserException from label04 to label05 with label18;
        catch java.io.IOException from label04 to label05 with label17;
        catch org.xmlpull.v1.XmlPullParserException from label06 to label07 with label11;
        catch org.xmlpull.v1.XmlPullParserException from label08 to label09 with label11;
        catch java.io.IOException from label06 to label07 with label10;
        catch java.io.IOException from label08 to label09 with label10;
        catch org.xmlpull.v1.XmlPullParserException from label13 to label14 with label16;
        catch java.io.IOException from label13 to label14 with label15;
        catch org.xmlpull.v1.XmlPullParserException from label20 to label21 with label30;
        catch java.io.IOException from label20 to label21 with label29;
        catch org.xmlpull.v1.XmlPullParserException from label22 to label23 with label27;
        catch org.xmlpull.v1.XmlPullParserException from label24 to label25 with label27;
        catch java.io.IOException from label22 to label23 with label26;
        catch java.io.IOException from label24 to label25 with label26;
    }

    public static void <clinit>()
    {
        <androidx.core.content.res.ResourcesCompat: java.lang.String TAG> = "ResourcesCompat";

        return;
    }
}
