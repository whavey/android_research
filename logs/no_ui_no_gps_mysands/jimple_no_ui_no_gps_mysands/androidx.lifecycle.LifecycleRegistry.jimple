public class androidx.lifecycle.LifecycleRegistry extends androidx.lifecycle.Lifecycle
{
    private static final java.lang.String LOG_TAG;
    private int mAddingObserverCounter;
    private boolean mHandlingEvent;
    private final java.lang.ref.WeakReference mLifecycleOwner;
    private boolean mNewEventOccurred;
    private androidx.arch.core.internal.FastSafeIterableMap mObserverMap;
    private java.util.ArrayList mParentStates;
    private androidx.lifecycle.Lifecycle$State mState;

    public void <init>(androidx.lifecycle.LifecycleOwner)
    {
        androidx.lifecycle.LifecycleRegistry $r0;
        androidx.lifecycle.LifecycleOwner $r1;
        androidx.arch.core.internal.FastSafeIterableMap $r2;
        java.util.ArrayList $r3;
        java.lang.ref.WeakReference $r4;
        androidx.lifecycle.Lifecycle$State $r5;

        $r0 := @this: androidx.lifecycle.LifecycleRegistry;

        $r1 := @parameter0: androidx.lifecycle.LifecycleOwner;

        specialinvoke $r0.<androidx.lifecycle.Lifecycle: void <init>()>();

        $r2 = new androidx.arch.core.internal.FastSafeIterableMap;

        specialinvoke $r2.<androidx.arch.core.internal.FastSafeIterableMap: void <init>()>();

        $r0.<androidx.lifecycle.LifecycleRegistry: androidx.arch.core.internal.FastSafeIterableMap mObserverMap> = $r2;

        $r0.<androidx.lifecycle.LifecycleRegistry: int mAddingObserverCounter> = 0;

        $r0.<androidx.lifecycle.LifecycleRegistry: boolean mHandlingEvent> = 0;

        $r0.<androidx.lifecycle.LifecycleRegistry: boolean mNewEventOccurred> = 0;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r0.<androidx.lifecycle.LifecycleRegistry: java.util.ArrayList mParentStates> = $r3;

        $r4 = new java.lang.ref.WeakReference;

        specialinvoke $r4.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r1);

        $r0.<androidx.lifecycle.LifecycleRegistry: java.lang.ref.WeakReference mLifecycleOwner> = $r4;

        $r5 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State INITIALIZED>;

        $r0.<androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State mState> = $r5;

        return;
    }

    private void backwardPass(androidx.lifecycle.LifecycleOwner)
    {
        androidx.lifecycle.LifecycleRegistry $r0;
        androidx.lifecycle.LifecycleOwner $r1;
        androidx.arch.core.internal.FastSafeIterableMap $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.util.Map$Entry $r5;
        androidx.lifecycle.LifecycleRegistry$ObserverWithState $r6;
        androidx.lifecycle.Lifecycle$State $r7, $r8;
        int $i0;
        androidx.lifecycle.Lifecycle$Event $r9;

        $r0 := @this: androidx.lifecycle.LifecycleRegistry;

        $r1 := @parameter0: androidx.lifecycle.LifecycleOwner;

        $r2 = $r0.<androidx.lifecycle.LifecycleRegistry: androidx.arch.core.internal.FastSafeIterableMap mObserverMap>;

        $r3 = virtualinvoke $r2.<androidx.arch.core.internal.FastSafeIterableMap: java.util.Iterator descendingIterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $z0 = $r0.<androidx.lifecycle.LifecycleRegistry: boolean mNewEventOccurred>;

        if $z0 != 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.util.Map$Entry) $r4;

        $r4 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r6 = (androidx.lifecycle.LifecycleRegistry$ObserverWithState) $r4;

     label2:
        $r7 = $r6.<androidx.lifecycle.LifecycleRegistry$ObserverWithState: androidx.lifecycle.Lifecycle$State mState>;

        $r8 = $r0.<androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State mState>;

        $i0 = virtualinvoke $r7.<androidx.lifecycle.Lifecycle$State: int compareTo(java.lang.Enum)>($r8);

        if $i0 <= 0 goto label1;

        $z0 = $r0.<androidx.lifecycle.LifecycleRegistry: boolean mNewEventOccurred>;

        if $z0 != 0 goto label1;

        $r2 = $r0.<androidx.lifecycle.LifecycleRegistry: androidx.arch.core.internal.FastSafeIterableMap mObserverMap>;

        $r4 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $z0 = virtualinvoke $r2.<androidx.arch.core.internal.FastSafeIterableMap: boolean contains(java.lang.Object)>($r4);

        if $z0 == 0 goto label1;

        $r7 = $r6.<androidx.lifecycle.LifecycleRegistry$ObserverWithState: androidx.lifecycle.Lifecycle$State mState>;

        $r9 = staticinvoke <androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$Event downEvent(androidx.lifecycle.Lifecycle$State)>($r7);

        $r7 = staticinvoke <androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State getStateAfter(androidx.lifecycle.Lifecycle$Event)>($r9);

        specialinvoke $r0.<androidx.lifecycle.LifecycleRegistry: void pushParentState(androidx.lifecycle.Lifecycle$State)>($r7);

        virtualinvoke $r6.<androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>($r1, $r9);

        specialinvoke $r0.<androidx.lifecycle.LifecycleRegistry: void popParentState()>();

        goto label2;

     label3:
        return;
    }

    private androidx.lifecycle.Lifecycle$State calculateTargetState(androidx.lifecycle.LifecycleObserver)
    {
        androidx.lifecycle.LifecycleRegistry $r0;
        androidx.lifecycle.LifecycleObserver $r1;
        androidx.arch.core.internal.FastSafeIterableMap $r2;
        java.util.Map$Entry $r3;
        androidx.lifecycle.Lifecycle$State $r4, $r7, $r9;
        java.lang.Object $r5;
        androidx.lifecycle.LifecycleRegistry$ObserverWithState $r6;
        java.util.ArrayList $r8;
        boolean $z0;
        int $i0;

        $r0 := @this: androidx.lifecycle.LifecycleRegistry;

        $r1 := @parameter0: androidx.lifecycle.LifecycleObserver;

        $r2 = $r0.<androidx.lifecycle.LifecycleRegistry: androidx.arch.core.internal.FastSafeIterableMap mObserverMap>;

        $r3 = virtualinvoke $r2.<androidx.arch.core.internal.FastSafeIterableMap: java.util.Map$Entry ceil(java.lang.Object)>($r1);

        $r4 = null;

        if $r3 == null goto label1;

        $r5 = interfaceinvoke $r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r6 = (androidx.lifecycle.LifecycleRegistry$ObserverWithState) $r5;

        $r7 = $r6.<androidx.lifecycle.LifecycleRegistry$ObserverWithState: androidx.lifecycle.Lifecycle$State mState>;

        goto label2;

     label1:
        $r7 = null;

     label2:
        $r8 = $r0.<androidx.lifecycle.LifecycleRegistry: java.util.ArrayList mParentStates>;

        $z0 = virtualinvoke $r8.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 != 0 goto label3;

        $r8 = $r0.<androidx.lifecycle.LifecycleRegistry: java.util.ArrayList mParentStates>;

        $i0 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        $i0 = $i0 + -1;

        $r5 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r4 = (androidx.lifecycle.Lifecycle$State) $r5;

     label3:
        $r9 = $r0.<androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State mState>;

        $r7 = staticinvoke <androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State min(androidx.lifecycle.Lifecycle$State,androidx.lifecycle.Lifecycle$State)>($r9, $r7);

        $r4 = staticinvoke <androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State min(androidx.lifecycle.Lifecycle$State,androidx.lifecycle.Lifecycle$State)>($r7, $r4);

        return $r4;
    }

    private static androidx.lifecycle.Lifecycle$Event downEvent(androidx.lifecycle.Lifecycle$State)
    {
        androidx.lifecycle.Lifecycle$State $r0;
        int[] $r1;
        int $i0;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        androidx.lifecycle.Lifecycle$Event r5;

        $r0 := @parameter0: androidx.lifecycle.Lifecycle$State;

        $r1 = <androidx.lifecycle.LifecycleRegistry$1: int[] $SwitchMap$androidx$lifecycle$Lifecycle$State>;

        $i0 = virtualinvoke $r0.<androidx.lifecycle.Lifecycle$State: int ordinal()>();

        $i0 = $r1[$i0];

        if $i0 == 1 goto label5;

        if $i0 == 2 goto label4;

        if $i0 == 3 goto label3;

        if $i0 == 4 goto label2;

        if $i0 == 5 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected state value ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r2;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;

     label2:
        r5 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE>;

        return r5;

     label3:
        r5 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP>;

        return r5;

     label4:
        r5 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY>;

        return r5;

     label5:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;
    }

    private void forwardPass(androidx.lifecycle.LifecycleOwner)
    {
        androidx.lifecycle.LifecycleRegistry $r0;
        androidx.lifecycle.LifecycleOwner $r1;
        androidx.arch.core.internal.FastSafeIterableMap $r2;
        androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.util.Map$Entry $r5;
        androidx.lifecycle.LifecycleRegistry$ObserverWithState $r6;
        androidx.lifecycle.Lifecycle$State $r7, $r8;
        int $i0;
        androidx.lifecycle.Lifecycle$Event $r9;

        $r0 := @this: androidx.lifecycle.LifecycleRegistry;

        $r1 := @parameter0: androidx.lifecycle.LifecycleOwner;

        $r2 = $r0.<androidx.lifecycle.LifecycleRegistry: androidx.arch.core.internal.FastSafeIterableMap mObserverMap>;

        $r3 = virtualinvoke $r2.<androidx.arch.core.internal.FastSafeIterableMap: androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions iteratorWithAdditions()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $z0 = $r0.<androidx.lifecycle.LifecycleRegistry: boolean mNewEventOccurred>;

        if $z0 != 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.util.Map$Entry) $r4;

        $r4 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r6 = (androidx.lifecycle.LifecycleRegistry$ObserverWithState) $r4;

     label2:
        $r7 = $r6.<androidx.lifecycle.LifecycleRegistry$ObserverWithState: androidx.lifecycle.Lifecycle$State mState>;

        $r8 = $r0.<androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State mState>;

        $i0 = virtualinvoke $r7.<androidx.lifecycle.Lifecycle$State: int compareTo(java.lang.Enum)>($r8);

        if $i0 >= 0 goto label1;

        $z0 = $r0.<androidx.lifecycle.LifecycleRegistry: boolean mNewEventOccurred>;

        if $z0 != 0 goto label1;

        $r2 = $r0.<androidx.lifecycle.LifecycleRegistry: androidx.arch.core.internal.FastSafeIterableMap mObserverMap>;

        $r4 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $z0 = virtualinvoke $r2.<androidx.arch.core.internal.FastSafeIterableMap: boolean contains(java.lang.Object)>($r4);

        if $z0 == 0 goto label1;

        $r7 = $r6.<androidx.lifecycle.LifecycleRegistry$ObserverWithState: androidx.lifecycle.Lifecycle$State mState>;

        specialinvoke $r0.<androidx.lifecycle.LifecycleRegistry: void pushParentState(androidx.lifecycle.Lifecycle$State)>($r7);

        $r7 = $r6.<androidx.lifecycle.LifecycleRegistry$ObserverWithState: androidx.lifecycle.Lifecycle$State mState>;

        $r9 = staticinvoke <androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$Event upEvent(androidx.lifecycle.Lifecycle$State)>($r7);

        virtualinvoke $r6.<androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>($r1, $r9);

        specialinvoke $r0.<androidx.lifecycle.LifecycleRegistry: void popParentState()>();

        goto label2;

     label3:
        return;
    }

    static androidx.lifecycle.Lifecycle$State getStateAfter(androidx.lifecycle.Lifecycle$Event)
    {
        androidx.lifecycle.Lifecycle$Event $r0;
        int[] $r1;
        int $i0;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        androidx.lifecycle.Lifecycle$State r5;

        $r0 := @parameter0: androidx.lifecycle.Lifecycle$Event;

        $r1 = <androidx.lifecycle.LifecycleRegistry$1: int[] $SwitchMap$androidx$lifecycle$Lifecycle$Event>;

        $i0 = virtualinvoke $r0.<androidx.lifecycle.Lifecycle$Event: int ordinal()>();

        $i0 = $r1[$i0];

        lookupswitch($i0)
        {
            case 1: goto label5;
            case 2: goto label5;
            case 3: goto label4;
            case 4: goto label4;
            case 5: goto label3;
            case 6: goto label2;
            default: goto label1;
        };

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected event value ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r2;

     label2:
        r5 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State DESTROYED>;

        return r5;

     label3:
        r5 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State RESUMED>;

        return r5;

     label4:
        r5 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State STARTED>;

        return r5;

     label5:
        r5 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State CREATED>;

        return r5;
    }

    private boolean isSynced()
    {
        androidx.lifecycle.LifecycleRegistry $r0;
        androidx.lifecycle.Lifecycle$State $r1, $r6;
        androidx.arch.core.internal.FastSafeIterableMap $r2;
        int $i0;
        java.util.Map$Entry $r3;
        java.lang.Object $r4;
        androidx.lifecycle.LifecycleRegistry$ObserverWithState $r5;

        $r0 := @this: androidx.lifecycle.LifecycleRegistry;

        $r2 = $r0.<androidx.lifecycle.LifecycleRegistry: androidx.arch.core.internal.FastSafeIterableMap mObserverMap>;

        $i0 = virtualinvoke $r2.<androidx.arch.core.internal.FastSafeIterableMap: int size()>();

        if $i0 != 0 goto label1;

        return 1;

     label1:
        $r2 = $r0.<androidx.lifecycle.LifecycleRegistry: androidx.arch.core.internal.FastSafeIterableMap mObserverMap>;

        $r3 = virtualinvoke $r2.<androidx.arch.core.internal.FastSafeIterableMap: java.util.Map$Entry eldest()>();

        $r4 = interfaceinvoke $r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r5 = (androidx.lifecycle.LifecycleRegistry$ObserverWithState) $r4;

        $r1 = $r5.<androidx.lifecycle.LifecycleRegistry$ObserverWithState: androidx.lifecycle.Lifecycle$State mState>;

        $r2 = $r0.<androidx.lifecycle.LifecycleRegistry: androidx.arch.core.internal.FastSafeIterableMap mObserverMap>;

        $r3 = virtualinvoke $r2.<androidx.arch.core.internal.FastSafeIterableMap: java.util.Map$Entry newest()>();

        $r4 = interfaceinvoke $r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r5 = (androidx.lifecycle.LifecycleRegistry$ObserverWithState) $r4;

        $r6 = $r5.<androidx.lifecycle.LifecycleRegistry$ObserverWithState: androidx.lifecycle.Lifecycle$State mState>;

        if $r1 != $r6 goto label2;

        $r1 = $r0.<androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State mState>;

        if $r1 != $r6 goto label2;

        return 1;

     label2:
        return 0;
    }

    static androidx.lifecycle.Lifecycle$State min(androidx.lifecycle.Lifecycle$State, androidx.lifecycle.Lifecycle$State)
    {
        androidx.lifecycle.Lifecycle$State $r0, $r1;
        int $i0;

        $r0 := @parameter0: androidx.lifecycle.Lifecycle$State;

        $r1 := @parameter1: androidx.lifecycle.Lifecycle$State;

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<androidx.lifecycle.Lifecycle$State: int compareTo(java.lang.Enum)>($r0);

        if $i0 >= 0 goto label1;

        return $r1;

     label1:
        return $r0;
    }

    private void moveToState(androidx.lifecycle.Lifecycle$State)
    {
        androidx.lifecycle.LifecycleRegistry $r0;
        androidx.lifecycle.Lifecycle$State $r1, $r2;
        boolean $z0;
        int $i0;

        $r0 := @this: androidx.lifecycle.LifecycleRegistry;

        $r1 := @parameter0: androidx.lifecycle.Lifecycle$State;

        $r2 = $r0.<androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State mState>;

        if $r2 != $r1 goto label1;

        return;

     label1:
        $r0.<androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State mState> = $r1;

        $z0 = $r0.<androidx.lifecycle.LifecycleRegistry: boolean mHandlingEvent>;

        if $z0 != 0 goto label3;

        $i0 = $r0.<androidx.lifecycle.LifecycleRegistry: int mAddingObserverCounter>;

        if $i0 == 0 goto label2;

        goto label3;

     label2:
        $r0.<androidx.lifecycle.LifecycleRegistry: boolean mHandlingEvent> = 1;

        specialinvoke $r0.<androidx.lifecycle.LifecycleRegistry: void sync()>();

        $r0.<androidx.lifecycle.LifecycleRegistry: boolean mHandlingEvent> = 0;

        return;

     label3:
        $r0.<androidx.lifecycle.LifecycleRegistry: boolean mNewEventOccurred> = 1;

        return;
    }

    private void popParentState()
    {
        androidx.lifecycle.LifecycleRegistry $r0;
        java.util.ArrayList $r1;
        int $i0;

        $r0 := @this: androidx.lifecycle.LifecycleRegistry;

        $r1 = $r0.<androidx.lifecycle.LifecycleRegistry: java.util.ArrayList mParentStates>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $i0 = $i0 + -1;

        virtualinvoke $r1.<java.util.ArrayList: java.lang.Object remove(int)>($i0);

        return;
    }

    private void pushParentState(androidx.lifecycle.Lifecycle$State)
    {
        androidx.lifecycle.LifecycleRegistry $r0;
        androidx.lifecycle.Lifecycle$State $r1;
        java.util.ArrayList $r2;

        $r0 := @this: androidx.lifecycle.LifecycleRegistry;

        $r1 := @parameter0: androidx.lifecycle.Lifecycle$State;

        $r2 = $r0.<androidx.lifecycle.LifecycleRegistry: java.util.ArrayList mParentStates>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        return;
    }

    private void sync()
    {
        androidx.lifecycle.LifecycleRegistry $r0;
        java.lang.ref.WeakReference $r1;
        java.lang.Object $r2;
        androidx.lifecycle.LifecycleOwner $r3;
        boolean $z0;
        androidx.lifecycle.Lifecycle$State $r4, $r8;
        androidx.arch.core.internal.FastSafeIterableMap $r5;
        java.util.Map$Entry $r6;
        androidx.lifecycle.LifecycleRegistry$ObserverWithState $r7;
        int $i0;

        $r0 := @this: androidx.lifecycle.LifecycleRegistry;

        $r1 = $r0.<androidx.lifecycle.LifecycleRegistry: java.lang.ref.WeakReference mLifecycleOwner>;

        $r2 = virtualinvoke $r1.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r3 = (androidx.lifecycle.LifecycleOwner) $r2;

        if $r3 != null goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("LifecycleRegistry", "LifecycleOwner is garbage collected, you shouldn\'t try dispatch new events from it.");

        return;

     label1:
        $z0 = specialinvoke $r0.<androidx.lifecycle.LifecycleRegistry: boolean isSynced()>();

        if $z0 != 0 goto label3;

        $r0.<androidx.lifecycle.LifecycleRegistry: boolean mNewEventOccurred> = 0;

        $r4 = $r0.<androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State mState>;

        $r5 = $r0.<androidx.lifecycle.LifecycleRegistry: androidx.arch.core.internal.FastSafeIterableMap mObserverMap>;

        $r6 = virtualinvoke $r5.<androidx.arch.core.internal.FastSafeIterableMap: java.util.Map$Entry eldest()>();

        $r2 = interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r7 = (androidx.lifecycle.LifecycleRegistry$ObserverWithState) $r2;

        $r8 = $r7.<androidx.lifecycle.LifecycleRegistry$ObserverWithState: androidx.lifecycle.Lifecycle$State mState>;

        $i0 = virtualinvoke $r4.<androidx.lifecycle.Lifecycle$State: int compareTo(java.lang.Enum)>($r8);

        if $i0 >= 0 goto label2;

        specialinvoke $r0.<androidx.lifecycle.LifecycleRegistry: void backwardPass(androidx.lifecycle.LifecycleOwner)>($r3);

     label2:
        $r5 = $r0.<androidx.lifecycle.LifecycleRegistry: androidx.arch.core.internal.FastSafeIterableMap mObserverMap>;

        $r6 = virtualinvoke $r5.<androidx.arch.core.internal.FastSafeIterableMap: java.util.Map$Entry newest()>();

        $z0 = $r0.<androidx.lifecycle.LifecycleRegistry: boolean mNewEventOccurred>;

        if $z0 != 0 goto label1;

        if $r6 == null goto label1;

        $r4 = $r0.<androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State mState>;

        $r2 = interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r7 = (androidx.lifecycle.LifecycleRegistry$ObserverWithState) $r2;

        $r8 = $r7.<androidx.lifecycle.LifecycleRegistry$ObserverWithState: androidx.lifecycle.Lifecycle$State mState>;

        $i0 = virtualinvoke $r4.<androidx.lifecycle.Lifecycle$State: int compareTo(java.lang.Enum)>($r8);

        if $i0 <= 0 goto label1;

        specialinvoke $r0.<androidx.lifecycle.LifecycleRegistry: void forwardPass(androidx.lifecycle.LifecycleOwner)>($r3);

        goto label1;

     label3:
        $r0.<androidx.lifecycle.LifecycleRegistry: boolean mNewEventOccurred> = 0;

        return;
    }

    private static androidx.lifecycle.Lifecycle$Event upEvent(androidx.lifecycle.Lifecycle$State)
    {
        androidx.lifecycle.Lifecycle$State $r0;
        int[] $r1;
        int $i0;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        androidx.lifecycle.Lifecycle$Event r5;

        $r0 := @parameter0: androidx.lifecycle.Lifecycle$State;

        $r1 = <androidx.lifecycle.LifecycleRegistry$1: int[] $SwitchMap$androidx$lifecycle$Lifecycle$State>;

        $i0 = virtualinvoke $r0.<androidx.lifecycle.Lifecycle$State: int ordinal()>();

        $i0 = $r1[$i0];

        if $i0 == 1 goto label5;

        if $i0 == 2 goto label4;

        if $i0 == 3 goto label3;

        if $i0 == 4 goto label2;

        if $i0 != 5 goto label1;

        goto label5;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected state value ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r2;

     label2:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;

     label3:
        r5 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME>;

        return r5;

     label4:
        r5 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START>;

        return r5;

     label5:
        r5 = <androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE>;

        return r5;
    }

    public void addObserver(androidx.lifecycle.LifecycleObserver)
    {
        androidx.lifecycle.LifecycleRegistry $r0;
        androidx.lifecycle.LifecycleObserver $r1;
        androidx.lifecycle.Lifecycle$State $r2, $r3;
        androidx.lifecycle.LifecycleRegistry$ObserverWithState $r4, $r7;
        androidx.arch.core.internal.FastSafeIterableMap $r5;
        java.lang.Object $r6;
        java.lang.ref.WeakReference $r8;
        androidx.lifecycle.LifecycleOwner $r9;
        int $i0;
        boolean $z0, $z1;
        androidx.lifecycle.Lifecycle$Event $r10;

        $r0 := @this: androidx.lifecycle.LifecycleRegistry;

        $r1 := @parameter0: androidx.lifecycle.LifecycleObserver;

        $r2 = $r0.<androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State mState>;

        $r3 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State DESTROYED>;

        if $r2 != $r3 goto label01;

        $r2 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State DESTROYED>;

        goto label02;

     label01:
        $r2 = <androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State INITIALIZED>;

     label02:
        $r4 = new androidx.lifecycle.LifecycleRegistry$ObserverWithState;

        specialinvoke $r4.<androidx.lifecycle.LifecycleRegistry$ObserverWithState: void <init>(androidx.lifecycle.LifecycleObserver,androidx.lifecycle.Lifecycle$State)>($r1, $r2);

        $r5 = $r0.<androidx.lifecycle.LifecycleRegistry: androidx.arch.core.internal.FastSafeIterableMap mObserverMap>;

        $r6 = virtualinvoke $r5.<androidx.arch.core.internal.FastSafeIterableMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>($r1, $r4);

        $r7 = (androidx.lifecycle.LifecycleRegistry$ObserverWithState) $r6;

        if $r7 == null goto label03;

        return;

     label03:
        $r8 = $r0.<androidx.lifecycle.LifecycleRegistry: java.lang.ref.WeakReference mLifecycleOwner>;

        $r6 = virtualinvoke $r8.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r9 = (androidx.lifecycle.LifecycleOwner) $r6;

        if $r9 != null goto label04;

        return;

     label04:
        $i0 = $r0.<androidx.lifecycle.LifecycleRegistry: int mAddingObserverCounter>;

        if $i0 != 0 goto label06;

        $z0 = $r0.<androidx.lifecycle.LifecycleRegistry: boolean mHandlingEvent>;

        if $z0 == 0 goto label05;

        goto label06;

     label05:
        $z0 = 0;

        goto label07;

     label06:
        $z0 = 1;

     label07:
        $r2 = specialinvoke $r0.<androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State calculateTargetState(androidx.lifecycle.LifecycleObserver)>($r1);

        $i0 = $r0.<androidx.lifecycle.LifecycleRegistry: int mAddingObserverCounter>;

        $i0 = $i0 + 1;

        $r0.<androidx.lifecycle.LifecycleRegistry: int mAddingObserverCounter> = $i0;

     label08:
        $r3 = $r4.<androidx.lifecycle.LifecycleRegistry$ObserverWithState: androidx.lifecycle.Lifecycle$State mState>;

        $i0 = virtualinvoke $r3.<androidx.lifecycle.Lifecycle$State: int compareTo(java.lang.Enum)>($r2);

        if $i0 >= 0 goto label09;

        $r5 = $r0.<androidx.lifecycle.LifecycleRegistry: androidx.arch.core.internal.FastSafeIterableMap mObserverMap>;

        $z1 = virtualinvoke $r5.<androidx.arch.core.internal.FastSafeIterableMap: boolean contains(java.lang.Object)>($r1);

        if $z1 == 0 goto label09;

        $r2 = $r4.<androidx.lifecycle.LifecycleRegistry$ObserverWithState: androidx.lifecycle.Lifecycle$State mState>;

        specialinvoke $r0.<androidx.lifecycle.LifecycleRegistry: void pushParentState(androidx.lifecycle.Lifecycle$State)>($r2);

        $r2 = $r4.<androidx.lifecycle.LifecycleRegistry$ObserverWithState: androidx.lifecycle.Lifecycle$State mState>;

        $r10 = staticinvoke <androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$Event upEvent(androidx.lifecycle.Lifecycle$State)>($r2);

        virtualinvoke $r4.<androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>($r9, $r10);

        specialinvoke $r0.<androidx.lifecycle.LifecycleRegistry: void popParentState()>();

        $r2 = specialinvoke $r0.<androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State calculateTargetState(androidx.lifecycle.LifecycleObserver)>($r1);

        goto label08;

     label09:
        if $z0 != 0 goto label10;

        specialinvoke $r0.<androidx.lifecycle.LifecycleRegistry: void sync()>();

     label10:
        $i0 = $r0.<androidx.lifecycle.LifecycleRegistry: int mAddingObserverCounter>;

        $i0 = $i0 - 1;

        $r0.<androidx.lifecycle.LifecycleRegistry: int mAddingObserverCounter> = $i0;

        return;
    }

    public androidx.lifecycle.Lifecycle$State getCurrentState()
    {
        androidx.lifecycle.LifecycleRegistry $r0;
        androidx.lifecycle.Lifecycle$State r1;

        $r0 := @this: androidx.lifecycle.LifecycleRegistry;

        r1 = $r0.<androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State mState>;

        return r1;
    }

    public int getObserverCount()
    {
        androidx.lifecycle.LifecycleRegistry $r0;
        int $i0;
        androidx.arch.core.internal.FastSafeIterableMap $r1;

        $r0 := @this: androidx.lifecycle.LifecycleRegistry;

        $r1 = $r0.<androidx.lifecycle.LifecycleRegistry: androidx.arch.core.internal.FastSafeIterableMap mObserverMap>;

        $i0 = virtualinvoke $r1.<androidx.arch.core.internal.FastSafeIterableMap: int size()>();

        return $i0;
    }

    public void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)
    {
        androidx.lifecycle.LifecycleRegistry $r0;
        androidx.lifecycle.Lifecycle$Event $r1;
        androidx.lifecycle.Lifecycle$State $r2;

        $r0 := @this: androidx.lifecycle.LifecycleRegistry;

        $r1 := @parameter0: androidx.lifecycle.Lifecycle$Event;

        $r2 = staticinvoke <androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State getStateAfter(androidx.lifecycle.Lifecycle$Event)>($r1);

        specialinvoke $r0.<androidx.lifecycle.LifecycleRegistry: void moveToState(androidx.lifecycle.Lifecycle$State)>($r2);

        return;
    }

    public void markState(androidx.lifecycle.Lifecycle$State)
    {
        androidx.lifecycle.LifecycleRegistry $r0;
        androidx.lifecycle.Lifecycle$State $r1;

        $r0 := @this: androidx.lifecycle.LifecycleRegistry;

        $r1 := @parameter0: androidx.lifecycle.Lifecycle$State;

        specialinvoke $r0.<androidx.lifecycle.LifecycleRegistry: void moveToState(androidx.lifecycle.Lifecycle$State)>($r1);

        return;
    }

    public void removeObserver(androidx.lifecycle.LifecycleObserver)
    {
        androidx.lifecycle.LifecycleRegistry $r0;
        androidx.lifecycle.LifecycleObserver $r1;
        androidx.arch.core.internal.FastSafeIterableMap $r2;

        $r0 := @this: androidx.lifecycle.LifecycleRegistry;

        $r1 := @parameter0: androidx.lifecycle.LifecycleObserver;

        $r2 = $r0.<androidx.lifecycle.LifecycleRegistry: androidx.arch.core.internal.FastSafeIterableMap mObserverMap>;

        virtualinvoke $r2.<androidx.arch.core.internal.FastSafeIterableMap: java.lang.Object remove(java.lang.Object)>($r1);

        return;
    }

    public static void <clinit>()
    {
        <androidx.lifecycle.LifecycleRegistry: java.lang.String LOG_TAG> = "LifecycleRegistry";

        return;
    }
}
