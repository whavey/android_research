final class androidx.appcompat.widget.ActivityChooserModel$PersistHistoryAsyncTask extends android.os.AsyncTask
{
    final androidx.appcompat.widget.ActivityChooserModel this$0;

    void <init>(androidx.appcompat.widget.ActivityChooserModel)
    {
        androidx.appcompat.widget.ActivityChooserModel$PersistHistoryAsyncTask $r0;
        androidx.appcompat.widget.ActivityChooserModel $r1;

        $r0 := @this: androidx.appcompat.widget.ActivityChooserModel$PersistHistoryAsyncTask;

        $r1 := @parameter0: androidx.appcompat.widget.ActivityChooserModel;

        $r0.<androidx.appcompat.widget.ActivityChooserModel$PersistHistoryAsyncTask: androidx.appcompat.widget.ActivityChooserModel this$0> = $r1;

        specialinvoke $r0.<android.os.AsyncTask: void <init>()>();

        return;
    }

    public volatile java.lang.Object doInBackground(java.lang.Object[])
    {
        androidx.appcompat.widget.ActivityChooserModel$PersistHistoryAsyncTask $r0;
        java.lang.Void $r1;
        java.lang.Object[] $r2;

        $r0 := @this: androidx.appcompat.widget.ActivityChooserModel$PersistHistoryAsyncTask;

        $r2 := @parameter0: java.lang.Object[];

        $r1 = virtualinvoke $r0.<androidx.appcompat.widget.ActivityChooserModel$PersistHistoryAsyncTask: java.lang.Void doInBackground(java.lang.Object[])>($r2);

        return $r1;
    }

    public transient java.lang.Void doInBackground(java.lang.Object[])
    {
        androidx.appcompat.widget.ActivityChooserModel$PersistHistoryAsyncTask $r0;
        java.lang.Object[] $r1;
        java.lang.Object $r2;
        java.util.List $r3;
        java.lang.String $r4, $r12;
        androidx.appcompat.widget.ActivityChooserModel $r5;
        android.content.Context $r6;
        java.io.FileOutputStream $r7;
        org.xmlpull.v1.XmlSerializer $r8;
        java.lang.Boolean $r9;
        int $i0, $i1;
        androidx.appcompat.widget.ActivityChooserModel$HistoricalRecord $r10;
        android.content.ComponentName $r11;
        long $l2;
        float $f0;
        java.lang.Throwable $r13, $r14, $r15, $r16, $r17, $r19, $r20, $r21, $r22;
        java.lang.StringBuilder $r18;

        $r0 := @this: androidx.appcompat.widget.ActivityChooserModel$PersistHistoryAsyncTask;

        $r1 := @parameter0: java.lang.Object[];

        $r2 = $r1[0];

        $r3 = (java.util.List) $r2;

        $r2 = $r1[1];

        $r4 = (java.lang.String) $r2;

        $r5 = $r0.<androidx.appcompat.widget.ActivityChooserModel$PersistHistoryAsyncTask: androidx.appcompat.widget.ActivityChooserModel this$0>;

        $r6 = $r5.<androidx.appcompat.widget.ActivityChooserModel: android.content.Context mContext>;

     label01:
        $r7 = virtualinvoke $r6.<android.content.Context: java.io.FileOutputStream openFileOutput(java.lang.String,int)>($r4, 0);

     label02:
        $r8 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlSerializer newSerializer()>();

     label03:
        interfaceinvoke $r8.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>($r7, null);

        $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke $r8.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>("UTF-8", $r9);

        interfaceinvoke $r8.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "historical-records");

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

     label04:
        $i1 = 0;

     label05:
        if $i1 >= $i0 goto label16;

     label06:
        $r2 = interfaceinvoke $r3.<java.util.List: java.lang.Object remove(int)>(0);

     label07:
        $r10 = (androidx.appcompat.widget.ActivityChooserModel$HistoricalRecord) $r2;

     label08:
        interfaceinvoke $r8.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "historical-record");

     label09:
        $r11 = $r10.<androidx.appcompat.widget.ActivityChooserModel$HistoricalRecord: android.content.ComponentName activity>;

     label10:
        $r12 = virtualinvoke $r11.<android.content.ComponentName: java.lang.String flattenToString()>();

        interfaceinvoke $r8.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "activity", $r12);

     label11:
        $l2 = $r10.<androidx.appcompat.widget.ActivityChooserModel$HistoricalRecord: long time>;

     label12:
        $r12 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l2);

        interfaceinvoke $r8.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "time", $r12);

     label13:
        $f0 = $r10.<androidx.appcompat.widget.ActivityChooserModel$HistoricalRecord: float weight>;

     label14:
        $r12 = staticinvoke <java.lang.String: java.lang.String valueOf(float)>($f0);

        interfaceinvoke $r8.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "weight", $r12);

        interfaceinvoke $r8.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "historical-record");

     label15:
        $i1 = $i1 + 1;

        goto label05;

     label16:
        interfaceinvoke $r8.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "historical-records");

        interfaceinvoke $r8.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

     label17:
        $r5 = $r0.<androidx.appcompat.widget.ActivityChooserModel$PersistHistoryAsyncTask: androidx.appcompat.widget.ActivityChooserModel this$0>;

        $r5.<androidx.appcompat.widget.ActivityChooserModel: boolean mCanReadHistoricalData> = 1;

        if $r7 == null goto label40;

     label18:
        virtualinvoke $r7.<java.io.FileOutputStream: void close()>();

     label19:
        goto label38;

     label20:
        $r13 := @caughtexception;

        goto label25;

     label21:
        $r14 := @caughtexception;

        goto label30;

     label22:
        $r15 := @caughtexception;

        goto label35;

     label23:
        $r16 := @caughtexception;

        $r17 = $r16;

        goto label42;

     label24:
        $r13 := @caughtexception;

     label25:
        $r12 = <androidx.appcompat.widget.ActivityChooserModel: java.lang.String LOG_TAG>;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error writing historical record file: ");

        $r5 = $r0.<androidx.appcompat.widget.ActivityChooserModel$PersistHistoryAsyncTask: androidx.appcompat.widget.ActivityChooserModel this$0>;

        $r4 = $r5.<androidx.appcompat.widget.ActivityChooserModel: java.lang.String mHistoryFileName>;

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r12, $r4, $r13);

     label26:
        $r5 = $r0.<androidx.appcompat.widget.ActivityChooserModel$PersistHistoryAsyncTask: androidx.appcompat.widget.ActivityChooserModel this$0>;

        $r5.<androidx.appcompat.widget.ActivityChooserModel: boolean mCanReadHistoricalData> = 1;

        if $r7 == null goto label48;

     label27:
        virtualinvoke $r7.<java.io.FileOutputStream: void close()>();

     label28:
        goto label38;

     label29:
        $r14 := @caughtexception;

     label30:
        $r12 = <androidx.appcompat.widget.ActivityChooserModel: java.lang.String LOG_TAG>;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error writing historical record file: ");

        $r5 = $r0.<androidx.appcompat.widget.ActivityChooserModel$PersistHistoryAsyncTask: androidx.appcompat.widget.ActivityChooserModel this$0>;

        $r4 = $r5.<androidx.appcompat.widget.ActivityChooserModel: java.lang.String mHistoryFileName>;

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r12, $r4, $r14);

     label31:
        $r5 = $r0.<androidx.appcompat.widget.ActivityChooserModel$PersistHistoryAsyncTask: androidx.appcompat.widget.ActivityChooserModel this$0>;

        $r5.<androidx.appcompat.widget.ActivityChooserModel: boolean mCanReadHistoricalData> = 1;

        if $r7 == null goto label48;

     label32:
        virtualinvoke $r7.<java.io.FileOutputStream: void close()>();

     label33:
        goto label38;

     label34:
        $r15 := @caughtexception;

     label35:
        $r12 = <androidx.appcompat.widget.ActivityChooserModel: java.lang.String LOG_TAG>;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error writing historical record file: ");

        $r5 = $r0.<androidx.appcompat.widget.ActivityChooserModel$PersistHistoryAsyncTask: androidx.appcompat.widget.ActivityChooserModel this$0>;

        $r4 = $r5.<androidx.appcompat.widget.ActivityChooserModel: java.lang.String mHistoryFileName>;

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r12, $r4, $r15);

     label36:
        $r5 = $r0.<androidx.appcompat.widget.ActivityChooserModel$PersistHistoryAsyncTask: androidx.appcompat.widget.ActivityChooserModel this$0>;

        $r5.<androidx.appcompat.widget.ActivityChooserModel: boolean mCanReadHistoricalData> = 1;

        if $r7 == null goto label48;

     label37:
        virtualinvoke $r7.<java.io.FileOutputStream: void close()>();

     label38:
        return null;

     label39:
        $r19 := @caughtexception;

        goto label38;

     label40:
        return null;

     label41:
        $r20 := @caughtexception;

        $r17 = $r20;

     label42:
        $r5 = $r0.<androidx.appcompat.widget.ActivityChooserModel$PersistHistoryAsyncTask: androidx.appcompat.widget.ActivityChooserModel this$0>;

        $r5.<androidx.appcompat.widget.ActivityChooserModel: boolean mCanReadHistoricalData> = 1;

        if $r7 == null goto label46;

     label43:
        virtualinvoke $r7.<java.io.FileOutputStream: void close()>();

     label44:
        goto label46;

     label45:
        $r21 := @caughtexception;

     label46:
        throw $r17;

     label47:
        $r22 := @caughtexception;

        $r12 = <androidx.appcompat.widget.ActivityChooserModel: java.lang.String LOG_TAG>;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error writing historical record file: ");

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r12, $r4, $r22);

     label48:
        return null;

        catch java.io.FileNotFoundException from label01 to label02 with label47;
        catch java.lang.IllegalArgumentException from label03 to label04 with label34;
        catch java.lang.IllegalArgumentException from label06 to label07 with label34;
        catch java.lang.IllegalArgumentException from label08 to label09 with label34;
        catch java.lang.IllegalArgumentException from label10 to label11 with label34;
        catch java.lang.IllegalStateException from label03 to label04 with label29;
        catch java.lang.IllegalStateException from label06 to label07 with label29;
        catch java.lang.IllegalStateException from label08 to label09 with label29;
        catch java.lang.IllegalStateException from label10 to label11 with label29;
        catch java.io.IOException from label03 to label04 with label24;
        catch java.io.IOException from label06 to label07 with label24;
        catch java.io.IOException from label08 to label09 with label24;
        catch java.io.IOException from label10 to label11 with label24;
        catch java.lang.Throwable from label03 to label04 with label23;
        catch java.lang.Throwable from label06 to label11 with label23;
        catch java.lang.IllegalArgumentException from label12 to label13 with label22;
        catch java.lang.IllegalArgumentException from label14 to label15 with label22;
        catch java.lang.IllegalArgumentException from label16 to label17 with label22;
        catch java.lang.IllegalStateException from label12 to label13 with label21;
        catch java.lang.IllegalStateException from label14 to label15 with label21;
        catch java.lang.IllegalStateException from label16 to label17 with label21;
        catch java.io.IOException from label12 to label13 with label20;
        catch java.io.IOException from label14 to label15 with label20;
        catch java.io.IOException from label16 to label17 with label20;
        catch java.lang.Throwable from label11 to label15 with label41;
        catch java.lang.Throwable from label16 to label17 with label41;
        catch java.io.IOException from label18 to label19 with label39;
        catch java.lang.Throwable from label25 to label26 with label41;
        catch java.io.IOException from label27 to label28 with label39;
        catch java.lang.Throwable from label30 to label31 with label41;
        catch java.io.IOException from label32 to label33 with label39;
        catch java.lang.Throwable from label35 to label36 with label41;
        catch java.io.IOException from label37 to label38 with label39;
        catch java.io.IOException from label43 to label44 with label45;
    }
}
