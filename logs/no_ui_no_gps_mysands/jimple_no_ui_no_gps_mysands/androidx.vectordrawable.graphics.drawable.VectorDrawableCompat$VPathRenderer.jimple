class androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer extends java.lang.Object
{
    private static final android.graphics.Matrix IDENTITY_MATRIX;
    float mBaseHeight;
    float mBaseWidth;
    private int mChangingConfigurations;
    android.graphics.Paint mFillPaint;
    private final android.graphics.Matrix mFinalPathMatrix;
    java.lang.Boolean mIsStateful;
    private final android.graphics.Path mPath;
    private android.graphics.PathMeasure mPathMeasure;
    private final android.graphics.Path mRenderPath;
    int mRootAlpha;
    final androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup mRootGroup;
    java.lang.String mRootName;
    android.graphics.Paint mStrokePaint;
    final androidx.collection.ArrayMap mVGTargetsMap;
    float mViewportHeight;
    float mViewportWidth;

    static void <clinit>()
    {
        android.graphics.Matrix $r0;

        $r0 = new android.graphics.Matrix;

        specialinvoke $r0.<android.graphics.Matrix: void <init>()>();

        <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Matrix IDENTITY_MATRIX> = $r0;

        return;
    }

    public void <init>()
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer $r0;
        android.graphics.Matrix $r1;
        androidx.collection.ArrayMap $r2;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup $r3;
        android.graphics.Path $r4;

        $r0 := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = new android.graphics.Matrix;

        specialinvoke $r1.<android.graphics.Matrix: void <init>()>();

        $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Matrix mFinalPathMatrix> = $r1;

        $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float mBaseWidth> = 0.0F;

        $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float mBaseHeight> = 0.0F;

        $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float mViewportWidth> = 0.0F;

        $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float mViewportHeight> = 0.0F;

        $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int mRootAlpha> = 255;

        $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: java.lang.String mRootName> = null;

        $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: java.lang.Boolean mIsStateful> = null;

        $r2 = new androidx.collection.ArrayMap;

        specialinvoke $r2.<androidx.collection.ArrayMap: void <init>()>();

        $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: androidx.collection.ArrayMap mVGTargetsMap> = $r2;

        $r3 = new androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup;

        specialinvoke $r3.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void <init>()>();

        $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup mRootGroup> = $r3;

        $r4 = new android.graphics.Path;

        specialinvoke $r4.<android.graphics.Path: void <init>()>();

        $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Path mPath> = $r4;

        $r4 = new android.graphics.Path;

        specialinvoke $r4.<android.graphics.Path: void <init>()>();

        $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Path mRenderPath> = $r4;

        return;
    }

    public void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer)
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer $r0, $r1;
        androidx.collection.ArrayMap $r2;
        android.graphics.Matrix $r3;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup $r4, $r5;
        android.graphics.Path $r6, $r7;
        float $f0;
        int $i0;
        java.lang.String $r8;
        java.lang.Boolean $r9;

        $r0 := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer;

        $r1 := @parameter0: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r3 = new android.graphics.Matrix;

        specialinvoke $r3.<android.graphics.Matrix: void <init>()>();

        $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Matrix mFinalPathMatrix> = $r3;

        $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float mBaseWidth> = 0.0F;

        $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float mBaseHeight> = 0.0F;

        $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float mViewportWidth> = 0.0F;

        $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float mViewportHeight> = 0.0F;

        $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int mRootAlpha> = 255;

        $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: java.lang.String mRootName> = null;

        $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: java.lang.Boolean mIsStateful> = null;

        $r2 = new androidx.collection.ArrayMap;

        specialinvoke $r2.<androidx.collection.ArrayMap: void <init>()>();

        $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: androidx.collection.ArrayMap mVGTargetsMap> = $r2;

        $r4 = new androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup;

        $r5 = $r1.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup mRootGroup>;

        $r2 = $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: androidx.collection.ArrayMap mVGTargetsMap>;

        specialinvoke $r4.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.collection.ArrayMap)>($r5, $r2);

        $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup mRootGroup> = $r4;

        $r6 = new android.graphics.Path;

        $r7 = $r1.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Path mPath>;

        specialinvoke $r6.<android.graphics.Path: void <init>(android.graphics.Path)>($r7);

        $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Path mPath> = $r6;

        $r6 = new android.graphics.Path;

        $r7 = $r1.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Path mRenderPath>;

        specialinvoke $r6.<android.graphics.Path: void <init>(android.graphics.Path)>($r7);

        $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Path mRenderPath> = $r6;

        $f0 = $r1.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float mBaseWidth>;

        $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float mBaseWidth> = $f0;

        $f0 = $r1.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float mBaseHeight>;

        $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float mBaseHeight> = $f0;

        $f0 = $r1.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float mViewportWidth>;

        $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float mViewportWidth> = $f0;

        $f0 = $r1.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float mViewportHeight>;

        $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float mViewportHeight> = $f0;

        $i0 = $r1.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int mChangingConfigurations>;

        $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int mChangingConfigurations> = $i0;

        $i0 = $r1.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int mRootAlpha>;

        $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int mRootAlpha> = $i0;

        $r8 = $r1.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: java.lang.String mRootName>;

        $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: java.lang.String mRootName> = $r8;

        $r8 = $r1.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: java.lang.String mRootName>;

        if $r8 == null goto label1;

        $r2 = $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: androidx.collection.ArrayMap mVGTargetsMap>;

        virtualinvoke $r2.<androidx.collection.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r0);

     label1:
        $r9 = $r1.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: java.lang.Boolean mIsStateful>;

        $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: java.lang.Boolean mIsStateful> = $r9;

        return;
    }

    private static float cross(float, float, float, float)
    {
        float $f0, $f1, $f2, $f3;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $f3 := @parameter3: float;

        $f0 = $f0 * $f3;

        $f1 = $f1 * $f2;

        $f0 = $f0 - $f1;

        return $f0;
    }

    private void drawGroupTree(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup, android.graphics.Matrix, android.graphics.Canvas, int, int, android.graphics.ColorFilter)
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer $r0;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup $r1, $r9;
        android.graphics.Matrix $r2, $r5;
        android.graphics.Canvas $r3;
        int $i0, $i1, $i2, $i3;
        android.graphics.ColorFilter $r4;
        java.util.ArrayList $r6;
        java.lang.Object $r7;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject $r8;
        boolean $z0;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath $r10;

        $r0 := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer;

        $r1 := @parameter0: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup;

        $r2 := @parameter1: android.graphics.Matrix;

        $r3 := @parameter2: android.graphics.Canvas;

        $i0 := @parameter3: int;

        $i1 := @parameter4: int;

        $r4 := @parameter5: android.graphics.ColorFilter;

        $r5 = $r1.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: android.graphics.Matrix mStackedMatrix>;

        virtualinvoke $r5.<android.graphics.Matrix: void set(android.graphics.Matrix)>($r2);

        $r2 = $r1.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: android.graphics.Matrix mStackedMatrix>;

        $r5 = $r1.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: android.graphics.Matrix mLocalMatrix>;

        virtualinvoke $r2.<android.graphics.Matrix: boolean preConcat(android.graphics.Matrix)>($r5);

        virtualinvoke $r3.<android.graphics.Canvas: int save()>();

        $i2 = 0;

     label1:
        $r6 = $r1.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: java.util.ArrayList mChildren>;

        $i3 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        if $i2 >= $i3 goto label4;

        $r6 = $r1.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: java.util.ArrayList mChildren>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r8 = (androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject) $r7;

        $z0 = $r8 instanceof androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup;

        if $z0 == 0 goto label2;

        $r9 = (androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup) $r8;

        $r2 = $r1.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: android.graphics.Matrix mStackedMatrix>;

        specialinvoke $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawGroupTree(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter)>($r9, $r2, $r3, $i0, $i1, $r4);

        goto label3;

     label2:
        $z0 = $r8 instanceof androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath;

        if $z0 == 0 goto label3;

        $r10 = (androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath) $r8;

        specialinvoke $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)>($r1, $r10, $r3, $i0, $i1, $r4);

        goto label3;

     label3:
        $i2 = $i2 + 1;

        goto label1;

     label4:
        virtualinvoke $r3.<android.graphics.Canvas: void restore()>();

        return;
    }

    private void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup, androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath, android.graphics.Canvas, int, int, android.graphics.ColorFilter)
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer $r0;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup $r1;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath $r2;
        android.graphics.Canvas $r3;
        int $i0, $i1;
        android.graphics.ColorFilter $r4;
        android.graphics.Matrix $r5, $r6;
        float $f0, $f1, $f2, $f3, $f4;
        byte $b2;
        android.graphics.Path $r7, $r8;
        boolean $z0;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath $r9;
        android.graphics.PathMeasure $r10;
        androidx.core.content.res.ComplexColorCompat $r11;
        android.graphics.Paint $r12;
        android.graphics.Paint$Style $r13;
        android.graphics.Shader $r14;
        android.graphics.Path$FillType $r15;
        android.graphics.Paint$Join $r16;
        android.graphics.Paint$Cap $r17;

        $r0 := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer;

        $r1 := @parameter0: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup;

        $r2 := @parameter1: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath;

        $r3 := @parameter2: android.graphics.Canvas;

        $i0 := @parameter3: int;

        $i1 := @parameter4: int;

        $r4 := @parameter5: android.graphics.ColorFilter;

        $f0 = (float) $i0;

        $f1 = $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float mViewportWidth>;

        $f1 = $f0 / $f1;

        $f0 = (float) $i1;

        $f2 = $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float mViewportHeight>;

        $f2 = $f0 / $f2;

        $f0 = staticinvoke <java.lang.Math: float min(float,float)>($f1, $f2);

        $r5 = $r1.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: android.graphics.Matrix mStackedMatrix>;

        $r6 = $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Matrix mFinalPathMatrix>;

        virtualinvoke $r6.<android.graphics.Matrix: void set(android.graphics.Matrix)>($r5);

        $r6 = $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Matrix mFinalPathMatrix>;

        virtualinvoke $r6.<android.graphics.Matrix: boolean postScale(float,float)>($f1, $f2);

        $f1 = specialinvoke $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float getMatrixScale(android.graphics.Matrix)>($r5);

        $b2 = $f1 cmpl 0.0F;

        if $b2 != 0 goto label01;

        return;

     label01:
        $r7 = $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Path mPath>;

        virtualinvoke $r2.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: void toPath(android.graphics.Path)>($r7);

        $r7 = $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Path mPath>;

        $r8 = $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Path mRenderPath>;

        virtualinvoke $r8.<android.graphics.Path: void reset()>();

        $z0 = virtualinvoke $r2.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: boolean isClipPath()>();

        if $z0 == 0 goto label02;

        $r8 = $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Path mRenderPath>;

        $r5 = $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Matrix mFinalPathMatrix>;

        virtualinvoke $r8.<android.graphics.Path: void addPath(android.graphics.Path,android.graphics.Matrix)>($r7, $r5);

        $r7 = $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Path mRenderPath>;

        virtualinvoke $r3.<android.graphics.Canvas: boolean clipPath(android.graphics.Path)>($r7);

        return;

     label02:
        $r9 = (androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath) $r2;

        $f2 = $r9.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float mTrimPathStart>;

        $b2 = $f2 cmpl 0.0F;

        if $b2 != 0 goto label04;

        $f2 = $r9.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float mTrimPathEnd>;

        $b2 = $f2 cmpl 1.0F;

        if $b2 == 0 goto label03;

        goto label04;

     label03:
        goto label08;

     label04:
        $f2 = $r9.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float mTrimPathStart>;

        $f3 = $r9.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float mTrimPathOffset>;

        $f2 = $f2 + $f3;

        $f2 = $f2 % 1.0F;

        $f3 = $r9.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float mTrimPathEnd>;

        $f4 = $r9.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float mTrimPathOffset>;

        $f3 = $f3 + $f4;

        $f4 = $f3 % 1.0F;

        $r10 = $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.PathMeasure mPathMeasure>;

        if $r10 != null goto label05;

        $r10 = new android.graphics.PathMeasure;

        specialinvoke $r10.<android.graphics.PathMeasure: void <init>()>();

        $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.PathMeasure mPathMeasure> = $r10;

     label05:
        $r10 = $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.PathMeasure mPathMeasure>;

        $r8 = $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Path mPath>;

        virtualinvoke $r10.<android.graphics.PathMeasure: void setPath(android.graphics.Path,boolean)>($r8, 0);

        $r10 = $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.PathMeasure mPathMeasure>;

        $f3 = virtualinvoke $r10.<android.graphics.PathMeasure: float getLength()>();

        $f2 = $f2 * $f3;

        $f4 = $f4 * $f3;

        virtualinvoke $r7.<android.graphics.Path: void reset()>();

        $b2 = $f2 cmpl $f4;

        if $b2 <= 0 goto label06;

        $r10 = $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.PathMeasure mPathMeasure>;

        virtualinvoke $r10.<android.graphics.PathMeasure: boolean getSegment(float,float,android.graphics.Path,boolean)>($f2, $f3, $r7, 1);

        $r10 = $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.PathMeasure mPathMeasure>;

        virtualinvoke $r10.<android.graphics.PathMeasure: boolean getSegment(float,float,android.graphics.Path,boolean)>(0.0F, $f4, $r7, 1);

        goto label07;

     label06:
        $r10 = $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.PathMeasure mPathMeasure>;

        virtualinvoke $r10.<android.graphics.PathMeasure: boolean getSegment(float,float,android.graphics.Path,boolean)>($f2, $f4, $r7, 1);

     label07:
        virtualinvoke $r7.<android.graphics.Path: void rLineTo(float,float)>(0.0F, 0.0F);

     label08:
        $r8 = $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Path mRenderPath>;

        $r5 = $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Matrix mFinalPathMatrix>;

        virtualinvoke $r8.<android.graphics.Path: void addPath(android.graphics.Path,android.graphics.Matrix)>($r7, $r5);

        $r11 = $r9.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: androidx.core.content.res.ComplexColorCompat mFillColor>;

        $z0 = virtualinvoke $r11.<androidx.core.content.res.ComplexColorCompat: boolean willDraw()>();

        if $z0 == 0 goto label14;

        $r11 = $r9.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: androidx.core.content.res.ComplexColorCompat mFillColor>;

        $r12 = $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Paint mFillPaint>;

        if $r12 != null goto label09;

        $r12 = new android.graphics.Paint;

        specialinvoke $r12.<android.graphics.Paint: void <init>(int)>(1);

        $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Paint mFillPaint> = $r12;

        $r12 = $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Paint mFillPaint>;

        $r13 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        virtualinvoke $r12.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r13);

     label09:
        $r12 = $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Paint mFillPaint>;

        $z0 = virtualinvoke $r11.<androidx.core.content.res.ComplexColorCompat: boolean isGradient()>();

        if $z0 == 0 goto label10;

        $r14 = virtualinvoke $r11.<androidx.core.content.res.ComplexColorCompat: android.graphics.Shader getShader()>();

        $r5 = $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Matrix mFinalPathMatrix>;

        virtualinvoke $r14.<android.graphics.Shader: void setLocalMatrix(android.graphics.Matrix)>($r5);

        virtualinvoke $r12.<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>($r14);

        $f2 = $r9.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float mFillAlpha>;

        $f2 = $f2 * 255.0F;

        $i0 = staticinvoke <java.lang.Math: int round(float)>($f2);

        virtualinvoke $r12.<android.graphics.Paint: void setAlpha(int)>($i0);

        goto label11;

     label10:
        virtualinvoke $r12.<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>(null);

        virtualinvoke $r12.<android.graphics.Paint: void setAlpha(int)>(255);

        $i0 = virtualinvoke $r11.<androidx.core.content.res.ComplexColorCompat: int getColor()>();

        $f2 = $r9.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float mFillAlpha>;

        $i0 = staticinvoke <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int applyAlpha(int,float)>($i0, $f2);

        virtualinvoke $r12.<android.graphics.Paint: void setColor(int)>($i0);

     label11:
        virtualinvoke $r12.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>($r4);

        $r7 = $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Path mRenderPath>;

        $i0 = $r9.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int mFillRule>;

        if $i0 != 0 goto label12;

        $r15 = <android.graphics.Path$FillType: android.graphics.Path$FillType WINDING>;

        goto label13;

     label12:
        $r15 = <android.graphics.Path$FillType: android.graphics.Path$FillType EVEN_ODD>;

     label13:
        virtualinvoke $r7.<android.graphics.Path: void setFillType(android.graphics.Path$FillType)>($r15);

        $r7 = $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Path mRenderPath>;

        virtualinvoke $r3.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>($r7, $r12);

     label14:
        $r11 = $r9.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: androidx.core.content.res.ComplexColorCompat mStrokeColor>;

        $z0 = virtualinvoke $r11.<androidx.core.content.res.ComplexColorCompat: boolean willDraw()>();

        if $z0 == 0 goto label20;

        $r11 = $r9.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: androidx.core.content.res.ComplexColorCompat mStrokeColor>;

        $r12 = $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Paint mStrokePaint>;

        if $r12 != null goto label15;

        $r12 = new android.graphics.Paint;

        specialinvoke $r12.<android.graphics.Paint: void <init>(int)>(1);

        $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Paint mStrokePaint> = $r12;

        $r12 = $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Paint mStrokePaint>;

        $r13 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke $r12.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r13);

     label15:
        $r12 = $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Paint mStrokePaint>;

        $r16 = $r9.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: android.graphics.Paint$Join mStrokeLineJoin>;

        if $r16 == null goto label16;

        $r16 = $r9.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: android.graphics.Paint$Join mStrokeLineJoin>;

        virtualinvoke $r12.<android.graphics.Paint: void setStrokeJoin(android.graphics.Paint$Join)>($r16);

     label16:
        $r17 = $r9.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: android.graphics.Paint$Cap mStrokeLineCap>;

        if $r17 == null goto label17;

        $r17 = $r9.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: android.graphics.Paint$Cap mStrokeLineCap>;

        virtualinvoke $r12.<android.graphics.Paint: void setStrokeCap(android.graphics.Paint$Cap)>($r17);

     label17:
        $f2 = $r9.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float mStrokeMiterlimit>;

        virtualinvoke $r12.<android.graphics.Paint: void setStrokeMiter(float)>($f2);

        $z0 = virtualinvoke $r11.<androidx.core.content.res.ComplexColorCompat: boolean isGradient()>();

        if $z0 == 0 goto label18;

        $r14 = virtualinvoke $r11.<androidx.core.content.res.ComplexColorCompat: android.graphics.Shader getShader()>();

        $r5 = $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Matrix mFinalPathMatrix>;

        virtualinvoke $r14.<android.graphics.Shader: void setLocalMatrix(android.graphics.Matrix)>($r5);

        virtualinvoke $r12.<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>($r14);

        $f2 = $r9.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float mStrokeAlpha>;

        $f2 = $f2 * 255.0F;

        $i0 = staticinvoke <java.lang.Math: int round(float)>($f2);

        virtualinvoke $r12.<android.graphics.Paint: void setAlpha(int)>($i0);

        goto label19;

     label18:
        virtualinvoke $r12.<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>(null);

        virtualinvoke $r12.<android.graphics.Paint: void setAlpha(int)>(255);

        $i0 = virtualinvoke $r11.<androidx.core.content.res.ComplexColorCompat: int getColor()>();

        $f2 = $r9.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float mStrokeAlpha>;

        $i0 = staticinvoke <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int applyAlpha(int,float)>($i0, $f2);

        virtualinvoke $r12.<android.graphics.Paint: void setColor(int)>($i0);

     label19:
        virtualinvoke $r12.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>($r4);

        $f0 = $f0 * $f1;

        $f1 = $r9.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float mStrokeWidth>;

        $f0 = $f1 * $f0;

        virtualinvoke $r12.<android.graphics.Paint: void setStrokeWidth(float)>($f0);

        $r7 = $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Path mRenderPath>;

        virtualinvoke $r3.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>($r7, $r12);

     label20:
        return;
    }

    private float getMatrixScale(android.graphics.Matrix)
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer $r0;
        android.graphics.Matrix $r1;
        float[] $r2;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        double $d0, $d1;
        byte $b0;

        $r0 := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer;

        $r1 := @parameter0: android.graphics.Matrix;

        $r2 = newarray (float)[4];

        $r2[0] = 0.0F;

        $r2[1] = 1.0F;

        $r2[2] = 1.0F;

        $r2[3] = 0.0F;

        virtualinvoke $r1.<android.graphics.Matrix: void mapVectors(float[])>($r2);

        $f0 = $r2[0];

        $d0 = (double) $f0;

        $f0 = $r2[1];

        $d1 = (double) $f0;

        $d0 = staticinvoke <java.lang.Math: double hypot(double,double)>($d0, $d1);

        $f0 = (float) $d0;

        $f1 = $r2[2];

        $d0 = (double) $f1;

        $f1 = $r2[3];

        $d1 = (double) $f1;

        $d0 = staticinvoke <java.lang.Math: double hypot(double,double)>($d0, $d1);

        $f1 = (float) $d0;

        $f2 = $r2[0];

        $f3 = $r2[1];

        $f4 = $r2[2];

        $f5 = $r2[3];

        $f2 = staticinvoke <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float cross(float,float,float,float)>($f2, $f3, $f4, $f5);

        $f0 = staticinvoke <java.lang.Math: float max(float,float)>($f0, $f1);

        $b0 = $f0 cmpl 0.0F;

        if $b0 <= 0 goto label1;

        $f1 = staticinvoke <java.lang.Math: float abs(float)>($f2);

        $f0 = $f1 / $f0;

        return $f0;

     label1:
        return 0.0F;
    }

    public void draw(android.graphics.Canvas, int, int, android.graphics.ColorFilter)
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer $r0;
        android.graphics.Canvas $r1;
        int $i0, $i1;
        android.graphics.ColorFilter $r2;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup $r3;
        android.graphics.Matrix $r4;

        $r0 := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer;

        $r1 := @parameter0: android.graphics.Canvas;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 := @parameter3: android.graphics.ColorFilter;

        $r3 = $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup mRootGroup>;

        $r4 = <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Matrix IDENTITY_MATRIX>;

        specialinvoke $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawGroupTree(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter)>($r3, $r4, $r1, $i0, $i1, $r2);

        return;
    }

    public float getAlpha()
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer $r0;
        int $i0;
        float $f0;

        $r0 := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer;

        $i0 = virtualinvoke $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int getRootAlpha()>();

        $f0 = (float) $i0;

        $f0 = $f0 / 255.0F;

        return $f0;
    }

    public int getRootAlpha()
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer $r0;
        int i0;

        $r0 := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer;

        i0 = $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int mRootAlpha>;

        return i0;
    }

    public boolean isStateful()
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer $r0;
        java.lang.Boolean $r1;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup $r2;
        boolean $z0;

        $r0 := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer;

        $r1 = $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: java.lang.Boolean mIsStateful>;

        if $r1 != null goto label1;

        $r2 = $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup mRootGroup>;

        $z0 = virtualinvoke $r2.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: boolean isStateful()>();

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: java.lang.Boolean mIsStateful> = $r1;

     label1:
        $r1 = $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: java.lang.Boolean mIsStateful>;

        $z0 = virtualinvoke $r1.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    public boolean onStateChanged(int[])
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer $r0;
        int[] $r1;
        boolean $z0;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup $r2;

        $r0 := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer;

        $r1 := @parameter0: int[];

        $r2 = $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup mRootGroup>;

        $z0 = virtualinvoke $r2.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: boolean onStateChanged(int[])>($r1);

        return $z0;
    }

    public void setAlpha(float)
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer $r0;
        float $f0;
        int $i0;

        $r0 := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer;

        $f0 := @parameter0: float;

        $f0 = 255.0F * $f0;

        $i0 = (int) $f0;

        virtualinvoke $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setRootAlpha(int)>($i0);

        return;
    }

    public void setRootAlpha(int)
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer $r0;
        int $i0;

        $r0 := @this: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer;

        $i0 := @parameter0: int;

        $r0.<androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int mRootAlpha> = $i0;

        return;
    }
}
