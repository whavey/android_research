public class androidx.core.graphics.drawable.IconCompat extends androidx.versionedparcelable.CustomVersionedParcelable
{
    private static final float ADAPTIVE_ICON_INSET_FACTOR;
    private static final int AMBIENT_SHADOW_ALPHA;
    private static final float BLUR_FACTOR;
    static final android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE;
    private static final float DEFAULT_VIEW_PORT_SCALE;
    private static final java.lang.String EXTRA_INT1;
    private static final java.lang.String EXTRA_INT2;
    private static final java.lang.String EXTRA_OBJ;
    private static final java.lang.String EXTRA_TINT_LIST;
    private static final java.lang.String EXTRA_TINT_MODE;
    private static final java.lang.String EXTRA_TYPE;
    private static final float ICON_DIAMETER_FACTOR;
    private static final int KEY_SHADOW_ALPHA;
    private static final float KEY_SHADOW_OFFSET_FACTOR;
    private static final java.lang.String TAG;
    public static final int TYPE_UNKNOWN;
    public byte[] mData;
    public int mInt1;
    public int mInt2;
    java.lang.Object mObj1;
    public android.os.Parcelable mParcelable;
    public android.content.res.ColorStateList mTintList;
    android.graphics.PorterDuff$Mode mTintMode;
    public java.lang.String mTintModeStr;
    public int mType;

    static void <clinit>()
    {
        android.graphics.PorterDuff$Mode $r0;

        <androidx.core.graphics.drawable.IconCompat: int TYPE_UNKNOWN> = -1;

        <androidx.core.graphics.drawable.IconCompat: java.lang.String TAG> = "IconCompat";

        <androidx.core.graphics.drawable.IconCompat: float KEY_SHADOW_OFFSET_FACTOR> = 0.020833334F;

        <androidx.core.graphics.drawable.IconCompat: int KEY_SHADOW_ALPHA> = 61;

        <androidx.core.graphics.drawable.IconCompat: float ICON_DIAMETER_FACTOR> = 0.9166667F;

        <androidx.core.graphics.drawable.IconCompat: java.lang.String EXTRA_TYPE> = "type";

        <androidx.core.graphics.drawable.IconCompat: java.lang.String EXTRA_TINT_MODE> = "tint_mode";

        <androidx.core.graphics.drawable.IconCompat: java.lang.String EXTRA_TINT_LIST> = "tint_list";

        <androidx.core.graphics.drawable.IconCompat: java.lang.String EXTRA_OBJ> = "obj";

        <androidx.core.graphics.drawable.IconCompat: java.lang.String EXTRA_INT2> = "int2";

        <androidx.core.graphics.drawable.IconCompat: java.lang.String EXTRA_INT1> = "int1";

        <androidx.core.graphics.drawable.IconCompat: float DEFAULT_VIEW_PORT_SCALE> = 0.6666667F;

        <androidx.core.graphics.drawable.IconCompat: float BLUR_FACTOR> = 0.010416667F;

        <androidx.core.graphics.drawable.IconCompat: int AMBIENT_SHADOW_ALPHA> = 30;

        <androidx.core.graphics.drawable.IconCompat: float ADAPTIVE_ICON_INSET_FACTOR> = 0.25F;

        $r0 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_IN>;

        <androidx.core.graphics.drawable.IconCompat: android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE> = $r0;

        return;
    }

    public void <init>()
    {
        androidx.core.graphics.drawable.IconCompat $r0;
        android.graphics.PorterDuff$Mode $r1;

        $r0 := @this: androidx.core.graphics.drawable.IconCompat;

        specialinvoke $r0.<androidx.versionedparcelable.CustomVersionedParcelable: void <init>()>();

        $r0.<androidx.core.graphics.drawable.IconCompat: android.content.res.ColorStateList mTintList> = null;

        $r1 = <androidx.core.graphics.drawable.IconCompat: android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE>;

        $r0.<androidx.core.graphics.drawable.IconCompat: android.graphics.PorterDuff$Mode mTintMode> = $r1;

        return;
    }

    private void <init>(int)
    {
        androidx.core.graphics.drawable.IconCompat $r0;
        int $i0;
        android.graphics.PorterDuff$Mode $r1;

        $r0 := @this: androidx.core.graphics.drawable.IconCompat;

        $i0 := @parameter0: int;

        specialinvoke $r0.<androidx.versionedparcelable.CustomVersionedParcelable: void <init>()>();

        $r0.<androidx.core.graphics.drawable.IconCompat: android.content.res.ColorStateList mTintList> = null;

        $r1 = <androidx.core.graphics.drawable.IconCompat: android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE>;

        $r0.<androidx.core.graphics.drawable.IconCompat: android.graphics.PorterDuff$Mode mTintMode> = $r1;

        $r0.<androidx.core.graphics.drawable.IconCompat: int mType> = $i0;

        return;
    }

    public static androidx.core.graphics.drawable.IconCompat createFromBundle(android.os.Bundle)
    {
        android.os.Bundle $r0;
        androidx.core.graphics.drawable.IconCompat $r1;
        int $i0, $i1;
        boolean $z0;
        android.os.Parcelable $r2;
        android.content.res.ColorStateList $r3;
        java.lang.String $r4;
        android.graphics.PorterDuff$Mode $r5;
        java.lang.StringBuilder $r6;
        byte[] $r7;

        $r0 := @parameter0: android.os.Bundle;

        $i0 = virtualinvoke $r0.<android.os.Bundle: int getInt(java.lang.String)>("type");

        $r1 = new androidx.core.graphics.drawable.IconCompat;

        specialinvoke $r1.<androidx.core.graphics.drawable.IconCompat: void <init>(int)>($i0);

        $i1 = virtualinvoke $r0.<android.os.Bundle: int getInt(java.lang.String)>("int1");

        $r1.<androidx.core.graphics.drawable.IconCompat: int mInt1> = $i1;

        $i1 = virtualinvoke $r0.<android.os.Bundle: int getInt(java.lang.String)>("int2");

        $r1.<androidx.core.graphics.drawable.IconCompat: int mInt2> = $i1;

        $z0 = virtualinvoke $r0.<android.os.Bundle: boolean containsKey(java.lang.String)>("tint_list");

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke $r0.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("tint_list");

        $r3 = (android.content.res.ColorStateList) $r2;

        $r1.<androidx.core.graphics.drawable.IconCompat: android.content.res.ColorStateList mTintList> = $r3;

     label1:
        $z0 = virtualinvoke $r0.<android.os.Bundle: boolean containsKey(java.lang.String)>("tint_mode");

        if $z0 == 0 goto label2;

        $r4 = virtualinvoke $r0.<android.os.Bundle: java.lang.String getString(java.lang.String)>("tint_mode");

        $r5 = staticinvoke <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode valueOf(java.lang.String)>($r4);

        $r1.<androidx.core.graphics.drawable.IconCompat: android.graphics.PorterDuff$Mode mTintMode> = $r5;

     label2:
        if $i0 == -1 goto label5;

        if $i0 == 1 goto label5;

        if $i0 == 2 goto label4;

        if $i0 == 3 goto label3;

        if $i0 == 4 goto label4;

        if $i0 == 5 goto label5;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown type ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("IconCompat", $r4);

        return null;

     label3:
        $r7 = virtualinvoke $r0.<android.os.Bundle: byte[] getByteArray(java.lang.String)>("obj");

        $r1.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1> = $r7;

        return $r1;

     label4:
        $r4 = virtualinvoke $r0.<android.os.Bundle: java.lang.String getString(java.lang.String)>("obj");

        $r1.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1> = $r4;

        return $r1;

     label5:
        $r2 = virtualinvoke $r0.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("obj");

        $r1.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1> = $r2;

        return $r1;
    }

    public static androidx.core.graphics.drawable.IconCompat createFromIcon(android.content.Context, android.graphics.drawable.Icon)
    {
        android.content.Context $r0;
        android.graphics.drawable.Icon $r1;
        int $i0;
        androidx.core.graphics.drawable.IconCompat $r2;
        android.net.Uri $r3;
        java.lang.String $r4;
        android.content.res.Resources $r5;
        java.lang.Throwable $r6;
        java.lang.IllegalArgumentException $r7;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.graphics.drawable.Icon;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r1);

        $i0 = staticinvoke <androidx.core.graphics.drawable.IconCompat: int getType(android.graphics.drawable.Icon)>($r1);

        if $i0 == 2 goto label2;

        if $i0 == 4 goto label1;

        $r2 = new androidx.core.graphics.drawable.IconCompat;

        specialinvoke $r2.<androidx.core.graphics.drawable.IconCompat: void <init>(int)>(-1);

        $r2.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1> = $r1;

        return $r2;

     label1:
        $r3 = staticinvoke <androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>($r1);

        $r2 = staticinvoke <androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createWithContentUri(android.net.Uri)>($r3);

        return $r2;

     label2:
        $r4 = staticinvoke <androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>($r1);

     label3:
        $r5 = staticinvoke <androidx.core.graphics.drawable.IconCompat: android.content.res.Resources getResources(android.content.Context,java.lang.String)>($r0, $r4);

        $i0 = staticinvoke <androidx.core.graphics.drawable.IconCompat: int getResId(android.graphics.drawable.Icon)>($r1);

        $r2 = staticinvoke <androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createWithResource(android.content.res.Resources,java.lang.String,int)>($r5, $r4, $i0);

     label4:
        return $r2;

     label5:
        $r6 := @caughtexception;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Icon resource cannot be found");

        throw $r7;

        catch android.content.res.Resources$NotFoundException from label3 to label4 with label5;
    }

    public static androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)
    {
        android.graphics.drawable.Icon $r0;
        int $i0;
        androidx.core.graphics.drawable.IconCompat $r1;
        android.net.Uri $r2;
        java.lang.String $r3;

        $r0 := @parameter0: android.graphics.drawable.Icon;

        staticinvoke <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r0);

        $i0 = staticinvoke <androidx.core.graphics.drawable.IconCompat: int getType(android.graphics.drawable.Icon)>($r0);

        if $i0 == 2 goto label2;

        if $i0 == 4 goto label1;

        $r1 = new androidx.core.graphics.drawable.IconCompat;

        specialinvoke $r1.<androidx.core.graphics.drawable.IconCompat: void <init>(int)>(-1);

        $r1.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1> = $r0;

        return $r1;

     label1:
        $r2 = staticinvoke <androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>($r0);

        $r1 = staticinvoke <androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createWithContentUri(android.net.Uri)>($r2);

        return $r1;

     label2:
        $r3 = staticinvoke <androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>($r0);

        $i0 = staticinvoke <androidx.core.graphics.drawable.IconCompat: int getResId(android.graphics.drawable.Icon)>($r0);

        $r1 = staticinvoke <androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createWithResource(android.content.res.Resources,java.lang.String,int)>(null, $r3, $i0);

        return $r1;
    }

    static android.graphics.Bitmap createLegacyIconFromAdaptiveIcon(android.graphics.Bitmap, boolean)
    {
        android.graphics.Bitmap $r0, $r4;
        boolean $z0;
        android.graphics.Canvas $r1;
        android.graphics.Paint $r2;
        int $i0, $i1;
        float $f0, $f1, $f2, $f3;
        android.graphics.Bitmap$Config $r3;
        android.graphics.BitmapShader $r5;
        android.graphics.Shader$TileMode $r6, $r7;
        android.graphics.Matrix $r8;

        $r0 := @parameter0: android.graphics.Bitmap;

        $z0 := @parameter1: boolean;

        $i0 = virtualinvoke $r0.<android.graphics.Bitmap: int getWidth()>();

        $i1 = virtualinvoke $r0.<android.graphics.Bitmap: int getHeight()>();

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        $f0 = (float) $i0;

        $f0 = $f0 * 0.6666667F;

        $i0 = (int) $f0;

        $r3 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        $r4 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>($i0, $i0, $r3);

        $r1 = new android.graphics.Canvas;

        specialinvoke $r1.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>($r4);

        $r2 = new android.graphics.Paint;

        specialinvoke $r2.<android.graphics.Paint: void <init>(int)>(3);

        $f0 = (float) $i0;

        $f0 = $f0 * 0.5F;

        $f1 = 0.9166667F * $f0;

        if $z0 == 0 goto label1;

        $f2 = (float) $i0;

        $f2 = $f2 * 0.010416667F;

        virtualinvoke $r2.<android.graphics.Paint: void setColor(int)>(0);

        $f3 = (float) $i0;

        $f3 = $f3 * 0.020833334F;

        virtualinvoke $r2.<android.graphics.Paint: void setShadowLayer(float,float,float,int)>($f2, 0.0F, $f3, 1023410176);

        virtualinvoke $r1.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>($f0, $f0, $f1, $r2);

        virtualinvoke $r2.<android.graphics.Paint: void setShadowLayer(float,float,float,int)>($f2, 0.0F, 0.0F, 503316480);

        virtualinvoke $r1.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>($f0, $f0, $f1, $r2);

        virtualinvoke $r2.<android.graphics.Paint: void clearShadowLayer()>();

     label1:
        virtualinvoke $r2.<android.graphics.Paint: void setColor(int)>(-16777216);

        $r5 = new android.graphics.BitmapShader;

        $r6 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode CLAMP>;

        $r7 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode CLAMP>;

        specialinvoke $r5.<android.graphics.BitmapShader: void <init>(android.graphics.Bitmap,android.graphics.Shader$TileMode,android.graphics.Shader$TileMode)>($r0, $r6, $r7);

        $r8 = new android.graphics.Matrix;

        specialinvoke $r8.<android.graphics.Matrix: void <init>()>();

        $i1 = virtualinvoke $r0.<android.graphics.Bitmap: int getWidth()>();

        $i1 = $i1 - $i0;

        $i1 = neg $i1;

        $i1 = $i1 / 2;

        $f2 = (float) $i1;

        $i1 = virtualinvoke $r0.<android.graphics.Bitmap: int getHeight()>();

        $i0 = $i1 - $i0;

        $i0 = neg $i0;

        $i0 = $i0 / 2;

        $f3 = (float) $i0;

        virtualinvoke $r8.<android.graphics.Matrix: void setTranslate(float,float)>($f2, $f3);

        virtualinvoke $r5.<android.graphics.BitmapShader: void setLocalMatrix(android.graphics.Matrix)>($r8);

        virtualinvoke $r2.<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>($r5);

        virtualinvoke $r1.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>($f0, $f0, $f1, $r2);

        virtualinvoke $r1.<android.graphics.Canvas: void setBitmap(android.graphics.Bitmap)>(null);

        return $r4;
    }

    public static androidx.core.graphics.drawable.IconCompat createWithAdaptiveBitmap(android.graphics.Bitmap)
    {
        android.graphics.Bitmap $r0;
        androidx.core.graphics.drawable.IconCompat $r1;
        java.lang.IllegalArgumentException $r2;

        $r0 := @parameter0: android.graphics.Bitmap;

        if $r0 == null goto label1;

        $r1 = new androidx.core.graphics.drawable.IconCompat;

        specialinvoke $r1.<androidx.core.graphics.drawable.IconCompat: void <init>(int)>(5);

        $r1.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1> = $r0;

        return $r1;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Bitmap must not be null.");

        throw $r2;
    }

    public static androidx.core.graphics.drawable.IconCompat createWithBitmap(android.graphics.Bitmap)
    {
        android.graphics.Bitmap $r0;
        androidx.core.graphics.drawable.IconCompat $r1;
        java.lang.IllegalArgumentException $r2;

        $r0 := @parameter0: android.graphics.Bitmap;

        if $r0 == null goto label1;

        $r1 = new androidx.core.graphics.drawable.IconCompat;

        specialinvoke $r1.<androidx.core.graphics.drawable.IconCompat: void <init>(int)>(1);

        $r1.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1> = $r0;

        return $r1;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Bitmap must not be null.");

        throw $r2;
    }

    public static androidx.core.graphics.drawable.IconCompat createWithContentUri(android.net.Uri)
    {
        android.net.Uri $r0;
        java.lang.String $r1;
        androidx.core.graphics.drawable.IconCompat $r2;
        java.lang.IllegalArgumentException $r3;

        $r0 := @parameter0: android.net.Uri;

        if $r0 == null goto label1;

        $r1 = virtualinvoke $r0.<android.net.Uri: java.lang.String toString()>();

        $r2 = staticinvoke <androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createWithContentUri(java.lang.String)>($r1);

        return $r2;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Uri must not be null.");

        throw $r3;
    }

    public static androidx.core.graphics.drawable.IconCompat createWithContentUri(java.lang.String)
    {
        java.lang.String $r0;
        androidx.core.graphics.drawable.IconCompat $r1;
        java.lang.IllegalArgumentException $r2;

        $r0 := @parameter0: java.lang.String;

        if $r0 == null goto label1;

        $r1 = new androidx.core.graphics.drawable.IconCompat;

        specialinvoke $r1.<androidx.core.graphics.drawable.IconCompat: void <init>(int)>(4);

        $r1.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1> = $r0;

        return $r1;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Uri must not be null.");

        throw $r2;
    }

    public static androidx.core.graphics.drawable.IconCompat createWithData(byte[], int, int)
    {
        byte[] $r0;
        int $i0, $i1;
        androidx.core.graphics.drawable.IconCompat $r1;
        java.lang.IllegalArgumentException $r2;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        if $r0 == null goto label1;

        $r1 = new androidx.core.graphics.drawable.IconCompat;

        specialinvoke $r1.<androidx.core.graphics.drawable.IconCompat: void <init>(int)>(3);

        $r1.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1> = $r0;

        $r1.<androidx.core.graphics.drawable.IconCompat: int mInt1> = $i0;

        $r1.<androidx.core.graphics.drawable.IconCompat: int mInt2> = $i1;

        return $r1;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Data must not be null.");

        throw $r2;
    }

    public static androidx.core.graphics.drawable.IconCompat createWithResource(android.content.Context, int)
    {
        android.content.Context $r0;
        int $i0;
        android.content.res.Resources $r1;
        java.lang.String $r2;
        androidx.core.graphics.drawable.IconCompat $r3;
        java.lang.IllegalArgumentException $r4;

        $r0 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        if $r0 == null goto label1;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        $r3 = staticinvoke <androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createWithResource(android.content.res.Resources,java.lang.String,int)>($r1, $r2, $i0);

        return $r3;

     label1:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Context must not be null.");

        throw $r4;
    }

    public static androidx.core.graphics.drawable.IconCompat createWithResource(android.content.res.Resources, java.lang.String, int)
    {
        android.content.res.Resources $r0;
        java.lang.String $r1;
        int $i0;
        java.lang.IllegalArgumentException $r2;
        androidx.core.graphics.drawable.IconCompat $r3;
        java.lang.Throwable $r4;

        $r0 := @parameter0: android.content.res.Resources;

        $r1 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        if $r1 == null goto label6;

        if $i0 == 0 goto label5;

        $r3 = new androidx.core.graphics.drawable.IconCompat;

        specialinvoke $r3.<androidx.core.graphics.drawable.IconCompat: void <init>(int)>(2);

        $r3.<androidx.core.graphics.drawable.IconCompat: int mInt1> = $i0;

        if $r0 == null goto label4;

     label1:
        $r1 = virtualinvoke $r0.<android.content.res.Resources: java.lang.String getResourceName(int)>($i0);

     label2:
        $r3.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1> = $r1;

        return $r3;

     label3:
        $r4 := @caughtexception;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Icon resource cannot be found");

        throw $r2;

     label4:
        $r3.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1> = $r1;

        return $r3;

     label5:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Drawable resource ID must not be 0");

        throw $r2;

     label6:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Package must not be null.");

        throw $r2;

        catch android.content.res.Resources$NotFoundException from label1 to label2 with label3;
    }

    private static int getResId(android.graphics.drawable.Icon)
    {
        android.graphics.drawable.Icon $r0;
        java.lang.Class[] $r1;
        int $i0;
        java.lang.Class $r2;
        java.lang.reflect.Method $r3;
        java.lang.Object[] $r4;
        java.lang.Object $r5;
        java.lang.Integer $r6;
        java.lang.Throwable $r7, $r8, $r9;

        $r0 := @parameter0: android.graphics.drawable.Icon;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 28 goto label01;

        $i0 = virtualinvoke $r0.<android.graphics.drawable.Icon: int getResId()>();

        return $i0;

     label01:
        $r2 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

     label02:
        $r1 = newarray (java.lang.Class)[0];

     label03:
        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getResId", $r1);

     label04:
        $r4 = newarray (java.lang.Object)[0];

     label05:
        $r5 = virtualinvoke $r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r0, $r4);

     label06:
        $r6 = (java.lang.Integer) $r5;

     label07:
        $i0 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

     label08:
        return $i0;

     label09:
        $r7 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("IconCompat", "Unable to get icon resource", $r7);

        return 0;

     label10:
        $r8 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("IconCompat", "Unable to get icon resource", $r8);

        return 0;

     label11:
        $r9 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("IconCompat", "Unable to get icon resource", $r9);

        return 0;

        catch java.lang.IllegalAccessException from label01 to label02 with label11;
        catch java.lang.IllegalAccessException from label03 to label04 with label11;
        catch java.lang.IllegalAccessException from label05 to label06 with label11;
        catch java.lang.IllegalAccessException from label07 to label08 with label11;
        catch java.lang.reflect.InvocationTargetException from label01 to label02 with label10;
        catch java.lang.reflect.InvocationTargetException from label03 to label04 with label10;
        catch java.lang.reflect.InvocationTargetException from label05 to label06 with label10;
        catch java.lang.reflect.InvocationTargetException from label07 to label08 with label10;
        catch java.lang.NoSuchMethodException from label01 to label02 with label09;
        catch java.lang.NoSuchMethodException from label03 to label04 with label09;
        catch java.lang.NoSuchMethodException from label05 to label06 with label09;
        catch java.lang.NoSuchMethodException from label07 to label08 with label09;
    }

    private static java.lang.String getResPackage(android.graphics.drawable.Icon)
    {
        android.graphics.drawable.Icon $r0;
        java.lang.Class[] $r1;
        int $i0;
        java.lang.String $r2;
        java.lang.Class $r3;
        java.lang.reflect.Method $r4;
        java.lang.Object[] $r5;
        java.lang.Object $r6;
        java.lang.Throwable $r7, $r8, $r9;

        $r0 := @parameter0: android.graphics.drawable.Icon;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 28 goto label1;

        $r2 = virtualinvoke $r0.<android.graphics.drawable.Icon: java.lang.String getResPackage()>();

        return $r2;

     label1:
        $r3 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

     label2:
        $r1 = newarray (java.lang.Class)[0];

     label3:
        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getResPackage", $r1);

     label4:
        $r5 = newarray (java.lang.Object)[0];

     label5:
        $r6 = virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r0, $r5);

     label6:
        $r2 = (java.lang.String) $r6;

        return $r2;

     label7:
        $r7 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("IconCompat", "Unable to get icon package", $r7);

        return null;

     label8:
        $r8 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("IconCompat", "Unable to get icon package", $r8);

        return null;

     label9:
        $r9 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("IconCompat", "Unable to get icon package", $r9);

        return null;

        catch java.lang.IllegalAccessException from label1 to label2 with label9;
        catch java.lang.IllegalAccessException from label3 to label4 with label9;
        catch java.lang.IllegalAccessException from label5 to label6 with label9;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label8;
        catch java.lang.reflect.InvocationTargetException from label3 to label4 with label8;
        catch java.lang.reflect.InvocationTargetException from label5 to label6 with label8;
        catch java.lang.NoSuchMethodException from label1 to label2 with label7;
        catch java.lang.NoSuchMethodException from label3 to label4 with label7;
        catch java.lang.NoSuchMethodException from label5 to label6 with label7;
    }

    private static android.content.res.Resources getResources(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.String $r1, $r2;
        boolean $z0;
        android.content.res.Resources $r3;
        android.content.pm.PackageManager $r4;
        android.content.pm.ApplicationInfo $r5;
        java.lang.Throwable $r6;
        java.lang.Object[] $r7;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 = "android";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        $r3 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        return $r3;

     label1:
        $r4 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

     label2:
        $r5 = virtualinvoke $r4.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>($r1, 8192);

     label3:
        if $r5 == null goto label6;

     label4:
        $r3 = virtualinvoke $r4.<android.content.pm.PackageManager: android.content.res.Resources getResourcesForApplication(android.content.pm.ApplicationInfo)>($r5);

     label5:
        return $r3;

     label6:
        return null;

     label7:
        $r6 := @caughtexception;

        $r7 = newarray (java.lang.Object)[1];

        $r7[0] = $r1;

        $r1 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unable to find pkg=%s for icon", $r7);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("IconCompat", $r1, $r6);

        return null;

        catch android.content.pm.PackageManager$NameNotFoundException from label2 to label3 with label7;
        catch android.content.pm.PackageManager$NameNotFoundException from label4 to label5 with label7;
    }

    private static int getType(android.graphics.drawable.Icon)
    {
        android.graphics.drawable.Icon $r0;
        java.lang.Class[] $r1;
        int $i0;
        java.lang.Class $r2;
        java.lang.reflect.Method $r3;
        java.lang.Object[] $r4;
        java.lang.Object $r5;
        java.lang.Integer $r6;
        java.lang.Throwable $r7, $r10, $r11;
        java.lang.StringBuilder $r8;
        java.lang.String $r9;

        $r0 := @parameter0: android.graphics.drawable.Icon;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 28 goto label01;

        $i0 = virtualinvoke $r0.<android.graphics.drawable.Icon: int getType()>();

        return $i0;

     label01:
        $r2 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

     label02:
        $r1 = newarray (java.lang.Class)[0];

     label03:
        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getType", $r1);

     label04:
        $r4 = newarray (java.lang.Object)[0];

     label05:
        $r5 = virtualinvoke $r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r0, $r4);

     label06:
        $r6 = (java.lang.Integer) $r5;

     label07:
        $i0 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

     label08:
        return $i0;

     label09:
        $r7 := @caughtexception;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to get icon type ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("IconCompat", $r9, $r7);

        return -1;

     label10:
        $r10 := @caughtexception;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to get icon type ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("IconCompat", $r9, $r10);

        return -1;

     label11:
        $r11 := @caughtexception;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to get icon type ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("IconCompat", $r9, $r11);

        return -1;

        catch java.lang.IllegalAccessException from label01 to label02 with label11;
        catch java.lang.IllegalAccessException from label03 to label04 with label11;
        catch java.lang.IllegalAccessException from label05 to label06 with label11;
        catch java.lang.IllegalAccessException from label07 to label08 with label11;
        catch java.lang.reflect.InvocationTargetException from label01 to label02 with label10;
        catch java.lang.reflect.InvocationTargetException from label03 to label04 with label10;
        catch java.lang.reflect.InvocationTargetException from label05 to label06 with label10;
        catch java.lang.reflect.InvocationTargetException from label07 to label08 with label10;
        catch java.lang.NoSuchMethodException from label01 to label02 with label09;
        catch java.lang.NoSuchMethodException from label03 to label04 with label09;
        catch java.lang.NoSuchMethodException from label05 to label06 with label09;
        catch java.lang.NoSuchMethodException from label07 to label08 with label09;
    }

    private static android.net.Uri getUri(android.graphics.drawable.Icon)
    {
        android.graphics.drawable.Icon $r0;
        java.lang.Class[] $r1;
        int $i0;
        android.net.Uri $r2;
        java.lang.Class $r3;
        java.lang.reflect.Method $r4;
        java.lang.Object[] $r5;
        java.lang.Object $r6;
        java.lang.Throwable $r7, $r8, $r9;

        $r0 := @parameter0: android.graphics.drawable.Icon;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 28 goto label1;

        $r2 = virtualinvoke $r0.<android.graphics.drawable.Icon: android.net.Uri getUri()>();

        return $r2;

     label1:
        $r3 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

     label2:
        $r1 = newarray (java.lang.Class)[0];

     label3:
        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getUri", $r1);

     label4:
        $r5 = newarray (java.lang.Object)[0];

     label5:
        $r6 = virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r0, $r5);

     label6:
        $r2 = (android.net.Uri) $r6;

        return $r2;

     label7:
        $r7 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("IconCompat", "Unable to get icon uri", $r7);

        return null;

     label8:
        $r8 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("IconCompat", "Unable to get icon uri", $r8);

        return null;

     label9:
        $r9 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("IconCompat", "Unable to get icon uri", $r9);

        return null;

        catch java.lang.IllegalAccessException from label1 to label2 with label9;
        catch java.lang.IllegalAccessException from label3 to label4 with label9;
        catch java.lang.IllegalAccessException from label5 to label6 with label9;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label8;
        catch java.lang.reflect.InvocationTargetException from label3 to label4 with label8;
        catch java.lang.reflect.InvocationTargetException from label5 to label6 with label8;
        catch java.lang.NoSuchMethodException from label1 to label2 with label7;
        catch java.lang.NoSuchMethodException from label3 to label4 with label7;
        catch java.lang.NoSuchMethodException from label5 to label6 with label7;
    }

    private android.graphics.drawable.Drawable loadDrawableInner(android.content.Context)
    {
        androidx.core.graphics.drawable.IconCompat $r0;
        android.content.Context $r1;
        int $i0, $i1;
        android.content.res.Resources $r2;
        java.lang.Object $r3, $r9;
        android.graphics.Bitmap $r4;
        java.lang.String $r5, $r7;
        android.net.Uri $r6;
        boolean $z0;
        java.io.File $r8, r22;
        java.lang.Throwable $r10;
        java.lang.StringBuilder $r11, r24;
        android.content.ContentResolver $r12;
        java.io.InputStream $r13;
        java.lang.Exception $r14;
        byte[] $r15;
        android.content.res.Resources$Theme $r16;
        android.graphics.drawable.Drawable $r17;
        java.lang.RuntimeException $r18;
        java.lang.Object[] $r19;
        java.lang.Integer $r20;
        android.graphics.drawable.BitmapDrawable r21;
        java.io.FileInputStream r23;

        $r0 := @this: androidx.core.graphics.drawable.IconCompat;

        $r1 := @parameter0: android.content.Context;

        $i0 = $r0.<androidx.core.graphics.drawable.IconCompat: int mType>;

        if $i0 == 1 goto label19;

        if $i0 == 2 goto label13;

        if $i0 == 3 goto label12;

        if $i0 == 4 goto label02;

        if $i0 == 5 goto label01;

        goto label18;

     label01:
        r21 = new android.graphics.drawable.BitmapDrawable;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = $r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        $r4 = (android.graphics.Bitmap) $r3;

        $r4 = staticinvoke <androidx.core.graphics.drawable.IconCompat: android.graphics.Bitmap createLegacyIconFromAdaptiveIcon(android.graphics.Bitmap,boolean)>($r4, 0);

        specialinvoke r21.<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>($r2, $r4);

        return r21;

     label02:
        $r3 = $r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        $r5 = (java.lang.String) $r3;

        $r6 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r5);

        $r5 = virtualinvoke $r6.<android.net.Uri: java.lang.String getScheme()>();

        $r3 = null;

        $r7 = "content";

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label07;

        $r7 = "file";

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label03;

        goto label07;

     label03:
        r23 = new java.io.FileInputStream;

        r22 = new java.io.File;

        $r8 = r22;

        $r9 = $r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        $r5 = (java.lang.String) $r9;

     label04:
        specialinvoke r22.<java.io.File: void <init>(java.lang.String)>($r5);

        specialinvoke r23.<java.io.FileInputStream: void <init>(java.io.File)>($r8);

     label05:
        $r3 = r23;

        goto label11;

     label06:
        $r10 := @caughtexception;

        r24 = new java.lang.StringBuilder;

        $r11 = r24;

        specialinvoke r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to load image from path: ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r5 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("IconCompat", $r5, $r10);

        goto label11;

     label07:
        $r12 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r13 = virtualinvoke $r12.<android.content.ContentResolver: java.io.InputStream openInputStream(android.net.Uri)>($r6);

     label08:
        $r3 = $r13;

     label09:
        goto label11;

     label10:
        $r14 := @caughtexception;

        r24 = new java.lang.StringBuilder;

        $r11 = r24;

        specialinvoke r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to load image from URI: ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r5 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("IconCompat", $r5, $r14);

        goto label09;

     label11:
        if $r3 == null goto label18;

        r21 = new android.graphics.drawable.BitmapDrawable;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r13 = (java.io.InputStream) $r3;

        $r4 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>($r13);

        specialinvoke r21.<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>($r2, $r4);

        return r21;

     label12:
        r21 = new android.graphics.drawable.BitmapDrawable;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = $r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        $r15 = (byte[]) $r3;

        $i0 = $r0.<androidx.core.graphics.drawable.IconCompat: int mInt1>;

        $i1 = $r0.<androidx.core.graphics.drawable.IconCompat: int mInt2>;

        $r4 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int)>($r15, $i0, $i1);

        specialinvoke r21.<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>($r2, $r4);

        return r21;

     label13:
        $r5 = virtualinvoke $r0.<androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>();

        $r7 = $r5;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r5);

        if $z0 == 0 goto label14;

        $r7 = virtualinvoke $r1.<android.content.Context: java.lang.String getPackageName()>();

     label14:
        $r2 = staticinvoke <androidx.core.graphics.drawable.IconCompat: android.content.res.Resources getResources(android.content.Context,java.lang.String)>($r1, $r7);

     label15:
        $i0 = $r0.<androidx.core.graphics.drawable.IconCompat: int mInt1>;

        $r16 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $r17 = staticinvoke <androidx.core.content.res.ResourcesCompat: android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme)>($r2, $i0, $r16);

     label16:
        return $r17;

     label17:
        $r18 := @caughtexception;

        $r19 = newarray (java.lang.Object)[2];

        $i0 = $r0.<androidx.core.graphics.drawable.IconCompat: int mInt1>;

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r19[0] = $r20;

        $r3 = $r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        $r19[1] = $r3;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unable to load resource 0x%08x from pkg=%s", $r19);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("IconCompat", $r5, $r18);

     label18:
        return null;

     label19:
        r21 = new android.graphics.drawable.BitmapDrawable;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = $r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        $r4 = (android.graphics.Bitmap) $r3;

        specialinvoke r21.<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>($r2, $r4);

        return r21;

        catch java.io.FileNotFoundException from label04 to label05 with label06;
        catch java.lang.Exception from label07 to label08 with label10;
        catch java.lang.RuntimeException from label15 to label16 with label17;
    }

    private static java.lang.String typeToString(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        if $i0 == 1 goto label5;

        if $i0 == 2 goto label4;

        if $i0 == 3 goto label3;

        if $i0 == 4 goto label2;

        if $i0 == 5 goto label1;

        return "UNKNOWN";

     label1:
        return "BITMAP_MASKABLE";

     label2:
        return "URI";

     label3:
        return "DATA";

     label4:
        return "RESOURCE";

     label5:
        return "BITMAP";
    }

    public void addToShortcutIntent(android.content.Intent, android.graphics.drawable.Drawable, android.content.Context)
    {
        androidx.core.graphics.drawable.IconCompat $r0;
        android.content.Intent $r1;
        android.graphics.drawable.Drawable $r2, $r9;
        android.content.Context $r3;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r4;
        android.graphics.Bitmap $r5;
        java.lang.IllegalArgumentException $r6;
        java.lang.String $r7;
        android.content.Intent$ShortcutIconResource $r8;
        android.graphics.Bitmap$Config $r10;
        android.app.ActivityManager $r11;
        android.graphics.Canvas $r12;
        java.lang.Throwable $r13;
        java.lang.StringBuilder $r14;

        $r0 := @this: androidx.core.graphics.drawable.IconCompat;

        $r1 := @parameter0: android.content.Intent;

        $r2 := @parameter1: android.graphics.drawable.Drawable;

        $r3 := @parameter2: android.content.Context;

        virtualinvoke $r0.<androidx.core.graphics.drawable.IconCompat: void checkResource(android.content.Context)>($r3);

        $i0 = $r0.<androidx.core.graphics.drawable.IconCompat: int mType>;

        if $i0 == 1 goto label25;

        if $i0 == 2 goto label02;

        if $i0 != 5 goto label01;

        $r4 = $r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        $r5 = (android.graphics.Bitmap) $r4;

        $r5 = staticinvoke <androidx.core.graphics.drawable.IconCompat: android.graphics.Bitmap createLegacyIconFromAdaptiveIcon(android.graphics.Bitmap,boolean)>($r5, 1);

        goto label26;

     label01:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Icon type not supported for intent shortcuts");

        throw $r6;

     label02:
        $r7 = virtualinvoke $r0.<androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>();

        $r3 = virtualinvoke $r3.<android.content.Context: android.content.Context createPackageContext(java.lang.String,int)>($r7, 0);

     label03:
        if $r2 != null goto label06;

        $i0 = $r0.<androidx.core.graphics.drawable.IconCompat: int mInt1>;

     label04:
        $r8 = staticinvoke <android.content.Intent$ShortcutIconResource: android.content.Intent$ShortcutIconResource fromContext(android.content.Context,int)>($r3, $i0);

        virtualinvoke $r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.intent.extra.shortcut.ICON_RESOURCE", $r8);

     label05:
        return;

     label06:
        $i0 = $r0.<androidx.core.graphics.drawable.IconCompat: int mInt1>;

     label07:
        $r9 = staticinvoke <androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>($r3, $i0);

        $i0 = virtualinvoke $r9.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

     label08:
        if $i0 <= 0 goto label15;

     label09:
        $i0 = virtualinvoke $r9.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

     label10:
        if $i0 > 0 goto label11;

        goto label15;

     label11:
        $i0 = virtualinvoke $r9.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i1 = virtualinvoke $r9.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

     label12:
        $r10 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

     label13:
        $r5 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>($i0, $i1, $r10);

     label14:
        goto label20;

     label15:
        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("activity");

     label16:
        $r11 = (android.app.ActivityManager) $r4;

     label17:
        $i0 = virtualinvoke $r11.<android.app.ActivityManager: int getLauncherLargeIconSize()>();

     label18:
        $r10 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

     label19:
        $r5 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>($i0, $i0, $r10);

     label20:
        $i0 = virtualinvoke $r5.<android.graphics.Bitmap: int getWidth()>();

        $i1 = virtualinvoke $r5.<android.graphics.Bitmap: int getHeight()>();

        virtualinvoke $r9.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i0, $i1);

     label21:
        $r12 = new android.graphics.Canvas;

     label22:
        specialinvoke $r12.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>($r5);

        virtualinvoke $r9.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r12);

     label23:
        goto label26;

     label24:
        $r13 := @caughtexception;

        $r6 = new java.lang.IllegalArgumentException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t find package ");

        $r4 = $r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r7 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r7, $r13);

        throw $r6;

     label25:
        $r4 = $r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        $r5 = (android.graphics.Bitmap) $r4;

        if $r2 == null goto label26;

        $r10 = virtualinvoke $r5.<android.graphics.Bitmap: android.graphics.Bitmap$Config getConfig()>();

        $r5 = virtualinvoke $r5.<android.graphics.Bitmap: android.graphics.Bitmap copy(android.graphics.Bitmap$Config,boolean)>($r10, 1);

     label26:
        if $r2 == null goto label27;

        $i0 = virtualinvoke $r5.<android.graphics.Bitmap: int getWidth()>();

        $i1 = virtualinvoke $r5.<android.graphics.Bitmap: int getHeight()>();

        $i2 = $i0 / 2;

        $i3 = $i1 / 2;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>($i2, $i3, $i0, $i1);

        $r12 = new android.graphics.Canvas;

        specialinvoke $r12.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>($r5);

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r12);

     label27:
        virtualinvoke $r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.intent.extra.shortcut.ICON", $r5);

        return;

        catch android.content.pm.PackageManager$NameNotFoundException from label02 to label03 with label24;
        catch android.content.pm.PackageManager$NameNotFoundException from label04 to label05 with label24;
        catch android.content.pm.PackageManager$NameNotFoundException from label07 to label08 with label24;
        catch android.content.pm.PackageManager$NameNotFoundException from label09 to label10 with label24;
        catch android.content.pm.PackageManager$NameNotFoundException from label11 to label12 with label24;
        catch android.content.pm.PackageManager$NameNotFoundException from label13 to label14 with label24;
        catch android.content.pm.PackageManager$NameNotFoundException from label15 to label16 with label24;
        catch android.content.pm.PackageManager$NameNotFoundException from label17 to label18 with label24;
        catch android.content.pm.PackageManager$NameNotFoundException from label19 to label20 with label24;
        catch android.content.pm.PackageManager$NameNotFoundException from label20 to label21 with label24;
        catch android.content.pm.PackageManager$NameNotFoundException from label22 to label23 with label24;
    }

    public void checkResource(android.content.Context)
    {
        androidx.core.graphics.drawable.IconCompat $r0;
        android.content.Context $r1;
        int $i0, $i1;
        java.lang.Object $r2;
        java.lang.String $r3, $r5, $r6;
        boolean $z0;
        java.lang.String[] $r4;
        android.content.res.Resources $r7;
        java.lang.StringBuilder $r8;

        $r0 := @this: androidx.core.graphics.drawable.IconCompat;

        $r1 := @parameter0: android.content.Context;

        $i0 = $r0.<androidx.core.graphics.drawable.IconCompat: int mType>;

        if $i0 != 2 goto label2;

        $r2 = $r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        $r3 = (java.lang.String) $r2;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean contains(java.lang.CharSequence)>(":");

        if $z0 != 0 goto label1;

        return;

     label1:
        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(":", -1);

        $r5 = $r4[1];

        $r4 = virtualinvoke $r5.<java.lang.String: java.lang.String[] split(java.lang.String,int)>("/", -1);

        $r6 = $r4[0];

        $r4 = virtualinvoke $r5.<java.lang.String: java.lang.String[] split(java.lang.String,int)>("/", -1);

        $r5 = $r4[1];

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(":", -1);

        $r3 = $r4[0];

        $r7 = staticinvoke <androidx.core.graphics.drawable.IconCompat: android.content.res.Resources getResources(android.content.Context,java.lang.String)>($r1, $r3);

        $i0 = virtualinvoke $r7.<android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>($r5, $r6, $r3);

        $i1 = $r0.<androidx.core.graphics.drawable.IconCompat: int mInt1>;

        if $i1 == $i0 goto label2;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Id has changed for ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r6 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("IconCompat", $r6);

        $r0.<androidx.core.graphics.drawable.IconCompat: int mInt1> = $i0;

     label2:
        return;
    }

    public int getResId()
    {
        androidx.core.graphics.drawable.IconCompat $r0;
        int $i0;
        java.lang.Object $r1;
        android.graphics.drawable.Icon $r2;
        java.lang.IllegalStateException $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;

        $r0 := @this: androidx.core.graphics.drawable.IconCompat;

        $i0 = $r0.<androidx.core.graphics.drawable.IconCompat: int mType>;

        if $i0 != -1 goto label1;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 23 goto label1;

        $r1 = $r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        $r2 = (android.graphics.drawable.Icon) $r1;

        $i0 = staticinvoke <androidx.core.graphics.drawable.IconCompat: int getResId(android.graphics.drawable.Icon)>($r2);

        return $i0;

     label1:
        $i0 = $r0.<androidx.core.graphics.drawable.IconCompat: int mType>;

        if $i0 != 2 goto label2;

        $i0 = $r0.<androidx.core.graphics.drawable.IconCompat: int mInt1>;

        return $i0;

     label2:
        $r3 = new java.lang.IllegalStateException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("called getResId() on ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5);

        throw $r3;
    }

    public java.lang.String getResPackage()
    {
        androidx.core.graphics.drawable.IconCompat $r0;
        int $i0;
        java.lang.Object $r1;
        android.graphics.drawable.Icon $r2;
        java.lang.String $r3;
        java.lang.String[] $r4;
        java.lang.IllegalStateException $r5;
        java.lang.StringBuilder $r6;

        $r0 := @this: androidx.core.graphics.drawable.IconCompat;

        $i0 = $r0.<androidx.core.graphics.drawable.IconCompat: int mType>;

        if $i0 != -1 goto label1;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 23 goto label1;

        $r1 = $r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        $r2 = (android.graphics.drawable.Icon) $r1;

        $r3 = staticinvoke <androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>($r2);

        return $r3;

     label1:
        $i0 = $r0.<androidx.core.graphics.drawable.IconCompat: int mType>;

        if $i0 != 2 goto label2;

        $r1 = $r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        $r3 = (java.lang.String) $r1;

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(":", -1);

        $r3 = $r4[0];

        return $r3;

     label2:
        $r5 = new java.lang.IllegalStateException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("called getResPackage() on ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r3 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r3);

        throw $r5;
    }

    public int getType()
    {
        androidx.core.graphics.drawable.IconCompat $r0;
        int $i0;
        java.lang.Object $r1;
        android.graphics.drawable.Icon $r2;

        $r0 := @this: androidx.core.graphics.drawable.IconCompat;

        $i0 = $r0.<androidx.core.graphics.drawable.IconCompat: int mType>;

        if $i0 != -1 goto label1;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 23 goto label1;

        $r1 = $r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        $r2 = (android.graphics.drawable.Icon) $r1;

        $i0 = staticinvoke <androidx.core.graphics.drawable.IconCompat: int getType(android.graphics.drawable.Icon)>($r2);

        return $i0;

     label1:
        $i0 = $r0.<androidx.core.graphics.drawable.IconCompat: int mType>;

        return $i0;
    }

    public android.net.Uri getUri()
    {
        androidx.core.graphics.drawable.IconCompat $r0;
        int $i0;
        java.lang.Object $r1;
        android.graphics.drawable.Icon $r2;
        android.net.Uri $r3;
        java.lang.String $r4;

        $r0 := @this: androidx.core.graphics.drawable.IconCompat;

        $i0 = $r0.<androidx.core.graphics.drawable.IconCompat: int mType>;

        if $i0 != -1 goto label1;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 23 goto label1;

        $r1 = $r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        $r2 = (android.graphics.drawable.Icon) $r1;

        $r3 = staticinvoke <androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>($r2);

        return $r3;

     label1:
        $r1 = $r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        $r4 = (java.lang.String) $r1;

        $r3 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r4);

        return $r3;
    }

    public android.graphics.drawable.Drawable loadDrawable(android.content.Context)
    {
        androidx.core.graphics.drawable.IconCompat $r0;
        android.content.Context $r1;
        android.graphics.PorterDuff$Mode $r2, $r6;
        int $i0;
        android.graphics.drawable.Icon $r3;
        android.graphics.drawable.Drawable $r4;
        android.content.res.ColorStateList $r5;

        $r0 := @this: androidx.core.graphics.drawable.IconCompat;

        $r1 := @parameter0: android.content.Context;

        virtualinvoke $r0.<androidx.core.graphics.drawable.IconCompat: void checkResource(android.content.Context)>($r1);

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 23 goto label1;

        $r3 = virtualinvoke $r0.<androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>();

        $r4 = virtualinvoke $r3.<android.graphics.drawable.Icon: android.graphics.drawable.Drawable loadDrawable(android.content.Context)>($r1);

        return $r4;

     label1:
        $r4 = specialinvoke $r0.<androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Drawable loadDrawableInner(android.content.Context)>($r1);

        if $r4 == null goto label3;

        $r5 = $r0.<androidx.core.graphics.drawable.IconCompat: android.content.res.ColorStateList mTintList>;

        if $r5 != null goto label2;

        $r6 = $r0.<androidx.core.graphics.drawable.IconCompat: android.graphics.PorterDuff$Mode mTintMode>;

        $r2 = <androidx.core.graphics.drawable.IconCompat: android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE>;

        if $r6 == $r2 goto label3;

     label2:
        virtualinvoke $r4.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        $r5 = $r0.<androidx.core.graphics.drawable.IconCompat: android.content.res.ColorStateList mTintList>;

        staticinvoke <androidx.core.graphics.drawable.DrawableCompat: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)>($r4, $r5);

        $r2 = $r0.<androidx.core.graphics.drawable.IconCompat: android.graphics.PorterDuff$Mode mTintMode>;

        staticinvoke <androidx.core.graphics.drawable.DrawableCompat: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)>($r4, $r2);

     label3:
        return $r4;
    }

    public void onPostParceling()
    {
        androidx.core.graphics.drawable.IconCompat $r0;
        java.lang.String $r1;
        android.graphics.PorterDuff$Mode $r2;
        int $i0;
        byte[] $r3;
        java.nio.charset.Charset $r4;
        android.os.Parcelable $r5;
        java.lang.IllegalArgumentException $r6;

        $r0 := @this: androidx.core.graphics.drawable.IconCompat;

        $r1 = $r0.<androidx.core.graphics.drawable.IconCompat: java.lang.String mTintModeStr>;

        $r2 = staticinvoke <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode valueOf(java.lang.String)>($r1);

        $r0.<androidx.core.graphics.drawable.IconCompat: android.graphics.PorterDuff$Mode mTintMode> = $r2;

        $i0 = $r0.<androidx.core.graphics.drawable.IconCompat: int mType>;

        if $i0 == -1 goto label5;

        if $i0 == 1 goto label3;

        if $i0 == 2 goto label2;

        if $i0 == 3 goto label1;

        if $i0 == 4 goto label2;

        if $i0 == 5 goto label3;

        return;

     label1:
        $r3 = $r0.<androidx.core.graphics.drawable.IconCompat: byte[] mData>;

        $r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1> = $r3;

        return;

     label2:
        $r1 = new java.lang.String;

        $r3 = $r0.<androidx.core.graphics.drawable.IconCompat: byte[] mData>;

        $r4 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("UTF-16");

        specialinvoke $r1.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>($r3, $r4);

        $r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1> = $r1;

        return;

     label3:
        $r5 = $r0.<androidx.core.graphics.drawable.IconCompat: android.os.Parcelable mParcelable>;

        if $r5 == null goto label4;

        $r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1> = $r5;

        return;

     label4:
        $r3 = $r0.<androidx.core.graphics.drawable.IconCompat: byte[] mData>;

        $r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1> = $r3;

        $r0.<androidx.core.graphics.drawable.IconCompat: int mType> = 3;

        $r0.<androidx.core.graphics.drawable.IconCompat: int mInt1> = 0;

        $i0 = lengthof $r3;

        $r0.<androidx.core.graphics.drawable.IconCompat: int mInt2> = $i0;

        return;

     label5:
        $r5 = $r0.<androidx.core.graphics.drawable.IconCompat: android.os.Parcelable mParcelable>;

        if $r5 == null goto label6;

        $r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1> = $r5;

        return;

     label6:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid icon");

        throw $r6;
    }

    public void onPreParceling(boolean)
    {
        androidx.core.graphics.drawable.IconCompat $r0;
        boolean $z0;
        android.graphics.PorterDuff$Mode $r1;
        java.lang.String $r2;
        int $i0;
        java.lang.Object $r3;
        java.nio.charset.Charset $r4;
        byte[] $r5;
        android.graphics.Bitmap $r6;
        java.io.ByteArrayOutputStream $r7;
        android.graphics.Bitmap$CompressFormat $r8;
        android.os.Parcelable $r9;
        java.lang.IllegalArgumentException $r10;

        $r0 := @this: androidx.core.graphics.drawable.IconCompat;

        $z0 := @parameter0: boolean;

        $r1 = $r0.<androidx.core.graphics.drawable.IconCompat: android.graphics.PorterDuff$Mode mTintMode>;

        $r2 = virtualinvoke $r1.<android.graphics.PorterDuff$Mode: java.lang.String name()>();

        $r0.<androidx.core.graphics.drawable.IconCompat: java.lang.String mTintModeStr> = $r2;

        $i0 = $r0.<androidx.core.graphics.drawable.IconCompat: int mType>;

        if $i0 == -1 goto label6;

        if $i0 == 1 goto label4;

        if $i0 == 2 goto label3;

        if $i0 == 3 goto label2;

        if $i0 == 4 goto label1;

        if $i0 == 5 goto label4;

        return;

     label1:
        $r3 = $r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        $r2 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        $r4 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("UTF-16");

        $r5 = virtualinvoke $r2.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r4);

        $r0.<androidx.core.graphics.drawable.IconCompat: byte[] mData> = $r5;

        return;

     label2:
        $r3 = $r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        $r5 = (byte[]) $r3;

        $r0.<androidx.core.graphics.drawable.IconCompat: byte[] mData> = $r5;

        return;

     label3:
        $r3 = $r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        $r2 = (java.lang.String) $r3;

        $r4 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("UTF-16");

        $r5 = virtualinvoke $r2.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r4);

        $r0.<androidx.core.graphics.drawable.IconCompat: byte[] mData> = $r5;

        return;

     label4:
        if $z0 == 0 goto label5;

        $r3 = $r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        $r6 = (android.graphics.Bitmap) $r3;

        $r7 = new java.io.ByteArrayOutputStream;

        specialinvoke $r7.<java.io.ByteArrayOutputStream: void <init>()>();

        $r8 = <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat PNG>;

        virtualinvoke $r6.<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>($r8, 90, $r7);

        $r5 = virtualinvoke $r7.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $r0.<androidx.core.graphics.drawable.IconCompat: byte[] mData> = $r5;

        return;

     label5:
        $r3 = $r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        $r9 = (android.os.Parcelable) $r3;

        $r0.<androidx.core.graphics.drawable.IconCompat: android.os.Parcelable mParcelable> = $r9;

        return;

     label6:
        if $z0 != 0 goto label7;

        $r3 = $r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        $r9 = (android.os.Parcelable) $r3;

        $r0.<androidx.core.graphics.drawable.IconCompat: android.os.Parcelable mParcelable> = $r9;

        return;

     label7:
        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t serialize Icon created with IconCompat#createFromIcon");

        throw $r10;
    }

    public androidx.core.graphics.drawable.IconCompat setTint(int)
    {
        androidx.core.graphics.drawable.IconCompat $r0;
        int $i0;
        android.content.res.ColorStateList $r1;

        $r0 := @this: androidx.core.graphics.drawable.IconCompat;

        $i0 := @parameter0: int;

        $r1 = staticinvoke <android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>($i0);

        $r0 = virtualinvoke $r0.<androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat setTintList(android.content.res.ColorStateList)>($r1);

        return $r0;
    }

    public androidx.core.graphics.drawable.IconCompat setTintList(android.content.res.ColorStateList)
    {
        androidx.core.graphics.drawable.IconCompat $r0;
        android.content.res.ColorStateList $r1;

        $r0 := @this: androidx.core.graphics.drawable.IconCompat;

        $r1 := @parameter0: android.content.res.ColorStateList;

        $r0.<androidx.core.graphics.drawable.IconCompat: android.content.res.ColorStateList mTintList> = $r1;

        return $r0;
    }

    public androidx.core.graphics.drawable.IconCompat setTintMode(android.graphics.PorterDuff$Mode)
    {
        androidx.core.graphics.drawable.IconCompat $r0;
        android.graphics.PorterDuff$Mode $r1;

        $r0 := @this: androidx.core.graphics.drawable.IconCompat;

        $r1 := @parameter0: android.graphics.PorterDuff$Mode;

        $r0.<androidx.core.graphics.drawable.IconCompat: android.graphics.PorterDuff$Mode mTintMode> = $r1;

        return $r0;
    }

    public android.os.Bundle toBundle()
    {
        androidx.core.graphics.drawable.IconCompat $r0;
        android.os.Bundle $r1;
        java.lang.String $r2;
        int $i0;
        java.lang.IllegalArgumentException $r3;
        java.lang.Object $r4;
        byte[] $r5;
        android.graphics.Bitmap $r6;
        android.os.Parcelable $r7;
        android.content.res.ColorStateList $r8;
        android.graphics.PorterDuff$Mode $r9, $r10;

        $r0 := @this: androidx.core.graphics.drawable.IconCompat;

        $r1 = new android.os.Bundle;

        specialinvoke $r1.<android.os.Bundle: void <init>()>();

        $i0 = $r0.<androidx.core.graphics.drawable.IconCompat: int mType>;

        if $i0 == -1 goto label5;

        if $i0 == 1 goto label4;

        if $i0 == 2 goto label3;

        if $i0 == 3 goto label2;

        if $i0 == 4 goto label3;

        if $i0 != 5 goto label1;

        goto label4;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid icon");

        throw $r3;

     label2:
        $r4 = $r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        $r5 = (byte[]) $r4;

        virtualinvoke $r1.<android.os.Bundle: void putByteArray(java.lang.String,byte[])>("obj", $r5);

        goto label6;

     label3:
        $r4 = $r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        $r2 = (java.lang.String) $r4;

        virtualinvoke $r1.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("obj", $r2);

        goto label6;

     label4:
        $r4 = $r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        $r6 = (android.graphics.Bitmap) $r4;

        virtualinvoke $r1.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("obj", $r6);

        goto label6;

     label5:
        $r4 = $r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        $r7 = (android.os.Parcelable) $r4;

        virtualinvoke $r1.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("obj", $r7);

     label6:
        $i0 = $r0.<androidx.core.graphics.drawable.IconCompat: int mType>;

        virtualinvoke $r1.<android.os.Bundle: void putInt(java.lang.String,int)>("type", $i0);

        $i0 = $r0.<androidx.core.graphics.drawable.IconCompat: int mInt1>;

        virtualinvoke $r1.<android.os.Bundle: void putInt(java.lang.String,int)>("int1", $i0);

        $i0 = $r0.<androidx.core.graphics.drawable.IconCompat: int mInt2>;

        virtualinvoke $r1.<android.os.Bundle: void putInt(java.lang.String,int)>("int2", $i0);

        $r8 = $r0.<androidx.core.graphics.drawable.IconCompat: android.content.res.ColorStateList mTintList>;

        if $r8 == null goto label7;

        virtualinvoke $r1.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("tint_list", $r8);

     label7:
        $r9 = $r0.<androidx.core.graphics.drawable.IconCompat: android.graphics.PorterDuff$Mode mTintMode>;

        $r10 = <androidx.core.graphics.drawable.IconCompat: android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE>;

        if $r9 == $r10 goto label8;

        $r2 = virtualinvoke $r9.<android.graphics.PorterDuff$Mode: java.lang.String name()>();

        virtualinvoke $r1.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("tint_mode", $r2);

     label8:
        return $r1;
    }

    public android.graphics.drawable.Icon toIcon()
    {
        androidx.core.graphics.drawable.IconCompat $r0;
        int $i0, $i1;
        java.lang.Object $r1;
        android.graphics.Bitmap $r2;
        android.graphics.drawable.Icon $r3;
        java.lang.IllegalArgumentException $r4;
        java.lang.String $r5;
        byte[] $r6;
        android.content.res.ColorStateList $r7;
        android.graphics.PorterDuff$Mode $r8, $r9;

        $r0 := @this: androidx.core.graphics.drawable.IconCompat;

        $i0 = $r0.<androidx.core.graphics.drawable.IconCompat: int mType>;

        if $i0 == -1 goto label09;

        if $i0 == 1 goto label06;

        if $i0 == 2 goto label05;

        if $i0 == 3 goto label04;

        if $i0 == 4 goto label03;

        if $i0 != 5 goto label02;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 26 goto label01;

        $r1 = $r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        $r2 = (android.graphics.Bitmap) $r1;

        $r3 = staticinvoke <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)>($r2);

        goto label07;

     label01:
        $r1 = $r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        $r2 = (android.graphics.Bitmap) $r1;

        $r2 = staticinvoke <androidx.core.graphics.drawable.IconCompat: android.graphics.Bitmap createLegacyIconFromAdaptiveIcon(android.graphics.Bitmap,boolean)>($r2, 0);

        $r3 = staticinvoke <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithBitmap(android.graphics.Bitmap)>($r2);

        goto label07;

     label02:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unknown type");

        throw $r4;

     label03:
        $r1 = $r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        $r5 = (java.lang.String) $r1;

        $r3 = staticinvoke <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithContentUri(java.lang.String)>($r5);

        goto label07;

     label04:
        $r1 = $r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        $r6 = (byte[]) $r1;

        $i0 = $r0.<androidx.core.graphics.drawable.IconCompat: int mInt1>;

        $i1 = $r0.<androidx.core.graphics.drawable.IconCompat: int mInt2>;

        $r3 = staticinvoke <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithData(byte[],int,int)>($r6, $i0, $i1);

        goto label07;

     label05:
        $r5 = virtualinvoke $r0.<androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>();

        $i0 = $r0.<androidx.core.graphics.drawable.IconCompat: int mInt1>;

        $r3 = staticinvoke <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithResource(java.lang.String,int)>($r5, $i0);

        goto label07;

     label06:
        $r1 = $r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        $r2 = (android.graphics.Bitmap) $r1;

        $r3 = staticinvoke <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithBitmap(android.graphics.Bitmap)>($r2);

     label07:
        $r7 = $r0.<androidx.core.graphics.drawable.IconCompat: android.content.res.ColorStateList mTintList>;

        if $r7 == null goto label08;

        virtualinvoke $r3.<android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintList(android.content.res.ColorStateList)>($r7);

     label08:
        $r8 = $r0.<androidx.core.graphics.drawable.IconCompat: android.graphics.PorterDuff$Mode mTintMode>;

        $r9 = <androidx.core.graphics.drawable.IconCompat: android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE>;

        if $r8 == $r9 goto label10;

        virtualinvoke $r3.<android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintMode(android.graphics.PorterDuff$Mode)>($r8);

        return $r3;

     label09:
        $r1 = $r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        $r3 = (android.graphics.drawable.Icon) $r1;

     label10:
        return $r3;
    }

    public java.lang.String toString()
    {
        androidx.core.graphics.drawable.IconCompat $r0;
        int $i0;
        java.lang.Object $r1;
        java.lang.String $r2;
        java.lang.StringBuilder $r3;
        java.lang.Object[] $r4;
        java.lang.Integer $r5;
        android.graphics.Bitmap $r6;
        android.content.res.ColorStateList $r7;
        android.graphics.PorterDuff$Mode $r8, $r9;

        $r0 := @this: androidx.core.graphics.drawable.IconCompat;

        $i0 = $r0.<androidx.core.graphics.drawable.IconCompat: int mType>;

        if $i0 != -1 goto label1;

        $r1 = $r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        return $r2;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("Icon(typ=");

        $i0 = $r0.<androidx.core.graphics.drawable.IconCompat: int mType>;

        $r2 = staticinvoke <androidx.core.graphics.drawable.IconCompat: java.lang.String typeToString(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $i0 = $r0.<androidx.core.graphics.drawable.IconCompat: int mType>;

        if $i0 == 1 goto label5;

        if $i0 == 2 goto label4;

        if $i0 == 3 goto label3;

        if $i0 == 4 goto label2;

        if $i0 == 5 goto label5;

        goto label6;

     label2:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" uri=");

        $r1 = $r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        goto label6;

     label3:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" len=");

        $i0 = $r0.<androidx.core.graphics.drawable.IconCompat: int mInt1>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $i0 = $r0.<androidx.core.graphics.drawable.IconCompat: int mInt2>;

        if $i0 == 0 goto label6;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" off=");

        $i0 = $r0.<androidx.core.graphics.drawable.IconCompat: int mInt2>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        goto label6;

     label4:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" pkg=");

        $r2 = virtualinvoke $r0.<androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" id=");

        $r4 = newarray (java.lang.Object)[1];

        $i0 = virtualinvoke $r0.<androidx.core.graphics.drawable.IconCompat: int getResId()>();

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r4[0] = $r5;

        $r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("0x%08x", $r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        goto label6;

     label5:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" size=");

        $r1 = $r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        $r6 = (android.graphics.Bitmap) $r1;

        $i0 = virtualinvoke $r6.<android.graphics.Bitmap: int getWidth()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("x");

        $r1 = $r0.<androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1>;

        $r6 = (android.graphics.Bitmap) $r1;

        $i0 = virtualinvoke $r6.<android.graphics.Bitmap: int getHeight()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

     label6:
        $r7 = $r0.<androidx.core.graphics.drawable.IconCompat: android.content.res.ColorStateList mTintList>;

        if $r7 == null goto label7;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" tint=");

        $r7 = $r0.<androidx.core.graphics.drawable.IconCompat: android.content.res.ColorStateList mTintList>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

     label7:
        $r8 = $r0.<androidx.core.graphics.drawable.IconCompat: android.graphics.PorterDuff$Mode mTintMode>;

        $r9 = <androidx.core.graphics.drawable.IconCompat: android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE>;

        if $r8 == $r9 goto label8;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mode=");

        $r8 = $r0.<androidx.core.graphics.drawable.IconCompat: android.graphics.PorterDuff$Mode mTintMode>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

     label8:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
}
