public final class androidx.core.text.BidiFormatter extends java.lang.Object
{
    private static final int DEFAULT_FLAGS;
    static final androidx.core.text.BidiFormatter DEFAULT_LTR_INSTANCE;
    static final androidx.core.text.BidiFormatter DEFAULT_RTL_INSTANCE;
    static final androidx.core.text.TextDirectionHeuristicCompat DEFAULT_TEXT_DIRECTION_HEURISTIC;
    private static final int DIR_LTR;
    private static final int DIR_RTL;
    private static final int DIR_UNKNOWN;
    private static final java.lang.String EMPTY_STRING;
    private static final int FLAG_STEREO_RESET;
    private static final char LRE;
    private static final char LRM;
    private static final java.lang.String LRM_STRING;
    private static final char PDF;
    private static final char RLE;
    private static final char RLM;
    private static final java.lang.String RLM_STRING;
    private final androidx.core.text.TextDirectionHeuristicCompat mDefaultTextDirectionHeuristicCompat;
    private final int mFlags;
    private final boolean mIsRtlContext;

    static void <clinit>()
    {
        androidx.core.text.TextDirectionHeuristicCompat $r0;
        java.lang.String $r1;
        androidx.core.text.BidiFormatter $r2;

        <androidx.core.text.BidiFormatter: char RLM> = 8207;

        <androidx.core.text.BidiFormatter: char RLE> = 8235;

        <androidx.core.text.BidiFormatter: char PDF> = 8236;

        <androidx.core.text.BidiFormatter: char LRM> = 8206;

        <androidx.core.text.BidiFormatter: char LRE> = 8234;

        <androidx.core.text.BidiFormatter: int FLAG_STEREO_RESET> = 2;

        <androidx.core.text.BidiFormatter: java.lang.String EMPTY_STRING> = "";

        <androidx.core.text.BidiFormatter: int DIR_UNKNOWN> = 0;

        <androidx.core.text.BidiFormatter: int DIR_RTL> = 1;

        <androidx.core.text.BidiFormatter: int DIR_LTR> = -1;

        <androidx.core.text.BidiFormatter: int DEFAULT_FLAGS> = 2;

        $r0 = <androidx.core.text.TextDirectionHeuristicsCompat: androidx.core.text.TextDirectionHeuristicCompat FIRSTSTRONG_LTR>;

        <androidx.core.text.BidiFormatter: androidx.core.text.TextDirectionHeuristicCompat DEFAULT_TEXT_DIRECTION_HEURISTIC> = $r0;

        $r1 = staticinvoke <java.lang.Character: java.lang.String toString(char)>(8206);

        <androidx.core.text.BidiFormatter: java.lang.String LRM_STRING> = $r1;

        $r1 = staticinvoke <java.lang.Character: java.lang.String toString(char)>(8207);

        <androidx.core.text.BidiFormatter: java.lang.String RLM_STRING> = $r1;

        $r2 = new androidx.core.text.BidiFormatter;

        $r0 = <androidx.core.text.BidiFormatter: androidx.core.text.TextDirectionHeuristicCompat DEFAULT_TEXT_DIRECTION_HEURISTIC>;

        specialinvoke $r2.<androidx.core.text.BidiFormatter: void <init>(boolean,int,androidx.core.text.TextDirectionHeuristicCompat)>(0, 2, $r0);

        <androidx.core.text.BidiFormatter: androidx.core.text.BidiFormatter DEFAULT_LTR_INSTANCE> = $r2;

        $r2 = new androidx.core.text.BidiFormatter;

        $r0 = <androidx.core.text.BidiFormatter: androidx.core.text.TextDirectionHeuristicCompat DEFAULT_TEXT_DIRECTION_HEURISTIC>;

        specialinvoke $r2.<androidx.core.text.BidiFormatter: void <init>(boolean,int,androidx.core.text.TextDirectionHeuristicCompat)>(1, 2, $r0);

        <androidx.core.text.BidiFormatter: androidx.core.text.BidiFormatter DEFAULT_RTL_INSTANCE> = $r2;

        return;
    }

    void <init>(boolean, int, androidx.core.text.TextDirectionHeuristicCompat)
    {
        androidx.core.text.BidiFormatter $r0;
        boolean $z0;
        int $i0;
        androidx.core.text.TextDirectionHeuristicCompat $r1;

        $r0 := @this: androidx.core.text.BidiFormatter;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        $r1 := @parameter2: androidx.core.text.TextDirectionHeuristicCompat;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<androidx.core.text.BidiFormatter: boolean mIsRtlContext> = $z0;

        $r0.<androidx.core.text.BidiFormatter: int mFlags> = $i0;

        $r0.<androidx.core.text.BidiFormatter: androidx.core.text.TextDirectionHeuristicCompat mDefaultTextDirectionHeuristicCompat> = $r1;

        return;
    }

    private static int getEntryDir(java.lang.CharSequence)
    {
        java.lang.CharSequence $r0;
        int $i0;
        androidx.core.text.BidiFormatter$DirectionalityEstimator $r1;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 = new androidx.core.text.BidiFormatter$DirectionalityEstimator;

        specialinvoke $r1.<androidx.core.text.BidiFormatter$DirectionalityEstimator: void <init>(java.lang.CharSequence,boolean)>($r0, 0);

        $i0 = virtualinvoke $r1.<androidx.core.text.BidiFormatter$DirectionalityEstimator: int getEntryDir()>();

        return $i0;
    }

    private static int getExitDir(java.lang.CharSequence)
    {
        java.lang.CharSequence $r0;
        int $i0;
        androidx.core.text.BidiFormatter$DirectionalityEstimator $r1;

        $r0 := @parameter0: java.lang.CharSequence;

        $r1 = new androidx.core.text.BidiFormatter$DirectionalityEstimator;

        specialinvoke $r1.<androidx.core.text.BidiFormatter$DirectionalityEstimator: void <init>(java.lang.CharSequence,boolean)>($r0, 0);

        $i0 = virtualinvoke $r1.<androidx.core.text.BidiFormatter$DirectionalityEstimator: int getExitDir()>();

        return $i0;
    }

    public static androidx.core.text.BidiFormatter getInstance()
    {
        androidx.core.text.BidiFormatter $r0;
        androidx.core.text.BidiFormatter$Builder $r1;

        $r1 = new androidx.core.text.BidiFormatter$Builder;

        specialinvoke $r1.<androidx.core.text.BidiFormatter$Builder: void <init>()>();

        $r0 = virtualinvoke $r1.<androidx.core.text.BidiFormatter$Builder: androidx.core.text.BidiFormatter build()>();

        return $r0;
    }

    public static androidx.core.text.BidiFormatter getInstance(java.util.Locale)
    {
        java.util.Locale $r0;
        androidx.core.text.BidiFormatter $r1;
        androidx.core.text.BidiFormatter$Builder $r2;

        $r0 := @parameter0: java.util.Locale;

        $r2 = new androidx.core.text.BidiFormatter$Builder;

        specialinvoke $r2.<androidx.core.text.BidiFormatter$Builder: void <init>(java.util.Locale)>($r0);

        $r1 = virtualinvoke $r2.<androidx.core.text.BidiFormatter$Builder: androidx.core.text.BidiFormatter build()>();

        return $r1;
    }

    public static androidx.core.text.BidiFormatter getInstance(boolean)
    {
        boolean $z0;
        androidx.core.text.BidiFormatter $r0;
        androidx.core.text.BidiFormatter$Builder $r1;

        $z0 := @parameter0: boolean;

        $r1 = new androidx.core.text.BidiFormatter$Builder;

        specialinvoke $r1.<androidx.core.text.BidiFormatter$Builder: void <init>(boolean)>($z0);

        $r0 = virtualinvoke $r1.<androidx.core.text.BidiFormatter$Builder: androidx.core.text.BidiFormatter build()>();

        return $r0;
    }

    static boolean isRtlLocale(java.util.Locale)
    {
        java.util.Locale $r0;
        int $i0;

        $r0 := @parameter0: java.util.Locale;

        $i0 = staticinvoke <androidx.core.text.TextUtilsCompat: int getLayoutDirectionFromLocale(java.util.Locale)>($r0);

        if $i0 != 1 goto label1;

        return 1;

     label1:
        return 0;
    }

    private java.lang.String markAfter(java.lang.CharSequence, androidx.core.text.TextDirectionHeuristicCompat)
    {
        androidx.core.text.BidiFormatter $r0;
        java.lang.CharSequence $r1;
        androidx.core.text.TextDirectionHeuristicCompat $r2;
        int $i0;
        boolean $z0, $z1;
        java.lang.String r3;

        $r0 := @this: androidx.core.text.BidiFormatter;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 := @parameter1: androidx.core.text.TextDirectionHeuristicCompat;

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        $z0 = interfaceinvoke $r2.<androidx.core.text.TextDirectionHeuristicCompat: boolean isRtl(java.lang.CharSequence,int,int)>($r1, 0, $i0);

        $z1 = $r0.<androidx.core.text.BidiFormatter: boolean mIsRtlContext>;

        if $z1 != 0 goto label2;

        if $z0 != 0 goto label1;

        $i0 = staticinvoke <androidx.core.text.BidiFormatter: int getExitDir(java.lang.CharSequence)>($r1);

        if $i0 != 1 goto label2;

     label1:
        r3 = <androidx.core.text.BidiFormatter: java.lang.String LRM_STRING>;

        return r3;

     label2:
        $z1 = $r0.<androidx.core.text.BidiFormatter: boolean mIsRtlContext>;

        if $z1 == 0 goto label4;

        if $z0 == 0 goto label3;

        $i0 = staticinvoke <androidx.core.text.BidiFormatter: int getExitDir(java.lang.CharSequence)>($r1);

        if $i0 != -1 goto label4;

     label3:
        r3 = <androidx.core.text.BidiFormatter: java.lang.String RLM_STRING>;

        return r3;

     label4:
        return "";
    }

    private java.lang.String markBefore(java.lang.CharSequence, androidx.core.text.TextDirectionHeuristicCompat)
    {
        androidx.core.text.BidiFormatter $r0;
        java.lang.CharSequence $r1;
        androidx.core.text.TextDirectionHeuristicCompat $r2;
        int $i0;
        boolean $z0, $z1;
        java.lang.String r3;

        $r0 := @this: androidx.core.text.BidiFormatter;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 := @parameter1: androidx.core.text.TextDirectionHeuristicCompat;

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        $z0 = interfaceinvoke $r2.<androidx.core.text.TextDirectionHeuristicCompat: boolean isRtl(java.lang.CharSequence,int,int)>($r1, 0, $i0);

        $z1 = $r0.<androidx.core.text.BidiFormatter: boolean mIsRtlContext>;

        if $z1 != 0 goto label2;

        if $z0 != 0 goto label1;

        $i0 = staticinvoke <androidx.core.text.BidiFormatter: int getEntryDir(java.lang.CharSequence)>($r1);

        if $i0 != 1 goto label2;

     label1:
        r3 = <androidx.core.text.BidiFormatter: java.lang.String LRM_STRING>;

        return r3;

     label2:
        $z1 = $r0.<androidx.core.text.BidiFormatter: boolean mIsRtlContext>;

        if $z1 == 0 goto label4;

        if $z0 == 0 goto label3;

        $i0 = staticinvoke <androidx.core.text.BidiFormatter: int getEntryDir(java.lang.CharSequence)>($r1);

        if $i0 != -1 goto label4;

     label3:
        r3 = <androidx.core.text.BidiFormatter: java.lang.String RLM_STRING>;

        return r3;

     label4:
        return "";
    }

    public boolean getStereoReset()
    {
        androidx.core.text.BidiFormatter $r0;
        int $i0;

        $r0 := @this: androidx.core.text.BidiFormatter;

        $i0 = $r0.<androidx.core.text.BidiFormatter: int mFlags>;

        $i0 = $i0 & 2;

        if $i0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isRtl(java.lang.CharSequence)
    {
        androidx.core.text.BidiFormatter $r0;
        java.lang.CharSequence $r1;
        androidx.core.text.TextDirectionHeuristicCompat $r2;
        int $i0;
        boolean $z0;

        $r0 := @this: androidx.core.text.BidiFormatter;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 = $r0.<androidx.core.text.BidiFormatter: androidx.core.text.TextDirectionHeuristicCompat mDefaultTextDirectionHeuristicCompat>;

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        $z0 = interfaceinvoke $r2.<androidx.core.text.TextDirectionHeuristicCompat: boolean isRtl(java.lang.CharSequence,int,int)>($r1, 0, $i0);

        return $z0;
    }

    public boolean isRtl(java.lang.String)
    {
        androidx.core.text.BidiFormatter $r0;
        java.lang.String $r1;
        boolean $z0;

        $r0 := @this: androidx.core.text.BidiFormatter;

        $r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke $r0.<androidx.core.text.BidiFormatter: boolean isRtl(java.lang.CharSequence)>($r1);

        return $z0;
    }

    public boolean isRtlContext()
    {
        androidx.core.text.BidiFormatter $r0;
        boolean z0;

        $r0 := @this: androidx.core.text.BidiFormatter;

        z0 = $r0.<androidx.core.text.BidiFormatter: boolean mIsRtlContext>;

        return z0;
    }

    public java.lang.CharSequence unicodeWrap(java.lang.CharSequence)
    {
        androidx.core.text.BidiFormatter $r0;
        java.lang.CharSequence $r1;
        androidx.core.text.TextDirectionHeuristicCompat $r2;

        $r0 := @this: androidx.core.text.BidiFormatter;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 = $r0.<androidx.core.text.BidiFormatter: androidx.core.text.TextDirectionHeuristicCompat mDefaultTextDirectionHeuristicCompat>;

        $r1 = virtualinvoke $r0.<androidx.core.text.BidiFormatter: java.lang.CharSequence unicodeWrap(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat,boolean)>($r1, $r2, 1);

        return $r1;
    }

    public java.lang.CharSequence unicodeWrap(java.lang.CharSequence, androidx.core.text.TextDirectionHeuristicCompat)
    {
        androidx.core.text.BidiFormatter $r0;
        java.lang.CharSequence $r1;
        androidx.core.text.TextDirectionHeuristicCompat $r2;

        $r0 := @this: androidx.core.text.BidiFormatter;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 := @parameter1: androidx.core.text.TextDirectionHeuristicCompat;

        $r1 = virtualinvoke $r0.<androidx.core.text.BidiFormatter: java.lang.CharSequence unicodeWrap(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat,boolean)>($r1, $r2, 1);

        return $r1;
    }

    public java.lang.CharSequence unicodeWrap(java.lang.CharSequence, androidx.core.text.TextDirectionHeuristicCompat, boolean)
    {
        androidx.core.text.BidiFormatter $r0;
        java.lang.CharSequence $r1;
        androidx.core.text.TextDirectionHeuristicCompat $r2;
        boolean $z0, $z1, $z2;
        int $i0;
        android.text.SpannableStringBuilder $r3;
        java.lang.String $r4;
        char $c1;

        $r0 := @this: androidx.core.text.BidiFormatter;

        $r1 := @parameter0: java.lang.CharSequence;

        $r2 := @parameter1: androidx.core.text.TextDirectionHeuristicCompat;

        $z0 := @parameter2: boolean;

        if $r1 != null goto label01;

        return null;

     label01:
        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        $z1 = interfaceinvoke $r2.<androidx.core.text.TextDirectionHeuristicCompat: boolean isRtl(java.lang.CharSequence,int,int)>($r1, 0, $i0);

        $r3 = new android.text.SpannableStringBuilder;

        specialinvoke $r3.<android.text.SpannableStringBuilder: void <init>()>();

        $z2 = virtualinvoke $r0.<androidx.core.text.BidiFormatter: boolean getStereoReset()>();

        if $z2 == 0 goto label04;

        if $z0 == 0 goto label04;

        if $z1 == 0 goto label02;

        $r2 = <androidx.core.text.TextDirectionHeuristicsCompat: androidx.core.text.TextDirectionHeuristicCompat RTL>;

        goto label03;

     label02:
        $r2 = <androidx.core.text.TextDirectionHeuristicsCompat: androidx.core.text.TextDirectionHeuristicCompat LTR>;

     label03:
        $r4 = specialinvoke $r0.<androidx.core.text.BidiFormatter: java.lang.String markBefore(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat)>($r1, $r2);

        virtualinvoke $r3.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence)>($r4);

     label04:
        $z2 = $r0.<androidx.core.text.BidiFormatter: boolean mIsRtlContext>;

        if $z1 == $z2 goto label07;

        if $z1 == 0 goto label05;

        $c1 = 8235;

        goto label06;

     label05:
        $c1 = 8234;

     label06:
        virtualinvoke $r3.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(char)>($c1);

        virtualinvoke $r3.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence)>($r1);

        virtualinvoke $r3.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(char)>(8236);

        goto label08;

     label07:
        virtualinvoke $r3.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence)>($r1);

     label08:
        if $z0 == 0 goto label11;

        if $z1 == 0 goto label09;

        $r2 = <androidx.core.text.TextDirectionHeuristicsCompat: androidx.core.text.TextDirectionHeuristicCompat RTL>;

        goto label10;

     label09:
        $r2 = <androidx.core.text.TextDirectionHeuristicsCompat: androidx.core.text.TextDirectionHeuristicCompat LTR>;

     label10:
        $r4 = specialinvoke $r0.<androidx.core.text.BidiFormatter: java.lang.String markAfter(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat)>($r1, $r2);

        virtualinvoke $r3.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence)>($r4);

     label11:
        return $r3;
    }

    public java.lang.CharSequence unicodeWrap(java.lang.CharSequence, boolean)
    {
        androidx.core.text.BidiFormatter $r0;
        java.lang.CharSequence $r1;
        boolean $z0;
        androidx.core.text.TextDirectionHeuristicCompat $r2;

        $r0 := @this: androidx.core.text.BidiFormatter;

        $r1 := @parameter0: java.lang.CharSequence;

        $z0 := @parameter1: boolean;

        $r2 = $r0.<androidx.core.text.BidiFormatter: androidx.core.text.TextDirectionHeuristicCompat mDefaultTextDirectionHeuristicCompat>;

        $r1 = virtualinvoke $r0.<androidx.core.text.BidiFormatter: java.lang.CharSequence unicodeWrap(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat,boolean)>($r1, $r2, $z0);

        return $r1;
    }

    public java.lang.String unicodeWrap(java.lang.String)
    {
        androidx.core.text.BidiFormatter $r0;
        java.lang.String $r1;
        androidx.core.text.TextDirectionHeuristicCompat $r2;

        $r0 := @this: androidx.core.text.BidiFormatter;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<androidx.core.text.BidiFormatter: androidx.core.text.TextDirectionHeuristicCompat mDefaultTextDirectionHeuristicCompat>;

        $r1 = virtualinvoke $r0.<androidx.core.text.BidiFormatter: java.lang.String unicodeWrap(java.lang.String,androidx.core.text.TextDirectionHeuristicCompat,boolean)>($r1, $r2, 1);

        return $r1;
    }

    public java.lang.String unicodeWrap(java.lang.String, androidx.core.text.TextDirectionHeuristicCompat)
    {
        androidx.core.text.BidiFormatter $r0;
        java.lang.String $r1;
        androidx.core.text.TextDirectionHeuristicCompat $r2;

        $r0 := @this: androidx.core.text.BidiFormatter;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: androidx.core.text.TextDirectionHeuristicCompat;

        $r1 = virtualinvoke $r0.<androidx.core.text.BidiFormatter: java.lang.String unicodeWrap(java.lang.String,androidx.core.text.TextDirectionHeuristicCompat,boolean)>($r1, $r2, 1);

        return $r1;
    }

    public java.lang.String unicodeWrap(java.lang.String, androidx.core.text.TextDirectionHeuristicCompat, boolean)
    {
        androidx.core.text.BidiFormatter $r0;
        java.lang.String $r1;
        androidx.core.text.TextDirectionHeuristicCompat $r2;
        boolean $z0;
        java.lang.CharSequence $r3;

        $r0 := @this: androidx.core.text.BidiFormatter;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: androidx.core.text.TextDirectionHeuristicCompat;

        $z0 := @parameter2: boolean;

        if $r1 != null goto label1;

        return null;

     label1:
        $r3 = virtualinvoke $r0.<androidx.core.text.BidiFormatter: java.lang.CharSequence unicodeWrap(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat,boolean)>($r1, $r2, $z0);

        $r1 = interfaceinvoke $r3.<java.lang.CharSequence: java.lang.String toString()>();

        return $r1;
    }

    public java.lang.String unicodeWrap(java.lang.String, boolean)
    {
        androidx.core.text.BidiFormatter $r0;
        java.lang.String $r1;
        boolean $z0;
        androidx.core.text.TextDirectionHeuristicCompat $r2;

        $r0 := @this: androidx.core.text.BidiFormatter;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $r2 = $r0.<androidx.core.text.BidiFormatter: androidx.core.text.TextDirectionHeuristicCompat mDefaultTextDirectionHeuristicCompat>;

        $r1 = virtualinvoke $r0.<androidx.core.text.BidiFormatter: java.lang.String unicodeWrap(java.lang.String,androidx.core.text.TextDirectionHeuristicCompat,boolean)>($r1, $r2, $z0);

        return $r1;
    }
}
