class androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator extends java.lang.Object implements android.animation.TypeEvaluator
{
    private androidx.core.graphics.PathParser$PathDataNode[] mNodeArray;

    void <init>()
    {
        androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator $r0;

        $r0 := @this: androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(androidx.core.graphics.PathParser$PathDataNode[])
    {
        androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator $r0;
        androidx.core.graphics.PathParser$PathDataNode[] $r1;

        $r0 := @this: androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator;

        $r1 := @parameter0: androidx.core.graphics.PathParser$PathDataNode[];

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator: androidx.core.graphics.PathParser$PathDataNode[] mNodeArray> = $r1;

        return;
    }

    public volatile java.lang.Object evaluate(float, java.lang.Object, java.lang.Object)
    {
        androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator $r0;
        androidx.core.graphics.PathParser$PathDataNode[] $r1, $r4;
        float $f0;
        java.lang.Object $r2, $r3;

        $r0 := @this: androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator;

        $f0 := @parameter0: float;

        $r2 := @parameter1: java.lang.Object;

        $r3 := @parameter2: java.lang.Object;

        $r1 = (androidx.core.graphics.PathParser$PathDataNode[]) $r2;

        $r4 = (androidx.core.graphics.PathParser$PathDataNode[]) $r3;

        $r1 = virtualinvoke $r0.<androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator: androidx.core.graphics.PathParser$PathDataNode[] evaluate(float,androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[])>($f0, $r1, $r4);

        return $r1;
    }

    public androidx.core.graphics.PathParser$PathDataNode[] evaluate(float, androidx.core.graphics.PathParser$PathDataNode[], androidx.core.graphics.PathParser$PathDataNode[])
    {
        androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator $r0;
        float $f0;
        androidx.core.graphics.PathParser$PathDataNode[] $r1, $r2, $r5;
        androidx.core.graphics.PathParser$PathDataNode $r3, $r4, $r6;
        boolean $z0;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r7;

        $r0 := @this: androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator;

        $f0 := @parameter0: float;

        $r1 := @parameter1: androidx.core.graphics.PathParser$PathDataNode[];

        $r2 := @parameter2: androidx.core.graphics.PathParser$PathDataNode[];

        $z0 = staticinvoke <androidx.core.graphics.PathParser: boolean canMorph(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[])>($r1, $r2);

        if $z0 == 0 goto label5;

        $r5 = $r0.<androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator: androidx.core.graphics.PathParser$PathDataNode[] mNodeArray>;

        if $r5 == null goto label1;

        $z0 = staticinvoke <androidx.core.graphics.PathParser: boolean canMorph(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[])>($r5, $r1);

        if $z0 != 0 goto label2;

     label1:
        $r5 = staticinvoke <androidx.core.graphics.PathParser: androidx.core.graphics.PathParser$PathDataNode[] deepCopyNodes(androidx.core.graphics.PathParser$PathDataNode[])>($r1);

        $r0.<androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator: androidx.core.graphics.PathParser$PathDataNode[] mNodeArray> = $r5;

     label2:
        $i0 = 0;

     label3:
        $i1 = lengthof $r1;

        if $i0 >= $i1 goto label4;

        $r5 = $r0.<androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator: androidx.core.graphics.PathParser$PathDataNode[] mNodeArray>;

        $r6 = $r5[$i0];

        $r3 = $r1[$i0];

        $r4 = $r2[$i0];

        virtualinvoke $r6.<androidx.core.graphics.PathParser$PathDataNode: void interpolatePathDataNode(androidx.core.graphics.PathParser$PathDataNode,androidx.core.graphics.PathParser$PathDataNode,float)>($r3, $r4, $f0);

        $i0 = $i0 + 1;

        goto label3;

     label4:
        $r1 = $r0.<androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator: androidx.core.graphics.PathParser$PathDataNode[] mNodeArray>;

        return $r1;

     label5:
        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t interpolate between two incompatible pathData");

        throw $r7;
    }
}
