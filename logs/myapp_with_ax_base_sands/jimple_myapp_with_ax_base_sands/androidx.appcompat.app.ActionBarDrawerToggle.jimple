public class androidx.appcompat.app.ActionBarDrawerToggle extends java.lang.Object implements androidx.drawerlayout.widget.DrawerLayout$DrawerListener
{
    private final androidx.appcompat.app.ActionBarDrawerToggle$Delegate mActivityImpl;
    private final int mCloseDrawerContentDescRes;
    boolean mDrawerIndicatorEnabled;
    private final androidx.drawerlayout.widget.DrawerLayout mDrawerLayout;
    private boolean mDrawerSlideAnimationEnabled;
    private boolean mHasCustomUpIndicator;
    private android.graphics.drawable.Drawable mHomeAsUpIndicator;
    private final int mOpenDrawerContentDescRes;
    private androidx.appcompat.graphics.drawable.DrawerArrowDrawable mSlider;
    android.view.View$OnClickListener mToolbarNavigationClickListener;
    private boolean mWarnedForDisplayHomeAsUp;

    void <init>(android.app.Activity, androidx.appcompat.widget.Toolbar, androidx.drawerlayout.widget.DrawerLayout, androidx.appcompat.graphics.drawable.DrawerArrowDrawable, int, int)
    {
        androidx.appcompat.app.ActionBarDrawerToggle $r0;
        android.app.Activity $r1;
        androidx.appcompat.widget.Toolbar $r2;
        androidx.drawerlayout.widget.DrawerLayout $r3;
        androidx.appcompat.graphics.drawable.DrawerArrowDrawable $r4;
        int $i0, $i1;
        androidx.appcompat.app.ActionBarDrawerToggle$ToolbarCompatDelegate $r5;
        androidx.appcompat.app.ActionBarDrawerToggle$1 $r6;
        boolean $z0;
        androidx.appcompat.app.ActionBarDrawerToggle$DelegateProvider $r7;
        androidx.appcompat.app.ActionBarDrawerToggle$Delegate $r8;
        androidx.appcompat.app.ActionBarDrawerToggle$FrameworkActionBarDelegate $r9;
        android.content.Context $r10;
        android.graphics.drawable.Drawable $r11;

        $r0 := @this: androidx.appcompat.app.ActionBarDrawerToggle;

        $r1 := @parameter0: android.app.Activity;

        $r2 := @parameter1: androidx.appcompat.widget.Toolbar;

        $r3 := @parameter2: androidx.drawerlayout.widget.DrawerLayout;

        $r4 := @parameter3: androidx.appcompat.graphics.drawable.DrawerArrowDrawable;

        $i0 := @parameter4: int;

        $i1 := @parameter5: int;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<androidx.appcompat.app.ActionBarDrawerToggle: boolean mDrawerSlideAnimationEnabled> = 1;

        $r0.<androidx.appcompat.app.ActionBarDrawerToggle: boolean mDrawerIndicatorEnabled> = 1;

        $r0.<androidx.appcompat.app.ActionBarDrawerToggle: boolean mWarnedForDisplayHomeAsUp> = 0;

        if $r2 == null goto label1;

        $r5 = new androidx.appcompat.app.ActionBarDrawerToggle$ToolbarCompatDelegate;

        specialinvoke $r5.<androidx.appcompat.app.ActionBarDrawerToggle$ToolbarCompatDelegate: void <init>(androidx.appcompat.widget.Toolbar)>($r2);

        $r0.<androidx.appcompat.app.ActionBarDrawerToggle: androidx.appcompat.app.ActionBarDrawerToggle$Delegate mActivityImpl> = $r5;

        $r6 = new androidx.appcompat.app.ActionBarDrawerToggle$1;

        specialinvoke $r6.<androidx.appcompat.app.ActionBarDrawerToggle$1: void <init>(androidx.appcompat.app.ActionBarDrawerToggle)>($r0);

        virtualinvoke $r2.<androidx.appcompat.widget.Toolbar: void setNavigationOnClickListener(android.view.View$OnClickListener)>($r6);

        goto label3;

     label1:
        $z0 = $r1 instanceof androidx.appcompat.app.ActionBarDrawerToggle$DelegateProvider;

        if $z0 == 0 goto label2;

        $r7 = (androidx.appcompat.app.ActionBarDrawerToggle$DelegateProvider) $r1;

        $r8 = interfaceinvoke $r7.<androidx.appcompat.app.ActionBarDrawerToggle$DelegateProvider: androidx.appcompat.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate()>();

        $r0.<androidx.appcompat.app.ActionBarDrawerToggle: androidx.appcompat.app.ActionBarDrawerToggle$Delegate mActivityImpl> = $r8;

        goto label3;

     label2:
        $r9 = new androidx.appcompat.app.ActionBarDrawerToggle$FrameworkActionBarDelegate;

        specialinvoke $r9.<androidx.appcompat.app.ActionBarDrawerToggle$FrameworkActionBarDelegate: void <init>(android.app.Activity)>($r1);

        $r0.<androidx.appcompat.app.ActionBarDrawerToggle: androidx.appcompat.app.ActionBarDrawerToggle$Delegate mActivityImpl> = $r9;

     label3:
        $r0.<androidx.appcompat.app.ActionBarDrawerToggle: androidx.drawerlayout.widget.DrawerLayout mDrawerLayout> = $r3;

        $r0.<androidx.appcompat.app.ActionBarDrawerToggle: int mOpenDrawerContentDescRes> = $i0;

        $r0.<androidx.appcompat.app.ActionBarDrawerToggle: int mCloseDrawerContentDescRes> = $i1;

        if $r4 != null goto label4;

        $r4 = new androidx.appcompat.graphics.drawable.DrawerArrowDrawable;

        $r8 = $r0.<androidx.appcompat.app.ActionBarDrawerToggle: androidx.appcompat.app.ActionBarDrawerToggle$Delegate mActivityImpl>;

        $r10 = interfaceinvoke $r8.<androidx.appcompat.app.ActionBarDrawerToggle$Delegate: android.content.Context getActionBarThemedContext()>();

        specialinvoke $r4.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: void <init>(android.content.Context)>($r10);

        $r0.<androidx.appcompat.app.ActionBarDrawerToggle: androidx.appcompat.graphics.drawable.DrawerArrowDrawable mSlider> = $r4;

        goto label5;

     label4:
        $r0.<androidx.appcompat.app.ActionBarDrawerToggle: androidx.appcompat.graphics.drawable.DrawerArrowDrawable mSlider> = $r4;

     label5:
        $r11 = virtualinvoke $r0.<androidx.appcompat.app.ActionBarDrawerToggle: android.graphics.drawable.Drawable getThemeUpIndicator()>();

        $r0.<androidx.appcompat.app.ActionBarDrawerToggle: android.graphics.drawable.Drawable mHomeAsUpIndicator> = $r11;

        return;
    }

    public void <init>(android.app.Activity, androidx.drawerlayout.widget.DrawerLayout, int, int)
    {
        androidx.appcompat.app.ActionBarDrawerToggle $r0;
        android.app.Activity $r1;
        androidx.drawerlayout.widget.DrawerLayout $r2;
        int $i0, $i1;

        $r0 := @this: androidx.appcompat.app.ActionBarDrawerToggle;

        $r1 := @parameter0: android.app.Activity;

        $r2 := @parameter1: androidx.drawerlayout.widget.DrawerLayout;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        specialinvoke $r0.<androidx.appcompat.app.ActionBarDrawerToggle: void <init>(android.app.Activity,androidx.appcompat.widget.Toolbar,androidx.drawerlayout.widget.DrawerLayout,androidx.appcompat.graphics.drawable.DrawerArrowDrawable,int,int)>($r1, null, $r2, null, $i0, $i1);

        return;
    }

    public void <init>(android.app.Activity, androidx.drawerlayout.widget.DrawerLayout, androidx.appcompat.widget.Toolbar, int, int)
    {
        androidx.appcompat.app.ActionBarDrawerToggle $r0;
        android.app.Activity $r1;
        androidx.drawerlayout.widget.DrawerLayout $r2;
        androidx.appcompat.widget.Toolbar $r3;
        int $i0, $i1;

        $r0 := @this: androidx.appcompat.app.ActionBarDrawerToggle;

        $r1 := @parameter0: android.app.Activity;

        $r2 := @parameter1: androidx.drawerlayout.widget.DrawerLayout;

        $r3 := @parameter2: androidx.appcompat.widget.Toolbar;

        $i0 := @parameter3: int;

        $i1 := @parameter4: int;

        specialinvoke $r0.<androidx.appcompat.app.ActionBarDrawerToggle: void <init>(android.app.Activity,androidx.appcompat.widget.Toolbar,androidx.drawerlayout.widget.DrawerLayout,androidx.appcompat.graphics.drawable.DrawerArrowDrawable,int,int)>($r1, $r3, $r2, null, $i0, $i1);

        return;
    }

    private void setPosition(float)
    {
        androidx.appcompat.app.ActionBarDrawerToggle $r0;
        float $f0;
        byte $b0;
        androidx.appcompat.graphics.drawable.DrawerArrowDrawable $r1;

        $r0 := @this: androidx.appcompat.app.ActionBarDrawerToggle;

        $f0 := @parameter0: float;

        $b0 = $f0 cmpl 1.0F;

        if $b0 != 0 goto label1;

        $r1 = $r0.<androidx.appcompat.app.ActionBarDrawerToggle: androidx.appcompat.graphics.drawable.DrawerArrowDrawable mSlider>;

        virtualinvoke $r1.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: void setVerticalMirror(boolean)>(1);

        goto label2;

     label1:
        $b0 = $f0 cmpl 0.0F;

        if $b0 != 0 goto label2;

        $r1 = $r0.<androidx.appcompat.app.ActionBarDrawerToggle: androidx.appcompat.graphics.drawable.DrawerArrowDrawable mSlider>;

        virtualinvoke $r1.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: void setVerticalMirror(boolean)>(0);

     label2:
        $r1 = $r0.<androidx.appcompat.app.ActionBarDrawerToggle: androidx.appcompat.graphics.drawable.DrawerArrowDrawable mSlider>;

        virtualinvoke $r1.<androidx.appcompat.graphics.drawable.DrawerArrowDrawable: void setProgress(float)>($f0);

        return;
    }

    public androidx.appcompat.graphics.drawable.DrawerArrowDrawable getDrawerArrowDrawable()
    {
        androidx.appcompat.app.ActionBarDrawerToggle $r0;
        androidx.appcompat.graphics.drawable.DrawerArrowDrawable r1;

        $r0 := @this: androidx.appcompat.app.ActionBarDrawerToggle;

        r1 = $r0.<androidx.appcompat.app.ActionBarDrawerToggle: androidx.appcompat.graphics.drawable.DrawerArrowDrawable mSlider>;

        return r1;
    }

    android.graphics.drawable.Drawable getThemeUpIndicator()
    {
        androidx.appcompat.app.ActionBarDrawerToggle $r0;
        android.graphics.drawable.Drawable $r1;
        androidx.appcompat.app.ActionBarDrawerToggle$Delegate $r2;

        $r0 := @this: androidx.appcompat.app.ActionBarDrawerToggle;

        $r2 = $r0.<androidx.appcompat.app.ActionBarDrawerToggle: androidx.appcompat.app.ActionBarDrawerToggle$Delegate mActivityImpl>;

        $r1 = interfaceinvoke $r2.<androidx.appcompat.app.ActionBarDrawerToggle$Delegate: android.graphics.drawable.Drawable getThemeUpIndicator()>();

        return $r1;
    }

    public android.view.View$OnClickListener getToolbarNavigationClickListener()
    {
        androidx.appcompat.app.ActionBarDrawerToggle $r0;
        android.view.View$OnClickListener r1;

        $r0 := @this: androidx.appcompat.app.ActionBarDrawerToggle;

        r1 = $r0.<androidx.appcompat.app.ActionBarDrawerToggle: android.view.View$OnClickListener mToolbarNavigationClickListener>;

        return r1;
    }

    public boolean isDrawerIndicatorEnabled()
    {
        androidx.appcompat.app.ActionBarDrawerToggle $r0;
        boolean z0;

        $r0 := @this: androidx.appcompat.app.ActionBarDrawerToggle;

        z0 = $r0.<androidx.appcompat.app.ActionBarDrawerToggle: boolean mDrawerIndicatorEnabled>;

        return z0;
    }

    public boolean isDrawerSlideAnimationEnabled()
    {
        androidx.appcompat.app.ActionBarDrawerToggle $r0;
        boolean z0;

        $r0 := @this: androidx.appcompat.app.ActionBarDrawerToggle;

        z0 = $r0.<androidx.appcompat.app.ActionBarDrawerToggle: boolean mDrawerSlideAnimationEnabled>;

        return z0;
    }

    public void onConfigurationChanged(android.content.res.Configuration)
    {
        androidx.appcompat.app.ActionBarDrawerToggle $r0;
        android.content.res.Configuration $r1;
        android.graphics.drawable.Drawable $r2;
        boolean $z0;

        $r0 := @this: androidx.appcompat.app.ActionBarDrawerToggle;

        $r1 := @parameter0: android.content.res.Configuration;

        $z0 = $r0.<androidx.appcompat.app.ActionBarDrawerToggle: boolean mHasCustomUpIndicator>;

        if $z0 != 0 goto label1;

        $r2 = virtualinvoke $r0.<androidx.appcompat.app.ActionBarDrawerToggle: android.graphics.drawable.Drawable getThemeUpIndicator()>();

        $r0.<androidx.appcompat.app.ActionBarDrawerToggle: android.graphics.drawable.Drawable mHomeAsUpIndicator> = $r2;

     label1:
        virtualinvoke $r0.<androidx.appcompat.app.ActionBarDrawerToggle: void syncState()>();

        return;
    }

    public void onDrawerClosed(android.view.View)
    {
        androidx.appcompat.app.ActionBarDrawerToggle $r0;
        android.view.View $r1;
        boolean $z0;
        int $i0;

        $r0 := @this: androidx.appcompat.app.ActionBarDrawerToggle;

        $r1 := @parameter0: android.view.View;

        specialinvoke $r0.<androidx.appcompat.app.ActionBarDrawerToggle: void setPosition(float)>(0.0F);

        $z0 = $r0.<androidx.appcompat.app.ActionBarDrawerToggle: boolean mDrawerIndicatorEnabled>;

        if $z0 == 0 goto label1;

        $i0 = $r0.<androidx.appcompat.app.ActionBarDrawerToggle: int mOpenDrawerContentDescRes>;

        virtualinvoke $r0.<androidx.appcompat.app.ActionBarDrawerToggle: void setActionBarDescription(int)>($i0);

     label1:
        return;
    }

    public void onDrawerOpened(android.view.View)
    {
        androidx.appcompat.app.ActionBarDrawerToggle $r0;
        android.view.View $r1;
        boolean $z0;
        int $i0;

        $r0 := @this: androidx.appcompat.app.ActionBarDrawerToggle;

        $r1 := @parameter0: android.view.View;

        specialinvoke $r0.<androidx.appcompat.app.ActionBarDrawerToggle: void setPosition(float)>(1.0F);

        $z0 = $r0.<androidx.appcompat.app.ActionBarDrawerToggle: boolean mDrawerIndicatorEnabled>;

        if $z0 == 0 goto label1;

        $i0 = $r0.<androidx.appcompat.app.ActionBarDrawerToggle: int mCloseDrawerContentDescRes>;

        virtualinvoke $r0.<androidx.appcompat.app.ActionBarDrawerToggle: void setActionBarDescription(int)>($i0);

     label1:
        return;
    }

    public void onDrawerSlide(android.view.View, float)
    {
        androidx.appcompat.app.ActionBarDrawerToggle $r0;
        android.view.View $r1;
        float $f0;
        boolean $z0;

        $r0 := @this: androidx.appcompat.app.ActionBarDrawerToggle;

        $r1 := @parameter0: android.view.View;

        $f0 := @parameter1: float;

        $z0 = $r0.<androidx.appcompat.app.ActionBarDrawerToggle: boolean mDrawerSlideAnimationEnabled>;

        if $z0 == 0 goto label1;

        $f0 = staticinvoke <java.lang.Math: float max(float,float)>(0.0F, $f0);

        $f0 = staticinvoke <java.lang.Math: float min(float,float)>(1.0F, $f0);

        specialinvoke $r0.<androidx.appcompat.app.ActionBarDrawerToggle: void setPosition(float)>($f0);

        return;

     label1:
        specialinvoke $r0.<androidx.appcompat.app.ActionBarDrawerToggle: void setPosition(float)>(0.0F);

        return;
    }

    public void onDrawerStateChanged(int)
    {
        androidx.appcompat.app.ActionBarDrawerToggle $r0;
        int $i0;

        $r0 := @this: androidx.appcompat.app.ActionBarDrawerToggle;

        $i0 := @parameter0: int;

        return;
    }

    public boolean onOptionsItemSelected(android.view.MenuItem)
    {
        androidx.appcompat.app.ActionBarDrawerToggle $r0;
        android.view.MenuItem $r1;
        int $i0;
        boolean $z0;

        $r0 := @this: androidx.appcompat.app.ActionBarDrawerToggle;

        $r1 := @parameter0: android.view.MenuItem;

        if $r1 == null goto label1;

        $i0 = interfaceinvoke $r1.<android.view.MenuItem: int getItemId()>();

        if $i0 != 16908332 goto label1;

        $z0 = $r0.<androidx.appcompat.app.ActionBarDrawerToggle: boolean mDrawerIndicatorEnabled>;

        if $z0 == 0 goto label1;

        virtualinvoke $r0.<androidx.appcompat.app.ActionBarDrawerToggle: void toggle()>();

        return 1;

     label1:
        return 0;
    }

    void setActionBarDescription(int)
    {
        androidx.appcompat.app.ActionBarDrawerToggle $r0;
        int $i0;
        androidx.appcompat.app.ActionBarDrawerToggle$Delegate $r1;

        $r0 := @this: androidx.appcompat.app.ActionBarDrawerToggle;

        $i0 := @parameter0: int;

        $r1 = $r0.<androidx.appcompat.app.ActionBarDrawerToggle: androidx.appcompat.app.ActionBarDrawerToggle$Delegate mActivityImpl>;

        interfaceinvoke $r1.<androidx.appcompat.app.ActionBarDrawerToggle$Delegate: void setActionBarDescription(int)>($i0);

        return;
    }

    void setActionBarUpIndicator(android.graphics.drawable.Drawable, int)
    {
        androidx.appcompat.app.ActionBarDrawerToggle $r0;
        android.graphics.drawable.Drawable $r1;
        int $i0;
        boolean $z0;
        androidx.appcompat.app.ActionBarDrawerToggle$Delegate $r2;

        $r0 := @this: androidx.appcompat.app.ActionBarDrawerToggle;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        $i0 := @parameter1: int;

        $z0 = $r0.<androidx.appcompat.app.ActionBarDrawerToggle: boolean mWarnedForDisplayHomeAsUp>;

        if $z0 != 0 goto label1;

        $r2 = $r0.<androidx.appcompat.app.ActionBarDrawerToggle: androidx.appcompat.app.ActionBarDrawerToggle$Delegate mActivityImpl>;

        $z0 = interfaceinvoke $r2.<androidx.appcompat.app.ActionBarDrawerToggle$Delegate: boolean isNavigationVisible()>();

        if $z0 != 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ActionBarDrawerToggle", "DrawerToggle may not show up because NavigationIcon is not visible. You may need to call actionbar.setDisplayHomeAsUpEnabled(true);");

        $r0.<androidx.appcompat.app.ActionBarDrawerToggle: boolean mWarnedForDisplayHomeAsUp> = 1;

     label1:
        $r2 = $r0.<androidx.appcompat.app.ActionBarDrawerToggle: androidx.appcompat.app.ActionBarDrawerToggle$Delegate mActivityImpl>;

        interfaceinvoke $r2.<androidx.appcompat.app.ActionBarDrawerToggle$Delegate: void setActionBarUpIndicator(android.graphics.drawable.Drawable,int)>($r1, $i0);

        return;
    }

    public void setDrawerArrowDrawable(androidx.appcompat.graphics.drawable.DrawerArrowDrawable)
    {
        androidx.appcompat.app.ActionBarDrawerToggle $r0;
        androidx.appcompat.graphics.drawable.DrawerArrowDrawable $r1;

        $r0 := @this: androidx.appcompat.app.ActionBarDrawerToggle;

        $r1 := @parameter0: androidx.appcompat.graphics.drawable.DrawerArrowDrawable;

        $r0.<androidx.appcompat.app.ActionBarDrawerToggle: androidx.appcompat.graphics.drawable.DrawerArrowDrawable mSlider> = $r1;

        virtualinvoke $r0.<androidx.appcompat.app.ActionBarDrawerToggle: void syncState()>();

        return;
    }

    public void setDrawerIndicatorEnabled(boolean)
    {
        androidx.appcompat.app.ActionBarDrawerToggle $r0;
        boolean $z0, $z1;
        androidx.appcompat.graphics.drawable.DrawerArrowDrawable $r1;
        androidx.drawerlayout.widget.DrawerLayout $r2;
        int $i0;
        android.graphics.drawable.Drawable $r3;

        $r0 := @this: androidx.appcompat.app.ActionBarDrawerToggle;

        $z0 := @parameter0: boolean;

        $z1 = $r0.<androidx.appcompat.app.ActionBarDrawerToggle: boolean mDrawerIndicatorEnabled>;

        if $z0 == $z1 goto label5;

        if $z0 == 0 goto label3;

        $r1 = $r0.<androidx.appcompat.app.ActionBarDrawerToggle: androidx.appcompat.graphics.drawable.DrawerArrowDrawable mSlider>;

        $r2 = $r0.<androidx.appcompat.app.ActionBarDrawerToggle: androidx.drawerlayout.widget.DrawerLayout mDrawerLayout>;

        $z1 = virtualinvoke $r2.<androidx.drawerlayout.widget.DrawerLayout: boolean isDrawerOpen(int)>(8388611);

        if $z1 == 0 goto label1;

        $i0 = $r0.<androidx.appcompat.app.ActionBarDrawerToggle: int mCloseDrawerContentDescRes>;

        goto label2;

     label1:
        $i0 = $r0.<androidx.appcompat.app.ActionBarDrawerToggle: int mOpenDrawerContentDescRes>;

     label2:
        virtualinvoke $r0.<androidx.appcompat.app.ActionBarDrawerToggle: void setActionBarUpIndicator(android.graphics.drawable.Drawable,int)>($r1, $i0);

        goto label4;

     label3:
        $r3 = $r0.<androidx.appcompat.app.ActionBarDrawerToggle: android.graphics.drawable.Drawable mHomeAsUpIndicator>;

        virtualinvoke $r0.<androidx.appcompat.app.ActionBarDrawerToggle: void setActionBarUpIndicator(android.graphics.drawable.Drawable,int)>($r3, 0);

     label4:
        $r0.<androidx.appcompat.app.ActionBarDrawerToggle: boolean mDrawerIndicatorEnabled> = $z0;

     label5:
        return;
    }

    public void setDrawerSlideAnimationEnabled(boolean)
    {
        androidx.appcompat.app.ActionBarDrawerToggle $r0;
        boolean $z0;

        $r0 := @this: androidx.appcompat.app.ActionBarDrawerToggle;

        $z0 := @parameter0: boolean;

        $r0.<androidx.appcompat.app.ActionBarDrawerToggle: boolean mDrawerSlideAnimationEnabled> = $z0;

        if $z0 != 0 goto label1;

        specialinvoke $r0.<androidx.appcompat.app.ActionBarDrawerToggle: void setPosition(float)>(0.0F);

     label1:
        return;
    }

    public void setHomeAsUpIndicator(int)
    {
        androidx.appcompat.app.ActionBarDrawerToggle $r0;
        int $i0;
        android.graphics.drawable.Drawable $r1;
        androidx.drawerlayout.widget.DrawerLayout $r2;
        android.content.res.Resources $r3;

        $r0 := @this: androidx.appcompat.app.ActionBarDrawerToggle;

        $i0 := @parameter0: int;

        $r1 = null;

        if $i0 == 0 goto label1;

        $r2 = $r0.<androidx.appcompat.app.ActionBarDrawerToggle: androidx.drawerlayout.widget.DrawerLayout mDrawerLayout>;

        $r3 = virtualinvoke $r2.<androidx.drawerlayout.widget.DrawerLayout: android.content.res.Resources getResources()>();

        $r1 = virtualinvoke $r3.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>($i0);

     label1:
        virtualinvoke $r0.<androidx.appcompat.app.ActionBarDrawerToggle: void setHomeAsUpIndicator(android.graphics.drawable.Drawable)>($r1);

        return;
    }

    public void setHomeAsUpIndicator(android.graphics.drawable.Drawable)
    {
        androidx.appcompat.app.ActionBarDrawerToggle $r0;
        android.graphics.drawable.Drawable $r1;
        boolean $z0;

        $r0 := @this: androidx.appcompat.app.ActionBarDrawerToggle;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        if $r1 != null goto label1;

        $r1 = virtualinvoke $r0.<androidx.appcompat.app.ActionBarDrawerToggle: android.graphics.drawable.Drawable getThemeUpIndicator()>();

        $r0.<androidx.appcompat.app.ActionBarDrawerToggle: android.graphics.drawable.Drawable mHomeAsUpIndicator> = $r1;

        $r0.<androidx.appcompat.app.ActionBarDrawerToggle: boolean mHasCustomUpIndicator> = 0;

        goto label2;

     label1:
        $r0.<androidx.appcompat.app.ActionBarDrawerToggle: android.graphics.drawable.Drawable mHomeAsUpIndicator> = $r1;

        $r0.<androidx.appcompat.app.ActionBarDrawerToggle: boolean mHasCustomUpIndicator> = 1;

     label2:
        $z0 = $r0.<androidx.appcompat.app.ActionBarDrawerToggle: boolean mDrawerIndicatorEnabled>;

        if $z0 != 0 goto label3;

        $r1 = $r0.<androidx.appcompat.app.ActionBarDrawerToggle: android.graphics.drawable.Drawable mHomeAsUpIndicator>;

        virtualinvoke $r0.<androidx.appcompat.app.ActionBarDrawerToggle: void setActionBarUpIndicator(android.graphics.drawable.Drawable,int)>($r1, 0);

     label3:
        return;
    }

    public void setToolbarNavigationClickListener(android.view.View$OnClickListener)
    {
        androidx.appcompat.app.ActionBarDrawerToggle $r0;
        android.view.View$OnClickListener $r1;

        $r0 := @this: androidx.appcompat.app.ActionBarDrawerToggle;

        $r1 := @parameter0: android.view.View$OnClickListener;

        $r0.<androidx.appcompat.app.ActionBarDrawerToggle: android.view.View$OnClickListener mToolbarNavigationClickListener> = $r1;

        return;
    }

    public void syncState()
    {
        androidx.appcompat.app.ActionBarDrawerToggle $r0;
        androidx.drawerlayout.widget.DrawerLayout $r1;
        boolean $z0;
        androidx.appcompat.graphics.drawable.DrawerArrowDrawable $r2;
        int $i0;

        $r0 := @this: androidx.appcompat.app.ActionBarDrawerToggle;

        $r1 = $r0.<androidx.appcompat.app.ActionBarDrawerToggle: androidx.drawerlayout.widget.DrawerLayout mDrawerLayout>;

        $z0 = virtualinvoke $r1.<androidx.drawerlayout.widget.DrawerLayout: boolean isDrawerOpen(int)>(8388611);

        if $z0 == 0 goto label1;

        specialinvoke $r0.<androidx.appcompat.app.ActionBarDrawerToggle: void setPosition(float)>(1.0F);

        goto label2;

     label1:
        specialinvoke $r0.<androidx.appcompat.app.ActionBarDrawerToggle: void setPosition(float)>(0.0F);

     label2:
        $z0 = $r0.<androidx.appcompat.app.ActionBarDrawerToggle: boolean mDrawerIndicatorEnabled>;

        if $z0 == 0 goto label5;

        $r2 = $r0.<androidx.appcompat.app.ActionBarDrawerToggle: androidx.appcompat.graphics.drawable.DrawerArrowDrawable mSlider>;

        $r1 = $r0.<androidx.appcompat.app.ActionBarDrawerToggle: androidx.drawerlayout.widget.DrawerLayout mDrawerLayout>;

        $z0 = virtualinvoke $r1.<androidx.drawerlayout.widget.DrawerLayout: boolean isDrawerOpen(int)>(8388611);

        if $z0 == 0 goto label3;

        $i0 = $r0.<androidx.appcompat.app.ActionBarDrawerToggle: int mCloseDrawerContentDescRes>;

        goto label4;

     label3:
        $i0 = $r0.<androidx.appcompat.app.ActionBarDrawerToggle: int mOpenDrawerContentDescRes>;

     label4:
        virtualinvoke $r0.<androidx.appcompat.app.ActionBarDrawerToggle: void setActionBarUpIndicator(android.graphics.drawable.Drawable,int)>($r2, $i0);

     label5:
        return;
    }

    void toggle()
    {
        androidx.appcompat.app.ActionBarDrawerToggle $r0;
        androidx.drawerlayout.widget.DrawerLayout $r1;
        int $i0;
        boolean $z0;

        $r0 := @this: androidx.appcompat.app.ActionBarDrawerToggle;

        $r1 = $r0.<androidx.appcompat.app.ActionBarDrawerToggle: androidx.drawerlayout.widget.DrawerLayout mDrawerLayout>;

        $i0 = virtualinvoke $r1.<androidx.drawerlayout.widget.DrawerLayout: int getDrawerLockMode(int)>(8388611);

        $r1 = $r0.<androidx.appcompat.app.ActionBarDrawerToggle: androidx.drawerlayout.widget.DrawerLayout mDrawerLayout>;

        $z0 = virtualinvoke $r1.<androidx.drawerlayout.widget.DrawerLayout: boolean isDrawerVisible(int)>(8388611);

        if $z0 == 0 goto label1;

        if $i0 == 2 goto label1;

        $r1 = $r0.<androidx.appcompat.app.ActionBarDrawerToggle: androidx.drawerlayout.widget.DrawerLayout mDrawerLayout>;

        virtualinvoke $r1.<androidx.drawerlayout.widget.DrawerLayout: void closeDrawer(int)>(8388611);

        return;

     label1:
        if $i0 == 1 goto label2;

        $r1 = $r0.<androidx.appcompat.app.ActionBarDrawerToggle: androidx.drawerlayout.widget.DrawerLayout mDrawerLayout>;

        virtualinvoke $r1.<androidx.drawerlayout.widget.DrawerLayout: void openDrawer(int)>(8388611);

     label2:
        return;
    }
}
