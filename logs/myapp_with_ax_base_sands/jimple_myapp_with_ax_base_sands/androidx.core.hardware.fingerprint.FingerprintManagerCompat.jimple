public final class androidx.core.hardware.fingerprint.FingerprintManagerCompat extends java.lang.Object
{
    private final android.content.Context mContext;

    private void <init>(android.content.Context)
    {
        androidx.core.hardware.fingerprint.FingerprintManagerCompat $r0;
        android.content.Context $r1;

        $r0 := @this: androidx.core.hardware.fingerprint.FingerprintManagerCompat;

        $r1 := @parameter0: android.content.Context;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<androidx.core.hardware.fingerprint.FingerprintManagerCompat: android.content.Context mContext> = $r1;

        return;
    }

    public static androidx.core.hardware.fingerprint.FingerprintManagerCompat 'from'(android.content.Context)
    {
        android.content.Context $r0;
        androidx.core.hardware.fingerprint.FingerprintManagerCompat $r1;

        $r0 := @parameter0: android.content.Context;

        $r1 = new androidx.core.hardware.fingerprint.FingerprintManagerCompat;

        specialinvoke $r1.<androidx.core.hardware.fingerprint.FingerprintManagerCompat: void <init>(android.content.Context)>($r0);

        return $r1;
    }

    private static android.hardware.fingerprint.FingerprintManager getFingerprintManagerOrNull(android.content.Context)
    {
        android.content.Context $r0;
        android.content.pm.PackageManager $r1;
        boolean $z0;
        java.lang.Object $r2;
        android.hardware.fingerprint.FingerprintManager $r3;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $z0 = virtualinvoke $r1.<android.content.pm.PackageManager: boolean hasSystemFeature(java.lang.String)>("android.hardware.fingerprint");

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/hardware/fingerprint/FingerprintManager;");

        $r3 = (android.hardware.fingerprint.FingerprintManager) $r2;

        return $r3;

     label1:
        return null;
    }

    static androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject unwrapCryptoObject(android.hardware.fingerprint.FingerprintManager$CryptoObject)
    {
        android.hardware.fingerprint.FingerprintManager$CryptoObject $r0;
        javax.crypto.Cipher $r1;
        androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject $r2;
        java.security.Signature $r3;
        javax.crypto.Mac $r4;

        $r0 := @parameter0: android.hardware.fingerprint.FingerprintManager$CryptoObject;

        if $r0 != null goto label1;

        return null;

     label1:
        $r1 = virtualinvoke $r0.<android.hardware.fingerprint.FingerprintManager$CryptoObject: javax.crypto.Cipher getCipher()>();

        if $r1 == null goto label2;

        $r2 = new androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject;

        $r1 = virtualinvoke $r0.<android.hardware.fingerprint.FingerprintManager$CryptoObject: javax.crypto.Cipher getCipher()>();

        specialinvoke $r2.<androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject: void <init>(javax.crypto.Cipher)>($r1);

        return $r2;

     label2:
        $r3 = virtualinvoke $r0.<android.hardware.fingerprint.FingerprintManager$CryptoObject: java.security.Signature getSignature()>();

        if $r3 == null goto label3;

        $r2 = new androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject;

        $r3 = virtualinvoke $r0.<android.hardware.fingerprint.FingerprintManager$CryptoObject: java.security.Signature getSignature()>();

        specialinvoke $r2.<androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject: void <init>(java.security.Signature)>($r3);

        return $r2;

     label3:
        $r4 = virtualinvoke $r0.<android.hardware.fingerprint.FingerprintManager$CryptoObject: javax.crypto.Mac getMac()>();

        if $r4 == null goto label4;

        $r2 = new androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject;

        $r4 = virtualinvoke $r0.<android.hardware.fingerprint.FingerprintManager$CryptoObject: javax.crypto.Mac getMac()>();

        specialinvoke $r2.<androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject: void <init>(javax.crypto.Mac)>($r4);

        return $r2;

     label4:
        return null;
    }

    private static android.hardware.fingerprint.FingerprintManager$AuthenticationCallback wrapCallback(androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback)
    {
        androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback $r0;
        androidx.core.hardware.fingerprint.FingerprintManagerCompat$1 $r1;

        $r0 := @parameter0: androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback;

        $r1 = new androidx.core.hardware.fingerprint.FingerprintManagerCompat$1;

        specialinvoke $r1.<androidx.core.hardware.fingerprint.FingerprintManagerCompat$1: void <init>(androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback)>($r0);

        return $r1;
    }

    private static android.hardware.fingerprint.FingerprintManager$CryptoObject wrapCryptoObject(androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject)
    {
        androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject $r0;
        javax.crypto.Cipher $r1;
        android.hardware.fingerprint.FingerprintManager$CryptoObject $r2;
        java.security.Signature $r3;
        javax.crypto.Mac $r4;

        $r0 := @parameter0: androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject;

        if $r0 != null goto label1;

        return null;

     label1:
        $r1 = virtualinvoke $r0.<androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject: javax.crypto.Cipher getCipher()>();

        if $r1 == null goto label2;

        $r2 = new android.hardware.fingerprint.FingerprintManager$CryptoObject;

        $r1 = virtualinvoke $r0.<androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject: javax.crypto.Cipher getCipher()>();

        specialinvoke $r2.<android.hardware.fingerprint.FingerprintManager$CryptoObject: void <init>(javax.crypto.Cipher)>($r1);

        return $r2;

     label2:
        $r3 = virtualinvoke $r0.<androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject: java.security.Signature getSignature()>();

        if $r3 == null goto label3;

        $r2 = new android.hardware.fingerprint.FingerprintManager$CryptoObject;

        $r3 = virtualinvoke $r0.<androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject: java.security.Signature getSignature()>();

        specialinvoke $r2.<android.hardware.fingerprint.FingerprintManager$CryptoObject: void <init>(java.security.Signature)>($r3);

        return $r2;

     label3:
        $r4 = virtualinvoke $r0.<androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject: javax.crypto.Mac getMac()>();

        if $r4 == null goto label4;

        $r2 = new android.hardware.fingerprint.FingerprintManager$CryptoObject;

        $r4 = virtualinvoke $r0.<androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject: javax.crypto.Mac getMac()>();

        specialinvoke $r2.<android.hardware.fingerprint.FingerprintManager$CryptoObject: void <init>(javax.crypto.Mac)>($r4);

        return $r2;

     label4:
        return null;
    }

    public void authenticate(androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject, int, androidx.core.os.CancellationSignal, androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback, android.os.Handler)
    {
        androidx.core.hardware.fingerprint.FingerprintManagerCompat $r0;
        androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject $r1;
        int $i0, $i1;
        androidx.core.os.CancellationSignal $r2;
        androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback $r3;
        android.os.Handler $r4;
        android.content.Context $r5;
        android.hardware.fingerprint.FingerprintManager $r6;
        java.lang.Object $r7;
        android.os.CancellationSignal $r8;
        android.hardware.fingerprint.FingerprintManager$CryptoObject $r9;
        android.hardware.fingerprint.FingerprintManager$AuthenticationCallback $r10;

        $r0 := @this: androidx.core.hardware.fingerprint.FingerprintManagerCompat;

        $r1 := @parameter0: androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject;

        $i0 := @parameter1: int;

        $r2 := @parameter2: androidx.core.os.CancellationSignal;

        $r3 := @parameter3: androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback;

        $r4 := @parameter4: android.os.Handler;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 23 goto label3;

        $r5 = $r0.<androidx.core.hardware.fingerprint.FingerprintManagerCompat: android.content.Context mContext>;

        $r6 = staticinvoke <androidx.core.hardware.fingerprint.FingerprintManagerCompat: android.hardware.fingerprint.FingerprintManager getFingerprintManagerOrNull(android.content.Context)>($r5);

        if $r6 == null goto label3;

        if $r2 == null goto label1;

        $r7 = virtualinvoke $r2.<androidx.core.os.CancellationSignal: java.lang.Object getCancellationSignalObject()>();

        $r8 = (android.os.CancellationSignal) $r7;

        goto label2;

     label1:
        $r8 = null;

     label2:
        $r9 = staticinvoke <androidx.core.hardware.fingerprint.FingerprintManagerCompat: android.hardware.fingerprint.FingerprintManager$CryptoObject wrapCryptoObject(androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject)>($r1);

        $r10 = staticinvoke <androidx.core.hardware.fingerprint.FingerprintManagerCompat: android.hardware.fingerprint.FingerprintManager$AuthenticationCallback wrapCallback(androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback)>($r3);

        virtualinvoke $r6.<android.hardware.fingerprint.FingerprintManager: void authenticate(android.hardware.fingerprint.FingerprintManager$CryptoObject,android.os.CancellationSignal,int,android.hardware.fingerprint.FingerprintManager$AuthenticationCallback,android.os.Handler)>($r9, $r8, $i0, $r10, $r4);

     label3:
        return;
    }

    public boolean hasEnrolledFingerprints()
    {
        androidx.core.hardware.fingerprint.FingerprintManagerCompat $r0;
        int $i0;
        android.content.Context $r1;
        android.hardware.fingerprint.FingerprintManager $r2;
        boolean $z0;

        $r0 := @this: androidx.core.hardware.fingerprint.FingerprintManagerCompat;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 23 goto label1;

        $r1 = $r0.<androidx.core.hardware.fingerprint.FingerprintManagerCompat: android.content.Context mContext>;

        $r2 = staticinvoke <androidx.core.hardware.fingerprint.FingerprintManagerCompat: android.hardware.fingerprint.FingerprintManager getFingerprintManagerOrNull(android.content.Context)>($r1);

        if $r2 == null goto label1;

        $z0 = virtualinvoke $r2.<android.hardware.fingerprint.FingerprintManager: boolean hasEnrolledFingerprints()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isHardwareDetected()
    {
        androidx.core.hardware.fingerprint.FingerprintManagerCompat $r0;
        int $i0;
        android.content.Context $r1;
        android.hardware.fingerprint.FingerprintManager $r2;
        boolean $z0;

        $r0 := @this: androidx.core.hardware.fingerprint.FingerprintManagerCompat;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 23 goto label1;

        $r1 = $r0.<androidx.core.hardware.fingerprint.FingerprintManagerCompat: android.content.Context mContext>;

        $r2 = staticinvoke <androidx.core.hardware.fingerprint.FingerprintManagerCompat: android.hardware.fingerprint.FingerprintManager getFingerprintManagerOrNull(android.content.Context)>($r1);

        if $r2 == null goto label1;

        $z0 = virtualinvoke $r2.<android.hardware.fingerprint.FingerprintManager: boolean isHardwareDetected()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
}
