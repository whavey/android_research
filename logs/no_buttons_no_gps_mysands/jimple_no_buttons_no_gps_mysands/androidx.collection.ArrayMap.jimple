public class androidx.collection.ArrayMap extends androidx.collection.SimpleArrayMap implements java.util.Map
{
    androidx.collection.MapCollections mCollections;

    public void <init>()
    {
        androidx.collection.ArrayMap $r0;

        $r0 := @this: androidx.collection.ArrayMap;

        specialinvoke $r0.<androidx.collection.SimpleArrayMap: void <init>()>();

        return;
    }

    public void <init>(int)
    {
        androidx.collection.ArrayMap $r0;
        int $i0;

        $r0 := @this: androidx.collection.ArrayMap;

        $i0 := @parameter0: int;

        specialinvoke $r0.<androidx.collection.SimpleArrayMap: void <init>(int)>($i0);

        return;
    }

    public void <init>(androidx.collection.SimpleArrayMap)
    {
        androidx.collection.ArrayMap $r0;
        androidx.collection.SimpleArrayMap $r1;

        $r0 := @this: androidx.collection.ArrayMap;

        $r1 := @parameter0: androidx.collection.SimpleArrayMap;

        specialinvoke $r0.<androidx.collection.SimpleArrayMap: void <init>(androidx.collection.SimpleArrayMap)>($r1);

        return;
    }

    private androidx.collection.MapCollections getCollection()
    {
        androidx.collection.ArrayMap $r0;
        androidx.collection.MapCollections $r1;
        androidx.collection.ArrayMap$1 $r2;

        $r0 := @this: androidx.collection.ArrayMap;

        $r1 = $r0.<androidx.collection.ArrayMap: androidx.collection.MapCollections mCollections>;

        if $r1 != null goto label1;

        $r2 = new androidx.collection.ArrayMap$1;

        specialinvoke $r2.<androidx.collection.ArrayMap$1: void <init>(androidx.collection.ArrayMap)>($r0);

        $r0.<androidx.collection.ArrayMap: androidx.collection.MapCollections mCollections> = $r2;

     label1:
        $r1 = $r0.<androidx.collection.ArrayMap: androidx.collection.MapCollections mCollections>;

        return $r1;
    }

    public boolean containsAll(java.util.Collection)
    {
        androidx.collection.ArrayMap $r0;
        java.util.Collection $r1;
        boolean $z0;

        $r0 := @this: androidx.collection.ArrayMap;

        $r1 := @parameter0: java.util.Collection;

        $z0 = staticinvoke <androidx.collection.MapCollections: boolean containsAllHelper(java.util.Map,java.util.Collection)>($r0, $r1);

        return $z0;
    }

    public java.util.Set entrySet()
    {
        androidx.collection.ArrayMap $r0;
        androidx.collection.MapCollections $r1;
        java.util.Set $r2;

        $r0 := @this: androidx.collection.ArrayMap;

        $r1 = specialinvoke $r0.<androidx.collection.ArrayMap: androidx.collection.MapCollections getCollection()>();

        $r2 = virtualinvoke $r1.<androidx.collection.MapCollections: java.util.Set getEntrySet()>();

        return $r2;
    }

    public java.util.Set keySet()
    {
        androidx.collection.ArrayMap $r0;
        androidx.collection.MapCollections $r1;
        java.util.Set $r2;

        $r0 := @this: androidx.collection.ArrayMap;

        $r1 = specialinvoke $r0.<androidx.collection.ArrayMap: androidx.collection.MapCollections getCollection()>();

        $r2 = virtualinvoke $r1.<androidx.collection.MapCollections: java.util.Set getKeySet()>();

        return $r2;
    }

    public void putAll(java.util.Map)
    {
        androidx.collection.ArrayMap $r0;
        java.util.Map $r1;
        int $i0, $i1;
        java.util.Set $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4, $r6;
        java.util.Map$Entry $r5;

        $r0 := @this: androidx.collection.ArrayMap;

        $r1 := @parameter0: java.util.Map;

        $i0 = $r0.<androidx.collection.ArrayMap: int mSize>;

        $i1 = interfaceinvoke $r1.<java.util.Map: int size()>();

        $i0 = $i0 + $i1;

        virtualinvoke $r0.<androidx.collection.ArrayMap: void ensureCapacity(int)>($i0);

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.util.Map$Entry) $r4;

        $r4 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r6 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke $r0.<androidx.collection.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r6);

        goto label1;

     label2:
        return;
    }

    public boolean removeAll(java.util.Collection)
    {
        androidx.collection.ArrayMap $r0;
        java.util.Collection $r1;
        boolean $z0;

        $r0 := @this: androidx.collection.ArrayMap;

        $r1 := @parameter0: java.util.Collection;

        $z0 = staticinvoke <androidx.collection.MapCollections: boolean removeAllHelper(java.util.Map,java.util.Collection)>($r0, $r1);

        return $z0;
    }

    public boolean retainAll(java.util.Collection)
    {
        androidx.collection.ArrayMap $r0;
        java.util.Collection $r1;
        boolean $z0;

        $r0 := @this: androidx.collection.ArrayMap;

        $r1 := @parameter0: java.util.Collection;

        $z0 = staticinvoke <androidx.collection.MapCollections: boolean retainAllHelper(java.util.Map,java.util.Collection)>($r0, $r1);

        return $z0;
    }

    public java.util.Collection values()
    {
        androidx.collection.ArrayMap $r0;
        androidx.collection.MapCollections $r1;
        java.util.Collection $r2;

        $r0 := @this: androidx.collection.ArrayMap;

        $r1 = specialinvoke $r0.<androidx.collection.ArrayMap: androidx.collection.MapCollections getCollection()>();

        $r2 = virtualinvoke $r1.<androidx.collection.MapCollections: java.util.Collection getValues()>();

        return $r2;
    }
}
