class androidx.customview.widget.FocusStrategy extends java.lang.Object
{

    private void <init>()
    {
        androidx.customview.widget.FocusStrategy $r0;

        $r0 := @this: androidx.customview.widget.FocusStrategy;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static boolean beamBeats(int, android.graphics.Rect, android.graphics.Rect, android.graphics.Rect)
    {
        int $i0, $i1;
        android.graphics.Rect $r0, $r1, $r2;
        boolean $z0, $z1;

        $i0 := @parameter0: int;

        $r0 := @parameter1: android.graphics.Rect;

        $r1 := @parameter2: android.graphics.Rect;

        $r2 := @parameter3: android.graphics.Rect;

        $z0 = staticinvoke <androidx.customview.widget.FocusStrategy: boolean beamsOverlap(int,android.graphics.Rect,android.graphics.Rect)>($i0, $r0, $r1);

        $z1 = staticinvoke <androidx.customview.widget.FocusStrategy: boolean beamsOverlap(int,android.graphics.Rect,android.graphics.Rect)>($i0, $r0, $r2);

        if $z1 != 0 goto label5;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $z0 = staticinvoke <androidx.customview.widget.FocusStrategy: boolean isToDirectionOf(int,android.graphics.Rect,android.graphics.Rect)>($i0, $r0, $r2);

        if $z0 != 0 goto label2;

        return 1;

     label2:
        if $i0 == 17 goto label4;

        if $i0 != 66 goto label3;

        return 1;

     label3:
        $i1 = staticinvoke <androidx.customview.widget.FocusStrategy: int majorAxisDistance(int,android.graphics.Rect,android.graphics.Rect)>($i0, $r0, $r1);

        $i0 = staticinvoke <androidx.customview.widget.FocusStrategy: int majorAxisDistanceToFarEdge(int,android.graphics.Rect,android.graphics.Rect)>($i0, $r0, $r2);

        if $i1 >= $i0 goto label5;

        return 1;

     label4:
        return 1;

     label5:
        return 0;
    }

    private static boolean beamsOverlap(int, android.graphics.Rect, android.graphics.Rect)
    {
        int $i0, $i1;
        android.graphics.Rect $r0, $r1;
        java.lang.IllegalArgumentException $r2;

        $i0 := @parameter0: int;

        $r0 := @parameter1: android.graphics.Rect;

        $r1 := @parameter2: android.graphics.Rect;

        if $i0 == 17 goto label4;

        if $i0 == 33 goto label2;

        if $i0 == 66 goto label4;

        if $i0 != 130 goto label1;

        goto label2;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("direction must be one of {FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, FOCUS_RIGHT}.");

        throw $r2;

     label2:
        $i0 = $r1.<android.graphics.Rect: int right>;

        $i1 = $r0.<android.graphics.Rect: int left>;

        if $i0 < $i1 goto label3;

        $i0 = $r1.<android.graphics.Rect: int left>;

        $i1 = $r0.<android.graphics.Rect: int right>;

        if $i0 > $i1 goto label3;

        return 1;

     label3:
        return 0;

     label4:
        $i0 = $r1.<android.graphics.Rect: int bottom>;

        $i1 = $r0.<android.graphics.Rect: int top>;

        if $i0 < $i1 goto label5;

        $i0 = $r1.<android.graphics.Rect: int top>;

        $i1 = $r0.<android.graphics.Rect: int bottom>;

        if $i0 > $i1 goto label5;

        return 1;

     label5:
        return 0;
    }

    public static java.lang.Object findNextFocusInAbsoluteDirection(java.lang.Object, androidx.customview.widget.FocusStrategy$CollectionAdapter, androidx.customview.widget.FocusStrategy$BoundsAdapter, java.lang.Object, android.graphics.Rect, int)
    {
        java.lang.Object $r0, $r3, $r8, $r9;
        androidx.customview.widget.FocusStrategy$CollectionAdapter $r1;
        androidx.customview.widget.FocusStrategy$BoundsAdapter $r2;
        android.graphics.Rect $r4, $r5, $r6;
        int $i0, $i1, $i2;
        java.lang.IllegalArgumentException $r7;
        boolean $z0;

        $r0 := @parameter0: java.lang.Object;

        $r1 := @parameter1: androidx.customview.widget.FocusStrategy$CollectionAdapter;

        $r2 := @parameter2: androidx.customview.widget.FocusStrategy$BoundsAdapter;

        $r3 := @parameter3: java.lang.Object;

        $r4 := @parameter4: android.graphics.Rect;

        $i0 := @parameter5: int;

        $r5 = new android.graphics.Rect;

        specialinvoke $r5.<android.graphics.Rect: void <init>(android.graphics.Rect)>($r4);

        if $i0 == 17 goto label4;

        if $i0 == 33 goto label3;

        if $i0 == 66 goto label2;

        if $i0 != 130 goto label1;

        $i1 = virtualinvoke $r4.<android.graphics.Rect: int height()>();

        $i1 = $i1 + 1;

        $i1 = neg $i1;

        virtualinvoke $r5.<android.graphics.Rect: void offset(int,int)>(0, $i1);

        goto label5;

     label1:
        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("direction must be one of {FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, FOCUS_RIGHT}.");

        throw $r7;

     label2:
        $i1 = virtualinvoke $r4.<android.graphics.Rect: int width()>();

        $i1 = $i1 + 1;

        $i1 = neg $i1;

        virtualinvoke $r5.<android.graphics.Rect: void offset(int,int)>($i1, 0);

        goto label5;

     label3:
        $i1 = virtualinvoke $r4.<android.graphics.Rect: int height()>();

        $i1 = $i1 + 1;

        virtualinvoke $r5.<android.graphics.Rect: void offset(int,int)>(0, $i1);

        goto label5;

     label4:
        $i1 = virtualinvoke $r4.<android.graphics.Rect: int width()>();

        $i1 = $i1 + 1;

        virtualinvoke $r5.<android.graphics.Rect: void offset(int,int)>($i1, 0);

     label5:
        $r8 = null;

        $i1 = interfaceinvoke $r1.<androidx.customview.widget.FocusStrategy$CollectionAdapter: int size(java.lang.Object)>($r0);

        $r6 = new android.graphics.Rect;

        specialinvoke $r6.<android.graphics.Rect: void <init>()>();

        $i2 = 0;

     label6:
        if $i2 >= $i1 goto label9;

        $r9 = interfaceinvoke $r1.<androidx.customview.widget.FocusStrategy$CollectionAdapter: java.lang.Object get(java.lang.Object,int)>($r0, $i2);

        if $r9 != $r3 goto label7;

        goto label8;

     label7:
        interfaceinvoke $r2.<androidx.customview.widget.FocusStrategy$BoundsAdapter: void obtainBounds(java.lang.Object,android.graphics.Rect)>($r9, $r6);

        $z0 = staticinvoke <androidx.customview.widget.FocusStrategy: boolean isBetterCandidate(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect)>($i0, $r4, $r6, $r5);

        if $z0 == 0 goto label8;

        virtualinvoke $r5.<android.graphics.Rect: void set(android.graphics.Rect)>($r6);

        $r8 = $r9;

     label8:
        $i2 = $i2 + 1;

        goto label6;

     label9:
        return $r8;
    }

    public static java.lang.Object findNextFocusInRelativeDirection(java.lang.Object, androidx.customview.widget.FocusStrategy$CollectionAdapter, androidx.customview.widget.FocusStrategy$BoundsAdapter, java.lang.Object, int, boolean, boolean)
    {
        java.lang.Object $r0, $r3, $r5;
        androidx.customview.widget.FocusStrategy$CollectionAdapter $r1;
        androidx.customview.widget.FocusStrategy$BoundsAdapter $r2;
        int $i0, $i1, $i2;
        boolean $z0, $z1;
        java.util.ArrayList $r4;
        androidx.customview.widget.FocusStrategy$SequentialComparator $r6;
        java.lang.IllegalArgumentException $r7;

        $r0 := @parameter0: java.lang.Object;

        $r1 := @parameter1: androidx.customview.widget.FocusStrategy$CollectionAdapter;

        $r2 := @parameter2: androidx.customview.widget.FocusStrategy$BoundsAdapter;

        $r3 := @parameter3: java.lang.Object;

        $i0 := @parameter4: int;

        $z0 := @parameter5: boolean;

        $z1 := @parameter6: boolean;

        $i1 = interfaceinvoke $r1.<androidx.customview.widget.FocusStrategy$CollectionAdapter: int size(java.lang.Object)>($r0);

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>(int)>($i1);

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label2;

        $r5 = interfaceinvoke $r1.<androidx.customview.widget.FocusStrategy$CollectionAdapter: java.lang.Object get(java.lang.Object,int)>($r0, $i2);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        $i2 = $i2 + 1;

        goto label1;

     label2:
        $r6 = new androidx.customview.widget.FocusStrategy$SequentialComparator;

        specialinvoke $r6.<androidx.customview.widget.FocusStrategy$SequentialComparator: void <init>(boolean,androidx.customview.widget.FocusStrategy$BoundsAdapter)>($z0, $r2);

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r4, $r6);

        if $i0 == 1 goto label4;

        if $i0 != 2 goto label3;

        $r0 = staticinvoke <androidx.customview.widget.FocusStrategy: java.lang.Object getNextFocusable(java.lang.Object,java.util.ArrayList,boolean)>($r3, $r4, $z1);

        return $r0;

     label3:
        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("direction must be one of {FOCUS_FORWARD, FOCUS_BACKWARD}.");

        throw $r7;

     label4:
        $r0 = staticinvoke <androidx.customview.widget.FocusStrategy: java.lang.Object getPreviousFocusable(java.lang.Object,java.util.ArrayList,boolean)>($r3, $r4, $z1);

        return $r0;
    }

    private static java.lang.Object getNextFocusable(java.lang.Object, java.util.ArrayList, boolean)
    {
        java.lang.Object $r0;
        java.util.ArrayList $r1;
        boolean $z0;
        int $i0, $i1;

        $r0 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.util.ArrayList;

        $z0 := @parameter2: boolean;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $r0 != null goto label1;

        $i1 = -1;

        goto label2;

     label1:
        $i1 = virtualinvoke $r1.<java.util.ArrayList: int lastIndexOf(java.lang.Object)>($r0);

     label2:
        $i1 = $i1 + 1;

        if $i1 >= $i0 goto label3;

        $r0 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        return $r0;

     label3:
        if $z0 == 0 goto label4;

        if $i0 <= 0 goto label4;

        $r0 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>(0);

        return $r0;

     label4:
        return null;
    }

    private static java.lang.Object getPreviousFocusable(java.lang.Object, java.util.ArrayList, boolean)
    {
        java.lang.Object $r0;
        java.util.ArrayList $r1;
        boolean $z0;
        int $i0, $i1;

        $r0 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.util.ArrayList;

        $z0 := @parameter2: boolean;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $r0 != null goto label1;

        $i1 = $i0;

        goto label2;

     label1:
        $i1 = virtualinvoke $r1.<java.util.ArrayList: int indexOf(java.lang.Object)>($r0);

     label2:
        $i1 = $i1 + -1;

        if $i1 < 0 goto label3;

        $r0 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        return $r0;

     label3:
        if $z0 == 0 goto label4;

        if $i0 <= 0 goto label4;

        $i0 = $i0 + -1;

        $r0 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        return $r0;

     label4:
        return null;
    }

    private static int getWeightedDistanceFor(int, int)
    {
        int $i0, $i1, $i2;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = $i0 * 13;

        $i0 = $i2 * $i0;

        $i1 = $i1 * $i1;

        $i0 = $i0 + $i1;

        return $i0;
    }

    private static boolean isBetterCandidate(int, android.graphics.Rect, android.graphics.Rect, android.graphics.Rect)
    {
        int $i0, $i1, $i2;
        android.graphics.Rect $r0, $r1, $r2;
        boolean $z0;

        $i0 := @parameter0: int;

        $r0 := @parameter1: android.graphics.Rect;

        $r1 := @parameter2: android.graphics.Rect;

        $r2 := @parameter3: android.graphics.Rect;

        $z0 = staticinvoke <androidx.customview.widget.FocusStrategy: boolean isCandidate(android.graphics.Rect,android.graphics.Rect,int)>($r0, $r1, $i0);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $z0 = staticinvoke <androidx.customview.widget.FocusStrategy: boolean isCandidate(android.graphics.Rect,android.graphics.Rect,int)>($r0, $r2, $i0);

        if $z0 != 0 goto label2;

        return 1;

     label2:
        $z0 = staticinvoke <androidx.customview.widget.FocusStrategy: boolean beamBeats(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect)>($i0, $r0, $r1, $r2);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        $z0 = staticinvoke <androidx.customview.widget.FocusStrategy: boolean beamBeats(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect)>($i0, $r0, $r2, $r1);

        if $z0 == 0 goto label4;

        return 0;

     label4:
        $i1 = staticinvoke <androidx.customview.widget.FocusStrategy: int majorAxisDistance(int,android.graphics.Rect,android.graphics.Rect)>($i0, $r0, $r1);

        $i2 = staticinvoke <androidx.customview.widget.FocusStrategy: int minorAxisDistance(int,android.graphics.Rect,android.graphics.Rect)>($i0, $r0, $r1);

        $i1 = staticinvoke <androidx.customview.widget.FocusStrategy: int getWeightedDistanceFor(int,int)>($i1, $i2);

        $i2 = staticinvoke <androidx.customview.widget.FocusStrategy: int majorAxisDistance(int,android.graphics.Rect,android.graphics.Rect)>($i0, $r0, $r2);

        $i0 = staticinvoke <androidx.customview.widget.FocusStrategy: int minorAxisDistance(int,android.graphics.Rect,android.graphics.Rect)>($i0, $r0, $r2);

        $i0 = staticinvoke <androidx.customview.widget.FocusStrategy: int getWeightedDistanceFor(int,int)>($i2, $i0);

        if $i1 >= $i0 goto label5;

        return 1;

     label5:
        return 0;
    }

    private static boolean isCandidate(android.graphics.Rect, android.graphics.Rect, int)
    {
        android.graphics.Rect $r0, $r1;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r2;

        $r0 := @parameter0: android.graphics.Rect;

        $r1 := @parameter1: android.graphics.Rect;

        $i0 := @parameter2: int;

        if $i0 == 17 goto label10;

        if $i0 == 33 goto label07;

        if $i0 == 66 goto label04;

        if $i0 != 130 goto label03;

        $i0 = $r0.<android.graphics.Rect: int top>;

        $i1 = $r1.<android.graphics.Rect: int top>;

        if $i0 < $i1 goto label01;

        $i0 = $r0.<android.graphics.Rect: int bottom>;

        $i1 = $r1.<android.graphics.Rect: int top>;

        if $i0 > $i1 goto label02;

     label01:
        $i0 = $r0.<android.graphics.Rect: int bottom>;

        $i1 = $r1.<android.graphics.Rect: int bottom>;

        if $i0 >= $i1 goto label02;

        return 1;

     label02:
        return 0;

     label03:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("direction must be one of {FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, FOCUS_RIGHT}.");

        throw $r2;

     label04:
        $i0 = $r0.<android.graphics.Rect: int left>;

        $i1 = $r1.<android.graphics.Rect: int left>;

        if $i0 < $i1 goto label05;

        $i0 = $r0.<android.graphics.Rect: int right>;

        $i1 = $r1.<android.graphics.Rect: int left>;

        if $i0 > $i1 goto label06;

     label05:
        $i0 = $r0.<android.graphics.Rect: int right>;

        $i1 = $r1.<android.graphics.Rect: int right>;

        if $i0 >= $i1 goto label06;

        return 1;

     label06:
        return 0;

     label07:
        $i0 = $r0.<android.graphics.Rect: int bottom>;

        $i1 = $r1.<android.graphics.Rect: int bottom>;

        if $i0 > $i1 goto label08;

        $i0 = $r0.<android.graphics.Rect: int top>;

        $i1 = $r1.<android.graphics.Rect: int bottom>;

        if $i0 < $i1 goto label09;

     label08:
        $i0 = $r0.<android.graphics.Rect: int top>;

        $i1 = $r1.<android.graphics.Rect: int top>;

        if $i0 <= $i1 goto label09;

        return 1;

     label09:
        return 0;

     label10:
        $i0 = $r0.<android.graphics.Rect: int right>;

        $i1 = $r1.<android.graphics.Rect: int right>;

        if $i0 > $i1 goto label11;

        $i0 = $r0.<android.graphics.Rect: int left>;

        $i1 = $r1.<android.graphics.Rect: int right>;

        if $i0 < $i1 goto label12;

     label11:
        $i0 = $r0.<android.graphics.Rect: int left>;

        $i1 = $r1.<android.graphics.Rect: int left>;

        if $i0 <= $i1 goto label12;

        return 1;

     label12:
        return 0;
    }

    private static boolean isToDirectionOf(int, android.graphics.Rect, android.graphics.Rect)
    {
        int $i0, $i1;
        android.graphics.Rect $r0, $r1;
        java.lang.IllegalArgumentException $r2;

        $i0 := @parameter0: int;

        $r0 := @parameter1: android.graphics.Rect;

        $r1 := @parameter2: android.graphics.Rect;

        if $i0 == 17 goto label7;

        if $i0 == 33 goto label5;

        if $i0 == 66 goto label3;

        if $i0 != 130 goto label2;

        $i0 = $r0.<android.graphics.Rect: int bottom>;

        $i1 = $r1.<android.graphics.Rect: int top>;

        if $i0 > $i1 goto label1;

        return 1;

     label1:
        return 0;

     label2:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("direction must be one of {FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, FOCUS_RIGHT}.");

        throw $r2;

     label3:
        $i0 = $r0.<android.graphics.Rect: int right>;

        $i1 = $r1.<android.graphics.Rect: int left>;

        if $i0 > $i1 goto label4;

        return 1;

     label4:
        return 0;

     label5:
        $i0 = $r0.<android.graphics.Rect: int top>;

        $i1 = $r1.<android.graphics.Rect: int bottom>;

        if $i0 < $i1 goto label6;

        return 1;

     label6:
        return 0;

     label7:
        $i0 = $r0.<android.graphics.Rect: int left>;

        $i1 = $r1.<android.graphics.Rect: int right>;

        if $i0 < $i1 goto label8;

        return 1;

     label8:
        return 0;
    }

    private static int majorAxisDistance(int, android.graphics.Rect, android.graphics.Rect)
    {
        int $i0;
        android.graphics.Rect $r0, $r1;

        $i0 := @parameter0: int;

        $r0 := @parameter1: android.graphics.Rect;

        $r1 := @parameter2: android.graphics.Rect;

        $i0 = staticinvoke <androidx.customview.widget.FocusStrategy: int majorAxisDistanceRaw(int,android.graphics.Rect,android.graphics.Rect)>($i0, $r0, $r1);

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i0);

        return $i0;
    }

    private static int majorAxisDistanceRaw(int, android.graphics.Rect, android.graphics.Rect)
    {
        int $i0, $i1;
        android.graphics.Rect $r0, $r1;
        java.lang.IllegalArgumentException $r2;

        $i0 := @parameter0: int;

        $r0 := @parameter1: android.graphics.Rect;

        $r1 := @parameter2: android.graphics.Rect;

        if $i0 == 17 goto label4;

        if $i0 == 33 goto label3;

        if $i0 == 66 goto label2;

        if $i0 != 130 goto label1;

        $i0 = $r1.<android.graphics.Rect: int top>;

        $i1 = $r0.<android.graphics.Rect: int bottom>;

        $i0 = $i0 - $i1;

        return $i0;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("direction must be one of {FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, FOCUS_RIGHT}.");

        throw $r2;

     label2:
        $i0 = $r1.<android.graphics.Rect: int left>;

        $i1 = $r0.<android.graphics.Rect: int right>;

        $i0 = $i0 - $i1;

        return $i0;

     label3:
        $i0 = $r0.<android.graphics.Rect: int top>;

        $i1 = $r1.<android.graphics.Rect: int bottom>;

        $i0 = $i0 - $i1;

        return $i0;

     label4:
        $i0 = $r0.<android.graphics.Rect: int left>;

        $i1 = $r1.<android.graphics.Rect: int right>;

        $i0 = $i0 - $i1;

        return $i0;
    }

    private static int majorAxisDistanceToFarEdge(int, android.graphics.Rect, android.graphics.Rect)
    {
        int $i0;
        android.graphics.Rect $r0, $r1;

        $i0 := @parameter0: int;

        $r0 := @parameter1: android.graphics.Rect;

        $r1 := @parameter2: android.graphics.Rect;

        $i0 = staticinvoke <androidx.customview.widget.FocusStrategy: int majorAxisDistanceToFarEdgeRaw(int,android.graphics.Rect,android.graphics.Rect)>($i0, $r0, $r1);

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>(1, $i0);

        return $i0;
    }

    private static int majorAxisDistanceToFarEdgeRaw(int, android.graphics.Rect, android.graphics.Rect)
    {
        int $i0, $i1;
        android.graphics.Rect $r0, $r1;
        java.lang.IllegalArgumentException $r2;

        $i0 := @parameter0: int;

        $r0 := @parameter1: android.graphics.Rect;

        $r1 := @parameter2: android.graphics.Rect;

        if $i0 == 17 goto label4;

        if $i0 == 33 goto label3;

        if $i0 == 66 goto label2;

        if $i0 != 130 goto label1;

        $i0 = $r1.<android.graphics.Rect: int bottom>;

        $i1 = $r0.<android.graphics.Rect: int bottom>;

        $i0 = $i0 - $i1;

        return $i0;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("direction must be one of {FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, FOCUS_RIGHT}.");

        throw $r2;

     label2:
        $i0 = $r1.<android.graphics.Rect: int right>;

        $i1 = $r0.<android.graphics.Rect: int right>;

        $i0 = $i0 - $i1;

        return $i0;

     label3:
        $i0 = $r0.<android.graphics.Rect: int top>;

        $i1 = $r1.<android.graphics.Rect: int top>;

        $i0 = $i0 - $i1;

        return $i0;

     label4:
        $i0 = $r0.<android.graphics.Rect: int left>;

        $i1 = $r1.<android.graphics.Rect: int left>;

        $i0 = $i0 - $i1;

        return $i0;
    }

    private static int minorAxisDistance(int, android.graphics.Rect, android.graphics.Rect)
    {
        int $i0, $i1, $i2;
        android.graphics.Rect $r0, $r1;
        java.lang.IllegalArgumentException $r2;

        $i0 := @parameter0: int;

        $r0 := @parameter1: android.graphics.Rect;

        $r1 := @parameter2: android.graphics.Rect;

        if $i0 == 17 goto label3;

        if $i0 == 33 goto label2;

        if $i0 == 66 goto label3;

        if $i0 != 130 goto label1;

        goto label2;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("direction must be one of {FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, FOCUS_RIGHT}.");

        throw $r2;

     label2:
        $i0 = $r0.<android.graphics.Rect: int left>;

        $i1 = virtualinvoke $r0.<android.graphics.Rect: int width()>();

        $i1 = $i1 / 2;

        $i0 = $i0 + $i1;

        $i1 = $r1.<android.graphics.Rect: int left>;

        $i2 = virtualinvoke $r1.<android.graphics.Rect: int width()>();

        $i2 = $i2 / 2;

        $i1 = $i1 + $i2;

        $i0 = $i0 - $i1;

        $i0 = staticinvoke <java.lang.Math: int abs(int)>($i0);

        return $i0;

     label3:
        $i0 = $r0.<android.graphics.Rect: int top>;

        $i1 = virtualinvoke $r0.<android.graphics.Rect: int height()>();

        $i1 = $i1 / 2;

        $i0 = $i0 + $i1;

        $i1 = $r1.<android.graphics.Rect: int top>;

        $i2 = virtualinvoke $r1.<android.graphics.Rect: int height()>();

        $i2 = $i2 / 2;

        $i1 = $i1 + $i2;

        $i0 = $i0 - $i1;

        $i0 = staticinvoke <java.lang.Math: int abs(int)>($i0);

        return $i0;
    }
}
