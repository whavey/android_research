class androidx.appcompat.graphics.drawable.StateListDrawable extends androidx.appcompat.graphics.drawable.DrawableContainer
{
    private static final boolean DEBUG;
    private static final java.lang.String TAG;
    private boolean mMutated;
    private androidx.appcompat.graphics.drawable.StateListDrawable$StateListState mStateListState;

    void <init>()
    {
        androidx.appcompat.graphics.drawable.StateListDrawable $r0;

        $r0 := @this: androidx.appcompat.graphics.drawable.StateListDrawable;

        specialinvoke $r0.<androidx.appcompat.graphics.drawable.StateListDrawable: void <init>(androidx.appcompat.graphics.drawable.StateListDrawable$StateListState,android.content.res.Resources)>(null, null);

        return;
    }

    void <init>(androidx.appcompat.graphics.drawable.StateListDrawable$StateListState)
    {
        androidx.appcompat.graphics.drawable.StateListDrawable $r0;
        androidx.appcompat.graphics.drawable.StateListDrawable$StateListState $r1;

        $r0 := @this: androidx.appcompat.graphics.drawable.StateListDrawable;

        $r1 := @parameter0: androidx.appcompat.graphics.drawable.StateListDrawable$StateListState;

        specialinvoke $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: void <init>()>();

        goto label1;

     label1:
        return;
    }

    void <init>(androidx.appcompat.graphics.drawable.StateListDrawable$StateListState, android.content.res.Resources)
    {
        androidx.appcompat.graphics.drawable.StateListDrawable $r0;
        androidx.appcompat.graphics.drawable.StateListDrawable$StateListState $r1, $r3;
        android.content.res.Resources $r2;
        int[] $r4;

        $r0 := @this: androidx.appcompat.graphics.drawable.StateListDrawable;

        $r1 := @parameter0: androidx.appcompat.graphics.drawable.StateListDrawable$StateListState;

        $r2 := @parameter1: android.content.res.Resources;

        specialinvoke $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: void <init>()>();

        $r3 = new androidx.appcompat.graphics.drawable.StateListDrawable$StateListState;

        specialinvoke $r3.<androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: void <init>(androidx.appcompat.graphics.drawable.StateListDrawable$StateListState,androidx.appcompat.graphics.drawable.StateListDrawable,android.content.res.Resources)>($r1, $r0, $r2);

        virtualinvoke $r0.<androidx.appcompat.graphics.drawable.StateListDrawable: void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState)>($r3);

        $r4 = virtualinvoke $r0.<androidx.appcompat.graphics.drawable.StateListDrawable: int[] getState()>();

        virtualinvoke $r0.<androidx.appcompat.graphics.drawable.StateListDrawable: boolean onStateChange(int[])>($r4);

        return;
    }

    private void inflateChildElements(android.content.Context, android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        androidx.appcompat.graphics.drawable.StateListDrawable $r0;
        android.content.Context $r1;
        android.content.res.Resources $r2;
        org.xmlpull.v1.XmlPullParser $r3;
        android.util.AttributeSet $r4;
        android.content.res.Resources$Theme $r5;
        androidx.appcompat.graphics.drawable.StateListDrawable$StateListState $r6;
        int $i0, $i1, $i2;
        java.lang.String $r7;
        boolean $z0;
        int[] $r8;
        android.content.res.TypedArray $r9;
        android.graphics.drawable.Drawable $r10;
        org.xmlpull.v1.XmlPullParserException $r11;
        java.lang.StringBuilder $r12;

        $r0 := @this: androidx.appcompat.graphics.drawable.StateListDrawable;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.content.res.Resources;

        $r3 := @parameter2: org.xmlpull.v1.XmlPullParser;

        $r4 := @parameter3: android.util.AttributeSet;

        $r5 := @parameter4: android.content.res.Resources$Theme;

        $r6 = $r0.<androidx.appcompat.graphics.drawable.StateListDrawable: androidx.appcompat.graphics.drawable.StateListDrawable$StateListState mStateListState>;

        $i0 = interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        $i0 = $i0 + 1;

     label01:
        $i1 = interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i1 == 1 goto label13;

        $i2 = interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i2 >= $i0 goto label03;

        if $i1 == 3 goto label02;

        goto label03;

     label02:
        return;

     label03:
        if $i1 == 2 goto label04;

        goto label01;

     label04:
        if $i2 > $i0 goto label12;

        $r7 = interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("item");

        if $z0 != 0 goto label05;

        goto label01;

     label05:
        $r8 = <androidx.appcompat.R$styleable: int[] StateListDrawableItem>;

        $r9 = staticinvoke <androidx.core.content.res.TypedArrayUtils: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>($r2, $r5, $r4, $r8);

        $r10 = null;

        $i1 = <androidx.appcompat.R$styleable: int StateListDrawableItem_android_drawable>;

        $i1 = virtualinvoke $r9.<android.content.res.TypedArray: int getResourceId(int,int)>($i1, -1);

        if $i1 <= 0 goto label06;

        $r10 = staticinvoke <androidx.appcompat.content.res.AppCompatResources: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>($r1, $i1);

        goto label06;

     label06:
        virtualinvoke $r9.<android.content.res.TypedArray: void recycle()>();

        $r8 = virtualinvoke $r0.<androidx.appcompat.graphics.drawable.StateListDrawable: int[] extractStateSet(android.util.AttributeSet)>($r4);

        if $r10 != null goto label11;

     label07:
        $i1 = interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i1 != 4 goto label08;

        goto label07;

     label08:
        if $i1 != 2 goto label10;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 21 goto label09;

        $r10 = staticinvoke <android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>($r2, $r3, $r4, $r5);

        goto label11;

     label09:
        $r10 = staticinvoke <android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>($r2, $r3, $r4);

        goto label11;

     label10:
        $r11 = new org.xmlpull.v1.XmlPullParserException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r7 = interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": <item> tag requires a \'drawable\' attribute or ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("child tag defining a drawable");

        $r7 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r7);

        throw $r11;

     label11:
        virtualinvoke $r6.<androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: int addStateSet(int[],android.graphics.drawable.Drawable)>($r8, $r10);

        goto label01;

     label12:
        goto label01;

     label13:
        return;
    }

    private void updateStateFromTypedArray(android.content.res.TypedArray)
    {
        androidx.appcompat.graphics.drawable.StateListDrawable $r0;
        android.content.res.TypedArray $r1;
        androidx.appcompat.graphics.drawable.StateListDrawable$StateListState $r2;
        int $i0, $i1;
        boolean $z0;

        $r0 := @this: androidx.appcompat.graphics.drawable.StateListDrawable;

        $r1 := @parameter0: android.content.res.TypedArray;

        $r2 = $r0.<androidx.appcompat.graphics.drawable.StateListDrawable: androidx.appcompat.graphics.drawable.StateListDrawable$StateListState mStateListState>;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label1;

        $i0 = $r2.<androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: int mChangingConfigurations>;

        $i1 = virtualinvoke $r1.<android.content.res.TypedArray: int getChangingConfigurations()>();

        $i0 = $i0 | $i1;

        $r2.<androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: int mChangingConfigurations> = $i0;

     label1:
        $i0 = <androidx.appcompat.R$styleable: int StateListDrawable_android_variablePadding>;

        $z0 = $r2.<androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: boolean mVariablePadding>;

        $z0 = virtualinvoke $r1.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i0, $z0);

        $r2.<androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: boolean mVariablePadding> = $z0;

        $i0 = <androidx.appcompat.R$styleable: int StateListDrawable_android_constantSize>;

        $z0 = $r2.<androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: boolean mConstantSize>;

        $z0 = virtualinvoke $r1.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i0, $z0);

        $r2.<androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: boolean mConstantSize> = $z0;

        $i0 = <androidx.appcompat.R$styleable: int StateListDrawable_android_enterFadeDuration>;

        $i1 = $r2.<androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: int mEnterFadeDuration>;

        $i0 = virtualinvoke $r1.<android.content.res.TypedArray: int getInt(int,int)>($i0, $i1);

        $r2.<androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: int mEnterFadeDuration> = $i0;

        $i0 = <androidx.appcompat.R$styleable: int StateListDrawable_android_exitFadeDuration>;

        $i1 = $r2.<androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: int mExitFadeDuration>;

        $i0 = virtualinvoke $r1.<android.content.res.TypedArray: int getInt(int,int)>($i0, $i1);

        $r2.<androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: int mExitFadeDuration> = $i0;

        $i0 = <androidx.appcompat.R$styleable: int StateListDrawable_android_dither>;

        $z0 = $r2.<androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: boolean mDither>;

        $z0 = virtualinvoke $r1.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i0, $z0);

        $r2.<androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: boolean mDither> = $z0;

        return;
    }

    public void addState(int[], android.graphics.drawable.Drawable)
    {
        androidx.appcompat.graphics.drawable.StateListDrawable $r0;
        int[] $r1;
        android.graphics.drawable.Drawable $r2;
        androidx.appcompat.graphics.drawable.StateListDrawable$StateListState $r3;

        $r0 := @this: androidx.appcompat.graphics.drawable.StateListDrawable;

        $r1 := @parameter0: int[];

        $r2 := @parameter1: android.graphics.drawable.Drawable;

        if $r2 == null goto label1;

        $r3 = $r0.<androidx.appcompat.graphics.drawable.StateListDrawable: androidx.appcompat.graphics.drawable.StateListDrawable$StateListState mStateListState>;

        virtualinvoke $r3.<androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: int addStateSet(int[],android.graphics.drawable.Drawable)>($r1, $r2);

        $r1 = virtualinvoke $r0.<androidx.appcompat.graphics.drawable.StateListDrawable: int[] getState()>();

        virtualinvoke $r0.<androidx.appcompat.graphics.drawable.StateListDrawable: boolean onStateChange(int[])>($r1);

     label1:
        return;
    }

    public void applyTheme(android.content.res.Resources$Theme)
    {
        androidx.appcompat.graphics.drawable.StateListDrawable $r0;
        android.content.res.Resources$Theme $r1;
        int[] $r2;

        $r0 := @this: androidx.appcompat.graphics.drawable.StateListDrawable;

        $r1 := @parameter0: android.content.res.Resources$Theme;

        specialinvoke $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: void applyTheme(android.content.res.Resources$Theme)>($r1);

        $r2 = virtualinvoke $r0.<androidx.appcompat.graphics.drawable.StateListDrawable: int[] getState()>();

        virtualinvoke $r0.<androidx.appcompat.graphics.drawable.StateListDrawable: boolean onStateChange(int[])>($r2);

        return;
    }

    void clearMutated()
    {
        androidx.appcompat.graphics.drawable.StateListDrawable $r0;

        $r0 := @this: androidx.appcompat.graphics.drawable.StateListDrawable;

        specialinvoke $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: void clearMutated()>();

        $r0.<androidx.appcompat.graphics.drawable.StateListDrawable: boolean mMutated> = 0;

        return;
    }

    volatile androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState()
    {
        androidx.appcompat.graphics.drawable.StateListDrawable $r0;
        androidx.appcompat.graphics.drawable.StateListDrawable$StateListState $r1;

        $r0 := @this: androidx.appcompat.graphics.drawable.StateListDrawable;

        $r1 = virtualinvoke $r0.<androidx.appcompat.graphics.drawable.StateListDrawable: androidx.appcompat.graphics.drawable.StateListDrawable$StateListState cloneConstantState()>();

        return $r1;
    }

    androidx.appcompat.graphics.drawable.StateListDrawable$StateListState cloneConstantState()
    {
        androidx.appcompat.graphics.drawable.StateListDrawable $r0;
        androidx.appcompat.graphics.drawable.StateListDrawable$StateListState $r1, $r2;

        $r0 := @this: androidx.appcompat.graphics.drawable.StateListDrawable;

        $r1 = new androidx.appcompat.graphics.drawable.StateListDrawable$StateListState;

        $r2 = $r0.<androidx.appcompat.graphics.drawable.StateListDrawable: androidx.appcompat.graphics.drawable.StateListDrawable$StateListState mStateListState>;

        specialinvoke $r1.<androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: void <init>(androidx.appcompat.graphics.drawable.StateListDrawable$StateListState,androidx.appcompat.graphics.drawable.StateListDrawable,android.content.res.Resources)>($r2, $r0, null);

        return $r1;
    }

    int[] extractStateSet(android.util.AttributeSet)
    {
        androidx.appcompat.graphics.drawable.StateListDrawable $r0;
        android.util.AttributeSet $r1;
        int $i0, $i1, $i2, $i3, $i4;
        int[] $r2;
        boolean $z0;

        $r0 := @this: androidx.appcompat.graphics.drawable.StateListDrawable;

        $r1 := @parameter0: android.util.AttributeSet;

        $i0 = 0;

        $i1 = interfaceinvoke $r1.<android.util.AttributeSet: int getAttributeCount()>();

        $r2 = newarray (int)[$i1];

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label5;

        $i3 = interfaceinvoke $r1.<android.util.AttributeSet: int getAttributeNameResource(int)>($i2);

        if $i3 == 0 goto label4;

        if $i3 == 16842960 goto label4;

        if $i3 == 16843161 goto label4;

        $i4 = $i0 + 1;

        $z0 = interfaceinvoke $r1.<android.util.AttributeSet: boolean getAttributeBooleanValue(int,boolean)>($i2, 0);

        if $z0 == 0 goto label2;

        goto label3;

     label2:
        $i3 = neg $i3;

     label3:
        $r2[$i0] = $i3;

        $i0 = $i4;

        goto label4;

     label4:
        $i2 = $i2 + 1;

        goto label1;

     label5:
        $r2 = staticinvoke <android.util.StateSet: int[] trimStateSet(int[],int)>($r2, $i0);

        return $r2;
    }

    int getStateCount()
    {
        androidx.appcompat.graphics.drawable.StateListDrawable $r0;
        int $i0;
        androidx.appcompat.graphics.drawable.StateListDrawable$StateListState $r1;

        $r0 := @this: androidx.appcompat.graphics.drawable.StateListDrawable;

        $r1 = $r0.<androidx.appcompat.graphics.drawable.StateListDrawable: androidx.appcompat.graphics.drawable.StateListDrawable$StateListState mStateListState>;

        $i0 = virtualinvoke $r1.<androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: int getChildCount()>();

        return $i0;
    }

    android.graphics.drawable.Drawable getStateDrawable(int)
    {
        androidx.appcompat.graphics.drawable.StateListDrawable $r0;
        int $i0;
        android.graphics.drawable.Drawable $r1;
        androidx.appcompat.graphics.drawable.StateListDrawable$StateListState $r2;

        $r0 := @this: androidx.appcompat.graphics.drawable.StateListDrawable;

        $i0 := @parameter0: int;

        $r2 = $r0.<androidx.appcompat.graphics.drawable.StateListDrawable: androidx.appcompat.graphics.drawable.StateListDrawable$StateListState mStateListState>;

        $r1 = virtualinvoke $r2.<androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: android.graphics.drawable.Drawable getChild(int)>($i0);

        return $r1;
    }

    int getStateDrawableIndex(int[])
    {
        androidx.appcompat.graphics.drawable.StateListDrawable $r0;
        int[] $r1;
        int $i0;
        androidx.appcompat.graphics.drawable.StateListDrawable$StateListState $r2;

        $r0 := @this: androidx.appcompat.graphics.drawable.StateListDrawable;

        $r1 := @parameter0: int[];

        $r2 = $r0.<androidx.appcompat.graphics.drawable.StateListDrawable: androidx.appcompat.graphics.drawable.StateListDrawable$StateListState mStateListState>;

        $i0 = virtualinvoke $r2.<androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: int indexOfStateSet(int[])>($r1);

        return $i0;
    }

    androidx.appcompat.graphics.drawable.StateListDrawable$StateListState getStateListState()
    {
        androidx.appcompat.graphics.drawable.StateListDrawable $r0;
        androidx.appcompat.graphics.drawable.StateListDrawable$StateListState r1;

        $r0 := @this: androidx.appcompat.graphics.drawable.StateListDrawable;

        r1 = $r0.<androidx.appcompat.graphics.drawable.StateListDrawable: androidx.appcompat.graphics.drawable.StateListDrawable$StateListState mStateListState>;

        return r1;
    }

    int[] getStateSet(int)
    {
        androidx.appcompat.graphics.drawable.StateListDrawable $r0;
        int $i0;
        androidx.appcompat.graphics.drawable.StateListDrawable$StateListState $r1;
        int[][] $r2;
        int[] $r3;

        $r0 := @this: androidx.appcompat.graphics.drawable.StateListDrawable;

        $i0 := @parameter0: int;

        $r1 = $r0.<androidx.appcompat.graphics.drawable.StateListDrawable: androidx.appcompat.graphics.drawable.StateListDrawable$StateListState mStateListState>;

        $r2 = $r1.<androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: int[][] mStateSets>;

        $r3 = $r2[$i0];

        return $r3;
    }

    public void inflate(android.content.Context, android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        androidx.appcompat.graphics.drawable.StateListDrawable $r0;
        android.content.Context $r1;
        android.content.res.Resources $r2;
        org.xmlpull.v1.XmlPullParser $r3;
        android.util.AttributeSet $r4;
        android.content.res.Resources$Theme $r5;
        int[] $r6;
        android.content.res.TypedArray $r7;
        int $i0;
        boolean $z0;

        $r0 := @this: androidx.appcompat.graphics.drawable.StateListDrawable;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.content.res.Resources;

        $r3 := @parameter2: org.xmlpull.v1.XmlPullParser;

        $r4 := @parameter3: android.util.AttributeSet;

        $r5 := @parameter4: android.content.res.Resources$Theme;

        $r6 = <androidx.appcompat.R$styleable: int[] StateListDrawable>;

        $r7 = staticinvoke <androidx.core.content.res.TypedArrayUtils: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>($r2, $r5, $r4, $r6);

        $i0 = <androidx.appcompat.R$styleable: int StateListDrawable_android_visible>;

        $z0 = virtualinvoke $r7.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i0, 1);

        virtualinvoke $r0.<androidx.appcompat.graphics.drawable.StateListDrawable: boolean setVisible(boolean,boolean)>($z0, 1);

        specialinvoke $r0.<androidx.appcompat.graphics.drawable.StateListDrawable: void updateStateFromTypedArray(android.content.res.TypedArray)>($r7);

        virtualinvoke $r0.<androidx.appcompat.graphics.drawable.StateListDrawable: void updateDensity(android.content.res.Resources)>($r2);

        virtualinvoke $r7.<android.content.res.TypedArray: void recycle()>();

        specialinvoke $r0.<androidx.appcompat.graphics.drawable.StateListDrawable: void inflateChildElements(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>($r1, $r2, $r3, $r4, $r5);

        $r6 = virtualinvoke $r0.<androidx.appcompat.graphics.drawable.StateListDrawable: int[] getState()>();

        virtualinvoke $r0.<androidx.appcompat.graphics.drawable.StateListDrawable: boolean onStateChange(int[])>($r6);

        return;
    }

    public boolean isStateful()
    {
        androidx.appcompat.graphics.drawable.StateListDrawable $r0;

        $r0 := @this: androidx.appcompat.graphics.drawable.StateListDrawable;

        return 1;
    }

    public android.graphics.drawable.Drawable mutate()
    {
        androidx.appcompat.graphics.drawable.StateListDrawable $r0;
        android.graphics.drawable.Drawable $r1;
        boolean $z0;
        androidx.appcompat.graphics.drawable.StateListDrawable$StateListState $r2;

        $r0 := @this: androidx.appcompat.graphics.drawable.StateListDrawable;

        $z0 = $r0.<androidx.appcompat.graphics.drawable.StateListDrawable: boolean mMutated>;

        if $z0 != 0 goto label1;

        $r1 = specialinvoke $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mutate()>();

        if $r1 != $r0 goto label1;

        $r2 = $r0.<androidx.appcompat.graphics.drawable.StateListDrawable: androidx.appcompat.graphics.drawable.StateListDrawable$StateListState mStateListState>;

        virtualinvoke $r2.<androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: void mutate()>();

        $r0.<androidx.appcompat.graphics.drawable.StateListDrawable: boolean mMutated> = 1;

     label1:
        return $r0;
    }

    protected boolean onStateChange(int[])
    {
        androidx.appcompat.graphics.drawable.StateListDrawable $r0;
        int[] $r1;
        boolean $z0, $z1;
        androidx.appcompat.graphics.drawable.StateListDrawable$StateListState $r2;
        int $i0, $i1;

        $r0 := @this: androidx.appcompat.graphics.drawable.StateListDrawable;

        $r1 := @parameter0: int[];

        $z0 = specialinvoke $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: boolean onStateChange(int[])>($r1);

        $r2 = $r0.<androidx.appcompat.graphics.drawable.StateListDrawable: androidx.appcompat.graphics.drawable.StateListDrawable$StateListState mStateListState>;

        $i0 = virtualinvoke $r2.<androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: int indexOfStateSet(int[])>($r1);

        $i1 = $i0;

        if $i0 >= 0 goto label1;

        $r2 = $r0.<androidx.appcompat.graphics.drawable.StateListDrawable: androidx.appcompat.graphics.drawable.StateListDrawable$StateListState mStateListState>;

        $r1 = <android.util.StateSet: int[] WILD_CARD>;

        $i1 = virtualinvoke $r2.<androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: int indexOfStateSet(int[])>($r1);

     label1:
        $z1 = virtualinvoke $r0.<androidx.appcompat.graphics.drawable.StateListDrawable: boolean selectDrawable(int)>($i1);

        if $z1 != 0 goto label3;

        if $z0 == 0 goto label2;

        goto label3;

     label2:
        return 0;

     label3:
        return 1;
    }

    protected void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState)
    {
        androidx.appcompat.graphics.drawable.StateListDrawable $r0;
        androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState $r1;
        boolean $z0;
        androidx.appcompat.graphics.drawable.StateListDrawable$StateListState $r2;

        $r0 := @this: androidx.appcompat.graphics.drawable.StateListDrawable;

        $r1 := @parameter0: androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState;

        specialinvoke $r0.<androidx.appcompat.graphics.drawable.DrawableContainer: void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState)>($r1);

        $z0 = $r1 instanceof androidx.appcompat.graphics.drawable.StateListDrawable$StateListState;

        if $z0 == 0 goto label1;

        $r2 = (androidx.appcompat.graphics.drawable.StateListDrawable$StateListState) $r1;

        $r0.<androidx.appcompat.graphics.drawable.StateListDrawable: androidx.appcompat.graphics.drawable.StateListDrawable$StateListState mStateListState> = $r2;

     label1:
        return;
    }

    public static void <clinit>()
    {
        <androidx.appcompat.graphics.drawable.StateListDrawable: java.lang.String TAG> = "StateListDrawable";

        <androidx.appcompat.graphics.drawable.StateListDrawable: boolean DEBUG> = 0;

        return;
    }
}
