public class androidx.appcompat.widget.Toolbar extends android.view.ViewGroup
{
    private static final java.lang.String TAG;
    private androidx.appcompat.view.menu.MenuPresenter$Callback mActionMenuPresenterCallback;
    int mButtonGravity;
    android.widget.ImageButton mCollapseButtonView;
    private java.lang.CharSequence mCollapseDescription;
    private android.graphics.drawable.Drawable mCollapseIcon;
    private boolean mCollapsible;
    private int mContentInsetEndWithActions;
    private int mContentInsetStartWithNavigation;
    private androidx.appcompat.widget.RtlSpacingHelper mContentInsets;
    private boolean mEatingHover;
    private boolean mEatingTouch;
    android.view.View mExpandedActionView;
    private androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter;
    private int mGravity;
    private final java.util.ArrayList mHiddenViews;
    private android.widget.ImageView mLogoView;
    private int mMaxButtonHeight;
    private androidx.appcompat.view.menu.MenuBuilder$Callback mMenuBuilderCallback;
    private androidx.appcompat.widget.ActionMenuView mMenuView;
    private final androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener mMenuViewItemClickListener;
    private android.widget.ImageButton mNavButtonView;
    androidx.appcompat.widget.Toolbar$OnMenuItemClickListener mOnMenuItemClickListener;
    private androidx.appcompat.widget.ActionMenuPresenter mOuterActionMenuPresenter;
    private android.content.Context mPopupContext;
    private int mPopupTheme;
    private final java.lang.Runnable mShowOverflowMenuRunnable;
    private java.lang.CharSequence mSubtitleText;
    private int mSubtitleTextAppearance;
    private int mSubtitleTextColor;
    private android.widget.TextView mSubtitleTextView;
    private final int[] mTempMargins;
    private final java.util.ArrayList mTempViews;
    private int mTitleMarginBottom;
    private int mTitleMarginEnd;
    private int mTitleMarginStart;
    private int mTitleMarginTop;
    private java.lang.CharSequence mTitleText;
    private int mTitleTextAppearance;
    private int mTitleTextColor;
    private android.widget.TextView mTitleTextView;
    private androidx.appcompat.widget.ToolbarWidgetWrapper mWrapper;

    public void <init>(android.content.Context)
    {
        androidx.appcompat.widget.Toolbar $r0;
        android.content.Context $r1;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 := @parameter0: android.content.Context;

        specialinvoke $r0.<androidx.appcompat.widget.Toolbar: void <init>(android.content.Context,android.util.AttributeSet)>($r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        androidx.appcompat.widget.Toolbar $r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 = <androidx.appcompat.R$attr: int toolbarStyle>;

        specialinvoke $r0.<androidx.appcompat.widget.Toolbar: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        androidx.appcompat.widget.Toolbar $r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0, $i1, $i2, $i3;
        java.util.ArrayList $r3;
        int[] $r4;
        androidx.appcompat.widget.Toolbar$1 $r5;
        androidx.appcompat.widget.Toolbar$2 $r6;
        androidx.appcompat.widget.TintTypedArray $r7;
        boolean $z0;
        androidx.appcompat.widget.RtlSpacingHelper $r8;
        android.graphics.drawable.Drawable $r9;
        java.lang.CharSequence $r10;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.util.AttributeSet;

        $i0 := @parameter2: int;

        specialinvoke $r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);

        $r0.<androidx.appcompat.widget.Toolbar: int mGravity> = 8388627;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r0.<androidx.appcompat.widget.Toolbar: java.util.ArrayList mTempViews> = $r3;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r0.<androidx.appcompat.widget.Toolbar: java.util.ArrayList mHiddenViews> = $r3;

        $r4 = newarray (int)[2];

        $r0.<androidx.appcompat.widget.Toolbar: int[] mTempMargins> = $r4;

        $r5 = new androidx.appcompat.widget.Toolbar$1;

        specialinvoke $r5.<androidx.appcompat.widget.Toolbar$1: void <init>(androidx.appcompat.widget.Toolbar)>($r0);

        $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener mMenuViewItemClickListener> = $r5;

        $r6 = new androidx.appcompat.widget.Toolbar$2;

        specialinvoke $r6.<androidx.appcompat.widget.Toolbar$2: void <init>(androidx.appcompat.widget.Toolbar)>($r0);

        $r0.<androidx.appcompat.widget.Toolbar: java.lang.Runnable mShowOverflowMenuRunnable> = $r6;

        $r1 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: android.content.Context getContext()>();

        $r4 = <androidx.appcompat.R$styleable: int[] Toolbar>;

        $r7 = staticinvoke <androidx.appcompat.widget.TintTypedArray: androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int)>($r1, $r2, $r4, $i0, 0);

        $i0 = <androidx.appcompat.R$styleable: int Toolbar_titleTextAppearance>;

        $i0 = virtualinvoke $r7.<androidx.appcompat.widget.TintTypedArray: int getResourceId(int,int)>($i0, 0);

        $r0.<androidx.appcompat.widget.Toolbar: int mTitleTextAppearance> = $i0;

        $i0 = <androidx.appcompat.R$styleable: int Toolbar_subtitleTextAppearance>;

        $i0 = virtualinvoke $r7.<androidx.appcompat.widget.TintTypedArray: int getResourceId(int,int)>($i0, 0);

        $r0.<androidx.appcompat.widget.Toolbar: int mSubtitleTextAppearance> = $i0;

        $i0 = <androidx.appcompat.R$styleable: int Toolbar_android_gravity>;

        $i1 = $r0.<androidx.appcompat.widget.Toolbar: int mGravity>;

        $i0 = virtualinvoke $r7.<androidx.appcompat.widget.TintTypedArray: int getInteger(int,int)>($i0, $i1);

        $r0.<androidx.appcompat.widget.Toolbar: int mGravity> = $i0;

        $i0 = <androidx.appcompat.R$styleable: int Toolbar_buttonGravity>;

        $i0 = virtualinvoke $r7.<androidx.appcompat.widget.TintTypedArray: int getInteger(int,int)>($i0, 48);

        $r0.<androidx.appcompat.widget.Toolbar: int mButtonGravity> = $i0;

        $i0 = <androidx.appcompat.R$styleable: int Toolbar_titleMargin>;

        $i0 = virtualinvoke $r7.<androidx.appcompat.widget.TintTypedArray: int getDimensionPixelOffset(int,int)>($i0, 0);

        $i1 = $i0;

        $i2 = <androidx.appcompat.R$styleable: int Toolbar_titleMargins>;

        $z0 = virtualinvoke $r7.<androidx.appcompat.widget.TintTypedArray: boolean hasValue(int)>($i2);

        if $z0 == 0 goto label01;

        $i1 = <androidx.appcompat.R$styleable: int Toolbar_titleMargins>;

        $i1 = virtualinvoke $r7.<androidx.appcompat.widget.TintTypedArray: int getDimensionPixelOffset(int,int)>($i1, $i0);

     label01:
        $r0.<androidx.appcompat.widget.Toolbar: int mTitleMarginBottom> = $i1;

        $r0.<androidx.appcompat.widget.Toolbar: int mTitleMarginTop> = $i1;

        $r0.<androidx.appcompat.widget.Toolbar: int mTitleMarginEnd> = $i1;

        $r0.<androidx.appcompat.widget.Toolbar: int mTitleMarginStart> = $i1;

        $i0 = <androidx.appcompat.R$styleable: int Toolbar_titleMarginStart>;

        $i0 = virtualinvoke $r7.<androidx.appcompat.widget.TintTypedArray: int getDimensionPixelOffset(int,int)>($i0, -1);

        if $i0 < 0 goto label02;

        $r0.<androidx.appcompat.widget.Toolbar: int mTitleMarginStart> = $i0;

     label02:
        $i0 = <androidx.appcompat.R$styleable: int Toolbar_titleMarginEnd>;

        $i0 = virtualinvoke $r7.<androidx.appcompat.widget.TintTypedArray: int getDimensionPixelOffset(int,int)>($i0, -1);

        if $i0 < 0 goto label03;

        $r0.<androidx.appcompat.widget.Toolbar: int mTitleMarginEnd> = $i0;

     label03:
        $i0 = <androidx.appcompat.R$styleable: int Toolbar_titleMarginTop>;

        $i0 = virtualinvoke $r7.<androidx.appcompat.widget.TintTypedArray: int getDimensionPixelOffset(int,int)>($i0, -1);

        if $i0 < 0 goto label04;

        $r0.<androidx.appcompat.widget.Toolbar: int mTitleMarginTop> = $i0;

     label04:
        $i0 = <androidx.appcompat.R$styleable: int Toolbar_titleMarginBottom>;

        $i0 = virtualinvoke $r7.<androidx.appcompat.widget.TintTypedArray: int getDimensionPixelOffset(int,int)>($i0, -1);

        if $i0 < 0 goto label05;

        $r0.<androidx.appcompat.widget.Toolbar: int mTitleMarginBottom> = $i0;

     label05:
        $i0 = <androidx.appcompat.R$styleable: int Toolbar_maxButtonHeight>;

        $i0 = virtualinvoke $r7.<androidx.appcompat.widget.TintTypedArray: int getDimensionPixelSize(int,int)>($i0, -1);

        $r0.<androidx.appcompat.widget.Toolbar: int mMaxButtonHeight> = $i0;

        $i0 = <androidx.appcompat.R$styleable: int Toolbar_contentInsetStart>;

        $i0 = virtualinvoke $r7.<androidx.appcompat.widget.TintTypedArray: int getDimensionPixelOffset(int,int)>($i0, -2147483648);

        $i1 = <androidx.appcompat.R$styleable: int Toolbar_contentInsetEnd>;

        $i1 = virtualinvoke $r7.<androidx.appcompat.widget.TintTypedArray: int getDimensionPixelOffset(int,int)>($i1, -2147483648);

        $i2 = <androidx.appcompat.R$styleable: int Toolbar_contentInsetLeft>;

        $i2 = virtualinvoke $r7.<androidx.appcompat.widget.TintTypedArray: int getDimensionPixelSize(int,int)>($i2, 0);

        $i3 = <androidx.appcompat.R$styleable: int Toolbar_contentInsetRight>;

        $i3 = virtualinvoke $r7.<androidx.appcompat.widget.TintTypedArray: int getDimensionPixelSize(int,int)>($i3, 0);

        specialinvoke $r0.<androidx.appcompat.widget.Toolbar: void ensureContentInsets()>();

        $r8 = $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.RtlSpacingHelper mContentInsets>;

        virtualinvoke $r8.<androidx.appcompat.widget.RtlSpacingHelper: void setAbsolute(int,int)>($i2, $i3);

        if $i0 != -2147483648 goto label06;

        if $i1 == -2147483648 goto label07;

     label06:
        $r8 = $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.RtlSpacingHelper mContentInsets>;

        virtualinvoke $r8.<androidx.appcompat.widget.RtlSpacingHelper: void setRelative(int,int)>($i0, $i1);

     label07:
        $i0 = <androidx.appcompat.R$styleable: int Toolbar_contentInsetStartWithNavigation>;

        $i0 = virtualinvoke $r7.<androidx.appcompat.widget.TintTypedArray: int getDimensionPixelOffset(int,int)>($i0, -2147483648);

        $r0.<androidx.appcompat.widget.Toolbar: int mContentInsetStartWithNavigation> = $i0;

        $i0 = <androidx.appcompat.R$styleable: int Toolbar_contentInsetEndWithActions>;

        $i0 = virtualinvoke $r7.<androidx.appcompat.widget.TintTypedArray: int getDimensionPixelOffset(int,int)>($i0, -2147483648);

        $r0.<androidx.appcompat.widget.Toolbar: int mContentInsetEndWithActions> = $i0;

        $i0 = <androidx.appcompat.R$styleable: int Toolbar_collapseIcon>;

        $r9 = virtualinvoke $r7.<androidx.appcompat.widget.TintTypedArray: android.graphics.drawable.Drawable getDrawable(int)>($i0);

        $r0.<androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable mCollapseIcon> = $r9;

        $i0 = <androidx.appcompat.R$styleable: int Toolbar_collapseContentDescription>;

        $r10 = virtualinvoke $r7.<androidx.appcompat.widget.TintTypedArray: java.lang.CharSequence getText(int)>($i0);

        $r0.<androidx.appcompat.widget.Toolbar: java.lang.CharSequence mCollapseDescription> = $r10;

        $i0 = <androidx.appcompat.R$styleable: int Toolbar_title>;

        $r10 = virtualinvoke $r7.<androidx.appcompat.widget.TintTypedArray: java.lang.CharSequence getText(int)>($i0);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r10);

        if $z0 != 0 goto label08;

        virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: void setTitle(java.lang.CharSequence)>($r10);

     label08:
        $i0 = <androidx.appcompat.R$styleable: int Toolbar_subtitle>;

        $r10 = virtualinvoke $r7.<androidx.appcompat.widget.TintTypedArray: java.lang.CharSequence getText(int)>($i0);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r10);

        if $z0 != 0 goto label09;

        virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: void setSubtitle(java.lang.CharSequence)>($r10);

     label09:
        $r1 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: android.content.Context getContext()>();

        $r0.<androidx.appcompat.widget.Toolbar: android.content.Context mPopupContext> = $r1;

        $i0 = <androidx.appcompat.R$styleable: int Toolbar_popupTheme>;

        $i0 = virtualinvoke $r7.<androidx.appcompat.widget.TintTypedArray: int getResourceId(int,int)>($i0, 0);

        virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: void setPopupTheme(int)>($i0);

        $i0 = <androidx.appcompat.R$styleable: int Toolbar_navigationIcon>;

        $r9 = virtualinvoke $r7.<androidx.appcompat.widget.TintTypedArray: android.graphics.drawable.Drawable getDrawable(int)>($i0);

        if $r9 == null goto label10;

        virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: void setNavigationIcon(android.graphics.drawable.Drawable)>($r9);

     label10:
        $i0 = <androidx.appcompat.R$styleable: int Toolbar_navigationContentDescription>;

        $r10 = virtualinvoke $r7.<androidx.appcompat.widget.TintTypedArray: java.lang.CharSequence getText(int)>($i0);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r10);

        if $z0 != 0 goto label11;

        virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(java.lang.CharSequence)>($r10);

     label11:
        $i0 = <androidx.appcompat.R$styleable: int Toolbar_logo>;

        $r9 = virtualinvoke $r7.<androidx.appcompat.widget.TintTypedArray: android.graphics.drawable.Drawable getDrawable(int)>($i0);

        if $r9 == null goto label12;

        virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: void setLogo(android.graphics.drawable.Drawable)>($r9);

     label12:
        $i0 = <androidx.appcompat.R$styleable: int Toolbar_logoDescription>;

        $r10 = virtualinvoke $r7.<androidx.appcompat.widget.TintTypedArray: java.lang.CharSequence getText(int)>($i0);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r10);

        if $z0 != 0 goto label13;

        virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: void setLogoDescription(java.lang.CharSequence)>($r10);

     label13:
        $i0 = <androidx.appcompat.R$styleable: int Toolbar_titleTextColor>;

        $z0 = virtualinvoke $r7.<androidx.appcompat.widget.TintTypedArray: boolean hasValue(int)>($i0);

        if $z0 == 0 goto label14;

        $i0 = <androidx.appcompat.R$styleable: int Toolbar_titleTextColor>;

        $i0 = virtualinvoke $r7.<androidx.appcompat.widget.TintTypedArray: int getColor(int,int)>($i0, -1);

        virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: void setTitleTextColor(int)>($i0);

        goto label14;

     label14:
        $i0 = <androidx.appcompat.R$styleable: int Toolbar_subtitleTextColor>;

        $z0 = virtualinvoke $r7.<androidx.appcompat.widget.TintTypedArray: boolean hasValue(int)>($i0);

        if $z0 == 0 goto label15;

        $i0 = <androidx.appcompat.R$styleable: int Toolbar_subtitleTextColor>;

        $i0 = virtualinvoke $r7.<androidx.appcompat.widget.TintTypedArray: int getColor(int,int)>($i0, -1);

        virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(int)>($i0);

     label15:
        virtualinvoke $r7.<androidx.appcompat.widget.TintTypedArray: void recycle()>();

        return;
    }

    private void addCustomViewsWithGravity(java.util.List, int)
    {
        androidx.appcompat.widget.Toolbar $r0;
        java.util.List $r1;
        int $i0, $i1, $i2, $i3;
        boolean $z0;
        android.view.View $r2;
        android.view.ViewGroup$LayoutParams $r3;
        androidx.appcompat.widget.Toolbar$LayoutParams $r4;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 := @parameter0: java.util.List;

        $i0 := @parameter1: int;

        $i1 = staticinvoke <androidx.core.view.ViewCompat: int getLayoutDirection(android.view.View)>($r0);

        $z0 = 1;

        if $i1 != 1 goto label1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $i1 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: int getChildCount()>();

        $i2 = staticinvoke <androidx.core.view.ViewCompat: int getLayoutDirection(android.view.View)>($r0);

        $i0 = staticinvoke <androidx.core.view.GravityCompat: int getAbsoluteGravity(int,int)>($i0, $i2);

        interfaceinvoke $r1.<java.util.List: void clear()>();

        if $z0 == 0 goto label6;

        $i1 = $i1 + -1;

     label3:
        if $i1 < 0 goto label5;

        $r2 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: android.view.View getChildAt(int)>($i1);

        $r3 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r4 = (androidx.appcompat.widget.Toolbar$LayoutParams) $r3;

        $i2 = $r4.<androidx.appcompat.widget.Toolbar$LayoutParams: int mViewType>;

        if $i2 != 0 goto label4;

        $z0 = specialinvoke $r0.<androidx.appcompat.widget.Toolbar: boolean shouldLayout(android.view.View)>($r2);

        if $z0 == 0 goto label4;

        $i2 = $r4.<androidx.appcompat.widget.Toolbar$LayoutParams: int gravity>;

        $i2 = specialinvoke $r0.<androidx.appcompat.widget.Toolbar: int getChildHorizontalGravity(int)>($i2);

        if $i2 != $i0 goto label4;

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r2);

     label4:
        $i1 = $i1 + -1;

        goto label3;

     label5:
        return;

     label6:
        $i2 = 0;

     label7:
        if $i2 >= $i1 goto label9;

        $r2 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: android.view.View getChildAt(int)>($i2);

        $r3 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r4 = (androidx.appcompat.widget.Toolbar$LayoutParams) $r3;

        $i3 = $r4.<androidx.appcompat.widget.Toolbar$LayoutParams: int mViewType>;

        if $i3 != 0 goto label8;

        $z0 = specialinvoke $r0.<androidx.appcompat.widget.Toolbar: boolean shouldLayout(android.view.View)>($r2);

        if $z0 == 0 goto label8;

        $i3 = $r4.<androidx.appcompat.widget.Toolbar$LayoutParams: int gravity>;

        $i3 = specialinvoke $r0.<androidx.appcompat.widget.Toolbar: int getChildHorizontalGravity(int)>($i3);

        if $i3 != $i0 goto label8;

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r2);

     label8:
        $i2 = $i2 + 1;

        goto label7;

     label9:
        return;
    }

    private void addSystemView(android.view.View, boolean)
    {
        androidx.appcompat.widget.Toolbar $r0;
        android.view.View $r1, $r4;
        boolean $z0, $z1;
        android.view.ViewGroup$LayoutParams $r2;
        androidx.appcompat.widget.Toolbar$LayoutParams $r3;
        java.util.ArrayList $r5;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 := @parameter0: android.view.View;

        $z0 := @parameter1: boolean;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        if $r2 != null goto label1;

        $r3 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$LayoutParams generateDefaultLayoutParams()>();

        goto label3;

     label1:
        $z1 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>($r2);

        if $z1 != 0 goto label2;

        $r3 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>($r2);

        goto label3;

     label2:
        $r3 = (androidx.appcompat.widget.Toolbar$LayoutParams) $r2;

     label3:
        $r3.<androidx.appcompat.widget.Toolbar$LayoutParams: int mViewType> = 1;

        if $z0 == 0 goto label4;

        $r4 = $r0.<androidx.appcompat.widget.Toolbar: android.view.View mExpandedActionView>;

        if $r4 == null goto label4;

        virtualinvoke $r1.<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r3);

        $r5 = $r0.<androidx.appcompat.widget.Toolbar: java.util.ArrayList mHiddenViews>;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        return;

     label4:
        virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>($r1, $r3);

        return;
    }

    private void ensureContentInsets()
    {
        androidx.appcompat.widget.Toolbar $r0;
        androidx.appcompat.widget.RtlSpacingHelper $r1;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 = $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.RtlSpacingHelper mContentInsets>;

        if $r1 != null goto label1;

        $r1 = new androidx.appcompat.widget.RtlSpacingHelper;

        specialinvoke $r1.<androidx.appcompat.widget.RtlSpacingHelper: void <init>()>();

        $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.RtlSpacingHelper mContentInsets> = $r1;

     label1:
        return;
    }

    private void ensureLogoView()
    {
        androidx.appcompat.widget.Toolbar $r0;
        android.content.Context $r1;
        android.widget.ImageView $r2;
        androidx.appcompat.widget.AppCompatImageView $r3;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $r2 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageView mLogoView>;

        if $r2 != null goto label1;

        $r3 = new androidx.appcompat.widget.AppCompatImageView;

        $r1 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: android.content.Context getContext()>();

        specialinvoke $r3.<androidx.appcompat.widget.AppCompatImageView: void <init>(android.content.Context)>($r1);

        $r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageView mLogoView> = $r3;

     label1:
        return;
    }

    private void ensureMenu()
    {
        androidx.appcompat.widget.Toolbar $r0;
        androidx.appcompat.widget.ActionMenuView $r1;
        androidx.appcompat.view.menu.MenuBuilder $r2;
        android.view.Menu $r3;
        androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter $r4;
        android.content.Context $r5;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        specialinvoke $r0.<androidx.appcompat.widget.Toolbar: void ensureMenuView()>();

        $r1 = $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        $r2 = virtualinvoke $r1.<androidx.appcompat.widget.ActionMenuView: androidx.appcompat.view.menu.MenuBuilder peekMenu()>();

        if $r2 != null goto label2;

        $r1 = $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        $r3 = virtualinvoke $r1.<androidx.appcompat.widget.ActionMenuView: android.view.Menu getMenu()>();

        $r2 = (androidx.appcompat.view.menu.MenuBuilder) $r3;

        $r4 = $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter>;

        if $r4 != null goto label1;

        $r4 = new androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter;

        specialinvoke $r4.<androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter: void <init>(androidx.appcompat.widget.Toolbar)>($r0);

        $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter> = $r4;

     label1:
        $r1 = $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        virtualinvoke $r1.<androidx.appcompat.widget.ActionMenuView: void setExpandedActionViewsExclusive(boolean)>(1);

        $r4 = $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter>;

        $r5 = $r0.<androidx.appcompat.widget.Toolbar: android.content.Context mPopupContext>;

        virtualinvoke $r2.<androidx.appcompat.view.menu.MenuBuilder: void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter,android.content.Context)>($r4, $r5);

     label2:
        return;
    }

    private void ensureMenuView()
    {
        androidx.appcompat.widget.Toolbar $r0;
        androidx.appcompat.widget.ActionMenuView $r1;
        android.content.Context $r2;
        int $i0;
        androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener $r3;
        androidx.appcompat.view.menu.MenuPresenter$Callback $r4;
        androidx.appcompat.view.menu.MenuBuilder$Callback $r5;
        androidx.appcompat.widget.Toolbar$LayoutParams $r6;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 = $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        if $r1 != null goto label1;

        $r1 = new androidx.appcompat.widget.ActionMenuView;

        $r2 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: android.content.Context getContext()>();

        specialinvoke $r1.<androidx.appcompat.widget.ActionMenuView: void <init>(android.content.Context)>($r2);

        $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView> = $r1;

        $r1 = $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        $i0 = $r0.<androidx.appcompat.widget.Toolbar: int mPopupTheme>;

        virtualinvoke $r1.<androidx.appcompat.widget.ActionMenuView: void setPopupTheme(int)>($i0);

        $r1 = $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        $r3 = $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener mMenuViewItemClickListener>;

        virtualinvoke $r1.<androidx.appcompat.widget.ActionMenuView: void setOnMenuItemClickListener(androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener)>($r3);

        $r1 = $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        $r4 = $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.view.menu.MenuPresenter$Callback mActionMenuPresenterCallback>;

        $r5 = $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.view.menu.MenuBuilder$Callback mMenuBuilderCallback>;

        virtualinvoke $r1.<androidx.appcompat.widget.ActionMenuView: void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback)>($r4, $r5);

        $r6 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$LayoutParams generateDefaultLayoutParams()>();

        $i0 = $r0.<androidx.appcompat.widget.Toolbar: int mButtonGravity>;

        $i0 = $i0 & 112;

        $i0 = 8388613 | $i0;

        $r6.<androidx.appcompat.widget.Toolbar$LayoutParams: int gravity> = $i0;

        $r1 = $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        virtualinvoke $r1.<androidx.appcompat.widget.ActionMenuView: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r6);

        $r1 = $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        specialinvoke $r0.<androidx.appcompat.widget.Toolbar: void addSystemView(android.view.View,boolean)>($r1, 0);

     label1:
        return;
    }

    private void ensureNavButtonView()
    {
        androidx.appcompat.widget.Toolbar $r0;
        int $i0;
        android.widget.ImageButton $r1;
        androidx.appcompat.widget.AppCompatImageButton $r2;
        android.content.Context $r3;
        androidx.appcompat.widget.Toolbar$LayoutParams $r4;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        if $r1 != null goto label1;

        $r2 = new androidx.appcompat.widget.AppCompatImageButton;

        $r3 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: android.content.Context getContext()>();

        $i0 = <androidx.appcompat.R$attr: int toolbarNavigationButtonStyle>;

        specialinvoke $r2.<androidx.appcompat.widget.AppCompatImageButton: void <init>(android.content.Context,android.util.AttributeSet,int)>($r3, null, $i0);

        $r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mNavButtonView> = $r2;

        $r4 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$LayoutParams generateDefaultLayoutParams()>();

        $i0 = $r0.<androidx.appcompat.widget.Toolbar: int mButtonGravity>;

        $i0 = $i0 & 112;

        $i0 = 8388611 | $i0;

        $r4.<androidx.appcompat.widget.Toolbar$LayoutParams: int gravity> = $i0;

        $r1 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        virtualinvoke $r1.<android.widget.ImageButton: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r4);

     label1:
        return;
    }

    private int getChildHorizontalGravity(int)
    {
        androidx.appcompat.widget.Toolbar $r0;
        int $i0, $i1;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $i0 := @parameter0: int;

        $i1 = staticinvoke <androidx.core.view.ViewCompat: int getLayoutDirection(android.view.View)>($r0);

        $i0 = staticinvoke <androidx.core.view.GravityCompat: int getAbsoluteGravity(int,int)>($i0, $i1);

        $i0 = $i0 & 7;

        if $i0 == 1 goto label1;

        if $i0 == 3 goto label1;

        if $i0 == 5 goto label1;

        if $i1 != 1 goto label2;

        return 5;

     label1:
        return $i0;

     label2:
        return 3;
    }

    private int getChildTop(android.view.View, int)
    {
        androidx.appcompat.widget.Toolbar $r0;
        android.view.View $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.view.ViewGroup$LayoutParams $r2;
        androidx.appcompat.widget.Toolbar$LayoutParams $r3;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (androidx.appcompat.widget.Toolbar$LayoutParams) $r2;

        $i1 = virtualinvoke $r1.<android.view.View: int getMeasuredHeight()>();

        if $i0 <= 0 goto label1;

        $i0 = $i1 - $i0;

        $i0 = $i0 / 2;

        goto label2;

     label1:
        $i0 = 0;

     label2:
        $i2 = $r3.<androidx.appcompat.widget.Toolbar$LayoutParams: int gravity>;

        $i2 = specialinvoke $r0.<androidx.appcompat.widget.Toolbar: int getChildVerticalGravity(int)>($i2);

        if $i2 == 48 goto label6;

        if $i2 == 80 goto label5;

        $i0 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: int getPaddingTop()>();

        $i3 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: int getPaddingBottom()>();

        $i4 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: int getHeight()>();

        $i2 = $i4 - $i0;

        $i2 = $i2 - $i3;

        $i2 = $i2 - $i1;

        $i2 = $i2 / 2;

        $i5 = $r3.<androidx.appcompat.widget.Toolbar$LayoutParams: int topMargin>;

        if $i2 >= $i5 goto label3;

        $i2 = $r3.<androidx.appcompat.widget.Toolbar$LayoutParams: int topMargin>;

        goto label4;

     label3:
        $i3 = $i4 - $i3;

        $i1 = $i3 - $i1;

        $i1 = $i1 - $i2;

        $i1 = $i1 - $i0;

        $i3 = $r3.<androidx.appcompat.widget.Toolbar$LayoutParams: int bottomMargin>;

        if $i1 >= $i3 goto label4;

        $i3 = $r3.<androidx.appcompat.widget.Toolbar$LayoutParams: int bottomMargin>;

        $i1 = $i3 - $i1;

        $i1 = $i2 - $i1;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i1);

     label4:
        $i0 = $i0 + $i2;

        return $i0;

     label5:
        $i2 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: int getHeight()>();

        $i3 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: int getPaddingBottom()>();

        $i2 = $i2 - $i3;

        $i1 = $i2 - $i1;

        $i2 = $r3.<androidx.appcompat.widget.Toolbar$LayoutParams: int bottomMargin>;

        $i1 = $i1 - $i2;

        $i0 = $i1 - $i0;

        return $i0;

     label6:
        $i1 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: int getPaddingTop()>();

        $i0 = $i1 - $i0;

        return $i0;
    }

    private int getChildVerticalGravity(int)
    {
        androidx.appcompat.widget.Toolbar $r0;
        int $i0;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $i0 := @parameter0: int;

        $i0 = $i0 & 112;

        if $i0 == 16 goto label1;

        if $i0 == 48 goto label1;

        if $i0 == 80 goto label1;

        $i0 = $r0.<androidx.appcompat.widget.Toolbar: int mGravity>;

        $i0 = $i0 & 112;

     label1:
        return $i0;
    }

    private int getHorizontalMargins(android.view.View)
    {
        androidx.appcompat.widget.Toolbar $r0;
        android.view.View $r1;
        android.view.ViewGroup$LayoutParams $r2;
        android.view.ViewGroup$MarginLayoutParams $r3;
        int $i0, $i1;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (android.view.ViewGroup$MarginLayoutParams) $r2;

        $i0 = staticinvoke <androidx.core.view.MarginLayoutParamsCompat: int getMarginStart(android.view.ViewGroup$MarginLayoutParams)>($r3);

        $i1 = staticinvoke <androidx.core.view.MarginLayoutParamsCompat: int getMarginEnd(android.view.ViewGroup$MarginLayoutParams)>($r3);

        $i0 = $i0 + $i1;

        return $i0;
    }

    private android.view.MenuInflater getMenuInflater()
    {
        androidx.appcompat.widget.Toolbar $r0;
        androidx.appcompat.view.SupportMenuInflater $r1;
        android.content.Context $r2;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 = new androidx.appcompat.view.SupportMenuInflater;

        $r2 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: android.content.Context getContext()>();

        specialinvoke $r1.<androidx.appcompat.view.SupportMenuInflater: void <init>(android.content.Context)>($r2);

        return $r1;
    }

    private int getVerticalMargins(android.view.View)
    {
        androidx.appcompat.widget.Toolbar $r0;
        android.view.View $r1;
        int $i0, $i1;
        android.view.ViewGroup$LayoutParams $r2;
        android.view.ViewGroup$MarginLayoutParams $r3;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (android.view.ViewGroup$MarginLayoutParams) $r2;

        $i1 = $r3.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        $i0 = $r3.<android.view.ViewGroup$MarginLayoutParams: int bottomMargin>;

        $i0 = $i1 + $i0;

        return $i0;
    }

    private int getViewListMeasuredWidth(java.util.List, int[])
    {
        androidx.appcompat.widget.Toolbar $r0;
        java.util.List $r1;
        int[] $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.Object $r3;
        android.view.View $r4;
        android.view.ViewGroup$LayoutParams $r5;
        androidx.appcompat.widget.Toolbar$LayoutParams $r6;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 := @parameter0: java.util.List;

        $r2 := @parameter1: int[];

        $i0 = $r2[0];

        $i1 = $r2[1];

        $i2 = 0;

        $i3 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i4 = 0;

     label1:
        if $i4 >= $i3 goto label2;

        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i4);

        $r4 = (android.view.View) $r3;

        $r5 = virtualinvoke $r4.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r6 = (androidx.appcompat.widget.Toolbar$LayoutParams) $r5;

        $i5 = $r6.<androidx.appcompat.widget.Toolbar$LayoutParams: int leftMargin>;

        $i0 = $i5 - $i0;

        $i5 = $r6.<androidx.appcompat.widget.Toolbar$LayoutParams: int rightMargin>;

        $i1 = $i5 - $i1;

        $i6 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i0);

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i1);

        $i0 = neg $i0;

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i0);

        $i1 = neg $i1;

        $i1 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i1);

        $i7 = virtualinvoke $r4.<android.view.View: int getMeasuredWidth()>();

        $i6 = $i7 + $i6;

        $i5 = $i6 + $i5;

        $i2 = $i2 + $i5;

        $i4 = $i4 + 1;

        goto label1;

     label2:
        return $i2;
    }

    private boolean isChildOrHidden(android.view.View)
    {
        androidx.appcompat.widget.Toolbar $r0;
        android.view.View $r1;
        android.view.ViewParent $r2;
        java.util.ArrayList $r3;
        boolean $z0;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewParent getParent()>();

        if $r2 == $r0 goto label2;

        $r3 = $r0.<androidx.appcompat.widget.Toolbar: java.util.ArrayList mHiddenViews>;

        $z0 = virtualinvoke $r3.<java.util.ArrayList: boolean contains(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    private static boolean isCustomView(android.view.View)
    {
        android.view.View $r0;
        android.view.ViewGroup$LayoutParams $r1;
        androidx.appcompat.widget.Toolbar$LayoutParams $r2;
        int $i0;

        $r0 := @parameter0: android.view.View;

        $r1 = virtualinvoke $r0.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r2 = (androidx.appcompat.widget.Toolbar$LayoutParams) $r1;

        $i0 = $r2.<androidx.appcompat.widget.Toolbar$LayoutParams: int mViewType>;

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private int layoutChildLeft(android.view.View, int, int[], int)
    {
        androidx.appcompat.widget.Toolbar $r0;
        android.view.View $r1;
        int[] $r2;
        int $i0, $i1, $i2, $i3, $i4;
        android.view.ViewGroup$LayoutParams $r3;
        androidx.appcompat.widget.Toolbar$LayoutParams $r4;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 := @parameter0: android.view.View;

        $i1 := @parameter1: int;

        $r2 := @parameter2: int[];

        $i0 := @parameter3: int;

        $r3 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r4 = (androidx.appcompat.widget.Toolbar$LayoutParams) $r3;

        $i2 = $r4.<androidx.appcompat.widget.Toolbar$LayoutParams: int leftMargin>;

        $i3 = $r2[0];

        $i2 = $i2 - $i3;

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i2);

        $i1 = $i1 + $i3;

        $i2 = neg $i2;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i2);

        $r2[0] = $i2;

        $i2 = specialinvoke $r0.<androidx.appcompat.widget.Toolbar: int getChildTop(android.view.View,int)>($r1, $i0);

        $i0 = virtualinvoke $r1.<android.view.View: int getMeasuredWidth()>();

        $i3 = $i1 + $i0;

        $i4 = virtualinvoke $r1.<android.view.View: int getMeasuredHeight()>();

        $i4 = $i4 + $i2;

        virtualinvoke $r1.<android.view.View: void layout(int,int,int,int)>($i1, $i2, $i3, $i4);

        $i2 = $r4.<androidx.appcompat.widget.Toolbar$LayoutParams: int rightMargin>;

        $i0 = $i2 + $i0;

        $i1 = $i1 + $i0;

        return $i1;
    }

    private int layoutChildRight(android.view.View, int, int[], int)
    {
        androidx.appcompat.widget.Toolbar $r0;
        android.view.View $r1;
        int[] $r2;
        int $i0, $i1, $i2, $i3, $i4;
        android.view.ViewGroup$LayoutParams $r3;
        androidx.appcompat.widget.Toolbar$LayoutParams $r4;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 := @parameter0: android.view.View;

        $i1 := @parameter1: int;

        $r2 := @parameter2: int[];

        $i0 := @parameter3: int;

        $r3 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r4 = (androidx.appcompat.widget.Toolbar$LayoutParams) $r3;

        $i2 = $r4.<androidx.appcompat.widget.Toolbar$LayoutParams: int rightMargin>;

        $i3 = $r2[1];

        $i2 = $i2 - $i3;

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i2);

        $i1 = $i1 - $i3;

        $i2 = neg $i2;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i2);

        $r2[1] = $i2;

        $i2 = specialinvoke $r0.<androidx.appcompat.widget.Toolbar: int getChildTop(android.view.View,int)>($r1, $i0);

        $i0 = virtualinvoke $r1.<android.view.View: int getMeasuredWidth()>();

        $i3 = $i1 - $i0;

        $i4 = virtualinvoke $r1.<android.view.View: int getMeasuredHeight()>();

        $i4 = $i4 + $i2;

        virtualinvoke $r1.<android.view.View: void layout(int,int,int,int)>($i3, $i2, $i1, $i4);

        $i2 = $r4.<androidx.appcompat.widget.Toolbar$LayoutParams: int leftMargin>;

        $i0 = $i2 + $i0;

        $i1 = $i1 - $i0;

        return $i1;
    }

    private int measureChildCollapseMargins(android.view.View, int, int, int, int, int[])
    {
        androidx.appcompat.widget.Toolbar $r0;
        android.view.View $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        int[] $r2;
        android.view.ViewGroup$LayoutParams $r3;
        android.view.ViewGroup$MarginLayoutParams $r4;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $r2 := @parameter5: int[];

        $r3 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r4 = (android.view.ViewGroup$MarginLayoutParams) $r3;

        $i4 = $r4.<android.view.ViewGroup$MarginLayoutParams: int leftMargin>;

        $i5 = $r2[0];

        $i5 = $i4 - $i5;

        $i4 = $r4.<android.view.ViewGroup$MarginLayoutParams: int rightMargin>;

        $i6 = $r2[1];

        $i6 = $i4 - $i6;

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i5);

        $i7 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i6);

        $i4 = $i4 + $i7;

        $i5 = neg $i5;

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i5);

        $r2[0] = $i5;

        $i5 = neg $i6;

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i5);

        $r2[1] = $i5;

        $i5 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: int getPaddingLeft()>();

        $i6 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: int getPaddingRight()>();

        $i5 = $i5 + $i6;

        $i5 = $i5 + $i4;

        $i1 = $i5 + $i1;

        $i5 = $r4.<android.view.ViewGroup$MarginLayoutParams: int width>;

        $i0 = staticinvoke <androidx.appcompat.widget.Toolbar: int getChildMeasureSpec(int,int,int)>($i0, $i1, $i5);

        $i1 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: int getPaddingTop()>();

        $i5 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: int getPaddingBottom()>();

        $i1 = $i1 + $i5;

        $i5 = $r4.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        $i1 = $i1 + $i5;

        $i5 = $r4.<android.view.ViewGroup$MarginLayoutParams: int bottomMargin>;

        $i1 = $i1 + $i5;

        $i1 = $i1 + $i3;

        $i3 = $r4.<android.view.ViewGroup$MarginLayoutParams: int height>;

        $i1 = staticinvoke <androidx.appcompat.widget.Toolbar: int getChildMeasureSpec(int,int,int)>($i2, $i1, $i3);

        virtualinvoke $r1.<android.view.View: void measure(int,int)>($i0, $i1);

        $i0 = virtualinvoke $r1.<android.view.View: int getMeasuredWidth()>();

        $i0 = $i0 + $i4;

        return $i0;
    }

    private void measureChildConstrained(android.view.View, int, int, int, int, int)
    {
        androidx.appcompat.widget.Toolbar $r0;
        android.view.View $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        android.view.ViewGroup$LayoutParams $r2;
        android.view.ViewGroup$MarginLayoutParams $r3;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $i4 := @parameter5: int;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (android.view.ViewGroup$MarginLayoutParams) $r2;

        $i5 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: int getPaddingLeft()>();

        $i6 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: int getPaddingRight()>();

        $i5 = $i5 + $i6;

        $i6 = $r3.<android.view.ViewGroup$MarginLayoutParams: int leftMargin>;

        $i5 = $i5 + $i6;

        $i6 = $r3.<android.view.ViewGroup$MarginLayoutParams: int rightMargin>;

        $i5 = $i5 + $i6;

        $i1 = $i5 + $i1;

        $i5 = $r3.<android.view.ViewGroup$MarginLayoutParams: int width>;

        $i0 = staticinvoke <androidx.appcompat.widget.Toolbar: int getChildMeasureSpec(int,int,int)>($i0, $i1, $i5);

        $i1 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: int getPaddingTop()>();

        $i5 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: int getPaddingBottom()>();

        $i1 = $i1 + $i5;

        $i5 = $r3.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        $i1 = $i1 + $i5;

        $i5 = $r3.<android.view.ViewGroup$MarginLayoutParams: int bottomMargin>;

        $i1 = $i1 + $i5;

        $i1 = $i1 + $i3;

        $i3 = $r3.<android.view.ViewGroup$MarginLayoutParams: int height>;

        $i1 = staticinvoke <androidx.appcompat.widget.Toolbar: int getChildMeasureSpec(int,int,int)>($i2, $i1, $i3);

        $i2 = $i1;

        $i3 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i1);

        if $i3 == 1073741824 goto label3;

        if $i4 < 0 goto label3;

        if $i3 == 0 goto label1;

        $i1 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i1);

        $i1 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i4);

        goto label2;

     label1:
        $i1 = $i4;

     label2:
        $i2 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i1, 1073741824);

     label3:
        virtualinvoke $r1.<android.view.View: void measure(int,int)>($i0, $i2);

        return;
    }

    private void postShowOverflowMenu()
    {
        androidx.appcompat.widget.Toolbar $r0;
        java.lang.Runnable $r1;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 = $r0.<androidx.appcompat.widget.Toolbar: java.lang.Runnable mShowOverflowMenuRunnable>;

        virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: boolean removeCallbacks(java.lang.Runnable)>($r1);

        $r1 = $r0.<androidx.appcompat.widget.Toolbar: java.lang.Runnable mShowOverflowMenuRunnable>;

        virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: boolean post(java.lang.Runnable)>($r1);

        return;
    }

    private boolean shouldCollapse()
    {
        androidx.appcompat.widget.Toolbar $r0;
        boolean $z0;
        int $i0, $i1, $i2;
        android.view.View $r1;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $z0 = $r0.<androidx.appcompat.widget.Toolbar: boolean mCollapsible>;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $i0 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: int getChildCount()>();

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label4;

        $r1 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: android.view.View getChildAt(int)>($i1);

        $z0 = specialinvoke $r0.<androidx.appcompat.widget.Toolbar: boolean shouldLayout(android.view.View)>($r1);

        if $z0 == 0 goto label3;

        $i2 = virtualinvoke $r1.<android.view.View: int getMeasuredWidth()>();

        if $i2 <= 0 goto label3;

        $i2 = virtualinvoke $r1.<android.view.View: int getMeasuredHeight()>();

        if $i2 <= 0 goto label3;

        return 0;

     label3:
        $i1 = $i1 + 1;

        goto label2;

     label4:
        return 1;
    }

    private boolean shouldLayout(android.view.View)
    {
        androidx.appcompat.widget.Toolbar $r0;
        android.view.View $r1;
        android.view.ViewParent $r2;
        int $i0;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 := @parameter0: android.view.View;

        if $r1 == null goto label1;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewParent getParent()>();

        if $r2 != $r0 goto label1;

        $i0 = virtualinvoke $r1.<android.view.View: int getVisibility()>();

        if $i0 == 8 goto label1;

        return 1;

     label1:
        return 0;
    }

    void addChildrenForExpandedActionView()
    {
        androidx.appcompat.widget.Toolbar $r0;
        java.util.ArrayList $r1;
        int $i0;
        java.lang.Object $r2;
        android.view.View $r3;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 = $r0.<androidx.appcompat.widget.Toolbar: java.util.ArrayList mHiddenViews>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $i0 = $i0 + -1;

     label1:
        if $i0 < 0 goto label2;

        $r1 = $r0.<androidx.appcompat.widget.Toolbar: java.util.ArrayList mHiddenViews>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r3 = (android.view.View) $r2;

        virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: void addView(android.view.View)>($r3);

        $i0 = $i0 + -1;

        goto label1;

     label2:
        $r1 = $r0.<androidx.appcompat.widget.Toolbar: java.util.ArrayList mHiddenViews>;

        virtualinvoke $r1.<java.util.ArrayList: void clear()>();

        return;
    }

    public boolean canShowOverflowMenu()
    {
        androidx.appcompat.widget.Toolbar $r0;
        int $i0;
        androidx.appcompat.widget.ActionMenuView $r1;
        boolean $z0;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $i0 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: int getVisibility()>();

        if $i0 != 0 goto label1;

        $r1 = $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.<androidx.appcompat.widget.ActionMenuView: boolean isOverflowReserved()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    protected boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        androidx.appcompat.widget.Toolbar $r0;
        android.view.ViewGroup$LayoutParams $r1;
        boolean $z0;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $z0 = specialinvoke $r0.<android.view.ViewGroup: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>($r1);

        if $z0 == 0 goto label1;

        $z0 = $r1 instanceof androidx.appcompat.widget.Toolbar$LayoutParams;

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void collapseActionView()
    {
        androidx.appcompat.widget.Toolbar $r0;
        androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter $r1;
        androidx.appcompat.view.menu.MenuItemImpl $r2;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 = $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter>;

        if $r1 != null goto label1;

        $r2 = null;

        goto label2;

     label1:
        $r2 = $r1.<androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter: androidx.appcompat.view.menu.MenuItemImpl mCurrentExpandedItem>;

     label2:
        if $r2 == null goto label3;

        virtualinvoke $r2.<androidx.appcompat.view.menu.MenuItemImpl: boolean collapseActionView()>();

     label3:
        return;
    }

    public void dismissPopupMenus()
    {
        androidx.appcompat.widget.Toolbar $r0;
        androidx.appcompat.widget.ActionMenuView $r1;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 = $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        if $r1 == null goto label1;

        virtualinvoke $r1.<androidx.appcompat.widget.ActionMenuView: void dismissPopupMenus()>();

     label1:
        return;
    }

    void ensureCollapseButtonView()
    {
        androidx.appcompat.widget.Toolbar $r0;
        int $i0;
        android.widget.ImageButton $r1;
        androidx.appcompat.widget.AppCompatImageButton $r2;
        android.content.Context $r3;
        android.graphics.drawable.Drawable $r4;
        java.lang.CharSequence $r5;
        androidx.appcompat.widget.Toolbar$LayoutParams $r6;
        androidx.appcompat.widget.Toolbar$3 $r7;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        if $r1 != null goto label1;

        $r2 = new androidx.appcompat.widget.AppCompatImageButton;

        $r3 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: android.content.Context getContext()>();

        $i0 = <androidx.appcompat.R$attr: int toolbarNavigationButtonStyle>;

        specialinvoke $r2.<androidx.appcompat.widget.AppCompatImageButton: void <init>(android.content.Context,android.util.AttributeSet,int)>($r3, null, $i0);

        $r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mCollapseButtonView> = $r2;

        $r1 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        $r4 = $r0.<androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable mCollapseIcon>;

        virtualinvoke $r1.<android.widget.ImageButton: void setImageDrawable(android.graphics.drawable.Drawable)>($r4);

        $r1 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        $r5 = $r0.<androidx.appcompat.widget.Toolbar: java.lang.CharSequence mCollapseDescription>;

        virtualinvoke $r1.<android.widget.ImageButton: void setContentDescription(java.lang.CharSequence)>($r5);

        $r6 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$LayoutParams generateDefaultLayoutParams()>();

        $i0 = $r0.<androidx.appcompat.widget.Toolbar: int mButtonGravity>;

        $i0 = $i0 & 112;

        $i0 = 8388611 | $i0;

        $r6.<androidx.appcompat.widget.Toolbar$LayoutParams: int gravity> = $i0;

        $r6.<androidx.appcompat.widget.Toolbar$LayoutParams: int mViewType> = 2;

        $r1 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        virtualinvoke $r1.<android.widget.ImageButton: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r6);

        $r1 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        $r7 = new androidx.appcompat.widget.Toolbar$3;

        specialinvoke $r7.<androidx.appcompat.widget.Toolbar$3: void <init>(androidx.appcompat.widget.Toolbar)>($r0);

        virtualinvoke $r1.<android.widget.ImageButton: void setOnClickListener(android.view.View$OnClickListener)>($r7);

     label1:
        return;
    }

    protected volatile android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
    {
        androidx.appcompat.widget.Toolbar $r0;
        androidx.appcompat.widget.Toolbar$LayoutParams $r1;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$LayoutParams generateDefaultLayoutParams()>();

        return $r1;
    }

    protected androidx.appcompat.widget.Toolbar$LayoutParams generateDefaultLayoutParams()
    {
        androidx.appcompat.widget.Toolbar $r0;
        androidx.appcompat.widget.Toolbar$LayoutParams $r1;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 = new androidx.appcompat.widget.Toolbar$LayoutParams;

        specialinvoke $r1.<androidx.appcompat.widget.Toolbar$LayoutParams: void <init>(int,int)>(-2, -2);

        return $r1;
    }

    public volatile android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        androidx.appcompat.widget.Toolbar $r0;
        androidx.appcompat.widget.Toolbar$LayoutParams $r1;
        android.util.AttributeSet $r2;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $r2 := @parameter0: android.util.AttributeSet;

        $r1 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.util.AttributeSet)>($r2);

        return $r1;
    }

    protected volatile android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        androidx.appcompat.widget.Toolbar $r0;
        androidx.appcompat.widget.Toolbar$LayoutParams $r1;
        android.view.ViewGroup$LayoutParams $r2;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $r2 := @parameter0: android.view.ViewGroup$LayoutParams;

        $r1 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>($r2);

        return $r1;
    }

    public androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        androidx.appcompat.widget.Toolbar $r0;
        android.util.AttributeSet $r1;
        androidx.appcompat.widget.Toolbar$LayoutParams $r2;
        android.content.Context $r3;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 := @parameter0: android.util.AttributeSet;

        $r2 = new androidx.appcompat.widget.Toolbar$LayoutParams;

        $r3 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: android.content.Context getContext()>();

        specialinvoke $r2.<androidx.appcompat.widget.Toolbar$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>($r3, $r1);

        return $r2;
    }

    protected androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        androidx.appcompat.widget.Toolbar $r0;
        android.view.ViewGroup$LayoutParams $r1;
        boolean $z0;
        androidx.appcompat.widget.Toolbar$LayoutParams $r2, $r3;
        androidx.appcompat.app.ActionBar$LayoutParams $r4;
        android.view.ViewGroup$MarginLayoutParams $r5;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $z0 = $r1 instanceof androidx.appcompat.widget.Toolbar$LayoutParams;

        if $z0 == 0 goto label1;

        $r2 = new androidx.appcompat.widget.Toolbar$LayoutParams;

        $r3 = (androidx.appcompat.widget.Toolbar$LayoutParams) $r1;

        specialinvoke $r2.<androidx.appcompat.widget.Toolbar$LayoutParams: void <init>(androidx.appcompat.widget.Toolbar$LayoutParams)>($r3);

        return $r2;

     label1:
        $z0 = $r1 instanceof androidx.appcompat.app.ActionBar$LayoutParams;

        if $z0 == 0 goto label2;

        $r2 = new androidx.appcompat.widget.Toolbar$LayoutParams;

        $r4 = (androidx.appcompat.app.ActionBar$LayoutParams) $r1;

        specialinvoke $r2.<androidx.appcompat.widget.Toolbar$LayoutParams: void <init>(androidx.appcompat.app.ActionBar$LayoutParams)>($r4);

        return $r2;

     label2:
        $z0 = $r1 instanceof android.view.ViewGroup$MarginLayoutParams;

        if $z0 == 0 goto label3;

        $r2 = new androidx.appcompat.widget.Toolbar$LayoutParams;

        $r5 = (android.view.ViewGroup$MarginLayoutParams) $r1;

        specialinvoke $r2.<androidx.appcompat.widget.Toolbar$LayoutParams: void <init>(android.view.ViewGroup$MarginLayoutParams)>($r5);

        return $r2;

     label3:
        $r2 = new androidx.appcompat.widget.Toolbar$LayoutParams;

        specialinvoke $r2.<androidx.appcompat.widget.Toolbar$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>($r1);

        return $r2;
    }

    public int getContentInsetEnd()
    {
        androidx.appcompat.widget.Toolbar $r0;
        int $i0;
        androidx.appcompat.widget.RtlSpacingHelper $r1;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 = $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.RtlSpacingHelper mContentInsets>;

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<androidx.appcompat.widget.RtlSpacingHelper: int getEnd()>();

        return $i0;

     label1:
        return 0;
    }

    public int getContentInsetEndWithActions()
    {
        androidx.appcompat.widget.Toolbar $r0;
        int $i0;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $i0 = $r0.<androidx.appcompat.widget.Toolbar: int mContentInsetEndWithActions>;

        if $i0 == -2147483648 goto label1;

        return $i0;

     label1:
        $i0 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: int getContentInsetEnd()>();

        return $i0;
    }

    public int getContentInsetLeft()
    {
        androidx.appcompat.widget.Toolbar $r0;
        int $i0;
        androidx.appcompat.widget.RtlSpacingHelper $r1;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 = $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.RtlSpacingHelper mContentInsets>;

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<androidx.appcompat.widget.RtlSpacingHelper: int getLeft()>();

        return $i0;

     label1:
        return 0;
    }

    public int getContentInsetRight()
    {
        androidx.appcompat.widget.Toolbar $r0;
        int $i0;
        androidx.appcompat.widget.RtlSpacingHelper $r1;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 = $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.RtlSpacingHelper mContentInsets>;

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<androidx.appcompat.widget.RtlSpacingHelper: int getRight()>();

        return $i0;

     label1:
        return 0;
    }

    public int getContentInsetStart()
    {
        androidx.appcompat.widget.Toolbar $r0;
        int $i0;
        androidx.appcompat.widget.RtlSpacingHelper $r1;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 = $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.RtlSpacingHelper mContentInsets>;

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<androidx.appcompat.widget.RtlSpacingHelper: int getStart()>();

        return $i0;

     label1:
        return 0;
    }

    public int getContentInsetStartWithNavigation()
    {
        androidx.appcompat.widget.Toolbar $r0;
        int $i0;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $i0 = $r0.<androidx.appcompat.widget.Toolbar: int mContentInsetStartWithNavigation>;

        if $i0 == -2147483648 goto label1;

        return $i0;

     label1:
        $i0 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: int getContentInsetStart()>();

        return $i0;
    }

    public int getCurrentContentInsetEnd()
    {
        androidx.appcompat.widget.Toolbar $r0;
        boolean $z0;
        androidx.appcompat.widget.ActionMenuView $r1;
        androidx.appcompat.view.menu.MenuBuilder $r2;
        int $i0, $i1;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $z0 = 0;

        $r1 = $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        if $r1 == null goto label2;

        $r2 = virtualinvoke $r1.<androidx.appcompat.widget.ActionMenuView: androidx.appcompat.view.menu.MenuBuilder peekMenu()>();

        if $r2 == null goto label1;

        $z0 = virtualinvoke $r2.<androidx.appcompat.view.menu.MenuBuilder: boolean hasVisibleItems()>();

        if $z0 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        if $z0 == 0 goto label3;

        $i0 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: int getContentInsetEnd()>();

        $i1 = $r0.<androidx.appcompat.widget.Toolbar: int mContentInsetEndWithActions>;

        $i1 = staticinvoke <java.lang.Math: int max(int,int)>($i1, 0);

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>($i0, $i1);

        return $i0;

     label3:
        $i0 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: int getContentInsetEnd()>();

        return $i0;
    }

    public int getCurrentContentInsetLeft()
    {
        androidx.appcompat.widget.Toolbar $r0;
        int $i0;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $i0 = staticinvoke <androidx.core.view.ViewCompat: int getLayoutDirection(android.view.View)>($r0);

        if $i0 != 1 goto label1;

        $i0 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: int getCurrentContentInsetEnd()>();

        return $i0;

     label1:
        $i0 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: int getCurrentContentInsetStart()>();

        return $i0;
    }

    public int getCurrentContentInsetRight()
    {
        androidx.appcompat.widget.Toolbar $r0;
        int $i0;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $i0 = staticinvoke <androidx.core.view.ViewCompat: int getLayoutDirection(android.view.View)>($r0);

        if $i0 != 1 goto label1;

        $i0 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: int getCurrentContentInsetStart()>();

        return $i0;

     label1:
        $i0 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: int getCurrentContentInsetEnd()>();

        return $i0;
    }

    public int getCurrentContentInsetStart()
    {
        androidx.appcompat.widget.Toolbar $r0;
        android.graphics.drawable.Drawable $r1;
        int $i0, $i1;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getNavigationIcon()>();

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: int getContentInsetStart()>();

        $i1 = $r0.<androidx.appcompat.widget.Toolbar: int mContentInsetStartWithNavigation>;

        $i1 = staticinvoke <java.lang.Math: int max(int,int)>($i1, 0);

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>($i0, $i1);

        return $i0;

     label1:
        $i0 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: int getContentInsetStart()>();

        return $i0;
    }

    public android.graphics.drawable.Drawable getLogo()
    {
        androidx.appcompat.widget.Toolbar $r0;
        android.graphics.drawable.Drawable $r1;
        android.widget.ImageView $r2;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $r2 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageView mLogoView>;

        if $r2 == null goto label1;

        $r1 = virtualinvoke $r2.<android.widget.ImageView: android.graphics.drawable.Drawable getDrawable()>();

        return $r1;

     label1:
        return null;
    }

    public java.lang.CharSequence getLogoDescription()
    {
        androidx.appcompat.widget.Toolbar $r0;
        java.lang.CharSequence $r1;
        android.widget.ImageView $r2;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $r2 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageView mLogoView>;

        if $r2 == null goto label1;

        $r1 = virtualinvoke $r2.<android.widget.ImageView: java.lang.CharSequence getContentDescription()>();

        return $r1;

     label1:
        return null;
    }

    public android.view.Menu getMenu()
    {
        androidx.appcompat.widget.Toolbar $r0;
        android.view.Menu $r1;
        androidx.appcompat.widget.ActionMenuView $r2;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        specialinvoke $r0.<androidx.appcompat.widget.Toolbar: void ensureMenu()>();

        $r2 = $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        $r1 = virtualinvoke $r2.<androidx.appcompat.widget.ActionMenuView: android.view.Menu getMenu()>();

        return $r1;
    }

    public java.lang.CharSequence getNavigationContentDescription()
    {
        androidx.appcompat.widget.Toolbar $r0;
        java.lang.CharSequence $r1;
        android.widget.ImageButton $r2;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $r2 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        if $r2 == null goto label1;

        $r1 = virtualinvoke $r2.<android.widget.ImageButton: java.lang.CharSequence getContentDescription()>();

        return $r1;

     label1:
        return null;
    }

    public android.graphics.drawable.Drawable getNavigationIcon()
    {
        androidx.appcompat.widget.Toolbar $r0;
        android.graphics.drawable.Drawable $r1;
        android.widget.ImageButton $r2;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $r2 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        if $r2 == null goto label1;

        $r1 = virtualinvoke $r2.<android.widget.ImageButton: android.graphics.drawable.Drawable getDrawable()>();

        return $r1;

     label1:
        return null;
    }

    androidx.appcompat.widget.ActionMenuPresenter getOuterActionMenuPresenter()
    {
        androidx.appcompat.widget.Toolbar $r0;
        androidx.appcompat.widget.ActionMenuPresenter r1;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        r1 = $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuPresenter mOuterActionMenuPresenter>;

        return r1;
    }

    public android.graphics.drawable.Drawable getOverflowIcon()
    {
        androidx.appcompat.widget.Toolbar $r0;
        android.graphics.drawable.Drawable $r1;
        androidx.appcompat.widget.ActionMenuView $r2;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        specialinvoke $r0.<androidx.appcompat.widget.Toolbar: void ensureMenu()>();

        $r2 = $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        $r1 = virtualinvoke $r2.<androidx.appcompat.widget.ActionMenuView: android.graphics.drawable.Drawable getOverflowIcon()>();

        return $r1;
    }

    android.content.Context getPopupContext()
    {
        androidx.appcompat.widget.Toolbar $r0;
        android.content.Context r1;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        r1 = $r0.<androidx.appcompat.widget.Toolbar: android.content.Context mPopupContext>;

        return r1;
    }

    public int getPopupTheme()
    {
        androidx.appcompat.widget.Toolbar $r0;
        int i0;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        i0 = $r0.<androidx.appcompat.widget.Toolbar: int mPopupTheme>;

        return i0;
    }

    public java.lang.CharSequence getSubtitle()
    {
        androidx.appcompat.widget.Toolbar $r0;
        java.lang.CharSequence r1;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        r1 = $r0.<androidx.appcompat.widget.Toolbar: java.lang.CharSequence mSubtitleText>;

        return r1;
    }

    public java.lang.CharSequence getTitle()
    {
        androidx.appcompat.widget.Toolbar $r0;
        java.lang.CharSequence r1;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        r1 = $r0.<androidx.appcompat.widget.Toolbar: java.lang.CharSequence mTitleText>;

        return r1;
    }

    public int getTitleMarginBottom()
    {
        androidx.appcompat.widget.Toolbar $r0;
        int i0;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        i0 = $r0.<androidx.appcompat.widget.Toolbar: int mTitleMarginBottom>;

        return i0;
    }

    public int getTitleMarginEnd()
    {
        androidx.appcompat.widget.Toolbar $r0;
        int i0;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        i0 = $r0.<androidx.appcompat.widget.Toolbar: int mTitleMarginEnd>;

        return i0;
    }

    public int getTitleMarginStart()
    {
        androidx.appcompat.widget.Toolbar $r0;
        int i0;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        i0 = $r0.<androidx.appcompat.widget.Toolbar: int mTitleMarginStart>;

        return i0;
    }

    public int getTitleMarginTop()
    {
        androidx.appcompat.widget.Toolbar $r0;
        int i0;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        i0 = $r0.<androidx.appcompat.widget.Toolbar: int mTitleMarginTop>;

        return i0;
    }

    public androidx.appcompat.widget.DecorToolbar getWrapper()
    {
        androidx.appcompat.widget.Toolbar $r0;
        androidx.appcompat.widget.ToolbarWidgetWrapper $r1;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 = $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ToolbarWidgetWrapper mWrapper>;

        if $r1 != null goto label1;

        $r1 = new androidx.appcompat.widget.ToolbarWidgetWrapper;

        specialinvoke $r1.<androidx.appcompat.widget.ToolbarWidgetWrapper: void <init>(androidx.appcompat.widget.Toolbar,boolean)>($r0, 1);

        $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ToolbarWidgetWrapper mWrapper> = $r1;

     label1:
        $r1 = $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ToolbarWidgetWrapper mWrapper>;

        return $r1;
    }

    public boolean hasExpandedActionView()
    {
        androidx.appcompat.widget.Toolbar $r0;
        androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter $r1;
        androidx.appcompat.view.menu.MenuItemImpl $r2;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 = $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter>;

        if $r1 == null goto label1;

        $r2 = $r1.<androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter: androidx.appcompat.view.menu.MenuItemImpl mCurrentExpandedItem>;

        if $r2 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean hideOverflowMenu()
    {
        androidx.appcompat.widget.Toolbar $r0;
        boolean $z0;
        androidx.appcompat.widget.ActionMenuView $r1;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 = $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.<androidx.appcompat.widget.ActionMenuView: boolean hideOverflowMenu()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void inflateMenu(int)
    {
        androidx.appcompat.widget.Toolbar $r0;
        int $i0;
        android.view.MenuInflater $r1;
        android.view.Menu $r2;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $i0 := @parameter0: int;

        $r1 = specialinvoke $r0.<androidx.appcompat.widget.Toolbar: android.view.MenuInflater getMenuInflater()>();

        $r2 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: android.view.Menu getMenu()>();

        virtualinvoke $r1.<android.view.MenuInflater: void inflate(int,android.view.Menu)>($i0, $r2);

        return;
    }

    public boolean isOverflowMenuShowPending()
    {
        androidx.appcompat.widget.Toolbar $r0;
        boolean $z0;
        androidx.appcompat.widget.ActionMenuView $r1;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 = $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.<androidx.appcompat.widget.ActionMenuView: boolean isOverflowMenuShowPending()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isOverflowMenuShowing()
    {
        androidx.appcompat.widget.Toolbar $r0;
        boolean $z0;
        androidx.appcompat.widget.ActionMenuView $r1;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 = $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.<androidx.appcompat.widget.ActionMenuView: boolean isOverflowMenuShowing()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isTitleTruncated()
    {
        androidx.appcompat.widget.Toolbar $r0;
        android.widget.TextView $r1;
        android.text.Layout $r2;
        int $i0, $i1, $i2;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = virtualinvoke $r1.<android.widget.TextView: android.text.Layout getLayout()>();

        if $r2 != null goto label2;

        return 0;

     label2:
        $i0 = virtualinvoke $r2.<android.text.Layout: int getLineCount()>();

        $i1 = 0;

     label3:
        if $i1 >= $i0 goto label5;

        $i2 = virtualinvoke $r2.<android.text.Layout: int getEllipsisCount(int)>($i1);

        if $i2 <= 0 goto label4;

        return 1;

     label4:
        $i1 = $i1 + 1;

        goto label3;

     label5:
        return 0;
    }

    protected void onDetachedFromWindow()
    {
        androidx.appcompat.widget.Toolbar $r0;
        java.lang.Runnable $r1;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        specialinvoke $r0.<android.view.ViewGroup: void onDetachedFromWindow()>();

        $r1 = $r0.<androidx.appcompat.widget.Toolbar: java.lang.Runnable mShowOverflowMenuRunnable>;

        virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: boolean removeCallbacks(java.lang.Runnable)>($r1);

        return;
    }

    public boolean onHoverEvent(android.view.MotionEvent)
    {
        androidx.appcompat.widget.Toolbar $r0;
        android.view.MotionEvent $r1;
        int $i0;
        boolean $z0;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 := @parameter0: android.view.MotionEvent;

        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getActionMasked()>();

        if $i0 != 9 goto label1;

        $r0.<androidx.appcompat.widget.Toolbar: boolean mEatingHover> = 0;

     label1:
        $z0 = $r0.<androidx.appcompat.widget.Toolbar: boolean mEatingHover>;

        if $z0 != 0 goto label2;

        $z0 = specialinvoke $r0.<android.view.ViewGroup: boolean onHoverEvent(android.view.MotionEvent)>($r1);

        if $i0 != 9 goto label2;

        if $z0 != 0 goto label2;

        $r0.<androidx.appcompat.widget.Toolbar: boolean mEatingHover> = 1;

     label2:
        if $i0 == 10 goto label3;

        if $i0 != 3 goto label4;

     label3:
        $r0.<androidx.appcompat.widget.Toolbar: boolean mEatingHover> = 0;

     label4:
        return 1;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        androidx.appcompat.widget.Toolbar $r0;
        boolean $z0, $z1, $z2, $z3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        int[] $r1;
        android.widget.ImageButton $r2;
        androidx.appcompat.widget.ActionMenuView $r3;
        android.view.View $r4;
        android.widget.ImageView $r5;
        android.widget.TextView $r6, $r9;
        android.view.ViewGroup$LayoutParams $r7;
        androidx.appcompat.widget.Toolbar$LayoutParams $r8, $r10;
        java.util.ArrayList $r11;
        java.lang.Object $r12;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $i0 = staticinvoke <androidx.core.view.ViewCompat: int getLayoutDirection(android.view.View)>($r0);

        if $i0 != 1 goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        $i4 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: int getWidth()>();

        $i5 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: int getHeight()>();

        $i2 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: int getPaddingLeft()>();

        $i6 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: int getPaddingRight()>();

        $i7 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: int getPaddingTop()>();

        $i8 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: int getPaddingBottom()>();

        $i9 = $i2;

        $i0 = $i4 - $i6;

        $r1 = $r0.<androidx.appcompat.widget.Toolbar: int[] mTempMargins>;

        $r1[1] = 0;

        $r1[0] = 0;

        $i10 = staticinvoke <androidx.core.view.ViewCompat: int getMinimumHeight(android.view.View)>($r0);

        if $i10 < 0 goto label03;

        $i1 = $i3 - $i1;

        $i10 = staticinvoke <java.lang.Math: int min(int,int)>($i10, $i1);

        goto label04;

     label03:
        $i10 = 0;

     label04:
        $r2 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        $z1 = specialinvoke $r0.<androidx.appcompat.widget.Toolbar: boolean shouldLayout(android.view.View)>($r2);

        if $z1 == 0 goto label06;

        if $z0 == 0 goto label05;

        $r2 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        $i0 = specialinvoke $r0.<androidx.appcompat.widget.Toolbar: int layoutChildRight(android.view.View,int,int[],int)>($r2, $i0, $r1, $i10);

        goto label06;

     label05:
        $r2 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        $i9 = specialinvoke $r0.<androidx.appcompat.widget.Toolbar: int layoutChildLeft(android.view.View,int,int[],int)>($r2, $i2, $r1, $i10);

     label06:
        $r2 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        $z1 = specialinvoke $r0.<androidx.appcompat.widget.Toolbar: boolean shouldLayout(android.view.View)>($r2);

        if $z1 == 0 goto label08;

        if $z0 == 0 goto label07;

        $r2 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        $i0 = specialinvoke $r0.<androidx.appcompat.widget.Toolbar: int layoutChildRight(android.view.View,int,int[],int)>($r2, $i0, $r1, $i10);

        goto label08;

     label07:
        $r2 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        $i9 = specialinvoke $r0.<androidx.appcompat.widget.Toolbar: int layoutChildLeft(android.view.View,int,int[],int)>($r2, $i9, $r1, $i10);

     label08:
        $r3 = $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        $z1 = specialinvoke $r0.<androidx.appcompat.widget.Toolbar: boolean shouldLayout(android.view.View)>($r3);

        if $z1 == 0 goto label10;

        if $z0 == 0 goto label09;

        $r3 = $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        $i9 = specialinvoke $r0.<androidx.appcompat.widget.Toolbar: int layoutChildLeft(android.view.View,int,int[],int)>($r3, $i9, $r1, $i10);

        goto label10;

     label09:
        $r3 = $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        $i0 = specialinvoke $r0.<androidx.appcompat.widget.Toolbar: int layoutChildRight(android.view.View,int,int[],int)>($r3, $i0, $r1, $i10);

     label10:
        $i3 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: int getCurrentContentInsetLeft()>();

        $i1 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: int getCurrentContentInsetRight()>();

        $i11 = $i3 - $i9;

        $i11 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i11);

        $r1[0] = $i11;

        $i11 = $i4 - $i6;

        $i11 = $i11 - $i0;

        $i11 = $i1 - $i11;

        $i11 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i11);

        $r1[1] = $i11;

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>($i9, $i3);

        $i9 = $i3;

        $i11 = $i4 - $i6;

        $i1 = $i11 - $i1;

        $i1 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        $i0 = $i1;

        $r4 = $r0.<androidx.appcompat.widget.Toolbar: android.view.View mExpandedActionView>;

        $z1 = specialinvoke $r0.<androidx.appcompat.widget.Toolbar: boolean shouldLayout(android.view.View)>($r4);

        if $z1 == 0 goto label12;

        if $z0 == 0 goto label11;

        $r4 = $r0.<androidx.appcompat.widget.Toolbar: android.view.View mExpandedActionView>;

        $i0 = specialinvoke $r0.<androidx.appcompat.widget.Toolbar: int layoutChildRight(android.view.View,int,int[],int)>($r4, $i1, $r1, $i10);

        goto label12;

     label11:
        $r4 = $r0.<androidx.appcompat.widget.Toolbar: android.view.View mExpandedActionView>;

        $i9 = specialinvoke $r0.<androidx.appcompat.widget.Toolbar: int layoutChildLeft(android.view.View,int,int[],int)>($r4, $i3, $r1, $i10);

     label12:
        $r5 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageView mLogoView>;

        $z1 = specialinvoke $r0.<androidx.appcompat.widget.Toolbar: boolean shouldLayout(android.view.View)>($r5);

        if $z1 == 0 goto label14;

        if $z0 == 0 goto label13;

        $r5 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageView mLogoView>;

        $i0 = specialinvoke $r0.<androidx.appcompat.widget.Toolbar: int layoutChildRight(android.view.View,int,int[],int)>($r5, $i0, $r1, $i10);

        goto label14;

     label13:
        $r5 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageView mLogoView>;

        $i9 = specialinvoke $r0.<androidx.appcompat.widget.Toolbar: int layoutChildLeft(android.view.View,int,int[],int)>($r5, $i9, $r1, $i10);

     label14:
        $r6 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $z1 = specialinvoke $r0.<androidx.appcompat.widget.Toolbar: boolean shouldLayout(android.view.View)>($r6);

        $r6 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $z2 = specialinvoke $r0.<androidx.appcompat.widget.Toolbar: boolean shouldLayout(android.view.View)>($r6);

        $i11 = 0;

        if $z1 == 0 goto label15;

        $r6 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $r7 = virtualinvoke $r6.<android.widget.TextView: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r8 = (androidx.appcompat.widget.Toolbar$LayoutParams) $r7;

        $i3 = $r8.<androidx.appcompat.widget.Toolbar$LayoutParams: int topMargin>;

        $i1 = $i6;

        $r6 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $i6 = virtualinvoke $r6.<android.widget.TextView: int getMeasuredHeight()>();

        $i3 = $i3 + $i6;

        $i6 = $r8.<androidx.appcompat.widget.Toolbar$LayoutParams: int bottomMargin>;

        $i3 = $i3 + $i6;

        $i11 = $i3;

        goto label16;

     label15:
        $i1 = $i6;

     label16:
        if $z2 == 0 goto label17;

        $r6 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $r7 = virtualinvoke $r6.<android.widget.TextView: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r8 = (androidx.appcompat.widget.Toolbar$LayoutParams) $r7;

        $i3 = $r8.<androidx.appcompat.widget.Toolbar$LayoutParams: int topMargin>;

        $r6 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $i6 = virtualinvoke $r6.<android.widget.TextView: int getMeasuredHeight()>();

        $i3 = $i3 + $i6;

        $i6 = $r8.<androidx.appcompat.widget.Toolbar$LayoutParams: int bottomMargin>;

        $i3 = $i3 + $i6;

        $i11 = $i11 + $i3;

     label17:
        if $z1 != 0 goto label19;

        if $z2 == 0 goto label18;

        goto label19;

     label18:
        $i3 = $i4;

        goto label44;

     label19:
        if $z1 == 0 goto label20;

        $r6 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        goto label21;

     label20:
        $r6 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

     label21:
        if $z2 == 0 goto label22;

        $r9 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        goto label23;

     label22:
        $r9 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

     label23:
        $r7 = virtualinvoke $r6.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r8 = (androidx.appcompat.widget.Toolbar$LayoutParams) $r7;

        $r7 = virtualinvoke $r9.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r10 = (androidx.appcompat.widget.Toolbar$LayoutParams) $r7;

        if $z1 == 0 goto label24;

        $r6 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $i3 = virtualinvoke $r6.<android.widget.TextView: int getMeasuredWidth()>();

        if $i3 > 0 goto label25;

        goto label24;

     label24:
        if $z2 == 0 goto label26;

        $r6 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $i3 = virtualinvoke $r6.<android.widget.TextView: int getMeasuredWidth()>();

        if $i3 <= 0 goto label26;

     label25:
        $z3 = 1;

        goto label27;

     label26:
        $z3 = 0;

     label27:
        $i3 = $i4;

        $i4 = $r0.<androidx.appcompat.widget.Toolbar: int mGravity>;

        $i4 = $i4 & 112;

        if $i4 == 48 goto label31;

        if $i4 == 80 goto label30;

        $i4 = $i5 - $i7;

        $i4 = $i4 - $i8;

        $i4 = $i4 - $i11;

        $i4 = $i4 / 2;

        $i6 = $r8.<androidx.appcompat.widget.Toolbar$LayoutParams: int topMargin>;

        $i12 = $r0.<androidx.appcompat.widget.Toolbar: int mTitleMarginTop>;

        $i6 = $i6 + $i12;

        if $i4 >= $i6 goto label28;

        $i5 = $r8.<androidx.appcompat.widget.Toolbar$LayoutParams: int topMargin>;

        $i8 = $r0.<androidx.appcompat.widget.Toolbar: int mTitleMarginTop>;

        $i4 = $i5 + $i8;

        goto label29;

     label28:
        $i5 = $i5 - $i8;

        $i5 = $i5 - $i11;

        $i5 = $i5 - $i4;

        $i5 = $i5 - $i7;

        $i8 = $r8.<androidx.appcompat.widget.Toolbar$LayoutParams: int bottomMargin>;

        $i6 = $r0.<androidx.appcompat.widget.Toolbar: int mTitleMarginBottom>;

        $i8 = $i8 + $i6;

        if $i5 >= $i8 goto label29;

        $i8 = $r10.<androidx.appcompat.widget.Toolbar$LayoutParams: int bottomMargin>;

        $i6 = $r0.<androidx.appcompat.widget.Toolbar: int mTitleMarginBottom>;

        $i8 = $i8 + $i6;

        $i5 = $i8 - $i5;

        $i5 = $i4 - $i5;

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i5);

        goto label29;

     label29:
        $i7 = $i7 + $i4;

        goto label32;

     label30:
        $i7 = $i5 - $i8;

        $i5 = $r10.<androidx.appcompat.widget.Toolbar$LayoutParams: int bottomMargin>;

        $i7 = $i7 - $i5;

        $i5 = $r0.<androidx.appcompat.widget.Toolbar: int mTitleMarginBottom>;

        $i7 = $i7 - $i5;

        $i7 = $i7 - $i11;

        goto label32;

     label31:
        $i7 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: int getPaddingTop()>();

        $i5 = $r8.<androidx.appcompat.widget.Toolbar$LayoutParams: int topMargin>;

        $i7 = $i7 + $i5;

        $i5 = $r0.<androidx.appcompat.widget.Toolbar: int mTitleMarginTop>;

        $i7 = $i7 + $i5;

     label32:
        if $z0 == 0 goto label38;

        if $z3 == 0 goto label33;

        $i5 = $r0.<androidx.appcompat.widget.Toolbar: int mTitleMarginStart>;

        goto label34;

     label33:
        $i5 = 0;

     label34:
        $i8 = $r1[1];

        $i5 = $i5 - $i8;

        $i8 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i5);

        $i0 = $i0 - $i8;

        $i5 = neg $i5;

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i5);

        $r1[1] = $i5;

        $i8 = $i0;

        $i5 = $i0;

        if $z1 == 0 goto label35;

        $r6 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $r7 = virtualinvoke $r6.<android.widget.TextView: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r8 = (androidx.appcompat.widget.Toolbar$LayoutParams) $r7;

        $r6 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $i8 = virtualinvoke $r6.<android.widget.TextView: int getMeasuredWidth()>();

        $i8 = $i0 - $i8;

        $r6 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $i4 = virtualinvoke $r6.<android.widget.TextView: int getMeasuredHeight()>();

        $i4 = $i4 + $i7;

        $r6 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        virtualinvoke $r6.<android.widget.TextView: void layout(int,int,int,int)>($i8, $i7, $i0, $i4);

        $i7 = $r0.<androidx.appcompat.widget.Toolbar: int mTitleMarginEnd>;

        $i8 = $i8 - $i7;

        $i7 = $r8.<androidx.appcompat.widget.Toolbar$LayoutParams: int bottomMargin>;

        $i7 = $i4 + $i7;

        goto label35;

     label35:
        if $z2 == 0 goto label36;

        $r6 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $r7 = virtualinvoke $r6.<android.widget.TextView: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r8 = (androidx.appcompat.widget.Toolbar$LayoutParams) $r7;

        $i4 = $r8.<androidx.appcompat.widget.Toolbar$LayoutParams: int topMargin>;

        $i7 = $i7 + $i4;

        $r6 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $i4 = virtualinvoke $r6.<android.widget.TextView: int getMeasuredWidth()>();

        $i4 = $i5 - $i4;

        $r6 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $i6 = virtualinvoke $r6.<android.widget.TextView: int getMeasuredHeight()>();

        $i6 = $i6 + $i7;

        $r6 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        virtualinvoke $r6.<android.widget.TextView: void layout(int,int,int,int)>($i4, $i7, $i5, $i6);

        $i7 = $r0.<androidx.appcompat.widget.Toolbar: int mTitleMarginEnd>;

        $i5 = $i5 - $i7;

        $i7 = $r8.<androidx.appcompat.widget.Toolbar$LayoutParams: int bottomMargin>;

     label36:
        if $z3 == 0 goto label37;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i8, $i5);

     label37:
        goto label44;

     label38:
        if $z3 == 0 goto label39;

        $i5 = $r0.<androidx.appcompat.widget.Toolbar: int mTitleMarginStart>;

        goto label40;

     label39:
        $i5 = 0;

     label40:
        $i8 = $r1[0];

        $i8 = $i5 - $i8;

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i8);

        $i5 = $i9 + $i5;

        $i9 = neg $i8;

        $i9 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i9);

        $r1[0] = $i9;

        $i8 = $i5;

        $i4 = $i5;

        if $z1 == 0 goto label41;

        $r6 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $r7 = virtualinvoke $r6.<android.widget.TextView: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r8 = (androidx.appcompat.widget.Toolbar$LayoutParams) $r7;

        $r6 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $i9 = virtualinvoke $r6.<android.widget.TextView: int getMeasuredWidth()>();

        $i8 = $i9 + $i5;

        $r6 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $i9 = virtualinvoke $r6.<android.widget.TextView: int getMeasuredHeight()>();

        $i6 = $i9 + $i7;

        $i9 = $i5;

        $r6 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        virtualinvoke $r6.<android.widget.TextView: void layout(int,int,int,int)>($i5, $i7, $i8, $i6);

        $i7 = $r0.<androidx.appcompat.widget.Toolbar: int mTitleMarginEnd>;

        $i8 = $i8 + $i7;

        $i7 = $r8.<androidx.appcompat.widget.Toolbar$LayoutParams: int bottomMargin>;

        $i7 = $i6 + $i7;

        goto label42;

     label41:
        $i9 = $i5;

     label42:
        if $z2 == 0 goto label43;

        $r6 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $r7 = virtualinvoke $r6.<android.widget.TextView: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r8 = (androidx.appcompat.widget.Toolbar$LayoutParams) $r7;

        $i4 = $r8.<androidx.appcompat.widget.Toolbar$LayoutParams: int topMargin>;

        $i7 = $i7 + $i4;

        $r6 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $i4 = virtualinvoke $r6.<android.widget.TextView: int getMeasuredWidth()>();

        $i4 = $i4 + $i5;

        $r6 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $i6 = virtualinvoke $r6.<android.widget.TextView: int getMeasuredHeight()>();

        $i6 = $i6 + $i7;

        $r6 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        virtualinvoke $r6.<android.widget.TextView: void layout(int,int,int,int)>($i5, $i7, $i4, $i6);

        $i7 = $r0.<androidx.appcompat.widget.Toolbar: int mTitleMarginEnd>;

        $i4 = $i4 + $i7;

        $i7 = $r8.<androidx.appcompat.widget.Toolbar$LayoutParams: int bottomMargin>;

     label43:
        if $z3 == 0 goto label44;

        $i9 = staticinvoke <java.lang.Math: int max(int,int)>($i8, $i4);

     label44:
        $r11 = $r0.<androidx.appcompat.widget.Toolbar: java.util.ArrayList mTempViews>;

        specialinvoke $r0.<androidx.appcompat.widget.Toolbar: void addCustomViewsWithGravity(java.util.List,int)>($r11, 3);

        $r11 = $r0.<androidx.appcompat.widget.Toolbar: java.util.ArrayList mTempViews>;

        $i5 = virtualinvoke $r11.<java.util.ArrayList: int size()>();

        $i8 = 0;

        $i7 = $i9;

     label45:
        if $i8 >= $i5 goto label46;

        $r11 = $r0.<androidx.appcompat.widget.Toolbar: java.util.ArrayList mTempViews>;

        $r12 = virtualinvoke $r11.<java.util.ArrayList: java.lang.Object get(int)>($i8);

        $r4 = (android.view.View) $r12;

        $i7 = specialinvoke $r0.<androidx.appcompat.widget.Toolbar: int layoutChildLeft(android.view.View,int,int[],int)>($r4, $i7, $r1, $i10);

        $i8 = $i8 + 1;

        goto label45;

     label46:
        $r11 = $r0.<androidx.appcompat.widget.Toolbar: java.util.ArrayList mTempViews>;

        specialinvoke $r0.<androidx.appcompat.widget.Toolbar: void addCustomViewsWithGravity(java.util.List,int)>($r11, 5);

        $r11 = $r0.<androidx.appcompat.widget.Toolbar: java.util.ArrayList mTempViews>;

        $i9 = virtualinvoke $r11.<java.util.ArrayList: int size()>();

        $i5 = 0;

     label47:
        if $i5 >= $i9 goto label48;

        $r11 = $r0.<androidx.appcompat.widget.Toolbar: java.util.ArrayList mTempViews>;

        $r12 = virtualinvoke $r11.<java.util.ArrayList: java.lang.Object get(int)>($i5);

        $r4 = (android.view.View) $r12;

        $i0 = specialinvoke $r0.<androidx.appcompat.widget.Toolbar: int layoutChildRight(android.view.View,int,int[],int)>($r4, $i0, $r1, $i10);

        $i5 = $i5 + 1;

        goto label47;

     label48:
        $r11 = $r0.<androidx.appcompat.widget.Toolbar: java.util.ArrayList mTempViews>;

        specialinvoke $r0.<androidx.appcompat.widget.Toolbar: void addCustomViewsWithGravity(java.util.List,int)>($r11, 1);

        $r11 = $r0.<androidx.appcompat.widget.Toolbar: java.util.ArrayList mTempViews>;

        $i9 = specialinvoke $r0.<androidx.appcompat.widget.Toolbar: int getViewListMeasuredWidth(java.util.List,int[])>($r11, $r1);

        $i3 = $i3 - $i2;

        $i1 = $i3 - $i1;

        $i1 = $i1 / 2;

        $i1 = $i2 + $i1;

        $i2 = $i9 / 2;

        $i1 = $i1 - $i2;

        $i2 = $i1 + $i9;

        if $i1 >= $i7 goto label49;

        $i1 = $i7;

        goto label50;

     label49:
        if $i2 <= $i0 goto label50;

        $i0 = $i2 - $i0;

        $i1 = $i1 - $i0;

     label50:
        $r11 = $r0.<androidx.appcompat.widget.Toolbar: java.util.ArrayList mTempViews>;

        $i0 = virtualinvoke $r11.<java.util.ArrayList: int size()>();

        $i2 = $i1;

        $i1 = 0;

     label51:
        if $i1 >= $i0 goto label52;

        $r11 = $r0.<androidx.appcompat.widget.Toolbar: java.util.ArrayList mTempViews>;

        $r12 = virtualinvoke $r11.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r4 = (android.view.View) $r12;

        $i2 = specialinvoke $r0.<androidx.appcompat.widget.Toolbar: int layoutChildLeft(android.view.View,int,int[],int)>($r4, $i2, $r1, $i10);

        $i1 = $i1 + 1;

        goto label51;

     label52:
        $r11 = $r0.<androidx.appcompat.widget.Toolbar: java.util.ArrayList mTempViews>;

        virtualinvoke $r11.<java.util.ArrayList: void clear()>();

        return;
    }

    protected void onMeasure(int, int)
    {
        androidx.appcompat.widget.Toolbar $r0;
        int $i0, $i1, $i2, $i3, $i4, $i7, $i8, $i9, $i10, $i11;
        int[] $r1;
        boolean $z0;
        byte $b5, $b6;
        android.widget.ImageButton $r2;
        androidx.appcompat.widget.ActionMenuView $r3;
        android.view.View $r4;
        android.widget.ImageView $r5;
        android.view.ViewGroup$LayoutParams $r6;
        androidx.appcompat.widget.Toolbar$LayoutParams $r7;
        android.widget.TextView $r8;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i3 = 0;

        $i4 = 0;

        $r1 = $r0.<androidx.appcompat.widget.Toolbar: int[] mTempMargins>;

        $z0 = staticinvoke <androidx.appcompat.widget.ViewUtils: boolean isLayoutRtl(android.view.View)>($r0);

        if $z0 == 0 goto label01;

        $b5 = 1;

        $b6 = 0;

        goto label02;

     label01:
        $b5 = 0;

        $b6 = 1;

     label02:
        $i7 = 0;

        $r2 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        $z0 = specialinvoke $r0.<androidx.appcompat.widget.Toolbar: boolean shouldLayout(android.view.View)>($r2);

        if $z0 == 0 goto label03;

        $r2 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        $i3 = $r0.<androidx.appcompat.widget.Toolbar: int mMaxButtonHeight>;

        specialinvoke $r0.<androidx.appcompat.widget.Toolbar: void measureChildConstrained(android.view.View,int,int,int,int,int)>($r2, $i0, 0, $i1, 0, $i3);

        $r2 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        $i3 = virtualinvoke $r2.<android.widget.ImageButton: int getMeasuredWidth()>();

        $r2 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        $i4 = specialinvoke $r0.<androidx.appcompat.widget.Toolbar: int getHorizontalMargins(android.view.View)>($r2);

        $i7 = $i3 + $i4;

        $r2 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        $i3 = virtualinvoke $r2.<android.widget.ImageButton: int getMeasuredHeight()>();

        $r2 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        $i4 = specialinvoke $r0.<androidx.appcompat.widget.Toolbar: int getVerticalMargins(android.view.View)>($r2);

        $i3 = $i3 + $i4;

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i3);

        $r2 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        $i4 = virtualinvoke $r2.<android.widget.ImageButton: int getMeasuredState()>();

        $i4 = staticinvoke <android.view.View: int combineMeasuredStates(int,int)>(0, $i4);

     label03:
        $r2 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        $z0 = specialinvoke $r0.<androidx.appcompat.widget.Toolbar: boolean shouldLayout(android.view.View)>($r2);

        if $z0 == 0 goto label04;

        $r2 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        $i8 = $r0.<androidx.appcompat.widget.Toolbar: int mMaxButtonHeight>;

        specialinvoke $r0.<androidx.appcompat.widget.Toolbar: void measureChildConstrained(android.view.View,int,int,int,int,int)>($r2, $i0, 0, $i1, 0, $i8);

        $r2 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        $i8 = virtualinvoke $r2.<android.widget.ImageButton: int getMeasuredWidth()>();

        $r2 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        $i7 = specialinvoke $r0.<androidx.appcompat.widget.Toolbar: int getHorizontalMargins(android.view.View)>($r2);

        $i7 = $i8 + $i7;

        $r2 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        $i8 = virtualinvoke $r2.<android.widget.ImageButton: int getMeasuredHeight()>();

        $r2 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        $i9 = specialinvoke $r0.<androidx.appcompat.widget.Toolbar: int getVerticalMargins(android.view.View)>($r2);

        $i8 = $i8 + $i9;

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>($i3, $i8);

        $r2 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mCollapseButtonView>;

        $i8 = virtualinvoke $r2.<android.widget.ImageButton: int getMeasuredState()>();

        $i4 = staticinvoke <android.view.View: int combineMeasuredStates(int,int)>($i4, $i8);

     label04:
        $i9 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: int getCurrentContentInsetStart()>();

        $i8 = staticinvoke <java.lang.Math: int max(int,int)>($i9, $i7);

        $i7 = $i9 - $i7;

        $i7 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i7);

        $r1[$b5] = $i7;

        $r3 = $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        $z0 = specialinvoke $r0.<androidx.appcompat.widget.Toolbar: boolean shouldLayout(android.view.View)>($r3);

        if $z0 == 0 goto label05;

        $r3 = $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        $i7 = $r0.<androidx.appcompat.widget.Toolbar: int mMaxButtonHeight>;

        specialinvoke $r0.<androidx.appcompat.widget.Toolbar: void measureChildConstrained(android.view.View,int,int,int,int,int)>($r3, $i0, $i8, $i1, 0, $i7);

        $r3 = $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        $i7 = virtualinvoke $r3.<androidx.appcompat.widget.ActionMenuView: int getMeasuredWidth()>();

        $r3 = $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        $i9 = specialinvoke $r0.<androidx.appcompat.widget.Toolbar: int getHorizontalMargins(android.view.View)>($r3);

        $i9 = $i7 + $i9;

        $r3 = $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        $i7 = virtualinvoke $r3.<androidx.appcompat.widget.ActionMenuView: int getMeasuredHeight()>();

        $r3 = $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        $i10 = specialinvoke $r0.<androidx.appcompat.widget.Toolbar: int getVerticalMargins(android.view.View)>($r3);

        $i7 = $i7 + $i10;

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>($i3, $i7);

        $r3 = $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        $i7 = virtualinvoke $r3.<androidx.appcompat.widget.ActionMenuView: int getMeasuredState()>();

        $i7 = staticinvoke <android.view.View: int combineMeasuredStates(int,int)>($i4, $i7);

        $i4 = $i3;

        $i3 = $i9;

        goto label06;

     label05:
        $i7 = $i4;

        $i4 = $i3;

        $i3 = 0;

     label06:
        $i9 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: int getCurrentContentInsetEnd()>();

        $i10 = staticinvoke <java.lang.Math: int max(int,int)>($i9, $i3);

        $i8 = $i8 + $i10;

        $i3 = $i9 - $i3;

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i3);

        $r1[$b6] = $i3;

        $r4 = $r0.<androidx.appcompat.widget.Toolbar: android.view.View mExpandedActionView>;

        $z0 = specialinvoke $r0.<androidx.appcompat.widget.Toolbar: boolean shouldLayout(android.view.View)>($r4);

        if $z0 == 0 goto label07;

        $r4 = $r0.<androidx.appcompat.widget.Toolbar: android.view.View mExpandedActionView>;

        $i3 = specialinvoke $r0.<androidx.appcompat.widget.Toolbar: int measureChildCollapseMargins(android.view.View,int,int,int,int,int[])>($r4, $i0, $i8, $i1, 0, $r1);

        $i8 = $i8 + $i3;

        $r4 = $r0.<androidx.appcompat.widget.Toolbar: android.view.View mExpandedActionView>;

        $i3 = virtualinvoke $r4.<android.view.View: int getMeasuredHeight()>();

        $r4 = $r0.<androidx.appcompat.widget.Toolbar: android.view.View mExpandedActionView>;

        $i9 = specialinvoke $r0.<androidx.appcompat.widget.Toolbar: int getVerticalMargins(android.view.View)>($r4);

        $i3 = $i3 + $i9;

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>($i4, $i3);

        $r4 = $r0.<androidx.appcompat.widget.Toolbar: android.view.View mExpandedActionView>;

        $i3 = virtualinvoke $r4.<android.view.View: int getMeasuredState()>();

        $i3 = staticinvoke <android.view.View: int combineMeasuredStates(int,int)>($i7, $i3);

        goto label08;

     label07:
        $i3 = $i7;

     label08:
        $r5 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageView mLogoView>;

        $z0 = specialinvoke $r0.<androidx.appcompat.widget.Toolbar: boolean shouldLayout(android.view.View)>($r5);

        if $z0 == 0 goto label09;

        $r5 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageView mLogoView>;

        $i7 = specialinvoke $r0.<androidx.appcompat.widget.Toolbar: int measureChildCollapseMargins(android.view.View,int,int,int,int,int[])>($r5, $i0, $i8, $i1, 0, $r1);

        $i8 = $i8 + $i7;

        $r5 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageView mLogoView>;

        $i7 = virtualinvoke $r5.<android.widget.ImageView: int getMeasuredHeight()>();

        $r5 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageView mLogoView>;

        $i9 = specialinvoke $r0.<androidx.appcompat.widget.Toolbar: int getVerticalMargins(android.view.View)>($r5);

        $i7 = $i7 + $i9;

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>($i4, $i7);

        $r5 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageView mLogoView>;

        $i7 = virtualinvoke $r5.<android.widget.ImageView: int getMeasuredState()>();

        $i3 = staticinvoke <android.view.View: int combineMeasuredStates(int,int)>($i3, $i7);

     label09:
        $i9 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: int getChildCount()>();

        $i7 = $i4;

        $i4 = $i8;

        $i8 = 0;

     label10:
        if $i8 >= $i9 goto label13;

        $r4 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: android.view.View getChildAt(int)>($i8);

        $r6 = virtualinvoke $r4.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r7 = (androidx.appcompat.widget.Toolbar$LayoutParams) $r6;

        $i10 = $r7.<androidx.appcompat.widget.Toolbar$LayoutParams: int mViewType>;

        if $i10 != 0 goto label12;

        $z0 = specialinvoke $r0.<androidx.appcompat.widget.Toolbar: boolean shouldLayout(android.view.View)>($r4);

        if $z0 != 0 goto label11;

        goto label12;

     label11:
        $i10 = specialinvoke $r0.<androidx.appcompat.widget.Toolbar: int measureChildCollapseMargins(android.view.View,int,int,int,int,int[])>($r4, $i0, $i4, $i1, 0, $r1);

        $i4 = $i4 + $i10;

        $i10 = virtualinvoke $r4.<android.view.View: int getMeasuredHeight()>();

        $i2 = specialinvoke $r0.<androidx.appcompat.widget.Toolbar: int getVerticalMargins(android.view.View)>($r4);

        $i10 = $i10 + $i2;

        $i7 = staticinvoke <java.lang.Math: int max(int,int)>($i7, $i10);

        $i10 = virtualinvoke $r4.<android.view.View: int getMeasuredState()>();

        $i3 = staticinvoke <android.view.View: int combineMeasuredStates(int,int)>($i3, $i10);

        goto label12;

     label12:
        $i8 = $i8 + 1;

        goto label10;

     label13:
        $i8 = $i7;

        $i7 = 0;

        $i9 = 0;

        $i10 = $r0.<androidx.appcompat.widget.Toolbar: int mTitleMarginTop>;

        $i2 = $r0.<androidx.appcompat.widget.Toolbar: int mTitleMarginBottom>;

        $i10 = $i10 + $i2;

        $i2 = $r0.<androidx.appcompat.widget.Toolbar: int mTitleMarginStart>;

        $i11 = $r0.<androidx.appcompat.widget.Toolbar: int mTitleMarginEnd>;

        $i2 = $i2 + $i11;

        $r8 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $z0 = specialinvoke $r0.<androidx.appcompat.widget.Toolbar: boolean shouldLayout(android.view.View)>($r8);

        if $z0 == 0 goto label14;

        $r8 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $i7 = $i4 + $i2;

        specialinvoke $r0.<androidx.appcompat.widget.Toolbar: int measureChildCollapseMargins(android.view.View,int,int,int,int,int[])>($r8, $i0, $i7, $i1, $i10, $r1);

        $r8 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $i7 = virtualinvoke $r8.<android.widget.TextView: int getMeasuredWidth()>();

        $r8 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $i9 = specialinvoke $r0.<androidx.appcompat.widget.Toolbar: int getHorizontalMargins(android.view.View)>($r8);

        $i7 = $i7 + $i9;

        $r8 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $i9 = virtualinvoke $r8.<android.widget.TextView: int getMeasuredHeight()>();

        $r8 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $i11 = specialinvoke $r0.<androidx.appcompat.widget.Toolbar: int getVerticalMargins(android.view.View)>($r8);

        $i9 = $i9 + $i11;

        $r8 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $i11 = virtualinvoke $r8.<android.widget.TextView: int getMeasuredState()>();

        $i3 = staticinvoke <android.view.View: int combineMeasuredStates(int,int)>($i3, $i11);

     label14:
        $r8 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $z0 = specialinvoke $r0.<androidx.appcompat.widget.Toolbar: boolean shouldLayout(android.view.View)>($r8);

        if $z0 == 0 goto label15;

        $r8 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $i2 = $i4 + $i2;

        $i10 = $i9 + $i10;

        $i10 = specialinvoke $r0.<androidx.appcompat.widget.Toolbar: int measureChildCollapseMargins(android.view.View,int,int,int,int,int[])>($r8, $i0, $i2, $i1, $i10, $r1);

        $i7 = staticinvoke <java.lang.Math: int max(int,int)>($i7, $i10);

        $r8 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $i10 = virtualinvoke $r8.<android.widget.TextView: int getMeasuredHeight()>();

        $r8 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $i2 = specialinvoke $r0.<androidx.appcompat.widget.Toolbar: int getVerticalMargins(android.view.View)>($r8);

        $i10 = $i10 + $i2;

        $i9 = $i9 + $i10;

        $r8 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $i10 = virtualinvoke $r8.<android.widget.TextView: int getMeasuredState()>();

        $i3 = staticinvoke <android.view.View: int combineMeasuredStates(int,int)>($i3, $i10);

        goto label15;

     label15:
        $i7 = $i4 + $i7;

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>($i8, $i9);

        $i8 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: int getPaddingLeft()>();

        $i9 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: int getPaddingRight()>();

        $i8 = $i8 + $i9;

        $i8 = $i7 + $i8;

        $i7 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: int getPaddingTop()>();

        $i9 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: int getPaddingBottom()>();

        $i7 = $i7 + $i9;

        $i4 = $i4 + $i7;

        $i7 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: int getSuggestedMinimumWidth()>();

        $i8 = staticinvoke <java.lang.Math: int max(int,int)>($i8, $i7);

        $i7 = -16777216 & $i3;

        $i0 = staticinvoke <android.view.View: int resolveSizeAndState(int,int,int)>($i8, $i0, $i7);

        $i8 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: int getSuggestedMinimumHeight()>();

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>($i4, $i8);

        $i3 = $i3 << 16;

        $i1 = staticinvoke <android.view.View: int resolveSizeAndState(int,int,int)>($i4, $i1, $i3);

        $z0 = specialinvoke $r0.<androidx.appcompat.widget.Toolbar: boolean shouldCollapse()>();

        if $z0 == 0 goto label16;

        $i1 = 0;

        goto label16;

     label16:
        virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: void setMeasuredDimension(int,int)>($i0, $i1);

        return;
    }

    protected void onRestoreInstanceState(android.os.Parcelable)
    {
        androidx.appcompat.widget.Toolbar $r0;
        android.os.Parcelable $r1;
        boolean $z0;
        androidx.appcompat.widget.Toolbar$SavedState $r2;
        androidx.appcompat.widget.ActionMenuView $r3;
        androidx.appcompat.view.menu.MenuBuilder $r4;
        int $i0;
        androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter $r5;
        android.view.MenuItem $r6;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 := @parameter0: android.os.Parcelable;

        $z0 = $r1 instanceof androidx.appcompat.widget.Toolbar$SavedState;

        if $z0 != 0 goto label1;

        specialinvoke $r0.<android.view.ViewGroup: void onRestoreInstanceState(android.os.Parcelable)>($r1);

        return;

     label1:
        $r2 = (androidx.appcompat.widget.Toolbar$SavedState) $r1;

        $r1 = virtualinvoke $r2.<androidx.appcompat.widget.Toolbar$SavedState: android.os.Parcelable getSuperState()>();

        specialinvoke $r0.<android.view.ViewGroup: void onRestoreInstanceState(android.os.Parcelable)>($r1);

        $r3 = $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        if $r3 == null goto label2;

        $r4 = virtualinvoke $r3.<androidx.appcompat.widget.ActionMenuView: androidx.appcompat.view.menu.MenuBuilder peekMenu()>();

        goto label3;

     label2:
        $r4 = null;

     label3:
        $i0 = $r2.<androidx.appcompat.widget.Toolbar$SavedState: int expandedMenuItemId>;

        if $i0 == 0 goto label4;

        $r5 = $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter>;

        if $r5 == null goto label4;

        if $r4 == null goto label4;

        $i0 = $r2.<androidx.appcompat.widget.Toolbar$SavedState: int expandedMenuItemId>;

        $r6 = interfaceinvoke $r4.<android.view.Menu: android.view.MenuItem findItem(int)>($i0);

        if $r6 == null goto label4;

        interfaceinvoke $r6.<android.view.MenuItem: boolean expandActionView()>();

     label4:
        $z0 = $r2.<androidx.appcompat.widget.Toolbar$SavedState: boolean isOverflowOpen>;

        if $z0 == 0 goto label5;

        specialinvoke $r0.<androidx.appcompat.widget.Toolbar: void postShowOverflowMenu()>();

     label5:
        return;
    }

    public void onRtlPropertiesChanged(int)
    {
        androidx.appcompat.widget.Toolbar $r0;
        int $i0, $i1;
        androidx.appcompat.widget.RtlSpacingHelper $r1;
        boolean $z0;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $i0 := @parameter0: int;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 17 goto label1;

        specialinvoke $r0.<android.view.ViewGroup: void onRtlPropertiesChanged(int)>($i0);

     label1:
        specialinvoke $r0.<androidx.appcompat.widget.Toolbar: void ensureContentInsets()>();

        $r1 = $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.RtlSpacingHelper mContentInsets>;

        $z0 = 1;

        if $i0 != 1 goto label2;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        virtualinvoke $r1.<androidx.appcompat.widget.RtlSpacingHelper: void setDirection(boolean)>($z0);

        return;
    }

    protected android.os.Parcelable onSaveInstanceState()
    {
        androidx.appcompat.widget.Toolbar $r0;
        androidx.appcompat.widget.Toolbar$SavedState $r1;
        android.os.Parcelable $r2;
        androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter $r3;
        androidx.appcompat.view.menu.MenuItemImpl $r4;
        int $i0;
        boolean $z0;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 = new androidx.appcompat.widget.Toolbar$SavedState;

        $r2 = specialinvoke $r0.<android.view.ViewGroup: android.os.Parcelable onSaveInstanceState()>();

        specialinvoke $r1.<androidx.appcompat.widget.Toolbar$SavedState: void <init>(android.os.Parcelable)>($r2);

        $r3 = $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter>;

        if $r3 == null goto label1;

        $r4 = $r3.<androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter: androidx.appcompat.view.menu.MenuItemImpl mCurrentExpandedItem>;

        if $r4 == null goto label1;

        $r3 = $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter>;

        $r4 = $r3.<androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter: androidx.appcompat.view.menu.MenuItemImpl mCurrentExpandedItem>;

        $i0 = virtualinvoke $r4.<androidx.appcompat.view.menu.MenuItemImpl: int getItemId()>();

        $r1.<androidx.appcompat.widget.Toolbar$SavedState: int expandedMenuItemId> = $i0;

     label1:
        $z0 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: boolean isOverflowMenuShowing()>();

        $r1.<androidx.appcompat.widget.Toolbar$SavedState: boolean isOverflowOpen> = $z0;

        return $r1;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        androidx.appcompat.widget.Toolbar $r0;
        android.view.MotionEvent $r1;
        int $i0;
        boolean $z0;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 := @parameter0: android.view.MotionEvent;

        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getActionMasked()>();

        if $i0 != 0 goto label1;

        $r0.<androidx.appcompat.widget.Toolbar: boolean mEatingTouch> = 0;

     label1:
        $z0 = $r0.<androidx.appcompat.widget.Toolbar: boolean mEatingTouch>;

        if $z0 != 0 goto label2;

        $z0 = specialinvoke $r0.<android.view.ViewGroup: boolean onTouchEvent(android.view.MotionEvent)>($r1);

        if $i0 != 0 goto label2;

        if $z0 != 0 goto label2;

        $r0.<androidx.appcompat.widget.Toolbar: boolean mEatingTouch> = 1;

     label2:
        if $i0 == 1 goto label3;

        if $i0 != 3 goto label4;

     label3:
        $r0.<androidx.appcompat.widget.Toolbar: boolean mEatingTouch> = 0;

     label4:
        return 1;
    }

    void removeChildrenForExpandedActionView()
    {
        androidx.appcompat.widget.Toolbar $r0;
        int $i0, $i1;
        android.view.View $r1;
        android.view.ViewGroup$LayoutParams $r2;
        androidx.appcompat.widget.Toolbar$LayoutParams $r3;
        androidx.appcompat.widget.ActionMenuView $r4;
        java.util.ArrayList $r5;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $i0 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: int getChildCount()>();

        $i0 = $i0 + -1;

     label1:
        if $i0 < 0 goto label3;

        $r1 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: android.view.View getChildAt(int)>($i0);

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (androidx.appcompat.widget.Toolbar$LayoutParams) $r2;

        $i1 = $r3.<androidx.appcompat.widget.Toolbar$LayoutParams: int mViewType>;

        if $i1 == 2 goto label2;

        $r4 = $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        if $r1 == $r4 goto label2;

        virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: void removeViewAt(int)>($i0);

        $r5 = $r0.<androidx.appcompat.widget.Toolbar: java.util.ArrayList mHiddenViews>;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

     label2:
        $i0 = $i0 + -1;

        goto label1;

     label3:
        return;
    }

    public void setCollapsible(boolean)
    {
        androidx.appcompat.widget.Toolbar $r0;
        boolean $z0;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $z0 := @parameter0: boolean;

        $r0.<androidx.appcompat.widget.Toolbar: boolean mCollapsible> = $z0;

        virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: void requestLayout()>();

        return;
    }

    public void setContentInsetEndWithActions(int)
    {
        androidx.appcompat.widget.Toolbar $r0;
        android.graphics.drawable.Drawable $r1;
        int $i0, $i1;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $i0 := @parameter0: int;

        if $i0 >= 0 goto label1;

        $i0 = -2147483648;

     label1:
        $i1 = $r0.<androidx.appcompat.widget.Toolbar: int mContentInsetEndWithActions>;

        if $i0 == $i1 goto label2;

        $r0.<androidx.appcompat.widget.Toolbar: int mContentInsetEndWithActions> = $i0;

        $r1 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getNavigationIcon()>();

        if $r1 == null goto label2;

        virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: void requestLayout()>();

     label2:
        return;
    }

    public void setContentInsetStartWithNavigation(int)
    {
        androidx.appcompat.widget.Toolbar $r0;
        android.graphics.drawable.Drawable $r1;
        int $i0, $i1;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $i0 := @parameter0: int;

        if $i0 >= 0 goto label1;

        $i0 = -2147483648;

     label1:
        $i1 = $r0.<androidx.appcompat.widget.Toolbar: int mContentInsetStartWithNavigation>;

        if $i0 == $i1 goto label2;

        $r0.<androidx.appcompat.widget.Toolbar: int mContentInsetStartWithNavigation> = $i0;

        $r1 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getNavigationIcon()>();

        if $r1 == null goto label2;

        virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: void requestLayout()>();

     label2:
        return;
    }

    public void setContentInsetsAbsolute(int, int)
    {
        androidx.appcompat.widget.Toolbar $r0;
        int $i0, $i1;
        androidx.appcompat.widget.RtlSpacingHelper $r1;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        specialinvoke $r0.<androidx.appcompat.widget.Toolbar: void ensureContentInsets()>();

        $r1 = $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.RtlSpacingHelper mContentInsets>;

        virtualinvoke $r1.<androidx.appcompat.widget.RtlSpacingHelper: void setAbsolute(int,int)>($i0, $i1);

        return;
    }

    public void setContentInsetsRelative(int, int)
    {
        androidx.appcompat.widget.Toolbar $r0;
        int $i0, $i1;
        androidx.appcompat.widget.RtlSpacingHelper $r1;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        specialinvoke $r0.<androidx.appcompat.widget.Toolbar: void ensureContentInsets()>();

        $r1 = $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.RtlSpacingHelper mContentInsets>;

        virtualinvoke $r1.<androidx.appcompat.widget.RtlSpacingHelper: void setRelative(int,int)>($i0, $i1);

        return;
    }

    public void setLogo(int)
    {
        androidx.appcompat.widget.Toolbar $r0;
        int $i0;
        android.content.Context $r1;
        android.graphics.drawable.Drawable $r2;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: android.content.Context getContext()>();

        $r2 = staticinvoke <androidx.appcompat.content.res.AppCompatResources: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>($r1, $i0);

        virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: void setLogo(android.graphics.drawable.Drawable)>($r2);

        return;
    }

    public void setLogo(android.graphics.drawable.Drawable)
    {
        androidx.appcompat.widget.Toolbar $r0;
        android.graphics.drawable.Drawable $r1;
        android.widget.ImageView $r2;
        boolean $z0;
        java.util.ArrayList $r3;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        if $r1 == null goto label1;

        specialinvoke $r0.<androidx.appcompat.widget.Toolbar: void ensureLogoView()>();

        $r2 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageView mLogoView>;

        $z0 = specialinvoke $r0.<androidx.appcompat.widget.Toolbar: boolean isChildOrHidden(android.view.View)>($r2);

        if $z0 != 0 goto label2;

        $r2 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageView mLogoView>;

        specialinvoke $r0.<androidx.appcompat.widget.Toolbar: void addSystemView(android.view.View,boolean)>($r2, 1);

        goto label2;

     label1:
        $r2 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageView mLogoView>;

        if $r2 == null goto label2;

        $z0 = specialinvoke $r0.<androidx.appcompat.widget.Toolbar: boolean isChildOrHidden(android.view.View)>($r2);

        if $z0 == 0 goto label2;

        $r2 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageView mLogoView>;

        virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: void removeView(android.view.View)>($r2);

        $r3 = $r0.<androidx.appcompat.widget.Toolbar: java.util.ArrayList mHiddenViews>;

        $r2 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageView mLogoView>;

        virtualinvoke $r3.<java.util.ArrayList: boolean remove(java.lang.Object)>($r2);

     label2:
        $r2 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageView mLogoView>;

        if $r2 == null goto label3;

        virtualinvoke $r2.<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>($r1);

     label3:
        return;
    }

    public void setLogoDescription(int)
    {
        androidx.appcompat.widget.Toolbar $r0;
        int $i0;
        android.content.Context $r1;
        java.lang.CharSequence $r2;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.CharSequence getText(int)>($i0);

        virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: void setLogoDescription(java.lang.CharSequence)>($r2);

        return;
    }

    public void setLogoDescription(java.lang.CharSequence)
    {
        androidx.appcompat.widget.Toolbar $r0;
        java.lang.CharSequence $r1;
        boolean $z0;
        android.widget.ImageView $r2;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 := @parameter0: java.lang.CharSequence;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 != 0 goto label1;

        specialinvoke $r0.<androidx.appcompat.widget.Toolbar: void ensureLogoView()>();

     label1:
        $r2 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageView mLogoView>;

        if $r2 == null goto label2;

        virtualinvoke $r2.<android.widget.ImageView: void setContentDescription(java.lang.CharSequence)>($r1);

     label2:
        return;
    }

    public void setMenu(androidx.appcompat.view.menu.MenuBuilder, androidx.appcompat.widget.ActionMenuPresenter)
    {
        androidx.appcompat.widget.Toolbar $r0;
        androidx.appcompat.view.menu.MenuBuilder $r1, $r4;
        androidx.appcompat.widget.ActionMenuPresenter $r2, $r6;
        android.content.Context $r3;
        androidx.appcompat.widget.ActionMenuView $r5;
        androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter $r7;
        int $i0;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 := @parameter0: androidx.appcompat.view.menu.MenuBuilder;

        $r2 := @parameter1: androidx.appcompat.widget.ActionMenuPresenter;

        if $r1 != null goto label1;

        $r5 = $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        if $r5 != null goto label1;

        return;

     label1:
        specialinvoke $r0.<androidx.appcompat.widget.Toolbar: void ensureMenuView()>();

        $r5 = $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        $r4 = virtualinvoke $r5.<androidx.appcompat.widget.ActionMenuView: androidx.appcompat.view.menu.MenuBuilder peekMenu()>();

        if $r4 != $r1 goto label2;

        return;

     label2:
        if $r4 == null goto label3;

        $r6 = $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuPresenter mOuterActionMenuPresenter>;

        virtualinvoke $r4.<androidx.appcompat.view.menu.MenuBuilder: void removeMenuPresenter(androidx.appcompat.view.menu.MenuPresenter)>($r6);

        $r7 = $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter>;

        virtualinvoke $r4.<androidx.appcompat.view.menu.MenuBuilder: void removeMenuPresenter(androidx.appcompat.view.menu.MenuPresenter)>($r7);

     label3:
        $r7 = $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter>;

        if $r7 != null goto label4;

        $r7 = new androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter;

        specialinvoke $r7.<androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter: void <init>(androidx.appcompat.widget.Toolbar)>($r0);

        $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter> = $r7;

     label4:
        virtualinvoke $r2.<androidx.appcompat.widget.ActionMenuPresenter: void setExpandedActionViewsExclusive(boolean)>(1);

        if $r1 == null goto label5;

        $r3 = $r0.<androidx.appcompat.widget.Toolbar: android.content.Context mPopupContext>;

        virtualinvoke $r1.<androidx.appcompat.view.menu.MenuBuilder: void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter,android.content.Context)>($r2, $r3);

        $r7 = $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter>;

        $r3 = $r0.<androidx.appcompat.widget.Toolbar: android.content.Context mPopupContext>;

        virtualinvoke $r1.<androidx.appcompat.view.menu.MenuBuilder: void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter,android.content.Context)>($r7, $r3);

        goto label6;

     label5:
        $r3 = $r0.<androidx.appcompat.widget.Toolbar: android.content.Context mPopupContext>;

        virtualinvoke $r2.<androidx.appcompat.widget.ActionMenuPresenter: void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder)>($r3, null);

        $r7 = $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter>;

        $r3 = $r0.<androidx.appcompat.widget.Toolbar: android.content.Context mPopupContext>;

        virtualinvoke $r7.<androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter: void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder)>($r3, null);

        virtualinvoke $r2.<androidx.appcompat.widget.ActionMenuPresenter: void updateMenuView(boolean)>(1);

        $r7 = $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter>;

        virtualinvoke $r7.<androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter: void updateMenuView(boolean)>(1);

     label6:
        $r5 = $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        $i0 = $r0.<androidx.appcompat.widget.Toolbar: int mPopupTheme>;

        virtualinvoke $r5.<androidx.appcompat.widget.ActionMenuView: void setPopupTheme(int)>($i0);

        $r5 = $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        virtualinvoke $r5.<androidx.appcompat.widget.ActionMenuView: void setPresenter(androidx.appcompat.widget.ActionMenuPresenter)>($r2);

        $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuPresenter mOuterActionMenuPresenter> = $r2;

        return;
    }

    public void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback, androidx.appcompat.view.menu.MenuBuilder$Callback)
    {
        androidx.appcompat.widget.Toolbar $r0;
        androidx.appcompat.view.menu.MenuPresenter$Callback $r1;
        androidx.appcompat.view.menu.MenuBuilder$Callback $r2;
        androidx.appcompat.widget.ActionMenuView $r3;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 := @parameter0: androidx.appcompat.view.menu.MenuPresenter$Callback;

        $r2 := @parameter1: androidx.appcompat.view.menu.MenuBuilder$Callback;

        $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.view.menu.MenuPresenter$Callback mActionMenuPresenterCallback> = $r1;

        $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.view.menu.MenuBuilder$Callback mMenuBuilderCallback> = $r2;

        $r3 = $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        if $r3 == null goto label1;

        virtualinvoke $r3.<androidx.appcompat.widget.ActionMenuView: void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback)>($r1, $r2);

     label1:
        return;
    }

    public void setNavigationContentDescription(int)
    {
        androidx.appcompat.widget.Toolbar $r0;
        int $i0;
        android.content.Context $r1;
        java.lang.CharSequence $r2;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $i0 := @parameter0: int;

        if $i0 == 0 goto label1;

        $r1 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.CharSequence getText(int)>($i0);

        goto label2;

     label1:
        $r2 = null;

     label2:
        virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(java.lang.CharSequence)>($r2);

        return;
    }

    public void setNavigationContentDescription(java.lang.CharSequence)
    {
        androidx.appcompat.widget.Toolbar $r0;
        java.lang.CharSequence $r1;
        boolean $z0;
        android.widget.ImageButton $r2;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 := @parameter0: java.lang.CharSequence;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 != 0 goto label1;

        specialinvoke $r0.<androidx.appcompat.widget.Toolbar: void ensureNavButtonView()>();

     label1:
        $r2 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        if $r2 == null goto label2;

        virtualinvoke $r2.<android.widget.ImageButton: void setContentDescription(java.lang.CharSequence)>($r1);

     label2:
        return;
    }

    public void setNavigationIcon(int)
    {
        androidx.appcompat.widget.Toolbar $r0;
        int $i0;
        android.content.Context $r1;
        android.graphics.drawable.Drawable $r2;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: android.content.Context getContext()>();

        $r2 = staticinvoke <androidx.appcompat.content.res.AppCompatResources: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>($r1, $i0);

        virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: void setNavigationIcon(android.graphics.drawable.Drawable)>($r2);

        return;
    }

    public void setNavigationIcon(android.graphics.drawable.Drawable)
    {
        androidx.appcompat.widget.Toolbar $r0;
        android.graphics.drawable.Drawable $r1;
        android.widget.ImageButton $r2;
        boolean $z0;
        java.util.ArrayList $r3;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        if $r1 == null goto label1;

        specialinvoke $r0.<androidx.appcompat.widget.Toolbar: void ensureNavButtonView()>();

        $r2 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        $z0 = specialinvoke $r0.<androidx.appcompat.widget.Toolbar: boolean isChildOrHidden(android.view.View)>($r2);

        if $z0 != 0 goto label2;

        $r2 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        specialinvoke $r0.<androidx.appcompat.widget.Toolbar: void addSystemView(android.view.View,boolean)>($r2, 1);

        goto label2;

     label1:
        $r2 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        if $r2 == null goto label2;

        $z0 = specialinvoke $r0.<androidx.appcompat.widget.Toolbar: boolean isChildOrHidden(android.view.View)>($r2);

        if $z0 == 0 goto label2;

        $r2 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: void removeView(android.view.View)>($r2);

        $r3 = $r0.<androidx.appcompat.widget.Toolbar: java.util.ArrayList mHiddenViews>;

        $r2 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        virtualinvoke $r3.<java.util.ArrayList: boolean remove(java.lang.Object)>($r2);

     label2:
        $r2 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        if $r2 == null goto label3;

        virtualinvoke $r2.<android.widget.ImageButton: void setImageDrawable(android.graphics.drawable.Drawable)>($r1);

     label3:
        return;
    }

    public void setNavigationOnClickListener(android.view.View$OnClickListener)
    {
        androidx.appcompat.widget.Toolbar $r0;
        android.view.View$OnClickListener $r1;
        android.widget.ImageButton $r2;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 := @parameter0: android.view.View$OnClickListener;

        specialinvoke $r0.<androidx.appcompat.widget.Toolbar: void ensureNavButtonView()>();

        $r2 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.ImageButton mNavButtonView>;

        virtualinvoke $r2.<android.widget.ImageButton: void setOnClickListener(android.view.View$OnClickListener)>($r1);

        return;
    }

    public void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener)
    {
        androidx.appcompat.widget.Toolbar $r0;
        androidx.appcompat.widget.Toolbar$OnMenuItemClickListener $r1;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 := @parameter0: androidx.appcompat.widget.Toolbar$OnMenuItemClickListener;

        $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$OnMenuItemClickListener mOnMenuItemClickListener> = $r1;

        return;
    }

    public void setOverflowIcon(android.graphics.drawable.Drawable)
    {
        androidx.appcompat.widget.Toolbar $r0;
        android.graphics.drawable.Drawable $r1;
        androidx.appcompat.widget.ActionMenuView $r2;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 := @parameter0: android.graphics.drawable.Drawable;

        specialinvoke $r0.<androidx.appcompat.widget.Toolbar: void ensureMenu()>();

        $r2 = $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        virtualinvoke $r2.<androidx.appcompat.widget.ActionMenuView: void setOverflowIcon(android.graphics.drawable.Drawable)>($r1);

        return;
    }

    public void setPopupTheme(int)
    {
        androidx.appcompat.widget.Toolbar $r0;
        int $i0, $i1;
        android.content.Context $r1;
        android.view.ContextThemeWrapper $r2;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $i0 := @parameter0: int;

        $i1 = $r0.<androidx.appcompat.widget.Toolbar: int mPopupTheme>;

        if $i1 == $i0 goto label2;

        $r0.<androidx.appcompat.widget.Toolbar: int mPopupTheme> = $i0;

        if $i0 != 0 goto label1;

        $r1 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: android.content.Context getContext()>();

        $r0.<androidx.appcompat.widget.Toolbar: android.content.Context mPopupContext> = $r1;

        return;

     label1:
        $r2 = new android.view.ContextThemeWrapper;

        $r1 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: android.content.Context getContext()>();

        specialinvoke $r2.<android.view.ContextThemeWrapper: void <init>(android.content.Context,int)>($r1, $i0);

        $r0.<androidx.appcompat.widget.Toolbar: android.content.Context mPopupContext> = $r2;

     label2:
        return;
    }

    public void setSubtitle(int)
    {
        androidx.appcompat.widget.Toolbar $r0;
        int $i0;
        android.content.Context $r1;
        java.lang.CharSequence $r2;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.CharSequence getText(int)>($i0);

        virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: void setSubtitle(java.lang.CharSequence)>($r2);

        return;
    }

    public void setSubtitle(java.lang.CharSequence)
    {
        androidx.appcompat.widget.Toolbar $r0;
        java.lang.CharSequence $r1;
        boolean $z0;
        android.widget.TextView $r2;
        android.content.Context $r3;
        androidx.appcompat.widget.AppCompatTextView $r4;
        android.text.TextUtils$TruncateAt $r5;
        int $i0;
        java.util.ArrayList $r6;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 := @parameter0: java.lang.CharSequence;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 != 0 goto label3;

        $r2 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        if $r2 != null goto label2;

        $r3 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: android.content.Context getContext()>();

        $r4 = new androidx.appcompat.widget.AppCompatTextView;

        specialinvoke $r4.<androidx.appcompat.widget.AppCompatTextView: void <init>(android.content.Context)>($r3);

        $r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView> = $r4;

        $r2 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        virtualinvoke $r2.<android.widget.TextView: void setSingleLine()>();

        $r2 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $r5 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt END>;

        virtualinvoke $r2.<android.widget.TextView: void setEllipsize(android.text.TextUtils$TruncateAt)>($r5);

        $i0 = $r0.<androidx.appcompat.widget.Toolbar: int mSubtitleTextAppearance>;

        if $i0 == 0 goto label1;

        $r2 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        virtualinvoke $r2.<android.widget.TextView: void setTextAppearance(android.content.Context,int)>($r3, $i0);

     label1:
        $i0 = $r0.<androidx.appcompat.widget.Toolbar: int mSubtitleTextColor>;

        if $i0 == 0 goto label2;

        $r2 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        virtualinvoke $r2.<android.widget.TextView: void setTextColor(int)>($i0);

     label2:
        $r2 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        $z0 = specialinvoke $r0.<androidx.appcompat.widget.Toolbar: boolean isChildOrHidden(android.view.View)>($r2);

        if $z0 != 0 goto label4;

        $r2 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        specialinvoke $r0.<androidx.appcompat.widget.Toolbar: void addSystemView(android.view.View,boolean)>($r2, 1);

        goto label4;

     label3:
        $r2 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        if $r2 == null goto label4;

        $z0 = specialinvoke $r0.<androidx.appcompat.widget.Toolbar: boolean isChildOrHidden(android.view.View)>($r2);

        if $z0 == 0 goto label4;

        $r2 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: void removeView(android.view.View)>($r2);

        $r6 = $r0.<androidx.appcompat.widget.Toolbar: java.util.ArrayList mHiddenViews>;

        $r2 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        virtualinvoke $r6.<java.util.ArrayList: boolean remove(java.lang.Object)>($r2);

     label4:
        $r2 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        if $r2 == null goto label5;

        virtualinvoke $r2.<android.widget.TextView: void setText(java.lang.CharSequence)>($r1);

     label5:
        $r0.<androidx.appcompat.widget.Toolbar: java.lang.CharSequence mSubtitleText> = $r1;

        return;
    }

    public void setSubtitleTextAppearance(android.content.Context, int)
    {
        androidx.appcompat.widget.Toolbar $r0;
        android.content.Context $r1;
        int $i0;
        android.widget.TextView $r2;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $r0.<androidx.appcompat.widget.Toolbar: int mSubtitleTextAppearance> = $i0;

        $r2 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        if $r2 == null goto label1;

        virtualinvoke $r2.<android.widget.TextView: void setTextAppearance(android.content.Context,int)>($r1, $i0);

     label1:
        return;
    }

    public void setSubtitleTextColor(int)
    {
        androidx.appcompat.widget.Toolbar $r0;
        int $i0;
        android.widget.TextView $r1;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $i0 := @parameter0: int;

        $r0.<androidx.appcompat.widget.Toolbar: int mSubtitleTextColor> = $i0;

        $r1 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView>;

        if $r1 == null goto label1;

        virtualinvoke $r1.<android.widget.TextView: void setTextColor(int)>($i0);

     label1:
        return;
    }

    public void setTitle(int)
    {
        androidx.appcompat.widget.Toolbar $r0;
        int $i0;
        android.content.Context $r1;
        java.lang.CharSequence $r2;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.CharSequence getText(int)>($i0);

        virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: void setTitle(java.lang.CharSequence)>($r2);

        return;
    }

    public void setTitle(java.lang.CharSequence)
    {
        androidx.appcompat.widget.Toolbar $r0;
        java.lang.CharSequence $r1;
        boolean $z0;
        android.widget.TextView $r2;
        android.content.Context $r3;
        androidx.appcompat.widget.AppCompatTextView $r4;
        android.text.TextUtils$TruncateAt $r5;
        int $i0;
        java.util.ArrayList $r6;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 := @parameter0: java.lang.CharSequence;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 != 0 goto label3;

        $r2 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        if $r2 != null goto label2;

        $r3 = virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: android.content.Context getContext()>();

        $r4 = new androidx.appcompat.widget.AppCompatTextView;

        specialinvoke $r4.<androidx.appcompat.widget.AppCompatTextView: void <init>(android.content.Context)>($r3);

        $r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView> = $r4;

        $r2 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        virtualinvoke $r2.<android.widget.TextView: void setSingleLine()>();

        $r2 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $r5 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt END>;

        virtualinvoke $r2.<android.widget.TextView: void setEllipsize(android.text.TextUtils$TruncateAt)>($r5);

        $i0 = $r0.<androidx.appcompat.widget.Toolbar: int mTitleTextAppearance>;

        if $i0 == 0 goto label1;

        $r2 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        virtualinvoke $r2.<android.widget.TextView: void setTextAppearance(android.content.Context,int)>($r3, $i0);

     label1:
        $i0 = $r0.<androidx.appcompat.widget.Toolbar: int mTitleTextColor>;

        if $i0 == 0 goto label2;

        $r2 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        virtualinvoke $r2.<android.widget.TextView: void setTextColor(int)>($i0);

     label2:
        $r2 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        $z0 = specialinvoke $r0.<androidx.appcompat.widget.Toolbar: boolean isChildOrHidden(android.view.View)>($r2);

        if $z0 != 0 goto label4;

        $r2 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        specialinvoke $r0.<androidx.appcompat.widget.Toolbar: void addSystemView(android.view.View,boolean)>($r2, 1);

        goto label4;

     label3:
        $r2 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        if $r2 == null goto label4;

        $z0 = specialinvoke $r0.<androidx.appcompat.widget.Toolbar: boolean isChildOrHidden(android.view.View)>($r2);

        if $z0 == 0 goto label4;

        $r2 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: void removeView(android.view.View)>($r2);

        $r6 = $r0.<androidx.appcompat.widget.Toolbar: java.util.ArrayList mHiddenViews>;

        $r2 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        virtualinvoke $r6.<java.util.ArrayList: boolean remove(java.lang.Object)>($r2);

     label4:
        $r2 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        if $r2 == null goto label5;

        virtualinvoke $r2.<android.widget.TextView: void setText(java.lang.CharSequence)>($r1);

     label5:
        $r0.<androidx.appcompat.widget.Toolbar: java.lang.CharSequence mTitleText> = $r1;

        return;
    }

    public void setTitleMargin(int, int, int, int)
    {
        androidx.appcompat.widget.Toolbar $r0;
        int $i0, $i1, $i2, $i3;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $r0.<androidx.appcompat.widget.Toolbar: int mTitleMarginStart> = $i0;

        $r0.<androidx.appcompat.widget.Toolbar: int mTitleMarginTop> = $i1;

        $r0.<androidx.appcompat.widget.Toolbar: int mTitleMarginEnd> = $i2;

        $r0.<androidx.appcompat.widget.Toolbar: int mTitleMarginBottom> = $i3;

        virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: void requestLayout()>();

        return;
    }

    public void setTitleMarginBottom(int)
    {
        androidx.appcompat.widget.Toolbar $r0;
        int $i0;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $i0 := @parameter0: int;

        $r0.<androidx.appcompat.widget.Toolbar: int mTitleMarginBottom> = $i0;

        virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: void requestLayout()>();

        return;
    }

    public void setTitleMarginEnd(int)
    {
        androidx.appcompat.widget.Toolbar $r0;
        int $i0;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $i0 := @parameter0: int;

        $r0.<androidx.appcompat.widget.Toolbar: int mTitleMarginEnd> = $i0;

        virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: void requestLayout()>();

        return;
    }

    public void setTitleMarginStart(int)
    {
        androidx.appcompat.widget.Toolbar $r0;
        int $i0;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $i0 := @parameter0: int;

        $r0.<androidx.appcompat.widget.Toolbar: int mTitleMarginStart> = $i0;

        virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: void requestLayout()>();

        return;
    }

    public void setTitleMarginTop(int)
    {
        androidx.appcompat.widget.Toolbar $r0;
        int $i0;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $i0 := @parameter0: int;

        $r0.<androidx.appcompat.widget.Toolbar: int mTitleMarginTop> = $i0;

        virtualinvoke $r0.<androidx.appcompat.widget.Toolbar: void requestLayout()>();

        return;
    }

    public void setTitleTextAppearance(android.content.Context, int)
    {
        androidx.appcompat.widget.Toolbar $r0;
        android.content.Context $r1;
        int $i0;
        android.widget.TextView $r2;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $r0.<androidx.appcompat.widget.Toolbar: int mTitleTextAppearance> = $i0;

        $r2 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        if $r2 == null goto label1;

        virtualinvoke $r2.<android.widget.TextView: void setTextAppearance(android.content.Context,int)>($r1, $i0);

     label1:
        return;
    }

    public void setTitleTextColor(int)
    {
        androidx.appcompat.widget.Toolbar $r0;
        int $i0;
        android.widget.TextView $r1;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $i0 := @parameter0: int;

        $r0.<androidx.appcompat.widget.Toolbar: int mTitleTextColor> = $i0;

        $r1 = $r0.<androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView>;

        if $r1 == null goto label1;

        virtualinvoke $r1.<android.widget.TextView: void setTextColor(int)>($i0);

     label1:
        return;
    }

    public boolean showOverflowMenu()
    {
        androidx.appcompat.widget.Toolbar $r0;
        boolean $z0;
        androidx.appcompat.widget.ActionMenuView $r1;

        $r0 := @this: androidx.appcompat.widget.Toolbar;

        $r1 = $r0.<androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView>;

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.<androidx.appcompat.widget.ActionMenuView: boolean showOverflowMenu()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static void <clinit>()
    {
        <androidx.appcompat.widget.Toolbar: java.lang.String TAG> = "Toolbar";

        return;
    }
}
