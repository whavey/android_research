class androidx.documentfile.provider.DocumentsContractApi19 extends java.lang.Object
{
    private static final int FLAG_VIRTUAL_DOCUMENT;
    private static final java.lang.String TAG;

    private void <init>()
    {
        androidx.documentfile.provider.DocumentsContractApi19 $r0;

        $r0 := @this: androidx.documentfile.provider.DocumentsContractApi19;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean canRead(android.content.Context, android.net.Uri)
    {
        android.content.Context $r0;
        android.net.Uri $r1;
        int $i0;
        java.lang.String $r2;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.net.Uri;

        $i0 = virtualinvoke $r0.<android.content.Context: int checkCallingOrSelfUriPermission(android.net.Uri,int)>($r1, 1);

        if $i0 == 0 goto label1;

        return 0;

     label1:
        $r2 = staticinvoke <androidx.documentfile.provider.DocumentsContractApi19: java.lang.String getRawType(android.content.Context,android.net.Uri)>($r0, $r1);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z0 == 0 goto label2;

        return 0;

     label2:
        return 1;
    }

    public static boolean canWrite(android.content.Context, android.net.Uri)
    {
        android.content.Context $r0;
        android.net.Uri $r1;
        int $i0, $i1;
        java.lang.String $r2, $r3;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.net.Uri;

        $i0 = virtualinvoke $r0.<android.content.Context: int checkCallingOrSelfUriPermission(android.net.Uri,int)>($r1, 2);

        if $i0 == 0 goto label1;

        return 0;

     label1:
        $r2 = staticinvoke <androidx.documentfile.provider.DocumentsContractApi19: java.lang.String getRawType(android.content.Context,android.net.Uri)>($r0, $r1);

        $i0 = staticinvoke <androidx.documentfile.provider.DocumentsContractApi19: int queryForInt(android.content.Context,android.net.Uri,java.lang.String,int)>($r0, $r1, "flags", 0);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z0 == 0 goto label2;

        return 0;

     label2:
        $i1 = $i0 & 4;

        if $i1 == 0 goto label3;

        return 1;

     label3:
        $r3 = "vnd.android.document/directory";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label4;

        $i1 = $i0 & 8;

        if $i1 == 0 goto label4;

        return 1;

     label4:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z0 != 0 goto label5;

        $i0 = $i0 & 2;

        if $i0 == 0 goto label5;

        return 1;

     label5:
        return 0;
    }

    private static void closeQuietly(java.lang.AutoCloseable)
    {
        java.lang.AutoCloseable $r0;
        java.lang.Exception $r1;
        java.lang.RuntimeException $r2;

        $r0 := @parameter0: java.lang.AutoCloseable;

        if $r0 == null goto label5;

     label1:
        interfaceinvoke $r0.<java.lang.AutoCloseable: void close()>();

     label2:
        return;

     label3:
        $r1 := @caughtexception;

        return;

     label4:
        $r2 := @caughtexception;

        throw $r2;

     label5:
        return;

        catch java.lang.RuntimeException from label1 to label2 with label4;
        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static boolean exists(android.content.Context, android.net.Uri)
    {
        android.content.Context $r0;
        android.net.Uri $r1;
        android.content.ContentResolver $r2;
        android.database.Cursor $r3, $r5;
        boolean $z0;
        java.lang.String[] $r4;
        int $i0;
        java.lang.Throwable $r6;
        java.lang.Exception $r7;
        java.lang.StringBuilder $r8;
        java.lang.String $r9;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.net.Uri;

        $r2 = virtualinvoke $r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r3 = null;

        $z0 = 1;

     label01:
        $r4 = newarray (java.lang.String)[1];

     label02:
        $r4[0] = "document_id";

     label03:
        $r5 = virtualinvoke $r2.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r1, $r4, null, null, null);

     label04:
        $r3 = $r5;

     label05:
        $i0 = interfaceinvoke $r5.<android.database.Cursor: int getCount()>();

     label06:
        if $i0 <= 0 goto label07;

        goto label08;

     label07:
        $z0 = 0;

     label08:
        staticinvoke <androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>($r5);

        return $z0;

     label09:
        $r6 := @caughtexception;

        goto label13;

     label10:
        $r7 := @caughtexception;

     label11:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed query: ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("DocumentFile", $r9);

     label12:
        staticinvoke <androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>($r3);

        return 0;

     label13:
        staticinvoke <androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>($r3);

        throw $r6;

        catch java.lang.Exception from label01 to label04 with label10;
        catch java.lang.Exception from label05 to label06 with label10;
        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label11 to label12 with label09;
    }

    public static long getFlags(android.content.Context, android.net.Uri)
    {
        android.content.Context $r0;
        android.net.Uri $r1;
        long $l0;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.net.Uri;

        $l0 = staticinvoke <androidx.documentfile.provider.DocumentsContractApi19: long queryForLong(android.content.Context,android.net.Uri,java.lang.String,long)>($r0, $r1, "flags", 0L);

        return $l0;
    }

    public static java.lang.String getName(android.content.Context, android.net.Uri)
    {
        android.content.Context $r0;
        android.net.Uri $r1;
        java.lang.String $r2;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.net.Uri;

        $r2 = staticinvoke <androidx.documentfile.provider.DocumentsContractApi19: java.lang.String queryForString(android.content.Context,android.net.Uri,java.lang.String,java.lang.String)>($r0, $r1, "_display_name", null);

        return $r2;
    }

    private static java.lang.String getRawType(android.content.Context, android.net.Uri)
    {
        android.content.Context $r0;
        android.net.Uri $r1;
        java.lang.String $r2;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.net.Uri;

        $r2 = staticinvoke <androidx.documentfile.provider.DocumentsContractApi19: java.lang.String queryForString(android.content.Context,android.net.Uri,java.lang.String,java.lang.String)>($r0, $r1, "mime_type", null);

        return $r2;
    }

    public static java.lang.String getType(android.content.Context, android.net.Uri)
    {
        android.content.Context $r0;
        android.net.Uri $r1;
        java.lang.String $r2, $r3;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.net.Uri;

        $r2 = staticinvoke <androidx.documentfile.provider.DocumentsContractApi19: java.lang.String getRawType(android.content.Context,android.net.Uri)>($r0, $r1);

        $r3 = "vnd.android.document/directory";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        return null;

     label1:
        return $r2;
    }

    public static boolean isDirectory(android.content.Context, android.net.Uri)
    {
        android.content.Context $r0;
        android.net.Uri $r1;
        java.lang.String $r2, $r3;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.net.Uri;

        $r3 = staticinvoke <androidx.documentfile.provider.DocumentsContractApi19: java.lang.String getRawType(android.content.Context,android.net.Uri)>($r0, $r1);

        $r2 = "vnd.android.document/directory";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        return $z0;
    }

    public static boolean isFile(android.content.Context, android.net.Uri)
    {
        android.content.Context $r0;
        android.net.Uri $r1;
        java.lang.String $r2, $r3;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.net.Uri;

        $r2 = staticinvoke <androidx.documentfile.provider.DocumentsContractApi19: java.lang.String getRawType(android.content.Context,android.net.Uri)>($r0, $r1);

        $r3 = "vnd.android.document/directory";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label2;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public static boolean isVirtual(android.content.Context, android.net.Uri)
    {
        android.content.Context $r0;
        android.net.Uri $r1;
        boolean $z0;
        long $l0;
        byte $b1;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.net.Uri;

        $z0 = staticinvoke <android.provider.DocumentsContract: boolean isDocumentUri(android.content.Context,android.net.Uri)>($r0, $r1);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $l0 = staticinvoke <androidx.documentfile.provider.DocumentsContractApi19: long getFlags(android.content.Context,android.net.Uri)>($r0, $r1);

        $l0 = $l0 & 512L;

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public static long lastModified(android.content.Context, android.net.Uri)
    {
        android.content.Context $r0;
        android.net.Uri $r1;
        long $l0;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.net.Uri;

        $l0 = staticinvoke <androidx.documentfile.provider.DocumentsContractApi19: long queryForLong(android.content.Context,android.net.Uri,java.lang.String,long)>($r0, $r1, "last_modified", 0L);

        return $l0;
    }

    public static long length(android.content.Context, android.net.Uri)
    {
        android.content.Context $r0;
        android.net.Uri $r1;
        long $l0;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.net.Uri;

        $l0 = staticinvoke <androidx.documentfile.provider.DocumentsContractApi19: long queryForLong(android.content.Context,android.net.Uri,java.lang.String,long)>($r0, $r1, "_size", 0L);

        return $l0;
    }

    private static int queryForInt(android.content.Context, android.net.Uri, java.lang.String, int)
    {
        android.content.Context $r0;
        android.net.Uri $r1;
        java.lang.String $r2;
        int $i0;
        long $l1;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.net.Uri;

        $r2 := @parameter2: java.lang.String;

        $i0 := @parameter3: int;

        $l1 = (long) $i0;

        $l1 = staticinvoke <androidx.documentfile.provider.DocumentsContractApi19: long queryForLong(android.content.Context,android.net.Uri,java.lang.String,long)>($r0, $r1, $r2, $l1);

        $i0 = (int) $l1;

        return $i0;
    }

    private static long queryForLong(android.content.Context, android.net.Uri, java.lang.String, long)
    {
        android.content.Context $r0;
        android.net.Uri $r1;
        java.lang.String $r2;
        long $l0, $l1;
        android.content.ContentResolver $r3;
        android.database.Cursor $r4, $r6;
        java.lang.String[] $r5;
        boolean $z0;
        java.lang.Throwable $r7;
        java.lang.Exception $r8;
        java.lang.StringBuilder $r9;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.net.Uri;

        $r2 := @parameter2: java.lang.String;

        $l0 := @parameter3: long;

        $r3 = virtualinvoke $r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r4 = null;

     label01:
        $r5 = newarray (java.lang.String)[1];

     label02:
        $r5[0] = $r2;

     label03:
        $r6 = virtualinvoke $r3.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r1, $r5, null, null, null);

     label04:
        $r4 = $r6;

     label05:
        $z0 = interfaceinvoke $r6.<android.database.Cursor: boolean moveToFirst()>();

     label06:
        if $z0 == 0 goto label11;

     label07:
        $z0 = interfaceinvoke $r6.<android.database.Cursor: boolean isNull(int)>(0);

     label08:
        if $z0 != 0 goto label11;

     label09:
        $l1 = interfaceinvoke $r6.<android.database.Cursor: long getLong(int)>(0);

     label10:
        staticinvoke <androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>($r6);

        return $l1;

     label11:
        staticinvoke <androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>($r6);

        return $l0;

     label12:
        $r7 := @caughtexception;

        goto label16;

     label13:
        $r8 := @caughtexception;

     label14:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed query: ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r2 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("DocumentFile", $r2);

     label15:
        staticinvoke <androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>($r4);

        return $l0;

     label16:
        staticinvoke <androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>($r4);

        throw $r7;

        catch java.lang.Exception from label01 to label04 with label13;
        catch java.lang.Exception from label05 to label06 with label13;
        catch java.lang.Exception from label07 to label08 with label13;
        catch java.lang.Exception from label09 to label10 with label13;
        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Throwable from label09 to label10 with label12;
        catch java.lang.Throwable from label14 to label15 with label12;
    }

    private static java.lang.String queryForString(android.content.Context, android.net.Uri, java.lang.String, java.lang.String)
    {
        android.content.Context $r0;
        android.net.Uri $r1;
        java.lang.String $r2, $r3;
        android.content.ContentResolver $r4;
        android.database.Cursor $r5, $r7;
        java.lang.String[] $r6;
        boolean $z0;
        java.lang.Throwable $r8;
        java.lang.Exception $r9;
        java.lang.StringBuilder $r10;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.net.Uri;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.lang.String;

        $r4 = virtualinvoke $r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r5 = null;

     label01:
        $r6 = newarray (java.lang.String)[1];

     label02:
        $r6[0] = $r2;

     label03:
        $r7 = virtualinvoke $r4.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r1, $r6, null, null, null);

     label04:
        $r5 = $r7;

     label05:
        $z0 = interfaceinvoke $r7.<android.database.Cursor: boolean moveToFirst()>();

     label06:
        if $z0 == 0 goto label11;

     label07:
        $z0 = interfaceinvoke $r7.<android.database.Cursor: boolean isNull(int)>(0);

     label08:
        if $z0 != 0 goto label11;

     label09:
        $r2 = interfaceinvoke $r7.<android.database.Cursor: java.lang.String getString(int)>(0);

     label10:
        staticinvoke <androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>($r7);

        return $r2;

     label11:
        staticinvoke <androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>($r7);

        return $r3;

     label12:
        $r8 := @caughtexception;

        goto label16;

     label13:
        $r9 := @caughtexception;

     label14:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed query: ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r2 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("DocumentFile", $r2);

     label15:
        staticinvoke <androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>($r5);

        return $r3;

     label16:
        staticinvoke <androidx.documentfile.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>($r5);

        throw $r8;

        catch java.lang.Exception from label01 to label04 with label13;
        catch java.lang.Exception from label05 to label06 with label13;
        catch java.lang.Exception from label07 to label08 with label13;
        catch java.lang.Exception from label09 to label10 with label13;
        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Throwable from label09 to label10 with label12;
        catch java.lang.Throwable from label14 to label15 with label12;
    }

    public static void <clinit>()
    {
        <androidx.documentfile.provider.DocumentsContractApi19: java.lang.String TAG> = "DocumentFile";

        <androidx.documentfile.provider.DocumentsContractApi19: int FLAG_VIRTUAL_DOCUMENT> = 512;

        return;
    }
}
