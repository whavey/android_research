-aa <arg>  	 Use the specified aliasing algorithm (NONE, FLOWSENSITIVE, PTSBASED, LAZY)
-ac <arg>  	 Additional JAR file that shal be put on the classpath
-af        	 Use a flow-insensitive alias analysis
-al <arg>  	 Maximum access path length
-c  <arg>  	 Use the given configuration file
-ca <arg>  	 Use the specified callback analyzer (DEFAULT, FAST)
-ce <arg>  	 Use the specified code elimination algorithm (NONE, PROPAGATECONSTS, REMOVECODE)
-cg <arg>  	 Callgraph algorithm to use (AUTO, CHA, VTA, RTA, SPARK, GEOM)
-cp        	 Compute the taint propagation paths and not just source-to-sink connections. This is a shorthand notation for -pr fast.
-cs <arg>  	 Use the specified mode for defining which callbacks introduce which sources (NONE, ALL, SOURCELIST)
-ct <arg>  	 Timeout for the callback collection phase
-d         	 Merge all dex files in the given APK file into one analysis target
-ds <arg>  	 Use the specified data flow solver (CONTEXTFLOWSENSITIVE, FLOWINSENSITIVE)
-dt <arg>  	 Timeout for the main data flow analysis
-ffs       	 Analyze the full frameworks together with the app without any optimizations
-i  <arg>  	 Use the specified mode when processing implicit data flows (NONE, ARRAYONLY, ALL)
-im <arg>  	 File containing the inter-component data flow model (ICC model)
-l  <arg>  	 Mode for considerung layout controls as sources (NONE, PWD, ALL)
-ls        	 Write the discovered sources and sinks to the log output
-mc <arg>  	 Eliminate Android components that have more than the given number of callbacks
-md <arg>  	 Only analyze callback chains up to the given depth
-ms <arg>  	 Outputs a file with information about which summaries are missing
-mt <arg>  	 Limit the maximum number of threads to the given value
-nc 		 Do not analyze Android callbacks
-ne 		 Do not track taints across exceptional control flow edges
-np 		 Do not purify the ICC results, i.e., do not remove simple flows that also have a corresponding ICC flow
-nr 		 Disable reduction of inner class chains
-ns 		 Do not track static data flows
-nt 		 Disable type checking during taint propagation
-o  <arg>	 Output XML file for the discovered data flows
-os 		 Analyze one source at a time
-ot 		 Analyze one Android component at a time
-p  <arg>   	 Path to the platforms directory from the Android SDK
-pa <arg>   	 Use the specified algorithm for computing result paths (CONTEXTSENSITIVE, CONTEXTINSENSITIVE, SOURCESONLY)
-pr <arg>   	 Use the specified mode for reconstructing taint propagation paths (NONE, FAST, PRECISE).
-ps 		 Report different results for same source/sink pairs if they differ in their propagation paths
-r  		 Enable support for reflective method calls
-rt <arg>   	 Timeout for the result collection phase
-s  <arg>   	 Definition file for sources and sinks
-sa 		 Only use a single abstraction at join points, i.e., do not support multiple sources for one value
-sf <arg>   	 Use the specified mode when tracking static data flows (CONTEXTFLOWSENSITIVE, CONTEXTFLOWINSENSITIVE, NONE)
-si <arg>   	 APK file to skip when processing a directory of input files
-sp 		 Process the result paths sequentially instead of in parallel
-t  <arg>   	 Definition file for the taint wrapper
-tw <arg>   	 Use the specified taint wrapper algorithm (NONE   )
